{"id":"7deb04eb769f3ec9497991e00a489f53","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     *\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/common/ERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC2981} from \"../../interfaces/IERC2981.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The default royalty receiver is invalid.\n     */\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\n\n    /**\n     * @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The royalty receiver for `tokenId` is invalid.\n     */\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) public view virtual returns (address receiver, uint256 amount) {\n        RoyaltyInfo storage _royaltyInfo = _tokenRoyaltyInfo[tokenId];\n        address royaltyReceiver = _royaltyInfo.receiver;\n        uint96 royaltyFraction = _royaltyInfo.royaltyFraction;\n\n        if (royaltyReceiver == address(0)) {\n            royaltyReceiver = _defaultRoyaltyInfo.receiver;\n            royaltyFraction = _defaultRoyaltyInfo.royaltyFraction;\n        }\n\n        uint256 royaltyAmount = (salePrice * royaltyFraction) / _feeDenominator();\n\n        return (royaltyReceiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\n        }\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\n        }\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\n * interfere with enumerability and should not be used together with {ERC721Enumerable}.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        mapping(uint256 index => uint256) storage _ownedTokensByOwner = _ownedTokens[from];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokensByOwner[lastTokenIndex];\n\n            _ownedTokensByOwner[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokensByOwner[lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientKeccak256(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"src/blockchain/evm/contracts/DirectMintNFTV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/common/ERC2981.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"; // Added for Merkle proof verification\n\ncontract LaunchNFTV2 is\n  ERC721,\n  ERC721URIStorage,\n  ERC2981,\n  Ownable,\n  ERC721Enumerable,\n  EIP712\n{\n  using ECDSA for bytes32;\n\n  enum PhaseType {\n    NOT_STARTED,\n    WHITELIST,\n    PUBLIC\n  }\n\n  struct Phase {\n    PhaseType phaseType;\n    uint256 price;\n    uint256 startTime;\n    uint256 endTime;\n    uint256 maxSupply;\n    uint256 maxPerWallet; // Can be 0 for unlimited in PUBLIC phase\n    uint256 maxMintPerPhase; // Can be 0 for unlimited in PUBLIC phase\n    uint256 mintedInPhase; // Track mints in current phase\n    bytes32 merkleRoot;\n  }\n\n  // Signature verification related\n  address public immutable backendSigner;\n\n  // Modified MINT_TYPEHASH to include phase information\n  bytes32 private constant MINT_TYPEHASH =\n    keccak256(\n      \"MintRequest(address minter,uint256 tokenId,string uri,uint256 price,uint256 phaseIndex,uint256 nonce,uint256 deadline)\"\n    );\n\n  mapping(address => uint256) private nonces;\n\n  // Multi-phase configuration\n  Phase[] public phases;\n  mapping(address => mapping(PhaseType => uint256))\n    private mintedPerWalletInPhase;\n\n  // Fee-related state variables\n  uint96 private immutable royaltyFeePercentage;\n  uint96 public platformFeePercentage;\n  address public platformFeeRecipient;\n\n  // Events\n  event TokenMinted(\n    uint256 indexed tokenId,\n    address indexed recipient,\n    PhaseType phaseType\n  );\n  event PhaseAdded(\n    uint256 indexed phaseIndex,\n    PhaseType phaseType,\n    uint256 price,\n    uint256 startTime,\n    uint256 endTime,\n    uint256 maxSupply,\n    uint256 maxPerWallet,\n    uint256 maxMintPerPhase,\n    bytes32 merkleRoot\n  );\n  event PhaseUpdated(\n    uint256 indexed phaseIndex,\n    PhaseType phaseType,\n    uint256 price,\n    uint256 startTime,\n    uint256 endTime,\n    uint256 maxSupply,\n    uint256 maxPerWallet,\n    uint256 maxMintPerPhase,\n    bytes32 merkleRoot\n  );\n  event PlatformFeeUpdated(uint96 newPercentage, address newRecipient);\n  event WithdrawCompleted(address indexed recipient, uint256 amount);\n\n  error PhaseNotActive();\n  error InvalidSignature();\n  error SignatureExpired();\n  error InvalidMerkleProof();\n  error ExceedsPhaseSupply();\n  error ExceedsWalletLimit();\n  error InsufficientPayment();\n  error PriceMismatch();\n  error TransferFailed();\n  error InvalidPhaseIndex();\n  error InvalidPhaseConfiguration();\n  error OverlappingPhases();\n  error NoActivePhase();\n\n  constructor(\n    address initialOwner,\n    string memory name,\n    string memory symbol,\n    uint96 _royaltyFee,\n    uint96 _platformFee,\n    address _platformFeeRecipient,\n    address _backendSigner\n  ) ERC721(name, symbol) Ownable(initialOwner) EIP712(\"UnifiedNFT\", \"1\") {\n    require(_royaltyFee <= 1000, \"Royalty fee cannot exceed 10%\");\n    require(_platformFee <= 1000, \"Platform fee cannot exceed 10%\");\n    require(\n      _platformFeeRecipient != address(0),\n      \"Invalid platform fee recipient\"\n    );\n    require(_backendSigner != address(0), \"Invalid backend signer\");\n\n    backendSigner = _backendSigner;\n    royaltyFeePercentage = _royaltyFee;\n    platformFeePercentage = _platformFee;\n    platformFeeRecipient = _platformFeeRecipient;\n\n    _setDefaultRoyalty(initialOwner, royaltyFeePercentage);\n\n    // Initialize with NOT_STARTED phase\n    phases.push(\n      Phase({\n        phaseType: PhaseType.NOT_STARTED,\n        price: 0,\n        startTime: 0,\n        endTime: 0,\n        maxSupply: 0,\n        maxPerWallet: 0,\n        maxMintPerPhase: 0,\n        mintedInPhase: 0,\n        merkleRoot: bytes32(0)\n      })\n    );\n  }\n\n  function mint(\n    uint256 tokenId,\n    string calldata uri,\n    uint256 deadline,\n    bytes calldata signature,\n    bytes32[] calldata merkleProof // Added merkle proof parameter\n  ) external payable {\n    // Get current active phase and index\n    (uint256 phaseIndex, Phase storage currentPhase) = _getActivePhase();\n\n    // FIXED: Verify merkle proof for whitelist phase\n    if (currentPhase.phaseType == PhaseType.WHITELIST) {\n      bytes32 leaf = keccak256(abi.encodePacked(msg.sender));\n      if (!MerkleProof.verify(merkleProof, currentPhase.merkleRoot, leaf)) {\n        revert InvalidMerkleProof();\n      }\n    }\n\n    // Verify signature\n    if (deadline < block.timestamp) revert SignatureExpired();\n\n    // FIXED: Include phaseIndex in the signature to tie it to a specific phase\n    bytes32 structHash = keccak256(\n      abi.encode(\n        MINT_TYPEHASH,\n        msg.sender,\n        tokenId,\n        keccak256(bytes(uri)),\n        currentPhase.price, // FIXED: Ensure signed price matches current phase price\n        phaseIndex, // FIXED: Include phase index in signature\n        nonces[msg.sender]++,\n        deadline\n      )\n    );\n\n    bytes32 hash = _hashTypedDataV4(structHash);\n    if (hash.recover(signature) != backendSigner) revert InvalidSignature();\n\n    // FIXED: Ensure paid amount matches phase price\n    if (msg.value != currentPhase.price) revert PriceMismatch();\n\n    // FIXED: Check phase-specific supply limit instead of global limit\n    if (\n      currentPhase.maxSupply != 0 &&\n      currentPhase.mintedInPhase >= currentPhase.maxSupply\n    ) {\n      revert ExceedsPhaseSupply();\n    }\n\n    // Check wallet limits (skip if unlimited in PUBLIC phase)\n    if (\n      !(currentPhase.phaseType == PhaseType.PUBLIC &&\n        currentPhase.maxPerWallet == 0) &&\n      mintedPerWalletInPhase[msg.sender][currentPhase.phaseType] >=\n      currentPhase.maxPerWallet\n    ) {\n      revert ExceedsWalletLimit();\n    }\n\n    // FIXED: Handle maxMintPerPhase correctly (0 for PUBLIC phase means unlimited)\n    if (\n      !(currentPhase.phaseType == PhaseType.PUBLIC &&\n        currentPhase.maxMintPerPhase == 0) &&\n      currentPhase.mintedInPhase >= currentPhase.maxMintPerPhase\n    ) {\n      revert ExceedsPhaseSupply();\n    }\n\n    // Process fees\n    uint256 platformFeeAmount = (msg.value * platformFeePercentage) / 10000;\n\n    if (platformFeeAmount > 0) {\n      (bool success, ) = platformFeeRecipient.call{value: platformFeeAmount}(\n        \"\"\n      );\n      if (!success) revert TransferFailed();\n    }\n\n    uint256 remainingAmount = msg.value - platformFeeAmount;\n    if (remainingAmount > 0) {\n      (bool success, ) = owner().call{value: remainingAmount}(\"\");\n      if (!success) revert TransferFailed();\n    }\n\n    // Update phase minting stats\n    currentPhase.mintedInPhase++;\n    mintedPerWalletInPhase[msg.sender][currentPhase.phaseType]++;\n\n    // Mint token\n    _safeMint(msg.sender, tokenId);\n    if (bytes(uri).length > 0) {\n      _setTokenURI(tokenId, uri);\n    }\n\n    emit TokenMinted(tokenId, msg.sender, currentPhase.phaseType);\n  }\n\n  function _getActivePhase()\n    internal\n    view\n    returns (uint256 phaseIndex, Phase storage phase)\n  {\n    uint256 timestamp = block.timestamp;\n\n    for (uint256 i = 0; i < phases.length; i++) {\n      if (\n        phases[i].phaseType != PhaseType.NOT_STARTED &&\n        timestamp >= phases[i].startTime &&\n        timestamp <= phases[i].endTime\n      ) {\n        return (i, phases[i]);\n      }\n    }\n\n    revert NoActivePhase();\n  }\n\n  function getActivePhase()\n    external\n    view\n    returns (uint256 phaseIndex, Phase memory phase)\n  {\n    return _getActivePhase();\n  }\n\n  function addPhase(\n    PhaseType _phaseType,\n    uint256 _price,\n    uint256 _startTime,\n    uint256 _endTime,\n    uint256 _maxSupply,\n    uint256 _maxPerWallet,\n    uint256 _maxMintPerPhase,\n    bytes32 _merkleRoot\n  ) external onlyOwner {\n    require(_startTime < _endTime, \"Invalid time range\");\n\n    // FIXED: Allow maxPerWallet = 0 for PUBLIC phase to enable unlimited mints\n    if (_phaseType == PhaseType.PUBLIC) {\n      // For public phases, allow unlimited per wallet and unlimited supply\n    } else {\n      require(_maxPerWallet > 0, \"Invalid max per wallet for non-public phase\");\n      require(\n        _maxMintPerPhase > 0,\n        \"Invalid max mint per phase for non-public phase\"\n      );\n      require(\n        _merkleRoot != bytes32(0),\n        \"Merkle root required for whitelist phase\"\n      );\n    }\n\n    // Ensure no overlapping phases\n    for (uint256 i = 0; i < phases.length; i++) {\n      Phase memory existingPhase = phases[i];\n      if (existingPhase.phaseType == PhaseType.NOT_STARTED) continue;\n\n      // Check for time overlap\n      if (\n        (_startTime <= existingPhase.endTime &&\n          _endTime >= existingPhase.startTime)\n      ) {\n        revert OverlappingPhases();\n      }\n    }\n\n    Phase memory newPhase = Phase({\n      phaseType: _phaseType,\n      price: _price,\n      startTime: _startTime,\n      endTime: _endTime,\n      maxSupply: _maxSupply,\n      maxPerWallet: _maxPerWallet,\n      maxMintPerPhase: _maxMintPerPhase,\n      mintedInPhase: 0,\n      merkleRoot: _merkleRoot\n    });\n\n    uint256 phaseIndex = phases.length;\n    phases.push(newPhase);\n\n    emit PhaseAdded(\n      phaseIndex,\n      _phaseType,\n      _price,\n      _startTime,\n      _endTime,\n      _maxSupply,\n      _maxPerWallet,\n      _maxMintPerPhase,\n      _merkleRoot\n    );\n  }\n\n  function updatePhase(\n    uint256 _phaseIndex,\n    PhaseType _phaseType,\n    uint256 _price,\n    uint256 _startTime,\n    uint256 _endTime,\n    uint256 _maxSupply,\n    uint256 _maxPerWallet,\n    uint256 _maxMintPerPhase,\n    bytes32 _merkleRoot\n  ) external onlyOwner {\n    if (_phaseIndex >= phases.length) revert InvalidPhaseIndex();\n    if (_startTime >= _endTime) revert InvalidPhaseConfiguration();\n\n    // FIXED: Allow maxPerWallet = 0 for PUBLIC phase\n    if (_phaseType == PhaseType.PUBLIC) {\n      // For public phases, allow unlimited per wallet and unlimited supply\n    } else {\n      if (_maxPerWallet == 0) revert InvalidPhaseConfiguration();\n      if (_maxMintPerPhase == 0) revert InvalidPhaseConfiguration();\n      if (_merkleRoot == bytes32(0)) revert InvalidPhaseConfiguration();\n    }\n\n    // Ensure no overlapping phases\n    for (uint256 i = 0; i < phases.length; i++) {\n      if (i == _phaseIndex) continue; // Skip the phase being updated\n      Phase memory existingPhase = phases[i];\n      if (existingPhase.phaseType == PhaseType.NOT_STARTED) continue;\n\n      // Check for time overlap\n      if (\n        (_startTime <= existingPhase.endTime &&\n          _endTime >= existingPhase.startTime)\n      ) {\n        revert OverlappingPhases();\n      }\n    }\n\n    Phase storage phaseToUpdate = phases[_phaseIndex];\n    phaseToUpdate.phaseType = _phaseType;\n    phaseToUpdate.price = _price;\n    phaseToUpdate.startTime = _startTime;\n    phaseToUpdate.endTime = _endTime;\n    phaseToUpdate.maxSupply = _maxSupply;\n    phaseToUpdate.maxPerWallet = _maxPerWallet;\n    phaseToUpdate.maxMintPerPhase = _maxMintPerPhase;\n    phaseToUpdate.merkleRoot = _merkleRoot;\n\n    // FIXED: Use correct event for phase updates\n    emit PhaseUpdated(\n      _phaseIndex,\n      _phaseType,\n      _price,\n      _startTime,\n      _endTime,\n      _maxSupply,\n      _maxPerWallet,\n      _maxMintPerPhase,\n      _merkleRoot\n    );\n  }\n\n  function setPlatformFee(\n    uint96 _feePercentage,\n    address _feeRecipient\n  ) external onlyOwner {\n    require(_feePercentage <= 1000, \"Platform fee cannot exceed 10%\");\n    require(_feeRecipient != address(0), \"Invalid fee recipient\");\n\n    platformFeePercentage = _feePercentage;\n    platformFeeRecipient = _feeRecipient;\n\n    emit PlatformFeeUpdated(_feePercentage, _feeRecipient);\n  }\n\n  // FIXED: Added withdraw function to recover accidentally sent ETH\n  function withdraw() external onlyOwner {\n    uint256 balance = address(this).balance;\n    require(balance > 0, \"No balance to withdraw\");\n\n    (bool success, ) = owner().call{value: balance}(\"\");\n    if (!success) revert TransferFailed();\n\n    emit WithdrawCompleted(owner(), balance);\n  }\n\n  // Required overrides\n  function supportsInterface(\n    bytes4 interfaceId\n  )\n    public\n    view\n    override(ERC721, ERC721URIStorage, ERC2981, ERC721Enumerable)\n    returns (bool)\n  {\n    return super.supportsInterface(interfaceId);\n  }\n\n  function tokenURI(\n    uint256 tokenId\n  ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n    return super.tokenURI(tokenId);\n  }\n\n  function _update(\n    address to,\n    uint256 tokenId,\n    address auth\n  ) internal override(ERC721, ERC721Enumerable) returns (address) {\n    return super._update(to, tokenId, auth);\n  }\n\n  function _increaseBalance(\n    address account,\n    uint128 value\n  ) internal override(ERC721, ERC721Enumerable) {\n    super._increaseBalance(account, value);\n  }\n\n  // View functions\n  function getDomainSeparator() external view returns (bytes32) {\n    return _domainSeparatorV4();\n  }\n\n  function getNonce(address user) external view returns (uint256) {\n    return nonces[user];\n  }\n\n  function getMintedInPhase(\n    address user,\n    PhaseType phaseType\n  ) external view returns (uint256) {\n    return mintedPerWalletInPhase[user][phaseType];\n  }\n\n  function getPhaseCount() external view returns (uint256) {\n    return phases.length;\n  }\n\n  function isActivePhasePresent() public view returns (bool) {\n    uint256 timestamp = block.timestamp;\n\n    for (uint256 i = 0; i < phases.length; i++) {\n      if (\n        phases[i].phaseType != PhaseType.NOT_STARTED &&\n        timestamp >= phases[i].startTime &&\n        timestamp <= phases[i].endTime\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size is 24972 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n  --> src/blockchain/evm/contracts/DirectMintNFTV2.sol:13:1:\n   |\n13 | contract LaunchNFTV2 is\n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size is 24972 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":13897,"file":"src/blockchain/evm/contracts/DirectMintNFTV2.sol","start":622},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2399],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2400,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2399],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4910]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":4911,"src":"132:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[4910],"IERC2981":[171]},"id":172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":172,"sourceUnit":4911,"src":"133:59:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":157,"name":"IERC165","nameLocations":["476:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"476:7:2"},"id":158,"nodeType":"InheritanceSpecifier","src":"476:7:2"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"194:259:2","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."},"fullyImplemented":false,"id":171,"linearizedBaseContracts":[171,4910],"name":"IERC2981","nameLocation":"464:8:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"490:473:2","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."},"functionSelector":"2a55205a","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"977:11:2","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:2","nodeType":"VariableDeclaration","scope":170,"src":"998:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"salePrice","nameLocation":"1031:9:2","nodeType":"VariableDeclaration","scope":170,"src":"1023:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:58:2"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"receiver","nameLocation":"1078:8:2","nodeType":"VariableDeclaration","scope":170,"src":"1070:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1096:13:2","nodeType":"VariableDeclaration","scope":170,"src":"1088:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:41:2"},"scope":171,"src":"968:143:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":172,"src":"454:659:2","usedErrors":[],"usedEvents":[]}],"src":"107:1007:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[4910],"IERC4906":[195],"IERC721":[1435]},"id":196,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":173,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":196,"sourceUnit":152,"src":"133:38:3","symbolAliases":[{"foreign":{"id":174,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":196,"sourceUnit":225,"src":"172:38:3","symbolAliases":[{"foreign":{"id":176,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"180:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":179,"name":"IERC165","nameLocations":["279:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"279:7:3"},"id":180,"nodeType":"InheritanceSpecifier","src":"279:7:3"},{"baseName":{"id":181,"name":"IERC721","nameLocations":["288:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"288:7:3"},"id":182,"nodeType":"InheritanceSpecifier","src":"288:7:3"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"212:45:3","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":195,"linearizedBaseContracts":[195,1435,4910],"name":"IERC4906","nameLocation":"267:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"302:201:3","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":187,"name":"MetadataUpdate","nameLocation":"514:14:3","nodeType":"EventDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:3","nodeType":"VariableDeclaration","scope":187,"src":"529:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:3"},"src":"508:39:3"},{"anonymous":false,"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"553:212:3","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":194,"name":"BatchMetadataUpdate","nameLocation":"776:19:3","nodeType":"EventDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:3","nodeType":"VariableDeclaration","scope":194,"src":"796:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":192,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:3","nodeType":"VariableDeclaration","scope":194,"src":"818:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:3"},"src":"770:68:3"}],"scope":196,"src":"257:583:3","usedErrors":[],"usedEvents":[187,194,1334,1343,1352]}],"src":"107:734:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[220]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":197,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":220,"linearizedBaseContracts":[220],"name":"IERC5267","nameLocation":"143:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"158:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":200,"name":"EIP712DomainChanged","nameLocation":"253:19:4","nodeType":"EventDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"272:2:4"},"src":"247:28:4"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"281:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:4","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"447:2:4"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"fields","nameLocation":"517:6:4","nodeType":"VariableDeclaration","scope":219,"src":"510:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":203,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"name","nameLocation":"551:4:4","nodeType":"VariableDeclaration","scope":219,"src":"537:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":205,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"version","nameLocation":"583:7:4","nodeType":"VariableDeclaration","scope":219,"src":"569:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":207,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"chainId","nameLocation":"612:7:4","nodeType":"VariableDeclaration","scope":219,"src":"604:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:4","nodeType":"VariableDeclaration","scope":219,"src":"633:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"salt","nameLocation":"680:4:4","nodeType":"VariableDeclaration","scope":219,"src":"672:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"extensions","nameLocation":"715:10:4","nodeType":"VariableDeclaration","scope":219,"src":"698:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":216,"nodeType":"ArrayTypeName","src":"698:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:4"},"scope":220,"src":"426:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":221,"src":"133:605:4","usedErrors":[],"usedEvents":[200]}],"src":"107:632:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1435]},"id":225,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":225,"sourceUnit":1436,"src":"132:52:5","symbolAliases":[{"foreign":{"id":223,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"140:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[361],"IERC20Errors":[266],"IERC721Errors":[314]},"id":362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":226,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":266,"linearizedBaseContracts":[266],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":236,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":236,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":236,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":236,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":241,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":241,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":246,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":246,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":255,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":255,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":255,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":255,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":260,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":260,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":265,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":265,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":362,"src":"280:1764:6","usedErrors":[236,241,246,255,260,265],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":314,"linearizedBaseContracts":[314],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":272,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":272,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":277,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":277,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":286,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":286,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":286,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":286,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":291,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":291,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":296,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":296,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":303,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":303,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":303,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":308,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":308,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":313,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":313,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":362,"src":"2190:2092:6","usedErrors":[272,277,286,291,296,303,308,313],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":361,"linearizedBaseContracts":[361],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":326,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":326,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":326,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":326,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":326,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":331,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":331,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":336,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":336,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":343,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":343,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":343,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":348,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":348,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":353,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":353,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":360,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":360,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":360,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":362,"src":"4430:2107:6","usedErrors":[326,331,336,343,348,353,360],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2399],"ERC165":[4898],"ERC721":[1318],"ERC721Utils":[2102],"IERC165":[4910],"IERC721":[1435],"IERC721Errors":[314],"IERC721Metadata":[2025],"Strings":[3112]},"id":1319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":363,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":1436,"src":"133:38:7","symbolAliases":[{"foreign":{"id":364,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"141:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":2026,"src":"172:65:7","symbolAliases":[{"foreign":{"id":366,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"180:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":2103,"src":"238:52:7","symbolAliases":[{"foreign":{"id":368,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"246:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":2400,"src":"291:48:7","symbolAliases":[{"foreign":{"id":370,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"299:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":373,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":3113,"src":"340:48:7","symbolAliases":[{"foreign":{"id":372,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"348:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":4899,"src":"389:69:7","symbolAliases":[{"foreign":{"id":374,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"397:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":375,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"406:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":362,"src":"459:66:7","symbolAliases":[{"foreign":{"id":377,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"467:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":380,"name":"Context","nameLocations":["803:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"803:7:7"},"id":381,"nodeType":"InheritanceSpecifier","src":"803:7:7"},{"baseName":{"id":382,"name":"ERC165","nameLocations":["812:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"812:6:7"},"id":383,"nodeType":"InheritanceSpecifier","src":"812:6:7"},{"baseName":{"id":384,"name":"IERC721","nameLocations":["820:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"820:7:7"},"id":385,"nodeType":"InheritanceSpecifier","src":"820:7:7"},{"baseName":{"id":386,"name":"IERC721Metadata","nameLocations":["829:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":2025,"src":"829:15:7"},"id":387,"nodeType":"InheritanceSpecifier","src":"829:15:7"},{"baseName":{"id":388,"name":"IERC721Errors","nameLocations":["846:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":314,"src":"846:13:7"},"id":389,"nodeType":"InheritanceSpecifier","src":"846:13:7"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"527:247:7","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1318,"linearizedBaseContracts":[1318,314,2025,1435,4898,4910,2399],"name":"ERC721","nameLocation":"793:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":392,"libraryName":{"id":390,"name":"Strings","nameLocations":["872:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"872:7:7"},"nodeType":"UsingForDirective","src":"866:26:7","typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":394,"mutability":"mutable","name":"_name","nameLocation":"931:5:7","nodeType":"VariableDeclaration","scope":1318,"src":"916:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":393,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":396,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:7","nodeType":"VariableDeclaration","scope":1318,"src":"963:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":395,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":400,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":1318,"src":"992:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":399,"keyName":"tokenId","keyNameLocation":"1008:7:7","keyType":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":404,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:7","nodeType":"VariableDeclaration","scope":1318,"src":"1050:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":403,"keyName":"owner","keyNameLocation":"1066:5:7","keyType":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":408,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:7","nodeType":"VariableDeclaration","scope":1318,"src":"1108:59:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":407,"keyName":"tokenId","keyNameLocation":"1124:7:7","keyType":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":414,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:7","nodeType":"VariableDeclaration","scope":1318,"src":"1174:86:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":413,"keyName":"owner","keyNameLocation":"1190:5:7","keyType":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":412,"keyName":"operator","keyNameLocation":"1215:8:7","keyType":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":411,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":430,"nodeType":"Block","src":"1436:57:7","statements":[{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":422,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"1446:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":423,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"1454:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":425,"nodeType":"ExpressionStatement","src":"1446:13:7"},{"expression":{"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":426,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1469:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":427,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"1479:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":429,"nodeType":"ExpressionStatement","src":"1469:17:7"}]},"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"1267:108:7","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":431,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"name_","nameLocation":"1406:5:7","nodeType":"VariableDeclaration","scope":431,"src":"1392:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":416,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:7","nodeType":"VariableDeclaration","scope":431,"src":"1413:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":418,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:7"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"1436:0:7"},"scope":1318,"src":"1380:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4897,4909],"body":{"id":461,"nodeType":"Block","src":"1668:192:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1697:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":444,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"1717:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1435_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1435_$","typeString":"type(contract IERC721)"}],"id":443,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1435","typeString":"type(contract IERC721)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":448,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1753:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":450,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"1773:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2025_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2025_$","typeString":"type(contract IERC721Metadata)"}],"id":449,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2025","typeString":"type(contract IERC721Metadata)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":457,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1841:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":455,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1318_$","typeString":"type(contract super ERC721)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4897,"src":"1817:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":441,"id":460,"nodeType":"Return","src":"1678:175:7"}]},"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"1499:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":462,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:7","nodeType":"FunctionDefinition","overrides":{"id":438,"nodeType":"OverrideSpecifier","overrides":[{"id":436,"name":"ERC165","nameLocations":["1636:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"1636:6:7"},{"id":437,"name":"IERC165","nameLocations":["1644:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"1644:7:7"}],"src":"1627:25:7"},"parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:7","nodeType":"VariableDeclaration","scope":462,"src":"1587:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":433,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:7"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":462,"src":"1662:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":439,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:7"},"scope":1318,"src":"1560:300:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1360],"body":{"id":489,"nodeType":"Block","src":"1991:136:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2005:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:7","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":484,"nodeType":"IfStatement","src":"2001:87:7","trueBody":{"id":483,"nodeType":"Block","src":"2026:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:7","typeDescriptions":{}}},"id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":476,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2047:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":482,"nodeType":"RevertStatement","src":"2040:37:7"}]}},{"expression":{"baseExpression":{"id":485,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2104:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":487,"indexExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2114:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":469,"id":488,"nodeType":"Return","src":"2097:23:7"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"1866:48:7","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:7","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"owner","nameLocation":"1946:5:7","nodeType":"VariableDeclaration","scope":490,"src":"1938:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:7"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":490,"src":"1982:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:7"},"scope":1318,"src":"1919:208:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1368],"body":{"id":502,"nodeType":"Block","src":"2256:46:7","statements":[{"expression":{"arguments":[{"id":499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2287:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2273:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":497,"id":501,"nodeType":"Return","src":"2266:29:7"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"2133:46:7","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":503,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:7","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:7","nodeType":"VariableDeclaration","scope":503,"src":"2201:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:7"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":503,"src":"2247:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:7"},"scope":1318,"src":"2184:118:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2010],"body":{"id":511,"nodeType":"Block","src":"2424:29:7","statements":[{"expression":{"id":509,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2441:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":508,"id":510,"nodeType":"Return","src":"2434:12:7"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"2308:51:7","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":512,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:7","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"2377:2:7"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":512,"src":"2409:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":506,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:7"},"scope":1318,"src":"2364:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2016],"body":{"id":520,"nodeType":"Block","src":"2579:31:7","statements":[{"expression":{"id":518,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2596:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":517,"id":519,"nodeType":"Return","src":"2589:14:7"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2459:53:7","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":521,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:7","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"2532:2:7"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"2564:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":515,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:7"},"scope":1318,"src":"2517:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2024],"body":{"id":556,"nodeType":"Block","src":"2755:176:7","statements":[{"expression":{"arguments":[{"id":530,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":529,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2765:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":532,"nodeType":"ExpressionStatement","src":"2765:22:7"},{"assignments":[534],"declarations":[{"constant":false,"id":534,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:7","nodeType":"VariableDeclaration","scope":556,"src":"2798:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":533,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":537,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":535,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2822:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:7"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":540,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2855:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":538,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:7","typeDescriptions":{}}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:7","memberName":"length","nodeType":"MemberAccess","src":"2849:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:7","trueExpression":{"arguments":[{"id":548,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2891:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2900:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2860,"src":"2900:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":545,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:7","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:7","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":528,"id":555,"nodeType":"Return","src":"2842:82:7"}]},"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"2616:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":557,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:7","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:7","nodeType":"VariableDeclaration","scope":557,"src":"2694:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:7"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":557,"src":"2740:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":526,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:7"},"scope":1318,"src":"2676:255:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":565,"nodeType":"Block","src":"3239:26:7","statements":[{"expression":{"hexValue":"","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":562,"id":564,"nodeType":"Return","src":"3249:9:7"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"2937:231:7","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":566,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:7","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"3190:2:7"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"3224:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":560,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:7"},"scope":1318,"src":"3173:92:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1408],"body":{"id":581,"nodeType":"Block","src":"3383:52:7","statements":[{"expression":{"arguments":[{"id":575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3402:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"3406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":577,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3415:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":574,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1185,1251],"referencedDeclaration":1185,"src":"3393:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"ExpressionStatement","src":"3393:35:7"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"3271:46:7","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":582,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:7","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"to","nameLocation":"3347:2:7","nodeType":"VariableDeclaration","scope":582,"src":"3339:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:7","nodeType":"VariableDeclaration","scope":582,"src":"3351:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:7"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[],"src":"3383:0:7"},"scope":1318,"src":"3322:113:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1424],"body":{"id":598,"nodeType":"Block","src":"3572:78:7","statements":[{"expression":{"arguments":[{"id":591,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3596:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":590,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3582:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":593,"nodeType":"ExpressionStatement","src":"3582:22:7"},{"expression":{"arguments":[{"id":595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3635:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":594,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"3622:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":589,"id":597,"nodeType":"Return","src":"3615:28:7"}]},"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"3441:50:7","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":599,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:7","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:7","nodeType":"VariableDeclaration","scope":599,"src":"3517:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:7"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":599,"src":"3563:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:7"},"scope":1318,"src":"3496:154:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1416],"body":{"id":614,"nodeType":"Block","src":"3792:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":608,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3821:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"3835:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"3845:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":607,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"3802:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"3802:52:7"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"3656:56:7","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":615,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:7","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"operator","nameLocation":"3752:8:7","nodeType":"VariableDeclaration","scope":615,"src":"3744:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"approved","nameLocation":"3767:8:7","nodeType":"VariableDeclaration","scope":615,"src":"3762:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":603,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:7"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"3792:0:7"},"scope":1318,"src":"3717:144:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1434],"body":{"id":631,"nodeType":"Block","src":"4021:59:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":625,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"4038:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":627,"indexExpression":{"id":626,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4057:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":629,"indexExpression":{"id":628,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4064:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":624,"id":630,"nodeType":"Return","src":"4031:42:7"}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"3867:55:7","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":632,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:7","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"owner","nameLocation":"3961:5:7","nodeType":"VariableDeclaration","scope":632,"src":"3953:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"operator","nameLocation":"3976:8:7","nodeType":"VariableDeclaration","scope":632,"src":"3968:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:7"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"4015:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":622,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:7"},"scope":1318,"src":"3927:153:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1400],"body":{"id":677,"nodeType":"Block","src":"4222:498:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4236:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:7","typeDescriptions":{}}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"4232:87:7","trueBody":{"id":655,"nodeType":"Block","src":"4254:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:7","typeDescriptions":{}}},"id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":648,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"4275:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":654,"nodeType":"RevertStatement","src":"4268:40:7"}]}},{"assignments":[658],"declarations":[{"constant":false,"id":658,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:7","nodeType":"VariableDeclaration","scope":677,"src":"4537:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":665,"initialValue":{"arguments":[{"id":660,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4569:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":661,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4573:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":662,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"4582:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":659,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"4561:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":666,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4609:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4626:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":676,"nodeType":"IfStatement","src":"4605:109:7","trueBody":{"id":675,"nodeType":"Block","src":"4632:82:7","statements":[{"errorCall":{"arguments":[{"id":670,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4674:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4680:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":672,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4689:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":669,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"4653:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":674,"nodeType":"RevertStatement","src":"4646:57:7"}]}}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"4086:51:7","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":678,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:7","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"from","nameLocation":"4172:4:7","nodeType":"VariableDeclaration","scope":678,"src":"4164:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"to","nameLocation":"4186:2:7","nodeType":"VariableDeclaration","scope":678,"src":"4178:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:7","nodeType":"VariableDeclaration","scope":678,"src":"4190:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:7"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"4222:0:7"},"scope":1318,"src":"4142:578:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1390],"body":{"id":695,"nodeType":"Block","src":"4862:56:7","statements":[{"expression":{"arguments":[{"id":689,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"4889:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"4895:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4899:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":688,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[696,726],"referencedDeclaration":726,"src":"4872:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"4872:39:7"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"4726:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":696,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:7","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"from","nameLocation":"4820:4:7","nodeType":"VariableDeclaration","scope":696,"src":"4812:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"to","nameLocation":"4834:2:7","nodeType":"VariableDeclaration","scope":696,"src":"4826:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:7","nodeType":"VariableDeclaration","scope":696,"src":"4838:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:7"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"4862:0:7"},"scope":1318,"src":"4786:132:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1380],"body":{"id":725,"nodeType":"Block","src":"5087:130:7","statements":[{"expression":{"arguments":[{"id":709,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5110:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5116:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":711,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5120:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":708,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"5097:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"5097:31:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":717,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"5172:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5186:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5192:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5196:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":722,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"5205:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":714,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"5138:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2102_$","typeString":"type(library ERC721Utils)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"5138:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"5138:72:7"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"4924:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":726,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:7","nodeType":"FunctionDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"from","nameLocation":"5018:4:7","nodeType":"VariableDeclaration","scope":726,"src":"5010:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"to","nameLocation":"5032:2:7","nodeType":"VariableDeclaration","scope":726,"src":"5024:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:7","nodeType":"VariableDeclaration","scope":726,"src":"5036:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"data","nameLocation":"5066:4:7","nodeType":"VariableDeclaration","scope":726,"src":"5053:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":704,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:7"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"5087:0:7"},"scope":1318,"src":"4984:233:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":738,"nodeType":"Block","src":"5807:40:7","statements":[{"expression":{"baseExpression":{"id":734,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5824:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":736,"indexExpression":{"id":735,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"5832:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":733,"id":737,"nodeType":"Return","src":"5817:23:7"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"5223:504:7","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":739,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:7","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:7","nodeType":"VariableDeclaration","scope":739,"src":"5750:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:7"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"5798:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:7"},"scope":1318,"src":"5732:115:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":751,"nodeType":"Block","src":"6042:48:7","statements":[{"expression":{"baseExpression":{"id":747,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"6059:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":749,"indexExpression":{"id":748,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"6075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":746,"id":750,"nodeType":"Return","src":"6052:31:7"}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"5853:105:7","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":752,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:7","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:7","nodeType":"VariableDeclaration","scope":752,"src":"5985:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:7"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":752,"src":"6033:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:7"},"scope":1318,"src":"5963:127:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":787,"nodeType":"Block","src":"6510:163:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6539:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:7","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6577:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":771,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6586:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":774,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6614:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6621:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":773,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"6597:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"6646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"6633:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":781,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6658:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":763,"id":786,"nodeType":"Return","src":"6520:146:7"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"6096:300:7","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:7","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"owner","nameLocation":"6432:5:7","nodeType":"VariableDeclaration","scope":788,"src":"6424:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"spender","nameLocation":"6447:7:7","nodeType":"VariableDeclaration","scope":788,"src":"6439:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:7","nodeType":"VariableDeclaration","scope":788,"src":"6456:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:7"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"6504:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:7"},"scope":1318,"src":"6401:272:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":824,"nodeType":"Block","src":"7202:271:7","statements":[{"condition":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:7","subExpression":{"arguments":[{"id":799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"7231:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7238:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":798,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7217:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"7212:255:7","trueBody":{"id":822,"nodeType":"Block","src":"7257:210:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":804,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"7275:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:7","typeDescriptions":{}}},"id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":820,"nodeType":"Block","src":"7373:84:7","statements":[{"errorCall":{"arguments":[{"id":816,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7425:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7434:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"7398:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":819,"nodeType":"RevertStatement","src":"7391:51:7"}]},"id":821,"nodeType":"IfStatement","src":"7271:186:7","trueBody":{"id":814,"nodeType":"Block","src":"7296:71:7","statements":[{"errorCall":{"arguments":[{"id":811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"7321:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":813,"nodeType":"RevertStatement","src":"7314:38:7"}]}}]}}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"6679:421:7","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:7","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"owner","nameLocation":"7139:5:7","nodeType":"VariableDeclaration","scope":825,"src":"7131:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"spender","nameLocation":"7154:7:7","nodeType":"VariableDeclaration","scope":825,"src":"7146:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:7","nodeType":"VariableDeclaration","scope":825,"src":"7163:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:7"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"7202:0:7"},"scope":1318,"src":"7105:368:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"8190:78:7","statements":[{"id":839,"nodeType":"UncheckedBlock","src":"8200:62:7","statements":[{"expression":{"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":833,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8224:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":835,"indexExpression":{"id":834,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8234:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8246:5:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":838,"nodeType":"ExpressionStatement","src":"8224:27:7"}]}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"7479:631:7","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:7","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"account","nameLocation":"8149:7:7","nodeType":"VariableDeclaration","scope":841,"src":"8141:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"value","nameLocation":"8166:5:7","nodeType":"VariableDeclaration","scope":841,"src":"8158:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":829,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"8190:0:7"},"scope":1318,"src":"8115:153:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":930,"nodeType":"Block","src":"8956:700:7","statements":[{"assignments":[854],"declarations":[{"constant":false,"id":854,"mutability":"mutable","name":"from","nameLocation":"8974:4:7","nodeType":"VariableDeclaration","scope":930,"src":"8966:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":858,"initialValue":{"arguments":[{"id":856,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"8990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":855,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"8981:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"9058:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:7","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":872,"nodeType":"IfStatement","src":"9054:86:7","trueBody":{"id":871,"nodeType":"Block","src":"9078:62:7","statements":[{"expression":{"arguments":[{"id":866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9109:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":867,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"9115:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":865,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9092:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"ExpressionStatement","src":"9092:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":873,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9184:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:7","typeDescriptions":{}}},"id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"9180:256:7","trueBody":{"id":899,"nodeType":"Block","src":"9204:232:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:7","typeDescriptions":{}}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9321:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:7","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":879,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1185,1251],"referencedDeclaration":1251,"src":"9300:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"9300:48:7"},{"id":898,"nodeType":"UncheckedBlock","src":"9363:63:7","statements":[{"expression":{"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":892,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"9391:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":894,"indexExpression":{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9401:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":897,"nodeType":"ExpressionStatement","src":"9391:20:7"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9450:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:7","typeDescriptions":{}}},"id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":915,"nodeType":"IfStatement","src":"9446:107:7","trueBody":{"id":914,"nodeType":"Block","src":"9468:85:7","statements":[{"id":913,"nodeType":"UncheckedBlock","src":"9482:61:7","statements":[{"expression":{"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":907,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"9510:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":909,"indexExpression":{"id":908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9520:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":912,"nodeType":"ExpressionStatement","src":"9510:18:7"}]}]}},{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":916,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"9563:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":918,"indexExpression":{"id":917,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9571:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9582:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":921,"nodeType":"ExpressionStatement","src":"9563:21:7"},{"eventCall":{"arguments":[{"id":923,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9609:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9615:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":922,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"9600:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"EmitStatement","src":"9595:32:7"},{"expression":{"id":928,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9645:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":852,"id":929,"nodeType":"Return","src":"9638:11:7"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"8274:582:7","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":931,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:7","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"to","nameLocation":"8886:2:7","nodeType":"VariableDeclaration","scope":931,"src":"8878:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:7","nodeType":"VariableDeclaration","scope":931,"src":"8890:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"auth","nameLocation":"8915:4:7","nodeType":"VariableDeclaration","scope":931,"src":"8907:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:7"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"8947:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:7"},"scope":1318,"src":"8861:795:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"10031:274:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10045:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:7","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":953,"nodeType":"IfStatement","src":"10041:87:7","trueBody":{"id":952,"nodeType":"Block","src":"10063:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:7","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":945,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"10084:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":951,"nodeType":"RevertStatement","src":"10077:40:7"}]}},{"assignments":[955],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:7","nodeType":"VariableDeclaration","scope":980,"src":"10137:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":964,"initialValue":{"arguments":[{"id":957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10169:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":958,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"10173:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:7","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":956,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"10161:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":965,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"10207:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:7","typeDescriptions":{}}},"id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":979,"nodeType":"IfStatement","src":"10203:96:7","trueBody":{"id":978,"nodeType":"Block","src":"10236:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:7","typeDescriptions":{}}},"id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":971,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"10257:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":977,"nodeType":"RevertStatement","src":"10250:38:7"}]}}]},"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"9662:311:7","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:7","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"to","nameLocation":"10001:2:7","nodeType":"VariableDeclaration","scope":981,"src":"9993:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:7","nodeType":"VariableDeclaration","scope":981,"src":"10005:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:7"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"10031:0:7"},"scope":1318,"src":"9978:327:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":995,"nodeType":"Block","src":"10713:43:7","statements":[{"expression":{"arguments":[{"id":990,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10733:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"10737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":989,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[996,1026],"referencedDeclaration":1026,"src":"10723:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"10723:26:7"}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"10311:340:7","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":996,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:7","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"to","nameLocation":"10683:2:7","nodeType":"VariableDeclaration","scope":996,"src":"10675:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:7","nodeType":"VariableDeclaration","scope":996,"src":"10687:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:7"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"10713:0:7"},"scope":1318,"src":"10656:100:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1025,"nodeType":"Block","src":"11061:123:7","statements":[{"expression":{"arguments":[{"id":1007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"11077:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"11081:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1006,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11071:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"ExpressionStatement","src":"11071:18:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1014,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"11133:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:7","typeDescriptions":{}}},"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1020,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"11159:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"11163:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1022,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"11172:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1011,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"11099:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2102_$","typeString":"type(library ERC721Utils)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"11099:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"ExpressionStatement","src":"11099:78:7"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"10762:210:7","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:7","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"to","nameLocation":"11004:2:7","nodeType":"VariableDeclaration","scope":1026,"src":"10996:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:7","nodeType":"VariableDeclaration","scope":1026,"src":"11008:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"data","nameLocation":"11038:4:7","nodeType":"VariableDeclaration","scope":1026,"src":"11025:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1002,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:7"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"11061:0:7"},"scope":1318,"src":"10977:207:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1058,"nodeType":"Block","src":"11551:186:7","statements":[{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:7","nodeType":"VariableDeclaration","scope":1058,"src":"11561:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1045,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:7","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"11605:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:7","typeDescriptions":{}}},"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"11585:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1046,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11639:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:7","typeDescriptions":{}}},"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1057,"nodeType":"IfStatement","src":"11635:96:7","trueBody":{"id":1056,"nodeType":"Block","src":"11668:63:7","statements":[{"errorCall":{"arguments":[{"id":1053,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"11712:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1052,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"11689:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1055,"nodeType":"RevertStatement","src":"11682:38:7"}]}}]},"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"11190:315:7","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:7","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:7","nodeType":"VariableDeclaration","scope":1059,"src":"11525:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:7"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"11551:0:7"},"scope":1318,"src":"11510:227:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1118,"nodeType":"Block","src":"12132:389:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12146:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:7","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1083,"nodeType":"IfStatement","src":"12142:87:7","trueBody":{"id":1082,"nodeType":"Block","src":"12164:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:7","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1075,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"12185:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1081,"nodeType":"RevertStatement","src":"12178:40:7"}]}},{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:7","nodeType":"VariableDeclaration","scope":1118,"src":"12238:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1094,"initialValue":{"arguments":[{"id":1087,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12270:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1088,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12274:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:7","typeDescriptions":{}}},"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1086,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"12262:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12308:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:7","typeDescriptions":{}}},"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12410:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1107,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12427:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1116,"nodeType":"IfStatement","src":"12406:109:7","trueBody":{"id":1115,"nodeType":"Block","src":"12433:82:7","statements":[{"errorCall":{"arguments":[{"id":1110,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12475:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12481:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1112,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12490:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1109,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"12454:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1114,"nodeType":"RevertStatement","src":"12447:57:7"}]}},"id":1117,"nodeType":"IfStatement","src":"12304:211:7","trueBody":{"id":1105,"nodeType":"Block","src":"12337:63:7","statements":[{"errorCall":{"arguments":[{"id":1102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12381:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1101,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"12358:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1104,"nodeType":"RevertStatement","src":"12351:38:7"}]}}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"11743:313:7","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:7","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"from","nameLocation":"12088:4:7","nodeType":"VariableDeclaration","scope":1119,"src":"12080:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"to","nameLocation":"12102:2:7","nodeType":"VariableDeclaration","scope":1119,"src":"12094:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:7","nodeType":"VariableDeclaration","scope":1119,"src":"12106:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:7"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"12132:0:7"},"scope":1318,"src":"12061:460:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"13530:53:7","statements":[{"expression":{"arguments":[{"id":1130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"13554:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"13560:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"13564:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1129,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1137,1167],"referencedDeclaration":1167,"src":"13540:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1135,"nodeType":"ExpressionStatement","src":"13540:36:7"}]},"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"12527:923:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:7","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"from","nameLocation":"13486:4:7","nodeType":"VariableDeclaration","scope":1137,"src":"13478:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"to","nameLocation":"13500:2:7","nodeType":"VariableDeclaration","scope":1137,"src":"13492:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:7","nodeType":"VariableDeclaration","scope":1137,"src":"13504:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:7"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[],"src":"13530:0:7"},"scope":1318,"src":"13455:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1166,"nodeType":"Block","src":"13922:127:7","statements":[{"expression":{"arguments":[{"id":1150,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"13942:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1151,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"13948:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1152,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"13952:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1149,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"13932:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"13932:28:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1158,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"14004:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"14018:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1161,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"14024:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1162,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"14028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1163,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"14037:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1155,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"13970:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2102_$","typeString":"type(library ERC721Utils)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"13970:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1165,"nodeType":"ExpressionStatement","src":"13970:72:7"}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"13589:226:7","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:7","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"from","nameLocation":"13851:4:7","nodeType":"VariableDeclaration","scope":1167,"src":"13843:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"to","nameLocation":"13865:2:7","nodeType":"VariableDeclaration","scope":1167,"src":"13857:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:7","nodeType":"VariableDeclaration","scope":1167,"src":"13869:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"data","nameLocation":"13899:4:7","nodeType":"VariableDeclaration","scope":1167,"src":"13886:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1145,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:7"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"13922:0:7"},"scope":1318,"src":"13820:229:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1184,"nodeType":"Block","src":"14562:50:7","statements":[{"expression":{"arguments":[{"id":1178,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"14581:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"14585:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"14594:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1177,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1185,1251],"referencedDeclaration":1251,"src":"14572:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"14572:33:7"}]},"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"14055:432:7","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1185,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:7","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"to","nameLocation":"14518:2:7","nodeType":"VariableDeclaration","scope":1185,"src":"14510:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:7","nodeType":"VariableDeclaration","scope":1185,"src":"14522:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"auth","nameLocation":"14547:4:7","nodeType":"VariableDeclaration","scope":1185,"src":"14539:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:7"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"14562:0:7"},"scope":1318,"src":"14492:120:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"14888:568:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"14954:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"14967:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:7","typeDescriptions":{}}},"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1243,"nodeType":"IfStatement","src":"14950:460:7","trueBody":{"id":1242,"nodeType":"Block","src":"14987:423:7","statements":[{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"owner","nameLocation":"15009:5:7","nodeType":"VariableDeclaration","scope":1242,"src":"15001:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1210,"initialValue":{"arguments":[{"id":1208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"15031:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"15017:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15167:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:7","typeDescriptions":{}}},"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15189:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1218,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15198:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:7","subExpression":{"arguments":[{"id":1222,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15224:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1223,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15231:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1221,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"15207:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"15163:142:7","trueBody":{"id":1231,"nodeType":"Block","src":"15238:67:7","statements":[{"errorCall":{"arguments":[{"id":1228,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15285:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1227,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"15263:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1230,"nodeType":"RevertStatement","src":"15256:34:7"}]}},{"condition":{"id":1233,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"15323:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1241,"nodeType":"IfStatement","src":"15319:81:7","trueBody":{"id":1240,"nodeType":"Block","src":"15334:66:7","statements":[{"eventCall":{"arguments":[{"id":1235,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15366:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1236,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"15373:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1237,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"15377:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1234,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"15357:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1239,"nodeType":"EmitStatement","src":"15352:33:7"}]}}]}},{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1244,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"15420:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1246,"indexExpression":{"id":1245,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"15436:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1247,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"15447:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1249,"nodeType":"ExpressionStatement","src":"15420:29:7"}]},"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"14618:171:7","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:7","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"to","nameLocation":"14820:2:7","nodeType":"VariableDeclaration","scope":1251,"src":"14812:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:7","nodeType":"VariableDeclaration","scope":1251,"src":"14824:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"auth","nameLocation":"14849:4:7","nodeType":"VariableDeclaration","scope":1251,"src":"14841:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:7","nodeType":"VariableDeclaration","scope":1251,"src":"14855:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1193,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:7"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"14888:0:7"},"scope":1318,"src":"14794:662:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1287,"nodeType":"Block","src":"15758:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15772:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:7","typeDescriptions":{}}},"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1272,"nodeType":"IfStatement","src":"15768:91:7","trueBody":{"id":1271,"nodeType":"Block","src":"15796:63:7","statements":[{"errorCall":{"arguments":[{"id":1268,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15839:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1267,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"15817:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1270,"nodeType":"RevertStatement","src":"15810:38:7"}]}},{"expression":{"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1273,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"15868:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1276,"indexExpression":{"id":1274,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"15887:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1277,"indexExpression":{"id":1275,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15894:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1278,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15906:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1280,"nodeType":"ExpressionStatement","src":"15868:46:7"},{"eventCall":{"arguments":[{"id":1282,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"15944:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1283,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15951:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1284,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15961:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1281,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"15929:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"EmitStatement","src":"15924:46:7"}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"15462:198:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:7","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"owner","nameLocation":"15701:5:7","nodeType":"VariableDeclaration","scope":1288,"src":"15693:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"operator","nameLocation":"15716:8:7","nodeType":"VariableDeclaration","scope":1288,"src":"15708:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"approved","nameLocation":"15731:8:7","nodeType":"VariableDeclaration","scope":1288,"src":"15726:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1257,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:7"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[],"src":"15758:0:7"},"scope":1318,"src":"15665:312:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1316,"nodeType":"Block","src":"16284:169:7","statements":[{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"owner","nameLocation":"16302:5:7","nodeType":"VariableDeclaration","scope":1316,"src":"16294:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1301,"initialValue":{"arguments":[{"id":1299,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"16319:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1298,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"16310:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1302,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"16341:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:7","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1313,"nodeType":"IfStatement","src":"16337:88:7","trueBody":{"id":1312,"nodeType":"Block","src":"16362:63:7","statements":[{"errorCall":{"arguments":[{"id":1309,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"16406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1308,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"16383:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1311,"nodeType":"RevertStatement","src":"16376:38:7"}]}},{"expression":{"id":1314,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"16441:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1295,"id":1315,"nodeType":"Return","src":"16434:12:7"}]},"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"15983:224:7","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1317,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:7","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:7","nodeType":"VariableDeclaration","scope":1317,"src":"16235:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:7"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"16275:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:7"},"scope":1318,"src":"16212:241:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1319,"src":"775:15680:7","usedErrors":[272,277,286,291,296,303,308,313],"usedEvents":[1334,1343,1352]}],"src":"107:16349:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4910],"IERC721":[1435]},"id":1436,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1436,"sourceUnit":4911,"src":"134:62:8","symbolAliases":[{"foreign":{"id":1321,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"142:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1324,"name":"IERC165","nameLocations":["288:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"288:7:8"},"id":1325,"nodeType":"InheritanceSpecifier","src":"288:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"198:68:8","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1435,"linearizedBaseContracts":[1435,4910],"name":"IERC721","nameLocation":"277:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"302:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1334,"name":"Transfer","nameLocation":"401:8:8","nodeType":"EventDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"410:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"432:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:8","nodeType":"VariableDeclaration","scope":1334,"src":"452:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:8"},"src":"395:82:8"},{"anonymous":false,"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"483:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1343,"name":"Approval","nameLocation":"588:8:8","nodeType":"EventDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:8","nodeType":"VariableDeclaration","scope":1343,"src":"597:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:8","nodeType":"VariableDeclaration","scope":1343,"src":"620:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:8","nodeType":"VariableDeclaration","scope":1343,"src":"646:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:8"},"src":"582:89:8"},{"anonymous":false,"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"677:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1352,"name":"ApprovalForAll","nameLocation":"805:14:8","nodeType":"EventDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:8","nodeType":"VariableDeclaration","scope":1352,"src":"820:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:8","nodeType":"VariableDeclaration","scope":1352,"src":"843:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:8","nodeType":"VariableDeclaration","scope":1352,"src":"869:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1349,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:8"},"src":"799:85:8"},{"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"890:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1360,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:8","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"owner","nameLocation":"998:5:8","nodeType":"VariableDeclaration","scope":1360,"src":"990:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:8"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"balance","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":1360,"src":"1028:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:8"},"scope":1435,"src":"971:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"1051:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1368,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:8","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:8","nodeType":"VariableDeclaration","scope":1368,"src":"1204:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:8"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"owner","nameLocation":"1252:5:8","nodeType":"VariableDeclaration","scope":1368,"src":"1244:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:8"},"scope":1435,"src":"1187:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"1265:565:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1380,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:8","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"from","nameLocation":"1869:4:8","nodeType":"VariableDeclaration","scope":1380,"src":"1861:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"to","nameLocation":"1883:2:8","nodeType":"VariableDeclaration","scope":1380,"src":"1875:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:8","nodeType":"VariableDeclaration","scope":1380,"src":"1887:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"data","nameLocation":"1919:4:8","nodeType":"VariableDeclaration","scope":1380,"src":"1904:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1376,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:8"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"1933:0:8"},"scope":1435,"src":"1835:99:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"1940:706:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1390,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:8","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":1390,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"to","nameLocation":"2699:2:8","nodeType":"VariableDeclaration","scope":1390,"src":"2691:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:8","nodeType":"VariableDeclaration","scope":1390,"src":"2703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:8"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"2728:0:8"},"scope":1435,"src":"2651:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"2735:733:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1400,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:8","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"from","nameLocation":"3503:4:8","nodeType":"VariableDeclaration","scope":1400,"src":"3495:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"to","nameLocation":"3517:2:8","nodeType":"VariableDeclaration","scope":1400,"src":"3509:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:8","nodeType":"VariableDeclaration","scope":1400,"src":"3521:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:8"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"3546:0:8"},"scope":1435,"src":"3473:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"3553:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1408,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:8","nodeType":"FunctionDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"to","nameLocation":"4035:2:8","nodeType":"VariableDeclaration","scope":1408,"src":"4027:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:8","nodeType":"VariableDeclaration","scope":1408,"src":"4039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:8"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"4064:0:8"},"scope":1435,"src":"4010:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"4071:315:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1416,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:8","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"operator","nameLocation":"4426:8:8","nodeType":"VariableDeclaration","scope":1416,"src":"4418:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"approved","nameLocation":"4441:8:8","nodeType":"VariableDeclaration","scope":1416,"src":"4436:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:8"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"4459:0:8"},"scope":1435,"src":"4391:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"4466:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1424,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:8","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:8","nodeType":"VariableDeclaration","scope":1424,"src":"4631:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:8"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"operator","nameLocation":"4679:8:8","nodeType":"VariableDeclaration","scope":1424,"src":"4671:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:8"},"scope":1435,"src":"4610:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"4695:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1434,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:8","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"owner","nameLocation":"4872:5:8","nodeType":"VariableDeclaration","scope":1434,"src":"4864:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"operator","nameLocation":"4887:8:8","nodeType":"VariableDeclaration","scope":1434,"src":"4879:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:8"},"returnParameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1434,"src":"4920:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1431,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:8"},"scope":1435,"src":"4838:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1436,"src":"267:4661:8","usedErrors":[],"usedEvents":[1334,1343,1352]}],"src":"108:4821:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1453]},"id":1454,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1437,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"142:154:9","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1453,"linearizedBaseContracts":[1453],"name":"IERC721Receiver","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"329:500:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1452,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:9","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"operator","nameLocation":"877:8:9","nodeType":"VariableDeclaration","scope":1452,"src":"869:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"from","nameLocation":"903:4:9","nodeType":"VariableDeclaration","scope":1452,"src":"895:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:9","nodeType":"VariableDeclaration","scope":1452,"src":"917:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"data","nameLocation":"957:4:9","nodeType":"VariableDeclaration","scope":1452,"src":"942:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1446,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:9"},"returnParameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"986:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1449,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:9"},"scope":1453,"src":"834:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1454,"src":"297:699:9","usedErrors":[],"usedEvents":[]}],"src":"116:881:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"ERC721":[1318],"ERC721Enumerable":[1839],"IERC165":[4910],"IERC721Enumerable":[1997]},"id":1840,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1455,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1840,"sourceUnit":1319,"src":"154:37:10","symbolAliases":[{"foreign":{"id":1456,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"162:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":1459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1840,"sourceUnit":1998,"src":"192:58:10","symbolAliases":[{"foreign":{"id":1458,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"200:17:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":1461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1840,"sourceUnit":4899,"src":"251:64:10","symbolAliases":[{"foreign":{"id":1460,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"259:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1463,"name":"ERC721","nameLocations":["746:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"746:6:10"},"id":1464,"nodeType":"InheritanceSpecifier","src":"746:6:10"},{"baseName":{"id":1465,"name":"IERC721Enumerable","nameLocations":["754:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":1997,"src":"754:17:10"},"id":1466,"nodeType":"InheritanceSpecifier","src":"754:17:10"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"317:390:10","text":" @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\n interfere with enumerability and should not be used together with {ERC721Enumerable}."},"fullyImplemented":true,"id":1839,"linearizedBaseContracts":[1839,1997,1318,314,2025,1435,4898,4910,2399],"name":"ERC721Enumerable","nameLocation":"726:16:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1472,"mutability":"mutable","name":"_ownedTokens","nameLocation":"846:12:10","nodeType":"VariableDeclaration","scope":1839,"src":"778:80:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1471,"keyName":"owner","keyNameLocation":"794:5:10","keyType":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"778:59:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1470,"keyName":"index","keyNameLocation":"819:5:10","keyType":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"803:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1476,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"908:17:10","nodeType":"VariableDeclaration","scope":1839,"src":"864:61:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1475,"keyName":"tokenId","keyNameLocation":"880:7:10","keyType":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"864:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1479,"mutability":"mutable","name":"_allTokens","nameLocation":"950:10:10","nodeType":"VariableDeclaration","scope":1839,"src":"932:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ArrayTypeName","src":"932:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1483,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"1010:15:10","nodeType":"VariableDeclaration","scope":1839,"src":"966:59:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1482,"keyName":"tokenId","keyNameLocation":"982:7:10","keyType":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"966:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"1032:168:10","text":" @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."},"errorSelector":"a57d13dc","id":1490,"name":"ERC721OutOfBoundsIndex","nameLocation":"1211:22:10","nodeType":"ErrorDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"owner","nameLocation":"1242:5:10","nodeType":"VariableDeclaration","scope":1490,"src":"1234:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"index","nameLocation":"1257:5:10","nodeType":"VariableDeclaration","scope":1490,"src":"1249:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1233:30:10"},"src":"1205:59:10"},{"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"1270:50:10","text":" @dev Batch mint is not allowed."},"errorSelector":"59171fc1","id":1493,"name":"ERC721EnumerableForbiddenBatchMint","nameLocation":"1331:34:10","nodeType":"ErrorDefinition","parameters":{"id":1492,"nodeType":"ParameterList","parameters":[],"src":"1365:2:10"},"src":"1325:43:10"},{"baseFunctions":[462,4909],"body":{"id":1516,"nodeType":"Block","src":"1543:114:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1560:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1506,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"1580:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1997_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1997_$","typeString":"type(contract IERC721Enumerable)"}],"id":1505,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1575:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1575:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$1997","typeString":"type(contract IERC721Enumerable)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1599:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1575:35:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1560:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1512,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1638:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1510,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1614:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1839_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":462,"src":"1614:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1614:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1560:90:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1503,"id":1515,"nodeType":"Return","src":"1553:97:10"}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"1374:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1444:17:10","nodeType":"FunctionDefinition","overrides":{"id":1500,"nodeType":"OverrideSpecifier","overrides":[{"id":1498,"name":"IERC165","nameLocations":["1511:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"1511:7:10"},{"id":1499,"name":"ERC721","nameLocations":["1520:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"1520:6:10"}],"src":"1502:25:10"},"parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"interfaceId","nameLocation":"1469:11:10","nodeType":"VariableDeclaration","scope":1517,"src":"1462:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1495,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1462:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1461:20:10"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"1537:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1501,"name":"bool","nodeType":"ElementaryTypeName","src":"1537:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1536:6:10"},"scope":1839,"src":"1435:222:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1988],"body":{"id":1545,"nodeType":"Block","src":"1833:158:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1527,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1847:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1529,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1866:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1528,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"1856:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1847:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1538,"nodeType":"IfStatement","src":"1843:99:10","trueBody":{"id":1537,"nodeType":"Block","src":"1874:68:10","statements":[{"errorCall":{"arguments":[{"id":1533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1918:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1534,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1925:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1532,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1895:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1536,"nodeType":"RevertStatement","src":"1888:43:10"}]}},{"expression":{"baseExpression":{"baseExpression":{"id":1539,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"1958:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1541,"indexExpression":{"id":1540,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1971:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1958:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1543,"indexExpression":{"id":1542,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1978:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1958:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1526,"id":1544,"nodeType":"Return","src":"1951:33:10"}]},"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"1663:68:10","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1745:19:10","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"owner","nameLocation":"1773:5:10","nodeType":"VariableDeclaration","scope":1546,"src":"1765:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"1765:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"index","nameLocation":"1788:5:10","nodeType":"VariableDeclaration","scope":1546,"src":"1780:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1764:30:10"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"1824:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:9:10"},"scope":1839,"src":"1736:255:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1978],"body":{"id":1555,"nodeType":"Block","src":"2123:41:10","statements":[{"expression":{"expression":{"id":1552,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2140:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2151:6:10","memberName":"length","nodeType":"MemberAccess","src":"2140:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1551,"id":1554,"nodeType":"Return","src":"2133:24:10"}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1997:60:10","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2071:11:10","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"2082:2:10"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1556,"src":"2114:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2113:9:10"},"scope":1839,"src":"2062:102:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1996],"body":{"id":1582,"nodeType":"Block","src":"2311:151:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2325:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1565,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"2334:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1577,"nodeType":"IfStatement","src":"2321:101:10","trueBody":{"id":1576,"nodeType":"Block","src":"2349:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2401:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2393:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"2393:7:10","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1573,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2405:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1568,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"2370:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1575,"nodeType":"RevertStatement","src":"2363:48:10"}]}},{"expression":{"baseExpression":{"id":1578,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2438:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1580,"indexExpression":{"id":1579,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2449:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2438:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1563,"id":1581,"nodeType":"Return","src":"2431:24:10"}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"2170:61:10","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":1583,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"2245:12:10","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"index","nameLocation":"2266:5:10","nodeType":"VariableDeclaration","scope":1583,"src":"2258:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2258:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2257:15:10"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1583,"src":"2302:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2302:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:9:10"},"scope":1839,"src":"2236:226:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[931],"body":{"id":1651,"nodeType":"Block","src":"2622:521:10","statements":[{"assignments":[1597],"declarations":[{"constant":false,"id":1597,"mutability":"mutable","name":"previousOwner","nameLocation":"2640:13:10","nodeType":"VariableDeclaration","scope":1651,"src":"2632:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1604,"initialValue":{"arguments":[{"id":1600,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2670:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1601,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"2674:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1602,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"2683:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1598,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2656:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1839_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2662:7:10","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":931,"src":"2656:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2656:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2632:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2703:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2728:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2720:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"2720:7:10","typeDescriptions":{}}},"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2720:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2703:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1616,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2807:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1617,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2824:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2807:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1625,"nodeType":"IfStatement","src":"2803:106:10","trueBody":{"id":1624,"nodeType":"Block","src":"2828:81:10","statements":[{"expression":{"arguments":[{"id":1620,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2875:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1621,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"2890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1619,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"2842:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"ExpressionStatement","src":"2842:56:10"}]}},"id":1626,"nodeType":"IfStatement","src":"2699:210:10","trueBody":{"id":1615,"nodeType":"Block","src":"2732:65:10","statements":[{"expression":{"arguments":[{"id":1612,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"2778:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1611,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"2746:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1614,"nodeType":"ExpressionStatement","src":"2746:40:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2922:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2928:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"2928:7:10","typeDescriptions":{}}},"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2922:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1638,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"3020:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3037:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1647,"nodeType":"IfStatement","src":"3016:90:10","trueBody":{"id":1646,"nodeType":"Block","src":"3041:65:10","statements":[{"expression":{"arguments":[{"id":1642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3083:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1643,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"3087:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1641,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"3055:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"3055:40:10"}]}},"id":1648,"nodeType":"IfStatement","src":"2918:188:10","trueBody":{"id":1637,"nodeType":"Block","src":"2940:70:10","statements":[{"expression":{"arguments":[{"id":1634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"2991:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1633,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"2954:36:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1636,"nodeType":"ExpressionStatement","src":"2954:45:10"}]}},{"expression":{"id":1649,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"3123:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1595,"id":1650,"nodeType":"Return","src":"3116:20:10"}]},"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"2468:45:10","text":" @dev See {ERC721-_update}."},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2527:7:10","nodeType":"FunctionDefinition","overrides":{"id":1592,"nodeType":"OverrideSpecifier","overrides":[],"src":"2595:8:10"},"parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"to","nameLocation":"2543:2:10","nodeType":"VariableDeclaration","scope":1652,"src":"2535:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"2535:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:10","nodeType":"VariableDeclaration","scope":1652,"src":"2547:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"auth","nameLocation":"2572:4:10","nodeType":"VariableDeclaration","scope":1652,"src":"2564:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2534:43:10"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"2613:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"2613:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2612:9:10"},"scope":1839,"src":"2518:625:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1682,"nodeType":"Block","src":"3511:140:10","statements":[{"assignments":[1661],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"length","nameLocation":"3529:6:10","nodeType":"VariableDeclaration","scope":1682,"src":"3521:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3548:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1662,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3538:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3554:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3538:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3521:34:10"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1668,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"3565:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1671,"indexExpression":{"id":1669,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3578:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3565:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1672,"indexExpression":{"id":1670,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3582:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3565:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3592:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3565:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"3565:34:10"},{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1676,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"3609:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1678,"indexExpression":{"id":1677,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3627:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3609:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1679,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3638:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3609:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ExpressionStatement","src":"3609:35:10"}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"3149:283:10","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":1683,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3446:27:10","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"to","nameLocation":"3482:2:10","nodeType":"VariableDeclaration","scope":1683,"src":"3474:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"tokenId","nameLocation":"3494:7:10","nodeType":"VariableDeclaration","scope":1683,"src":"3486:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3473:29:10"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"3511:0:10"},"scope":1839,"src":"3437:214:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1702,"nodeType":"Block","src":"3912:95:10","statements":[{"expression":{"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1689,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"3922:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1691,"indexExpression":{"id":1690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3938:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3922:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1692,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3949:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3960:6:10","memberName":"length","nodeType":"MemberAccess","src":"3949:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3922:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1695,"nodeType":"ExpressionStatement","src":"3922:44:10"},{"expression":{"arguments":[{"id":1699,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3992:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1696,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3976:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3987:4:10","memberName":"push","nodeType":"MemberAccess","src":"3976:15:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3976:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1701,"nodeType":"ExpressionStatement","src":"3976:24:10"}]},"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"3657:184:10","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3855:31:10","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"tokenId","nameLocation":"3895:7:10","nodeType":"VariableDeclaration","scope":1703,"src":"3887:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"3887:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3886:17:10"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[],"src":"3912:0:10"},"scope":1839,"src":"3846:161:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1764,"nodeType":"Block","src":"4705:974:10","statements":[{"assignments":[1712],"declarations":[{"constant":false,"id":1712,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4894:14:10","nodeType":"VariableDeclaration","scope":1764,"src":"4886:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"4886:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1716,"initialValue":{"arguments":[{"id":1714,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4921:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1713,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"4911:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4886:40:10"},{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"tokenIndex","nameLocation":"4944:10:10","nodeType":"VariableDeclaration","scope":1764,"src":"4936:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"4936:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1722,"initialValue":{"baseExpression":{"id":1719,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"4957:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1721,"indexExpression":{"id":1720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4975:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4957:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4936:47:10"},{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"_ownedTokensByOwner","nameLocation":"5036:19:10","nodeType":"VariableDeclaration","scope":1764,"src":"4994:61:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1725,"keyName":"index","keyNameLocation":"5010:5:10","keyType":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"5002:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4994:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"5019:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"id":1730,"initialValue":{"baseExpression":{"id":1727,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"5058:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1729,"indexExpression":{"id":1728,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"5071:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5058:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4994:82:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1731,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5180:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1732,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5194:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5180:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1753,"nodeType":"IfStatement","src":"5176:325:10","trueBody":{"id":1752,"nodeType":"Block","src":"5210:291:10","statements":[{"assignments":[1735],"declarations":[{"constant":false,"id":1735,"mutability":"mutable","name":"lastTokenId","nameLocation":"5232:11:10","nodeType":"VariableDeclaration","scope":1752,"src":"5224:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"5224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1739,"initialValue":{"baseExpression":{"id":1736,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5246:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1738,"indexExpression":{"id":1737,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5266:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5246:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5224:57:10"},{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1740,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5296:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1742,"indexExpression":{"id":1741,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5316:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5296:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1743,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"5330:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5296:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"nodeType":"ExpressionStatement","src":"5296:45:10"},{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1746,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"5413:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1748,"indexExpression":{"id":1747,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"5431:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5413:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1749,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5446:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5413:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"nodeType":"ExpressionStatement","src":"5413:43:10"}]}},{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5587:33:10","subExpression":{"baseExpression":{"id":1754,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"5594:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1756,"indexExpression":{"id":1755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"5612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5594:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"ExpressionStatement","src":"5587:33:10"},{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5630:42:10","subExpression":{"baseExpression":{"id":1759,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5637:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1761,"indexExpression":{"id":1760,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5657:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5637:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"ExpressionStatement","src":"5630:42:10"}]},"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"4013:606:10","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4633:32:10","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"from","nameLocation":"4674:4:10","nodeType":"VariableDeclaration","scope":1765,"src":"4666:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"4666:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"tokenId","nameLocation":"4688:7:10","nodeType":"VariableDeclaration","scope":1765,"src":"4680:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"4680:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4665:31:10"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[],"src":"4705:0:10"},"scope":1839,"src":"4624:1055:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1812,"nodeType":"Block","src":"6038:990:10","statements":[{"assignments":[1772],"declarations":[{"constant":false,"id":1772,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6224:14:10","nodeType":"VariableDeclaration","scope":1812,"src":"6216:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1777,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1773,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6241:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6252:6:10","memberName":"length","nodeType":"MemberAccess","src":"6241:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6261:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6241:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:46:10"},{"assignments":[1779],"declarations":[{"constant":false,"id":1779,"mutability":"mutable","name":"tokenIndex","nameLocation":"6280:10:10","nodeType":"VariableDeclaration","scope":1812,"src":"6272:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"6272:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1783,"initialValue":{"baseExpression":{"id":1780,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"6293:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1782,"indexExpression":{"id":1781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"6309:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6293:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6272:45:10"},{"assignments":[1785],"declarations":[{"constant":false,"id":1785,"mutability":"mutable","name":"lastTokenId","nameLocation":"6647:11:10","nodeType":"VariableDeclaration","scope":1812,"src":"6639:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"6639:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1789,"initialValue":{"baseExpression":{"id":1786,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6661:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1788,"indexExpression":{"id":1787,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"6672:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6661:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6639:48:10"},{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1790,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6698:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1792,"indexExpression":{"id":1791,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"6709:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6698:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1793,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"6723:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6698:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1795,"nodeType":"ExpressionStatement","src":"6698:36:10"},{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1796,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"6802:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1798,"indexExpression":{"id":1797,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"6818:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6802:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1799,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"6833:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6802:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1801,"nodeType":"ExpressionStatement","src":"6802:41:10"},{"expression":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6964:31:10","subExpression":{"baseExpression":{"id":1802,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"6971:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1804,"indexExpression":{"id":1803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"6987:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6971:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"ExpressionStatement","src":"6964:31:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1807,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"7005:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7016:3:10","memberName":"pop","nodeType":"MemberAccess","src":"7005:14:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7005:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1811,"nodeType":"ExpressionStatement","src":"7005:16:10"}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"5685:277:10","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5976:36:10","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"tokenId","nameLocation":"6021:7:10","nodeType":"VariableDeclaration","scope":1813,"src":"6013:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6012:17:10"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"6038:0:10"},"scope":1839,"src":"5967:1061:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[841],"body":{"id":1837,"nodeType":"Block","src":"7230:149:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7244:6:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7253:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7244:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1829,"nodeType":"IfStatement","src":"7240:84:10","trueBody":{"id":1828,"nodeType":"Block","src":"7256:68:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1825,"name":"ERC721EnumerableForbiddenBatchMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"7277:34:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7277:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1827,"nodeType":"RevertStatement","src":"7270:43:10"}]}},{"expression":{"arguments":[{"id":1833,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"7356:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1834,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7365:6:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1830,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7333:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1839_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7339:16:10","memberName":"_increaseBalance","nodeType":"MemberAccess","referencedDeclaration":841,"src":"7333:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$","typeString":"function (address,uint128)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7333:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"7333:39:10"}]},"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"7034:106:10","text":" See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"},"id":1838,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7154:16:10","nodeType":"FunctionDefinition","overrides":{"id":1820,"nodeType":"OverrideSpecifier","overrides":[],"src":"7221:8:10"},"parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"account","nameLocation":"7179:7:10","nodeType":"VariableDeclaration","scope":1838,"src":"7171:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"7171:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"amount","nameLocation":"7196:6:10","nodeType":"VariableDeclaration","scope":1838,"src":"7188:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1817,"name":"uint128","nodeType":"ElementaryTypeName","src":"7188:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7170:33:10"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[],"src":"7230:0:10"},"scope":1839,"src":"7145:234:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1840,"src":"708:6673:10","usedErrors":[272,277,286,291,296,303,308,313,1490,1493],"usedEvents":[1334,1343,1352]}],"src":"128:7254:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1318],"ERC721URIStorage":[1965],"IERC165":[4910],"IERC4906":[195],"Strings":[3112]},"id":1966,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1841,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1966,"sourceUnit":1319,"src":"154:37:11","symbolAliases":[{"foreign":{"id":1842,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"162:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1966,"sourceUnit":3113,"src":"192:51:11","symbolAliases":[{"foreign":{"id":1844,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"200:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1966,"sourceUnit":196,"src":"244:58:11","symbolAliases":[{"foreign":{"id":1846,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"252:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1966,"sourceUnit":152,"src":"303:56:11","symbolAliases":[{"foreign":{"id":1848,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"311:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1851,"name":"IERC4906","nameLocations":["470:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":195,"src":"470:8:11"},"id":1852,"nodeType":"InheritanceSpecifier","src":"470:8:11"},{"baseName":{"id":1853,"name":"ERC721","nameLocations":["480:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"480:6:11"},"id":1854,"nodeType":"InheritanceSpecifier","src":"480:6:11"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"361:70:11","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1965,"linearizedBaseContracts":[1965,1318,314,2025,195,1435,4898,4910,2399],"name":"ERC721URIStorage","nameLocation":"450:16:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1857,"libraryName":{"id":1855,"name":"Strings","nameLocations":["499:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"499:7:11"},"nodeType":"UsingForDirective","src":"493:26:11","typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1863,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:11","nodeType":"VariableDeclaration","scope":1965,"src":"707:65:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1858,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:11","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1859,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:11","typeDescriptions":{}}},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1867,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:11","nodeType":"VariableDeclaration","scope":1965,"src":"818:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1866,"keyName":"tokenId","keyNameLocation":"834:7:11","keyType":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1865,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[462,4909],"body":{"id":1887,"nodeType":"Block","src":"1046:99:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1063:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1879,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"1078:20:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1883,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1126:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1881,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1965_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":462,"src":"1102:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1877,"id":1886,"nodeType":"Return","src":"1056:82:11"}]},"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"878:55:11","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":1888,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:11","nodeType":"FunctionDefinition","overrides":{"id":1874,"nodeType":"OverrideSpecifier","overrides":[{"id":1872,"name":"ERC721","nameLocations":["1014:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"1014:6:11"},{"id":1873,"name":"IERC165","nameLocations":["1022:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"1022:7:11"}],"src":"1005:25:11"},"parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:11","nodeType":"VariableDeclaration","scope":1888,"src":"965:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1869,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:11"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1888,"src":"1040:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1875,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:11"},"scope":1965,"src":"938:207:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[557],"body":{"id":1944,"nodeType":"Block","src":"1299:505:11","statements":[{"expression":{"arguments":[{"id":1898,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1897,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"1309:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1900,"nodeType":"ExpressionStatement","src":"1309:22:11"},{"assignments":[1902],"declarations":[{"constant":false,"id":1902,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:11","nodeType":"VariableDeclaration","scope":1944,"src":"1342:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1901,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1906,"initialValue":{"baseExpression":{"id":1903,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1368:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1905,"indexExpression":{"id":1904,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1379:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:11"},{"assignments":[1908],"declarations":[{"constant":false,"id":1908,"mutability":"mutable","name":"base","nameLocation":"1411:4:11","nodeType":"VariableDeclaration","scope":1944,"src":"1397:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1907,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1911,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1909,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"1418:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1914,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1507:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1912,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:11","typeDescriptions":{}}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:11","memberName":"length","nodeType":"MemberAccess","src":"1501:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1922,"nodeType":"IfStatement","src":"1497:70:11","trueBody":{"id":1921,"nodeType":"Block","src":"1526:41:11","statements":[{"expression":{"id":1919,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"1547:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1896,"id":1920,"nodeType":"Return","src":"1540:16:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1925,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"1672:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:11","typeDescriptions":{}}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:11","memberName":"length","nodeType":"MemberAccess","src":"1666:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1938,"nodeType":"IfStatement","src":"1662:95:11","trueBody":{"id":1937,"nodeType":"Block","src":"1695:62:11","statements":[{"expression":{"arguments":[{"id":1933,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1730:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1934,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"1736:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1930,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:11","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:11","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1896,"id":1936,"nodeType":"Return","src":"1709:37:11"}]}},{"expression":{"arguments":[{"id":1941,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1789:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1939,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1965_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:11","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":557,"src":"1774:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1896,"id":1943,"nodeType":"Return","src":"1767:30:11"}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"1151:55:11","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:11","nodeType":"FunctionDefinition","overrides":{"id":1893,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:11"},"parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:11","nodeType":"VariableDeclaration","scope":1945,"src":"1229:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:11"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"1284:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1894,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:11"},"scope":1965,"src":"1211:593:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1963,"nodeType":"Block","src":"2004:86:11","statements":[{"expression":{"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1953,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"2014:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1955,"indexExpression":{"id":1954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"2025:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2014:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1956,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2036:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2014:31:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1958,"nodeType":"ExpressionStatement","src":"2014:31:11"},{"eventCall":{"arguments":[{"id":1960,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"2075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1959,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2060:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1962,"nodeType":"EmitStatement","src":"2055:28:11"}]},"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"1810:108:11","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1932:12:11","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:11","nodeType":"VariableDeclaration","scope":1964,"src":"1945:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1950,"mutability":"mutable","name":"_tokenURI","nameLocation":"1976:9:11","nodeType":"VariableDeclaration","scope":1964,"src":"1962:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1944:42:11"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[],"src":"2004:0:11"},"scope":1965,"src":"1923:167:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1966,"src":"432:1660:11","usedErrors":[272,277,286,291,296,303,308,313],"usedEvents":[187,194,1334,1343,1352]}],"src":"128:1965:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC721":[1435],"IERC721Enumerable":[1997]},"id":1998,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1967,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1998,"sourceUnit":1436,"src":"155:39:12","symbolAliases":[{"foreign":{"id":1968,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"163:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1971,"name":"IERC721","nameLocations":["364:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"364:7:12"},"id":1972,"nodeType":"InheritanceSpecifier","src":"364:7:12"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1970,"nodeType":"StructuredDocumentation","src":"196:136:12","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1997,"linearizedBaseContracts":[1997,1435,4910],"name":"IERC721Enumerable","nameLocation":"343:17:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"378:82:12","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1978,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"474:11:12","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[],"src":"485:2:12"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1978,"src":"511:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"510:9:12"},"scope":1997,"src":"465:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"526:171:12","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1988,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"711:19:12","nodeType":"FunctionDefinition","parameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"owner","nameLocation":"739:5:12","nodeType":"VariableDeclaration","scope":1988,"src":"731:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"index","nameLocation":"754:5:12","nodeType":"VariableDeclaration","scope":1988,"src":"746:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"730:30:12"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"784:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:9:12"},"scope":1997,"src":"702:91:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"799:164:12","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1996,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"977:12:12","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"index","nameLocation":"998:5:12","nodeType":"VariableDeclaration","scope":1996,"src":"990:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"989:15:12"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1996,"src":"1028:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:9:12"},"scope":1997,"src":"968:69:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1998,"src":"333:706:12","usedErrors":[],"usedEvents":[1334,1343,1352]}],"src":"129:911:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1435],"IERC721Metadata":[2025]},"id":2026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1999,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2026,"sourceUnit":1436,"src":"153:39:13","symbolAliases":[{"foreign":{"id":2000,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"161:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2003,"name":"IERC721","nameLocations":["357:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"357:7:13"},"id":2004,"nodeType":"InheritanceSpecifier","src":"357:7:13"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"194:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2025,"linearizedBaseContracts":[2025,1435,4910],"name":"IERC721Metadata","nameLocation":"338:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"371:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2010,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:13","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[],"src":"447:2:13"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2010,"src":"473:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2007,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:13"},"scope":2025,"src":"434:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"494:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2016,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:13","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"574:2:13"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2016,"src":"600:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:13"},"scope":2025,"src":"559:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"621:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2024,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:13","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:13","nodeType":"VariableDeclaration","scope":2024,"src":"734:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:13"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"774:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2021,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:13"},"scope":2025,"src":"716:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2026,"src":"328:463:13","usedErrors":[],"usedEvents":[1334,1343,1352]}],"src":"127:665:13"},"id":13},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2102],"IERC721Errors":[314],"IERC721Receiver":[1453]},"id":2103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2027,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2103,"sourceUnit":1454,"src":"144:55:14","symbolAliases":[{"foreign":{"id":2028,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"152:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2031,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2103,"sourceUnit":362,"src":"200:69:14","symbolAliases":[{"foreign":{"id":2030,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"208:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"271:159:14","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2102,"linearizedBaseContracts":[2102],"name":"ERC721Utils","nameLocation":"439:11:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2100,"nodeType":"Block","src":"1151:758:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2046,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1165:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:14","memberName":"code","nodeType":"MemberAccess","src":"1165:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:14","memberName":"length","nodeType":"MemberAccess","src":"1165:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"1161:742:14","trueBody":{"id":2098,"nodeType":"Block","src":"1185:718:14","statements":[{"clauses":[{"block":{"id":2076,"nodeType":"Block","src":"1295:214:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2063,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"1317:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2064,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1327:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1453_$","typeString":"type(contract IERC721Receiver)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1452,"src":"1327:32:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:14","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2075,"nodeType":"IfStatement","src":"1313:182:14","trueBody":{"id":2074,"nodeType":"Block","src":"1370:125:14","statements":[{"errorCall":{"arguments":[{"id":2071,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1473:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2068,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1437:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$314_$","typeString":"type(contract IERC721Errors)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":296,"src":"1437:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2073,"nodeType":"RevertStatement","src":"1430:46:14"}]}}]},"errorName":"","id":2077,"nodeType":"TryCatchClause","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"retval","nameLocation":"1287:6:14","nodeType":"VariableDeclaration","scope":2077,"src":"1280:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2060,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:14"},"src":"1271:238:14"},{"block":{"id":2095,"nodeType":"Block","src":"1538:355:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2081,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1560:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:14","memberName":"length","nodeType":"MemberAccess","src":"1560:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2093,"nodeType":"Block","src":"1728:151:14","statements":[{"AST":{"nativeSrc":"1775:86:14","nodeType":"YulBlock","src":"1775:86:14","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1812:2:14","nodeType":"YulLiteral","src":"1812:2:14","type":"","value":"32"},{"name":"reason","nativeSrc":"1816:6:14","nodeType":"YulIdentifier","src":"1816:6:14"}],"functionName":{"name":"add","nativeSrc":"1808:3:14","nodeType":"YulIdentifier","src":"1808:3:14"},"nativeSrc":"1808:15:14","nodeType":"YulFunctionCall","src":"1808:15:14"},{"arguments":[{"name":"reason","nativeSrc":"1831:6:14","nodeType":"YulIdentifier","src":"1831:6:14"}],"functionName":{"name":"mload","nativeSrc":"1825:5:14","nodeType":"YulIdentifier","src":"1825:5:14"},"nativeSrc":"1825:13:14","nodeType":"YulFunctionCall","src":"1825:13:14"}],"functionName":{"name":"revert","nativeSrc":"1801:6:14","nodeType":"YulIdentifier","src":"1801:6:14"},"nativeSrc":"1801:38:14","nodeType":"YulFunctionCall","src":"1801:38:14"},"nativeSrc":"1801:38:14","nodeType":"YulExpressionStatement","src":"1801:38:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2079,"isOffset":false,"isSlot":false,"src":"1816:6:14","valueSize":1},{"declaration":2079,"isOffset":false,"isSlot":false,"src":"1831:6:14","valueSize":1}],"flags":["memory-safe"],"id":2092,"nodeType":"InlineAssembly","src":"1750:111:14"}]},"id":2094,"nodeType":"IfStatement","src":"1556:323:14","trueBody":{"id":2091,"nodeType":"Block","src":"1580:142:14","statements":[{"errorCall":{"arguments":[{"id":2088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1700:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2085,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1664:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$314_$","typeString":"type(contract IERC721Errors)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":296,"src":"1664:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2090,"nodeType":"RevertStatement","src":"1657:46:14"}]}}]},"errorName":"","id":2096,"nodeType":"TryCatchClause","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"reason","nameLocation":"1530:6:14","nodeType":"VariableDeclaration","scope":2096,"src":"1517:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2078,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:14"},"src":"1510:383:14"}],"externalCall":{"arguments":[{"id":2055,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"1240:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2056,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1250:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2057,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2058,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1265:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2052,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1219:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2051,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1203:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1453_$","typeString":"type(contract IERC721Receiver)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1453","typeString":"contract IERC721Receiver"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1452,"src":"1203:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2097,"nodeType":"TryStatement","src":"1199:694:14"}]}}]},"documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"457:523:14","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2101,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:14","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"operator","nameLocation":"1033:8:14","nodeType":"VariableDeclaration","scope":2101,"src":"1025:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"from","nameLocation":"1059:4:14","nodeType":"VariableDeclaration","scope":2101,"src":"1051:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"to","nameLocation":"1081:2:14","nodeType":"VariableDeclaration","scope":2101,"src":"1073:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:14","nodeType":"VariableDeclaration","scope":2101,"src":"1093:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"data","nameLocation":"1131:4:14","nodeType":"VariableDeclaration","scope":2101,"src":"1118:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2042,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:14"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[],"src":"1151:0:14"},"scope":2102,"src":"985:924:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2103,"src":"431:1480:14","usedErrors":[],"usedEvents":[]}],"src":"118:1794:14"},"id":14},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","exportedSymbols":{"ERC165":[4898],"ERC2981":[2369],"IERC165":[4910],"IERC2981":[171]},"id":2370,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2104,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:15"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"../../interfaces/IERC2981.sol","id":2106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2370,"sourceUnit":172,"src":"134:55:15","symbolAliases":[{"foreign":{"id":2105,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"142:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":2109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2370,"sourceUnit":4899,"src":"190:69:15","symbolAliases":[{"foreign":{"id":2107,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"198:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2108,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"207:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2111,"name":"IERC2981","nameLocations":["1135:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":171,"src":"1135:8:15"},"id":2112,"nodeType":"InheritanceSpecifier","src":"1135:8:15"},{"baseName":{"id":2113,"name":"ERC165","nameLocations":["1145:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"1145:6:15"},"id":2114,"nodeType":"InheritanceSpecifier","src":"1145:6:15"}],"canonicalName":"ERC2981","contractDependencies":[],"contractKind":"contract","documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"261:844:15","text":" @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."},"fullyImplemented":true,"id":2369,"linearizedBaseContracts":[2369,4898,171,4910],"name":"ERC2981","nameLocation":"1124:7:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC2981.RoyaltyInfo","id":2119,"members":[{"constant":false,"id":2116,"mutability":"mutable","name":"receiver","nameLocation":"1195:8:15","nodeType":"VariableDeclaration","scope":2119,"src":"1187:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"royaltyFraction","nameLocation":"1220:15:15","nodeType":"VariableDeclaration","scope":2119,"src":"1213:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2117,"name":"uint96","nodeType":"ElementaryTypeName","src":"1213:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RoyaltyInfo","nameLocation":"1165:11:15","nodeType":"StructDefinition","scope":2369,"src":"1158:84:15","visibility":"public"},{"constant":false,"id":2122,"mutability":"mutable","name":"_defaultRoyaltyInfo","nameLocation":"1268:19:15","nodeType":"VariableDeclaration","scope":2369,"src":"1248:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":2121,"nodeType":"UserDefinedTypeName","pathNode":{"id":2120,"name":"RoyaltyInfo","nameLocations":["1248:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"1248:11:15"},"referencedDeclaration":2119,"src":"1248:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"private"},{"constant":false,"id":2127,"mutability":"mutable","name":"_tokenRoyaltyInfo","nameLocation":"1341:17:15","nodeType":"VariableDeclaration","scope":2369,"src":"1293:65:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"typeName":{"id":2126,"keyName":"tokenId","keyNameLocation":"1309:7:15","keyType":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1293:39:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2125,"nodeType":"UserDefinedTypeName","pathNode":{"id":2124,"name":"RoyaltyInfo","nameLocations":["1320:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"1320:11:15"},"referencedDeclaration":2119,"src":"1320:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}}},"visibility":"private"},{"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"1365:96:15","text":" @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"6f483d09","id":2134,"name":"ERC2981InvalidDefaultRoyalty","nameLocation":"1472:28:15","nodeType":"ErrorDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"numerator","nameLocation":"1509:9:15","nodeType":"VariableDeclaration","scope":2134,"src":"1501:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"denominator","nameLocation":"1528:11:15","nodeType":"VariableDeclaration","scope":2134,"src":"1520:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1500:40:15"},"src":"1466:75:15"},{"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"1547:64:15","text":" @dev The default royalty receiver is invalid."},"errorSelector":"b6d9900a","id":2139,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nameLocation":"1622:36:15","nodeType":"ErrorDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"receiver","nameLocation":"1667:8:15","nodeType":"VariableDeclaration","scope":2139,"src":"1659:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"1659:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1658:18:15"},"src":"1616:61:15"},{"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"1683:114:15","text":" @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"dfd1fc1b","id":2148,"name":"ERC2981InvalidTokenRoyalty","nameLocation":"1808:26:15","nodeType":"ErrorDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"tokenId","nameLocation":"1843:7:15","nodeType":"VariableDeclaration","scope":2148,"src":"1835:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"numerator","nameLocation":"1860:9:15","nodeType":"VariableDeclaration","scope":2148,"src":"1852:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"denominator","nameLocation":"1879:11:15","nodeType":"VariableDeclaration","scope":2148,"src":"1871:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1871:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1834:57:15"},"src":"1802:90:15"},{"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"1898:70:15","text":" @dev The royalty receiver for `tokenId` is invalid."},"errorSelector":"969f0852","id":2155,"name":"ERC2981InvalidTokenRoyaltyReceiver","nameLocation":"1979:34:15","nodeType":"ErrorDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"tokenId","nameLocation":"2022:7:15","nodeType":"VariableDeclaration","scope":2155,"src":"2014:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"receiver","nameLocation":"2039:8:15","nodeType":"VariableDeclaration","scope":2155,"src":"2031:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2152,"name":"address","nodeType":"ElementaryTypeName","src":"2031:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:35:15"},"src":"1973:76:15"},{"baseFunctions":[4897,4909],"body":{"id":2178,"nodeType":"Block","src":"2224:105:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2241:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2168,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2261:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$171_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$171_$","typeString":"type(contract IERC2981)"}],"id":2167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2256:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2256:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$171","typeString":"type(contract IERC2981)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2271:11:15","memberName":"interfaceId","nodeType":"MemberAccess","src":"2256:26:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2241:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2174,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2310:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2172,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2286:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2981_$2369_$","typeString":"type(contract super ERC2981)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2292:17:15","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4897,"src":"2286:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2241:81:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2165,"id":2177,"nodeType":"Return","src":"2234:88:15"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"2055:56:15","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2125:17:15","nodeType":"FunctionDefinition","overrides":{"id":2162,"nodeType":"OverrideSpecifier","overrides":[{"id":2160,"name":"IERC165","nameLocations":["2192:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"2192:7:15"},{"id":2161,"name":"ERC165","nameLocations":["2201:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"2201:6:15"}],"src":"2183:25:15"},"parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"interfaceId","nameLocation":"2150:11:15","nodeType":"VariableDeclaration","scope":2179,"src":"2143:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2157,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2143:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2142:20:15"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2179,"src":"2218:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2163,"name":"bool","nodeType":"ElementaryTypeName","src":"2218:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2217:6:15"},"scope":2369,"src":"2116:213:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[170],"body":{"id":2240,"nodeType":"Block","src":"2521:515:15","statements":[{"assignments":[2193],"declarations":[{"constant":false,"id":2193,"mutability":"mutable","name":"_royaltyInfo","nameLocation":"2551:12:15","nodeType":"VariableDeclaration","scope":2240,"src":"2531:32:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":2192,"nodeType":"UserDefinedTypeName","pathNode":{"id":2191,"name":"RoyaltyInfo","nameLocations":["2531:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2531:11:15"},"referencedDeclaration":2119,"src":"2531:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"internal"}],"id":2197,"initialValue":{"baseExpression":{"id":2194,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2566:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2196,"indexExpression":{"id":2195,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"2584:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2566:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2531:61:15"},{"assignments":[2199],"declarations":[{"constant":false,"id":2199,"mutability":"mutable","name":"royaltyReceiver","nameLocation":"2610:15:15","nodeType":"VariableDeclaration","scope":2240,"src":"2602:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2202,"initialValue":{"expression":{"id":2200,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2628:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":2201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2641:8:15","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2628:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2602:47:15"},{"assignments":[2204],"declarations":[{"constant":false,"id":2204,"mutability":"mutable","name":"royaltyFraction","nameLocation":"2666:15:15","nodeType":"VariableDeclaration","scope":2240,"src":"2659:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2203,"name":"uint96","nodeType":"ElementaryTypeName","src":"2659:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2207,"initialValue":{"expression":{"id":2205,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2684:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":2206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2697:15:15","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2684:28:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2659:53:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2727:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2754:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2746:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:15","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2727:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2225,"nodeType":"IfStatement","src":"2723:173:15","trueBody":{"id":2224,"nodeType":"Block","src":"2758:138:15","statements":[{"expression":{"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2214,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2772:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2215,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2790:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2810:8:15","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2790:28:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2772:46:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2218,"nodeType":"ExpressionStatement","src":"2772:46:15"},{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2219,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2832:15:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2220,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2850:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2870:15:15","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2850:35:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2832:53:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2223,"nodeType":"ExpressionStatement","src":"2832:53:15"}]}},{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"royaltyAmount","nameLocation":"2914:13:15","nodeType":"VariableDeclaration","scope":2240,"src":"2906:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"2906:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2235,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"2931:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2229,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2943:15:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2931:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2930:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2232,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"2962:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2962:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2930:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2906:73:15"},{"expression":{"components":[{"id":2236,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2998:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2237,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"3015:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2997:32:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":2190,"id":2239,"nodeType":"Return","src":"2990:39:15"}]},"documentation":{"id":2180,"nodeType":"StructuredDocumentation","src":"2335:39:15","text":" @inheritdoc IERC2981"},"functionSelector":"2a55205a","id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"2388:11:15","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"tokenId","nameLocation":"2417:7:15","nodeType":"VariableDeclaration","scope":2241,"src":"2409:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"salePrice","nameLocation":"2442:9:15","nodeType":"VariableDeclaration","scope":2241,"src":"2434:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2434:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2399:58:15"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"receiver","nameLocation":"2495:8:15","nodeType":"VariableDeclaration","scope":2241,"src":"2487:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"amount","nameLocation":"2513:6:15","nodeType":"VariableDeclaration","scope":2241,"src":"2505:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2486:34:15"},"scope":2369,"src":"2379:657:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2249,"nodeType":"Block","src":"3377:29:15","statements":[{"expression":{"hexValue":"3130303030","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3394:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"functionReturnParameters":2246,"id":2248,"nodeType":"Return","src":"3387:12:15"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"3042:264:15","text":" @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"_feeDenominator","nameLocation":"3320:15:15","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[],"src":"3335:2:15"},"returnParameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"3369:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2244,"name":"uint96","nodeType":"ElementaryTypeName","src":"3369:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3368:8:15"},"scope":2369,"src":"3311:95:15","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":2295,"nodeType":"Block","src":"3751:423:15","statements":[{"assignments":[2259],"declarations":[{"constant":false,"id":2259,"mutability":"mutable","name":"denominator","nameLocation":"3769:11:15","nodeType":"VariableDeclaration","scope":2295,"src":"3761:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3761:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2262,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2260,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"3783:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3783:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3761:39:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3814:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2264,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"3829:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3814:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2272,"nodeType":"IfStatement","src":"3810:173:15","trueBody":{"id":2271,"nodeType":"Block","src":"3842:141:15","statements":[{"errorCall":{"arguments":[{"id":2267,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3946:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2268,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"3960:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2266,"name":"ERC2981InvalidDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"3917:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2270,"nodeType":"RevertStatement","src":"3910:62:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2273,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"3996:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4016:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4008:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:15","typeDescriptions":{}}},"id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4008:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3996:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2287,"nodeType":"IfStatement","src":"3992:108:15","trueBody":{"id":2286,"nodeType":"Block","src":"4020:80:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4086:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4078:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2280,"name":"address","nodeType":"ElementaryTypeName","src":"4078:7:15","typeDescriptions":{}}},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4078:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2279,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"4041:36:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4041:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2285,"nodeType":"RevertStatement","src":"4034:55:15"}]}},{"expression":{"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2288,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4110:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2290,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"4144:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2291,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"4154:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2289,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"4132:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$2119_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"4110:57:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2294,"nodeType":"ExpressionStatement","src":"4110:57:15"}]},"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"3412:250:15","text":" @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":2296,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultRoyalty","nameLocation":"3676:18:15","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"receiver","nameLocation":"3703:8:15","nodeType":"VariableDeclaration","scope":2296,"src":"3695:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"feeNumerator","nameLocation":"3720:12:15","nodeType":"VariableDeclaration","scope":2296,"src":"3713:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2254,"name":"uint96","nodeType":"ElementaryTypeName","src":"3713:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3694:39:15"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[],"src":"3751:0:15"},"scope":2369,"src":"3667:507:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2303,"nodeType":"Block","src":"4295:43:15","statements":[{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4305:26:15","subExpression":{"id":2300,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4312:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2302,"nodeType":"ExpressionStatement","src":"4305:26:15"}]},"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"4180:60:15","text":" @dev Removes default royalty information."},"id":2304,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteDefaultRoyalty","nameLocation":"4254:21:15","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"4275:2:15"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"4295:0:15"},"scope":2369,"src":"4245:93:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2355,"nodeType":"Block","src":"4707:444:15","statements":[{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"denominator","nameLocation":"4725:11:15","nodeType":"VariableDeclaration","scope":2355,"src":"4717:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"4717:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2316,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4739:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4739:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4717:39:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4770:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2320,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"4785:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4770:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2329,"nodeType":"IfStatement","src":"4766:180:15","trueBody":{"id":2328,"nodeType":"Block","src":"4798:148:15","statements":[{"errorCall":{"arguments":[{"id":2323,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"4900:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2324,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4909:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2325,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"4923:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2322,"name":"ERC2981InvalidTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"4873:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256,uint256) pure returns (error)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2327,"nodeType":"RevertStatement","src":"4866:69:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"4959:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4979:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4971:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"4971:7:15","typeDescriptions":{}}},"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4971:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4959:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2345,"nodeType":"IfStatement","src":"4955:115:15","trueBody":{"id":2344,"nodeType":"Block","src":"4983:87:15","statements":[{"errorCall":{"arguments":[{"id":2337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"5039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5056:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5048:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"5048:7:15","typeDescriptions":{}}},"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5048:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2336,"name":"ERC2981InvalidTokenRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"5004:34:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (uint256,address) pure returns (error)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5004:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2343,"nodeType":"RevertStatement","src":"4997:62:15"}]}},{"expression":{"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2346,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"5080:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2348,"indexExpression":{"id":2347,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"5098:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5080:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2350,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"5121:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2351,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"5131:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2349,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"5109:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$2119_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5109:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"5080:64:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2354,"nodeType":"ExpressionStatement","src":"5080:64:15"}]},"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"4344:259:15","text":" @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":2356,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenRoyalty","nameLocation":"4617:16:15","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"tokenId","nameLocation":"4642:7:15","nodeType":"VariableDeclaration","scope":2356,"src":"4634:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"4634:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"receiver","nameLocation":"4659:8:15","nodeType":"VariableDeclaration","scope":2356,"src":"4651:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"4651:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"feeNumerator","nameLocation":"4676:12:15","nodeType":"VariableDeclaration","scope":2356,"src":"4669:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2310,"name":"uint96","nodeType":"ElementaryTypeName","src":"4669:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4633:56:15"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"4707:0:15"},"scope":2369,"src":"4608:543:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2367,"nodeType":"Block","src":"5319:50:15","statements":[{"expression":{"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5329:33:15","subExpression":{"baseExpression":{"id":2362,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"5336:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2364,"indexExpression":{"id":2363,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"5354:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5336:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2366,"nodeType":"ExpressionStatement","src":"5329:33:15"}]},"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"5157:95:15","text":" @dev Resets royalty information for the token id back to the global default."},"id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTokenRoyalty","nameLocation":"5266:18:15","nodeType":"FunctionDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"tokenId","nameLocation":"5293:7:15","nodeType":"VariableDeclaration","scope":2368,"src":"5285:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"5285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:17:15"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[],"src":"5319:0:15"},"scope":2369,"src":"5257:112:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2370,"src":"1106:4265:15","usedErrors":[2134,2139,2148,2155],"usedEvents":[]}],"src":"108:5264:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2399]},"id":2400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2371,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"127:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2399,"linearizedBaseContracts":[2399],"name":"Context","nameLocation":"642:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2380,"nodeType":"Block","src":"718:34:16","statements":[{"expression":{"expression":{"id":2377,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:16","memberName":"sender","nodeType":"MemberAccess","src":"735:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2376,"id":2379,"nodeType":"Return","src":"728:17:16"}]},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:16","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[],"src":"675:2:16"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"709:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:16"},"scope":2399,"src":"656:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2389,"nodeType":"Block","src":"825:32:16","statements":[{"expression":{"expression":{"id":2386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:16","memberName":"data","nodeType":"MemberAccess","src":"842:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2385,"id":2388,"nodeType":"Return","src":"835:15:16"}]},"id":2390,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:16","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[],"src":"775:2:16"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2390,"src":"809:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2383,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:16"},"scope":2399,"src":"758:99:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2397,"nodeType":"Block","src":"935:25:16","statements":[{"expression":{"hexValue":"30","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2394,"id":2396,"nodeType":"Return","src":"945:8:16"}]},"id":2398,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:16","nodeType":"FunctionDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[],"src":"892:2:16"},"returnParameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2398,"src":"926:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:16"},"scope":2399,"src":"863:97:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2400,"src":"624:338:16","usedErrors":[],"usedEvents":[]}],"src":"101:862:16"},"id":16},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2451]},"id":2452,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"125:489:17","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2451,"linearizedBaseContracts":[2451],"name":"Panic","nameLocation":"665:5:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"677:36:17","text":"@dev generic / unspecified error"},"id":2406,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:17","nodeType":"VariableDeclaration","scope":2451,"src":"718:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"764:37:17","text":"@dev used by the assert() builtin"},"id":2410,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:17","nodeType":"VariableDeclaration","scope":2451,"src":"806:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"851:41:17","text":"@dev arithmetic underflow or overflow"},"id":2414,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:17","nodeType":"VariableDeclaration","scope":2451,"src":"897:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:17","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"950:35:17","text":"@dev division or modulo by zero"},"id":2418,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:17","nodeType":"VariableDeclaration","scope":2451,"src":"990:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"1045:30:17","text":"@dev enum conversion error"},"id":2422,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:17","nodeType":"VariableDeclaration","scope":2451,"src":"1080:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:17","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"1140:36:17","text":"@dev invalid encoding in storage"},"id":2426,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:17","nodeType":"VariableDeclaration","scope":2451,"src":"1181:55:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"1242:24:17","text":"@dev empty array pop"},"id":2430,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:17","nodeType":"VariableDeclaration","scope":2451,"src":"1271:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:17","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"1325:35:17","text":"@dev array out of bounds access"},"id":2434,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:17","nodeType":"VariableDeclaration","scope":2451,"src":"1365:52:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"1423:65:17","text":"@dev resource error (too large allocation or too large array)"},"id":2438,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:17","nodeType":"VariableDeclaration","scope":2451,"src":"1493:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"1546:42:17","text":"@dev calling invalid internal function"},"id":2442,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:17","nodeType":"VariableDeclaration","scope":2451,"src":"1593:58:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:17","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2449,"nodeType":"Block","src":"1819:151:17","statements":[{"AST":{"nativeSrc":"1854:110:17","nodeType":"YulBlock","src":"1854:110:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:17","nodeType":"YulLiteral","src":"1875:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:17","nodeType":"YulLiteral","src":"1881:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:17","nodeType":"YulIdentifier","src":"1868:6:17"},"nativeSrc":"1868:24:17","nodeType":"YulFunctionCall","src":"1868:24:17"},"nativeSrc":"1868:24:17","nodeType":"YulExpressionStatement","src":"1868:24:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:17","nodeType":"YulLiteral","src":"1912:4:17","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:17","nodeType":"YulIdentifier","src":"1918:4:17"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:17","nodeType":"YulIdentifier","src":"1905:6:17"},"nativeSrc":"1905:18:17","nodeType":"YulFunctionCall","src":"1905:18:17"},"nativeSrc":"1905:18:17","nodeType":"YulExpressionStatement","src":"1905:18:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:17","nodeType":"YulLiteral","src":"1943:4:17","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:17","nodeType":"YulLiteral","src":"1949:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:17","nodeType":"YulIdentifier","src":"1936:6:17"},"nativeSrc":"1936:18:17","nodeType":"YulFunctionCall","src":"1936:18:17"},"nativeSrc":"1936:18:17","nodeType":"YulExpressionStatement","src":"1936:18:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2445,"isOffset":false,"isSlot":false,"src":"1918:4:17","valueSize":1}],"flags":["memory-safe"],"id":2448,"nodeType":"InlineAssembly","src":"1829:135:17"}]},"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"1658:113:17","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2450,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:17","nodeType":"FunctionDefinition","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"code","nameLocation":"1799:4:17","nodeType":"VariableDeclaration","scope":2450,"src":"1791:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:17"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[],"src":"1819:0:17"},"scope":2451,"src":"1776:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2452,"src":"657:1315:17","usedErrors":[],"usedEvents":[]}],"src":"99:1874:17"},"id":17},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2457],"ShortStrings":[2668],"StorageSlot":[2792]},"id":2669,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2453,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2669,"sourceUnit":2793,"src":"132:46:18","symbolAliases":[{"foreign":{"id":2454,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"140:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2457,"name":"ShortString","nameLocation":"353:11:18","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:18","underlyingType":{"id":2456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"378:876:18","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2668,"linearizedBaseContracts":[2668],"name":"ShortStrings","nameLocation":"1263:12:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2461,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:18","nodeType":"VariableDeclaration","scope":2668,"src":"1345:111:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2465,"name":"StringTooLong","nameLocation":"1469:13:18","nodeType":"ErrorDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"str","nameLocation":"1490:3:18","nodeType":"VariableDeclaration","scope":2465,"src":"1483:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2462,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:18"},"src":"1463:32:18"},{"errorSelector":"b3512b0c","id":2467,"name":"InvalidShortString","nameLocation":"1506:18:18","nodeType":"ErrorDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[],"src":"1524:2:18"},"src":"1500:27:18"},{"body":{"id":2510,"nodeType":"Block","src":"1786:208:18","statements":[{"assignments":[2477],"declarations":[{"constant":false,"id":2477,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:18","nodeType":"VariableDeclaration","scope":2510,"src":"1796:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2476,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2482,"initialValue":{"arguments":[{"id":2480,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"1822:3:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2478,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:18","typeDescriptions":{}}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2483,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1840:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:18","memberName":"length","nodeType":"MemberAccess","src":"1840:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:18","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2492,"nodeType":"IfStatement","src":"1836:72:18","trueBody":{"id":2491,"nodeType":"Block","src":"1858:50:18","statements":[{"errorCall":{"arguments":[{"id":2488,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"1893:3:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2487,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"1879:13:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2490,"nodeType":"RevertStatement","src":"1872:25:18"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2501,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1965:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:18","typeDescriptions":{}}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:18","typeDescriptions":{}}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2504,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1974:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:18","memberName":"length","nodeType":"MemberAccess","src":"1974:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:18","typeDescriptions":{}}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2493,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1924:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:18","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:18","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"functionReturnParameters":2475,"id":2509,"nodeType":"Return","src":"1917:70:18"}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"1533:170:18","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2511,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:18","nodeType":"FunctionDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"str","nameLocation":"1745:3:18","nodeType":"VariableDeclaration","scope":2511,"src":"1731:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2469,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:18"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2511,"src":"1773:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"ShortString","nameLocations":["1773:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"1773:11:18"},"referencedDeclaration":2457,"src":"1773:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:18"},"scope":2668,"src":"1708:286:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"2152:304:18","statements":[{"assignments":[2521],"declarations":[{"constant":false,"id":2521,"mutability":"mutable","name":"len","nameLocation":"2170:3:18","nodeType":"VariableDeclaration","scope":2536,"src":"2162:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2525,"initialValue":{"arguments":[{"id":2523,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"2187:4:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"id":2522,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"2176:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:18"},{"assignments":[2527],"declarations":[{"constant":false,"id":2527,"mutability":"mutable","name":"str","nameLocation":"2294:3:18","nodeType":"VariableDeclaration","scope":2536,"src":"2280:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2526,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2532,"initialValue":{"arguments":[{"hexValue":"3332","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2528,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:18"},{"AST":{"nativeSrc":"2349:81:18","nodeType":"YulBlock","src":"2349:81:18","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:18","nodeType":"YulIdentifier","src":"2370:3:18"},{"name":"len","nativeSrc":"2375:3:18","nodeType":"YulIdentifier","src":"2375:3:18"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:18","nodeType":"YulIdentifier","src":"2363:6:18"},"nativeSrc":"2363:16:18","nodeType":"YulFunctionCall","src":"2363:16:18"},"nativeSrc":"2363:16:18","nodeType":"YulExpressionStatement","src":"2363:16:18"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:18","nodeType":"YulIdentifier","src":"2403:3:18"},{"kind":"number","nativeSrc":"2408:4:18","nodeType":"YulLiteral","src":"2408:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:18","nodeType":"YulIdentifier","src":"2399:3:18"},"nativeSrc":"2399:14:18","nodeType":"YulFunctionCall","src":"2399:14:18"},{"name":"sstr","nativeSrc":"2415:4:18","nodeType":"YulIdentifier","src":"2415:4:18"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:18","nodeType":"YulIdentifier","src":"2392:6:18"},"nativeSrc":"2392:28:18","nodeType":"YulFunctionCall","src":"2392:28:18"},"nativeSrc":"2392:28:18","nodeType":"YulExpressionStatement","src":"2392:28:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2521,"isOffset":false,"isSlot":false,"src":"2375:3:18","valueSize":1},{"declaration":2515,"isOffset":false,"isSlot":false,"src":"2415:4:18","valueSize":1},{"declaration":2527,"isOffset":false,"isSlot":false,"src":"2370:3:18","valueSize":1},{"declaration":2527,"isOffset":false,"isSlot":false,"src":"2403:3:18","valueSize":1}],"flags":["memory-safe"],"id":2533,"nodeType":"InlineAssembly","src":"2324:106:18"},{"expression":{"id":2534,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"2446:3:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2519,"id":2535,"nodeType":"Return","src":"2439:10:18"}]},"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"2000:73:18","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:18","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:18","nodeType":"VariableDeclaration","scope":2537,"src":"2096:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2514,"nodeType":"UserDefinedTypeName","pathNode":{"id":2513,"name":"ShortString","nameLocations":["2096:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2096:11:18"},"referencedDeclaration":2457,"src":"2096:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:18"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"2137:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2517,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:18"},"scope":2668,"src":"2078:378:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2568,"nodeType":"Block","src":"2598:175:18","statements":[{"assignments":[2547],"declarations":[{"constant":false,"id":2547,"mutability":"mutable","name":"result","nameLocation":"2616:6:18","nodeType":"VariableDeclaration","scope":2568,"src":"2608:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2557,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2552,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"2652:4:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"expression":{"id":2550,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"2633:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:18","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:18","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:18","typeDescriptions":{}}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2679:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:18","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2565,"nodeType":"IfStatement","src":"2675:69:18","trueBody":{"id":2564,"nodeType":"Block","src":"2692:52:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2561,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2713:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2563,"nodeType":"RevertStatement","src":"2706:27:18"}]}},{"expression":{"id":2566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2760:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2545,"id":2567,"nodeType":"Return","src":"2753:13:18"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"2462:61:18","text":" @dev Return the length of a `ShortString`."},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:18","nodeType":"FunctionDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:18","nodeType":"VariableDeclaration","scope":2569,"src":"2548:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2540,"nodeType":"UserDefinedTypeName","pathNode":{"id":2539,"name":"ShortString","nameLocations":["2548:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2548:11:18"},"referencedDeclaration":2457,"src":"2548:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:18"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"2589:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:18"},"scope":2668,"src":"2528:245:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"2996:231:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3016:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2580,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:18","typeDescriptions":{}}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:18","memberName":"length","nodeType":"MemberAccess","src":"3010:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2606,"nodeType":"Block","src":"3094:127:18","statements":[{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2595,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"3134:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2592,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"3108:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2792_$","typeString":"type(library StorageSlot)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:18","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"3108:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2689_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2688,"src":"3108:38:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3149:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2600,"nodeType":"ExpressionStatement","src":"3108:46:18"},{"expression":{"arguments":[{"id":2603,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"3192:17:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2601,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"3175:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:18","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:18","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"functionReturnParameters":2579,"id":2605,"nodeType":"Return","src":"3168:42:18"}]},"id":2607,"nodeType":"IfStatement","src":"3006:215:18","trueBody":{"id":2591,"nodeType":"Block","src":"3036:52:18","statements":[{"expression":{"arguments":[{"id":2588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3071:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2587,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3057:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"functionReturnParameters":2579,"id":2590,"nodeType":"Return","src":"3050:27:18"}]}}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"2779:103:18","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:18","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"value","nameLocation":"2936:5:18","nodeType":"VariableDeclaration","scope":2609,"src":"2922:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2571,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"store","nameLocation":"2958:5:18","nodeType":"VariableDeclaration","scope":2609,"src":"2943:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2573,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:18"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"2983:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2577,"nodeType":"UserDefinedTypeName","pathNode":{"id":2576,"name":"ShortString","nameLocations":["2983:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2983:11:18"},"referencedDeclaration":2457,"src":"2983:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:18"},"scope":2668,"src":"2887:340:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2635,"nodeType":"Block","src":"3467:158:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3500:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"expression":{"id":2620,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"3481:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:18","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:18","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2624,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"3510:17:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2633,"nodeType":"Block","src":"3582:37:18","statements":[{"expression":{"id":2631,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3603:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2619,"id":2632,"nodeType":"Return","src":"3596:12:18"}]},"id":2634,"nodeType":"IfStatement","src":"3477:142:18","trueBody":{"id":2630,"nodeType":"Block","src":"3529:47:18","statements":[{"expression":{"arguments":[{"id":2627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3559:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"id":2626,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"3550:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2619,"id":2629,"nodeType":"Return","src":"3543:22:18"}]}}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"3233:120:18","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2636,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:18","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"value","nameLocation":"3400:5:18","nodeType":"VariableDeclaration","scope":2636,"src":"3388:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2612,"nodeType":"UserDefinedTypeName","pathNode":{"id":2611,"name":"ShortString","nameLocations":["3388:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"3388:11:18"},"referencedDeclaration":2457,"src":"3388:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"store","nameLocation":"3422:5:18","nodeType":"VariableDeclaration","scope":2636,"src":"3407:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2614,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:18"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2636,"src":"3452:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2617,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:18"},"scope":2668,"src":"3358:267:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2666,"nodeType":"Block","src":"4105:174:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"4138:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"expression":{"id":2647,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4119:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:18","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:18","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2651,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"4148:17:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2664,"nodeType":"Block","src":"4222:51:18","statements":[{"expression":{"expression":{"arguments":[{"id":2660,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4249:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2658,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:18","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:18","memberName":"length","nodeType":"MemberAccess","src":"4243:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2646,"id":2663,"nodeType":"Return","src":"4236:26:18"}]},"id":2665,"nodeType":"IfStatement","src":"4115:158:18","trueBody":{"id":2657,"nodeType":"Block","src":"4167:49:18","statements":[{"expression":{"arguments":[{"id":2654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"4199:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"id":2653,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"4188:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2646,"id":2656,"nodeType":"Return","src":"4181:24:18"}]}}]},"documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"3631:364:18","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:18","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"value","nameLocation":"4044:5:18","nodeType":"VariableDeclaration","scope":2667,"src":"4032:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2639,"nodeType":"UserDefinedTypeName","pathNode":{"id":2638,"name":"ShortString","nameLocations":["4032:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"4032:11:18"},"referencedDeclaration":2457,"src":"4032:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"store","nameLocation":"4066:5:18","nodeType":"VariableDeclaration","scope":2667,"src":"4051:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2641,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:18"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2667,"src":"4096:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:18"},"scope":2668,"src":"4000:279:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2669,"src":"1255:3026:18","usedErrors":[2465,2467],"usedEvents":[]}],"src":"106:4176:18"},"id":18},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2792]},"id":2793,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2670,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"219:1187:19","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2792,"linearizedBaseContracts":[2792],"name":"StorageSlot","nameLocation":"1415:11:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2674,"members":[{"constant":false,"id":2673,"mutability":"mutable","name":"value","nameLocation":"1470:5:19","nodeType":"VariableDeclaration","scope":2674,"src":"1462:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2672,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:19","nodeType":"StructDefinition","scope":2792,"src":"1433:49:19","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2677,"members":[{"constant":false,"id":2676,"mutability":"mutable","name":"value","nameLocation":"1522:5:19","nodeType":"VariableDeclaration","scope":2677,"src":"1517:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2675,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:19","nodeType":"StructDefinition","scope":2792,"src":"1488:46:19","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2680,"members":[{"constant":false,"id":2679,"mutability":"mutable","name":"value","nameLocation":"1577:5:19","nodeType":"VariableDeclaration","scope":2680,"src":"1569:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:19","nodeType":"StructDefinition","scope":2792,"src":"1540:49:19","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2683,"members":[{"constant":false,"id":2682,"mutability":"mutable","name":"value","nameLocation":"1632:5:19","nodeType":"VariableDeclaration","scope":2683,"src":"1624:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:19","nodeType":"StructDefinition","scope":2792,"src":"1595:49:19","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2686,"members":[{"constant":false,"id":2685,"mutability":"mutable","name":"value","nameLocation":"1685:5:19","nodeType":"VariableDeclaration","scope":2686,"src":"1678:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2684,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:19","nodeType":"StructDefinition","scope":2792,"src":"1650:47:19","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2689,"members":[{"constant":false,"id":2688,"mutability":"mutable","name":"value","nameLocation":"1738:5:19","nodeType":"VariableDeclaration","scope":2689,"src":"1731:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2687,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:19","nodeType":"StructDefinition","scope":2792,"src":"1703:47:19","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2692,"members":[{"constant":false,"id":2691,"mutability":"mutable","name":"value","nameLocation":"1789:5:19","nodeType":"VariableDeclaration","scope":2692,"src":"1783:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2690,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:19","nodeType":"StructDefinition","scope":2792,"src":"1756:45:19","visibility":"public"},{"body":{"id":2702,"nodeType":"Block","src":"1983:79:19","statements":[{"AST":{"nativeSrc":"2018:38:19","nodeType":"YulBlock","src":"2018:38:19","statements":[{"nativeSrc":"2032:14:19","nodeType":"YulAssignment","src":"2032:14:19","value":{"name":"slot","nativeSrc":"2042:4:19","nodeType":"YulIdentifier","src":"2042:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:19","nodeType":"YulIdentifier","src":"2032:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2699,"isOffset":false,"isSlot":true,"src":"2032:6:19","suffix":"slot","valueSize":1},{"declaration":2695,"isOffset":false,"isSlot":false,"src":"2042:4:19","valueSize":1}],"flags":["memory-safe"],"id":2701,"nodeType":"InlineAssembly","src":"1993:63:19"}]},"documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"1807:87:19","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2703,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:19","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"slot","nameLocation":"1931:4:19","nodeType":"VariableDeclaration","scope":2703,"src":"1923:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:19"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"r","nameLocation":"1980:1:19","nodeType":"VariableDeclaration","scope":2703,"src":"1960:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2674_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2698,"nodeType":"UserDefinedTypeName","pathNode":{"id":2697,"name":"AddressSlot","nameLocations":["1960:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2674,"src":"1960:11:19"},"referencedDeclaration":2674,"src":"1960:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2674_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:19"},"scope":2792,"src":"1899:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"2243:79:19","statements":[{"AST":{"nativeSrc":"2278:38:19","nodeType":"YulBlock","src":"2278:38:19","statements":[{"nativeSrc":"2292:14:19","nodeType":"YulAssignment","src":"2292:14:19","value":{"name":"slot","nativeSrc":"2302:4:19","nodeType":"YulIdentifier","src":"2302:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:19","nodeType":"YulIdentifier","src":"2292:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2710,"isOffset":false,"isSlot":true,"src":"2292:6:19","suffix":"slot","valueSize":1},{"declaration":2706,"isOffset":false,"isSlot":false,"src":"2302:4:19","valueSize":1}],"flags":["memory-safe"],"id":2712,"nodeType":"InlineAssembly","src":"2253:63:19"}]},"documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"2068:86:19","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2714,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:19","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"slot","nameLocation":"2191:4:19","nodeType":"VariableDeclaration","scope":2714,"src":"2183:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:19"},"returnParameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"r","nameLocation":"2240:1:19","nodeType":"VariableDeclaration","scope":2714,"src":"2220:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2677_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2709,"nodeType":"UserDefinedTypeName","pathNode":{"id":2708,"name":"BooleanSlot","nameLocations":["2220:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"2220:11:19"},"referencedDeclaration":2677,"src":"2220:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2677_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:19"},"scope":2792,"src":"2159:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2724,"nodeType":"Block","src":"2503:79:19","statements":[{"AST":{"nativeSrc":"2538:38:19","nodeType":"YulBlock","src":"2538:38:19","statements":[{"nativeSrc":"2552:14:19","nodeType":"YulAssignment","src":"2552:14:19","value":{"name":"slot","nativeSrc":"2562:4:19","nodeType":"YulIdentifier","src":"2562:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:19","nodeType":"YulIdentifier","src":"2552:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2721,"isOffset":false,"isSlot":true,"src":"2552:6:19","suffix":"slot","valueSize":1},{"declaration":2717,"isOffset":false,"isSlot":false,"src":"2562:4:19","valueSize":1}],"flags":["memory-safe"],"id":2723,"nodeType":"InlineAssembly","src":"2513:63:19"}]},"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"2328:86:19","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:19","nodeType":"FunctionDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"slot","nameLocation":"2451:4:19","nodeType":"VariableDeclaration","scope":2725,"src":"2443:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:19"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"r","nameLocation":"2500:1:19","nodeType":"VariableDeclaration","scope":2725,"src":"2480:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2680_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2720,"nodeType":"UserDefinedTypeName","pathNode":{"id":2719,"name":"Bytes32Slot","nameLocations":["2480:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2680,"src":"2480:11:19"},"referencedDeclaration":2680,"src":"2480:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2680_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:19"},"scope":2792,"src":"2419:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2735,"nodeType":"Block","src":"2763:79:19","statements":[{"AST":{"nativeSrc":"2798:38:19","nodeType":"YulBlock","src":"2798:38:19","statements":[{"nativeSrc":"2812:14:19","nodeType":"YulAssignment","src":"2812:14:19","value":{"name":"slot","nativeSrc":"2822:4:19","nodeType":"YulIdentifier","src":"2822:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:19","nodeType":"YulIdentifier","src":"2812:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2732,"isOffset":false,"isSlot":true,"src":"2812:6:19","suffix":"slot","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"2822:4:19","valueSize":1}],"flags":["memory-safe"],"id":2734,"nodeType":"InlineAssembly","src":"2773:63:19"}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"2588:86:19","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:19","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"slot","nameLocation":"2711:4:19","nodeType":"VariableDeclaration","scope":2736,"src":"2703:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:19"},"returnParameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"r","nameLocation":"2760:1:19","nodeType":"VariableDeclaration","scope":2736,"src":"2740:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2683_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2731,"nodeType":"UserDefinedTypeName","pathNode":{"id":2730,"name":"Uint256Slot","nameLocations":["2740:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2683,"src":"2740:11:19"},"referencedDeclaration":2683,"src":"2740:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2683_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:19"},"scope":2792,"src":"2679:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"3020:79:19","statements":[{"AST":{"nativeSrc":"3055:38:19","nodeType":"YulBlock","src":"3055:38:19","statements":[{"nativeSrc":"3069:14:19","nodeType":"YulAssignment","src":"3069:14:19","value":{"name":"slot","nativeSrc":"3079:4:19","nodeType":"YulIdentifier","src":"3079:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:19","nodeType":"YulIdentifier","src":"3069:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2743,"isOffset":false,"isSlot":true,"src":"3069:6:19","suffix":"slot","valueSize":1},{"declaration":2739,"isOffset":false,"isSlot":false,"src":"3079:4:19","valueSize":1}],"flags":["memory-safe"],"id":2745,"nodeType":"InlineAssembly","src":"3030:63:19"}]},"documentation":{"id":2737,"nodeType":"StructuredDocumentation","src":"2848:85:19","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:19","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"slot","nameLocation":"2969:4:19","nodeType":"VariableDeclaration","scope":2747,"src":"2961:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:19"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"r","nameLocation":"3017:1:19","nodeType":"VariableDeclaration","scope":2747,"src":"2998:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2686_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2742,"nodeType":"UserDefinedTypeName","pathNode":{"id":2741,"name":"Int256Slot","nameLocations":["2998:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2686,"src":"2998:10:19"},"referencedDeclaration":2686,"src":"2998:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2686_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:19"},"scope":2792,"src":"2938:161:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2757,"nodeType":"Block","src":"3277:79:19","statements":[{"AST":{"nativeSrc":"3312:38:19","nodeType":"YulBlock","src":"3312:38:19","statements":[{"nativeSrc":"3326:14:19","nodeType":"YulAssignment","src":"3326:14:19","value":{"name":"slot","nativeSrc":"3336:4:19","nodeType":"YulIdentifier","src":"3336:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:19","nodeType":"YulIdentifier","src":"3326:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2754,"isOffset":false,"isSlot":true,"src":"3326:6:19","suffix":"slot","valueSize":1},{"declaration":2750,"isOffset":false,"isSlot":false,"src":"3336:4:19","valueSize":1}],"flags":["memory-safe"],"id":2756,"nodeType":"InlineAssembly","src":"3287:63:19"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"3105:85:19","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:19","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"slot","nameLocation":"3226:4:19","nodeType":"VariableDeclaration","scope":2758,"src":"3218:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:19"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"r","nameLocation":"3274:1:19","nodeType":"VariableDeclaration","scope":2758,"src":"3255:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2753,"nodeType":"UserDefinedTypeName","pathNode":{"id":2752,"name":"StringSlot","nameLocations":["3255:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2689,"src":"3255:10:19"},"referencedDeclaration":2689,"src":"3255:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:19"},"scope":2792,"src":"3195:161:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2768,"nodeType":"Block","src":"3558:85:19","statements":[{"AST":{"nativeSrc":"3593:44:19","nodeType":"YulBlock","src":"3593:44:19","statements":[{"nativeSrc":"3607:20:19","nodeType":"YulAssignment","src":"3607:20:19","value":{"name":"store.slot","nativeSrc":"3617:10:19","nodeType":"YulIdentifier","src":"3617:10:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:19","nodeType":"YulIdentifier","src":"3607:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2765,"isOffset":false,"isSlot":true,"src":"3607:6:19","suffix":"slot","valueSize":1},{"declaration":2761,"isOffset":false,"isSlot":true,"src":"3617:10:19","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2767,"nodeType":"InlineAssembly","src":"3568:69:19"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"3362:101:19","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:19","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"store","nameLocation":"3506:5:19","nodeType":"VariableDeclaration","scope":2769,"src":"3491:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2760,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:19"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"r","nameLocation":"3555:1:19","nodeType":"VariableDeclaration","scope":2769,"src":"3536:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2764,"nodeType":"UserDefinedTypeName","pathNode":{"id":2763,"name":"StringSlot","nameLocations":["3536:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2689,"src":"3536:10:19"},"referencedDeclaration":2689,"src":"3536:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:19"},"scope":2792,"src":"3468:175:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2779,"nodeType":"Block","src":"3818:79:19","statements":[{"AST":{"nativeSrc":"3853:38:19","nodeType":"YulBlock","src":"3853:38:19","statements":[{"nativeSrc":"3867:14:19","nodeType":"YulAssignment","src":"3867:14:19","value":{"name":"slot","nativeSrc":"3877:4:19","nodeType":"YulIdentifier","src":"3877:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:19","nodeType":"YulIdentifier","src":"3867:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2776,"isOffset":false,"isSlot":true,"src":"3867:6:19","suffix":"slot","valueSize":1},{"declaration":2772,"isOffset":false,"isSlot":false,"src":"3877:4:19","valueSize":1}],"flags":["memory-safe"],"id":2778,"nodeType":"InlineAssembly","src":"3828:63:19"}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"3649:84:19","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:19","nodeType":"FunctionDefinition","parameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"slot","nameLocation":"3768:4:19","nodeType":"VariableDeclaration","scope":2780,"src":"3760:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:19"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"r","nameLocation":"3815:1:19","nodeType":"VariableDeclaration","scope":2780,"src":"3797:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2775,"nodeType":"UserDefinedTypeName","pathNode":{"id":2774,"name":"BytesSlot","nameLocations":["3797:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2692,"src":"3797:9:19"},"referencedDeclaration":2692,"src":"3797:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:19"},"scope":2792,"src":"3738:159:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2790,"nodeType":"Block","src":"4094:85:19","statements":[{"AST":{"nativeSrc":"4129:44:19","nodeType":"YulBlock","src":"4129:44:19","statements":[{"nativeSrc":"4143:20:19","nodeType":"YulAssignment","src":"4143:20:19","value":{"name":"store.slot","nativeSrc":"4153:10:19","nodeType":"YulIdentifier","src":"4153:10:19"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:19","nodeType":"YulIdentifier","src":"4143:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2787,"isOffset":false,"isSlot":true,"src":"4143:6:19","suffix":"slot","valueSize":1},{"declaration":2783,"isOffset":false,"isSlot":true,"src":"4153:10:19","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2789,"nodeType":"InlineAssembly","src":"4104:69:19"}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"3903:99:19","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2791,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:19","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"store","nameLocation":"4043:5:19","nodeType":"VariableDeclaration","scope":2791,"src":"4029:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2782,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:19"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"r","nameLocation":"4091:1:19","nodeType":"VariableDeclaration","scope":2791,"src":"4073:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2786,"nodeType":"UserDefinedTypeName","pathNode":{"id":2785,"name":"BytesSlot","nameLocations":["4073:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2692,"src":"4073:9:19"},"referencedDeclaration":2692,"src":"4073:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:19"},"scope":2792,"src":"4007:172:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2793,"src":"1407:2774:19","usedErrors":[],"usedEvents":[]}],"src":"193:3989:19"},"id":19},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6516],"SignedMath":[8425],"Strings":[3112]},"id":3113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2794,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":6517,"src":"127:37:20","symbolAliases":[{"foreign":{"id":2795,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"135:4:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":8426,"src":"165:49:20","symbolAliases":[{"foreign":{"id":2797,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8425,"src":"173:10:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"216:34:20","text":" @dev String operations."},"fullyImplemented":true,"id":3112,"linearizedBaseContracts":[3112],"name":"Strings","nameLocation":"259:7:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2802,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:20","nodeType":"VariableDeclaration","scope":3112,"src":"273:56:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2800,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2805,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:20","nodeType":"VariableDeclaration","scope":3112,"src":"335:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2803,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:20","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"384:81:20","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2812,"name":"StringsInsufficientHexLength","nameLocation":"476:28:20","nodeType":"ErrorDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"value","nameLocation":"513:5:20","nodeType":"VariableDeclaration","scope":2812,"src":"505:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"length","nameLocation":"528:6:20","nodeType":"VariableDeclaration","scope":2812,"src":"520:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:20"},"src":"470:66:20"},{"body":{"id":2859,"nodeType":"Block","src":"708:561:20","statements":[{"id":2858,"nodeType":"UncheckedBlock","src":"718:545:20","statements":[{"assignments":[2821],"declarations":[{"constant":false,"id":2821,"mutability":"mutable","name":"length","nameLocation":"750:6:20","nodeType":"VariableDeclaration","scope":2858,"src":"742:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2828,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"770:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2822,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"759:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6516_$","typeString":"type(library Math)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:20","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6288,"src":"759:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:20"},{"assignments":[2830],"declarations":[{"constant":false,"id":2830,"mutability":"mutable","name":"buffer","nameLocation":"808:6:20","nodeType":"VariableDeclaration","scope":2858,"src":"794:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2829,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2835,"initialValue":{"arguments":[{"id":2833,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"828:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2831,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:20"},{"assignments":[2837],"declarations":[{"constant":false,"id":2837,"mutability":"mutable","name":"ptr","nameLocation":"857:3:20","nodeType":"VariableDeclaration","scope":2858,"src":"849:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"nodeType":"VariableDeclarationStatement","src":"849:11:20"},{"AST":{"nativeSrc":"899:67:20","nodeType":"YulBlock","src":"899:67:20","statements":[{"nativeSrc":"917:35:20","nodeType":"YulAssignment","src":"917:35:20","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:20","nodeType":"YulIdentifier","src":"928:6:20"},{"arguments":[{"kind":"number","nativeSrc":"940:2:20","nodeType":"YulLiteral","src":"940:2:20","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:20","nodeType":"YulIdentifier","src":"944:6:20"}],"functionName":{"name":"add","nativeSrc":"936:3:20","nodeType":"YulIdentifier","src":"936:3:20"},"nativeSrc":"936:15:20","nodeType":"YulFunctionCall","src":"936:15:20"}],"functionName":{"name":"add","nativeSrc":"924:3:20","nodeType":"YulIdentifier","src":"924:3:20"},"nativeSrc":"924:28:20","nodeType":"YulFunctionCall","src":"924:28:20"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:20","nodeType":"YulIdentifier","src":"917:3:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2830,"isOffset":false,"isSlot":false,"src":"928:6:20","valueSize":1},{"declaration":2821,"isOffset":false,"isSlot":false,"src":"944:6:20","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"917:3:20","valueSize":1}],"flags":["memory-safe"],"id":2839,"nodeType":"InlineAssembly","src":"874:92:20"},{"body":{"id":2854,"nodeType":"Block","src":"992:234:20","statements":[{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:20","subExpression":{"id":2841,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1010:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2843,"nodeType":"ExpressionStatement","src":"1010:5:20"},{"AST":{"nativeSrc":"1058:86:20","nodeType":"YulBlock","src":"1058:86:20","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:20","nodeType":"YulIdentifier","src":"1088:3:20"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:20","nodeType":"YulIdentifier","src":"1102:5:20"},{"kind":"number","nativeSrc":"1109:2:20","nodeType":"YulLiteral","src":"1109:2:20","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:20","nodeType":"YulIdentifier","src":"1098:3:20"},"nativeSrc":"1098:14:20","nodeType":"YulFunctionCall","src":"1098:14:20"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:20","nodeType":"YulIdentifier","src":"1114:10:20"}],"functionName":{"name":"byte","nativeSrc":"1093:4:20","nodeType":"YulIdentifier","src":"1093:4:20"},"nativeSrc":"1093:32:20","nodeType":"YulFunctionCall","src":"1093:32:20"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:20","nodeType":"YulIdentifier","src":"1080:7:20"},"nativeSrc":"1080:46:20","nodeType":"YulFunctionCall","src":"1080:46:20"},"nativeSrc":"1080:46:20","nodeType":"YulExpressionStatement","src":"1080:46:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":2802,"isOffset":false,"isSlot":false,"src":"1114:10:20","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"1088:3:20","valueSize":1},{"declaration":2815,"isOffset":false,"isSlot":false,"src":"1102:5:20","valueSize":1}],"flags":["memory-safe"],"id":2844,"nodeType":"InlineAssembly","src":"1033:111:20"},{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"1161:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"1161:11:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"1194:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2853,"nodeType":"IfStatement","src":"1190:21:20","trueBody":{"id":2852,"nodeType":"Break","src":"1206:5:20"}}]},"condition":{"hexValue":"74727565","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2855,"nodeType":"WhileStatement","src":"979:247:20"},{"expression":{"id":2856,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1246:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2819,"id":2857,"nodeType":"Return","src":"1239:13:20"}]}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"542:90:20","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:20","nodeType":"FunctionDefinition","parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"value","nameLocation":"663:5:20","nodeType":"VariableDeclaration","scope":2860,"src":"655:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:20"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2860,"src":"693:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2817,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:20"},"scope":3112,"src":"637:632:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2885,"nodeType":"Block","src":"1445:92:20","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"1476:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:20","trueExpression":{"hexValue":"2d","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"1522:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2878,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8425,"src":"1507:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8425_$","typeString":"type(library SignedMath)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:20","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8424,"src":"1507:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2877,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"1498:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2868,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:20","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:20","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:20","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2867,"id":2884,"nodeType":"Return","src":"1455:75:20"}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"1275:89:20","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:20","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"value","nameLocation":"1400:5:20","nodeType":"VariableDeclaration","scope":2886,"src":"1393:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2862,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:20"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"1430:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2865,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:20"},"scope":3112,"src":"1369:168:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2905,"nodeType":"Block","src":"1716:100:20","statements":[{"id":2904,"nodeType":"UncheckedBlock","src":"1726:84:20","statements":[{"expression":{"arguments":[{"id":2895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"1769:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"1788:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2896,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"1776:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6516_$","typeString":"type(library Math)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:20","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6459,"src":"1776:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2894,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2906,2989,3009],"referencedDeclaration":2989,"src":"1757:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2893,"id":2903,"nodeType":"Return","src":"1750:49:20"}]}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"1543:94:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2906,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:20","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"value","nameLocation":"1671:5:20","nodeType":"VariableDeclaration","scope":2906,"src":"1663:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:20"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2906,"src":"1701:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2891,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:20"},"scope":3112,"src":"1642:174:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2988,"nodeType":"Block","src":"2029:435:20","statements":[{"assignments":[2917],"declarations":[{"constant":false,"id":2917,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:20","nodeType":"VariableDeclaration","scope":2988,"src":"2039:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2919,"initialValue":{"id":2918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"2060:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:20"},{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:20","nodeType":"VariableDeclaration","scope":2988,"src":"2075:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2920,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2930,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2925,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2111:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2922,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:20"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2931,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2132:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2933,"indexExpression":{"hexValue":"30","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2936,"nodeType":"ExpressionStatement","src":"2132:15:20"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2937,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2157:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2939,"indexExpression":{"hexValue":"31","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2942,"nodeType":"ExpressionStatement","src":"2157:15:20"},{"body":{"id":2971,"nodeType":"Block","src":"2227:95:20","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2957,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2241:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2959,"indexExpression":{"id":2958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2248:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2960,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2253:10:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2964,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2264:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2966,"nodeType":"ExpressionStatement","src":"2241:40:20"},{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2967,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2295:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2970,"nodeType":"ExpressionStatement","src":"2295:16:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2215:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"initializationExpression":{"assignments":[2944],"declarations":[{"constant":false,"id":2944,"mutability":"mutable","name":"i","nameLocation":"2195:1:20","nodeType":"VariableDeclaration","scope":2972,"src":"2187:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2950,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2946,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2203:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:20"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:20","subExpression":{"id":2954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2224:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"2222:3:20"},"nodeType":"ForStatement","src":"2182:140:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2335:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"2331:96:20","trueBody":{"id":2981,"nodeType":"Block","src":"2352:75:20","statements":[{"errorCall":{"arguments":[{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"2402:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2978,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2409:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2976,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"2373:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2980,"nodeType":"RevertStatement","src":"2366:50:20"}]}},{"expression":{"arguments":[{"id":2985,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2450:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2983,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:20","typeDescriptions":{}}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2915,"id":2987,"nodeType":"Return","src":"2436:21:20"}]},"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"1822:112:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2989,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:20","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"value","nameLocation":"1968:5:20","nodeType":"VariableDeclaration","scope":2989,"src":"1960:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"length","nameLocation":"1983:6:20","nodeType":"VariableDeclaration","scope":2989,"src":"1975:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:20"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2989,"src":"2014:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2913,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:20"},"scope":3112,"src":"1939:525:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3008,"nodeType":"Block","src":"2696:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3002,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"2741:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3000,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:20","typeDescriptions":{}}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:20","typeDescriptions":{}}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3005,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"2749:14:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2997,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2906,2989,3009],"referencedDeclaration":2989,"src":"2713:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2996,"id":3007,"nodeType":"Return","src":"2706:58:20"}]},"documentation":{"id":2990,"nodeType":"StructuredDocumentation","src":"2470:148:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3009,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:20","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"addr","nameLocation":"2652:4:20","nodeType":"VariableDeclaration","scope":3009,"src":"2644:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2991,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:20"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3009,"src":"2681:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2994,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:20"},"scope":3112,"src":"2623:148:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3073,"nodeType":"Block","src":"3028:642:20","statements":[{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:20","nodeType":"VariableDeclaration","scope":3073,"src":"3038:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3017,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3025,"initialValue":{"arguments":[{"arguments":[{"id":3022,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"3078:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3021,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2906,2989,3009],"referencedDeclaration":3009,"src":"3066:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3019,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:20","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:20"},{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:20","nodeType":"VariableDeclaration","scope":3073,"src":"3169:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3028,"nodeType":"VariableDeclarationStatement","src":"3169:17:20"},{"AST":{"nativeSrc":"3221:78:20","nodeType":"YulBlock","src":"3221:78:20","statements":[{"nativeSrc":"3235:54:20","nodeType":"YulAssignment","src":"3235:54:20","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:20","nodeType":"YulLiteral","src":"3252:2:20","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:20","nodeType":"YulIdentifier","src":"3270:6:20"},{"kind":"number","nativeSrc":"3278:4:20","nodeType":"YulLiteral","src":"3278:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:20","nodeType":"YulIdentifier","src":"3266:3:20"},"nativeSrc":"3266:17:20","nodeType":"YulFunctionCall","src":"3266:17:20"},{"kind":"number","nativeSrc":"3285:2:20","nodeType":"YulLiteral","src":"3285:2:20","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:20","nodeType":"YulIdentifier","src":"3256:9:20"},"nativeSrc":"3256:32:20","nodeType":"YulFunctionCall","src":"3256:32:20"}],"functionName":{"name":"shr","nativeSrc":"3248:3:20","nodeType":"YulIdentifier","src":"3248:3:20"},"nativeSrc":"3248:41:20","nodeType":"YulFunctionCall","src":"3248:41:20"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:20","nodeType":"YulIdentifier","src":"3235:9:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3018,"isOffset":false,"isSlot":false,"src":"3270:6:20","valueSize":1},{"declaration":3027,"isOffset":false,"isSlot":false,"src":"3235:9:20","valueSize":1}],"flags":["memory-safe"],"id":3029,"nodeType":"InlineAssembly","src":"3196:103:20"},{"body":{"id":3066,"nodeType":"Block","src":"3342:291:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3448:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:20","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3047,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3477:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3049,"indexExpression":{"id":3048,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3484:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3045,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:20","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3061,"nodeType":"IfStatement","src":"3444:150:20","trueBody":{"id":3060,"nodeType":"Block","src":"3494:100:20","statements":[{"expression":{"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3054,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3562:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3056,"indexExpression":{"id":3055,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3569:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3059,"nodeType":"ExpressionStatement","src":"3562:17:20"}]}},{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3062,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3607:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"3607:15:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3330:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3067,"initializationExpression":{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"i","nameLocation":"3322:1:20","nodeType":"VariableDeclaration","scope":3067,"src":"3314:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3033,"initialValue":{"hexValue":"3431","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:20","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:20"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:20","subExpression":{"id":3037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3339:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"3337:3:20"},"nodeType":"ForStatement","src":"3309:324:20"},{"expression":{"arguments":[{"id":3070,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3656:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3068,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:20","typeDescriptions":{}}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3016,"id":3072,"nodeType":"Return","src":"3642:21:20"}]},"documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"2777:165:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3074,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:20","nodeType":"FunctionDefinition","parameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"addr","nameLocation":"2984:4:20","nodeType":"VariableDeclaration","scope":3074,"src":"2976:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:20"},"returnParameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3074,"src":"3013:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3014,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:20"},"scope":3112,"src":"2947:723:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"3825:104:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3086,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"3848:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3084,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:20","typeDescriptions":{}}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:20","memberName":"length","nodeType":"MemberAccess","src":"3842:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"3867:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3089,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:20","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:20","memberName":"length","nodeType":"MemberAccess","src":"3861:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"3896:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3096,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:20","typeDescriptions":{}}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"3919:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3102,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:20","typeDescriptions":{}}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3101,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3083,"id":3109,"nodeType":"Return","src":"3835:87:20"}]},"documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"3676:66:20","text":" @dev Returns true if the two strings are equal."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:20","nodeType":"FunctionDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"a","nameLocation":"3776:1:20","nodeType":"VariableDeclaration","scope":3111,"src":"3762:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3076,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"b","nameLocation":"3793:1:20","nodeType":"VariableDeclaration","scope":3111,"src":"3779:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3078,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:20"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"3819:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3081,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:20"},"scope":3112,"src":"3747:182:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3113,"src":"251:3680:20","usedErrors":[2812],"usedEvents":[]}],"src":"101:3831:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3460]},"id":3461,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3114,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"138:205:21","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3460,"linearizedBaseContracts":[3460],"name":"ECDSA","nameLocation":"352:5:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3120,"members":[{"id":3116,"name":"NoError","nameLocation":"392:7:21","nodeType":"EnumValue","src":"392:7:21"},{"id":3117,"name":"InvalidSignature","nameLocation":"409:16:21","nodeType":"EnumValue","src":"409:16:21"},{"id":3118,"name":"InvalidSignatureLength","nameLocation":"435:22:21","nodeType":"EnumValue","src":"435:22:21"},{"id":3119,"name":"InvalidSignatureS","nameLocation":"467:17:21","nodeType":"EnumValue","src":"467:17:21"}],"name":"RecoverError","nameLocation":"369:12:21","nodeType":"EnumDefinition","src":"364:126:21"},{"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"496:63:21","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3123,"name":"ECDSAInvalidSignature","nameLocation":"570:21:21","nodeType":"ErrorDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[],"src":"591:2:21"},"src":"564:30:21"},{"documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"600:60:21","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3128,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:21","nodeType":"ErrorDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"length","nameLocation":"707:6:21","nodeType":"VariableDeclaration","scope":3128,"src":"699:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:21"},"src":"665:50:21"},{"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"721:85:21","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3133,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:21","nodeType":"ErrorDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"s","nameLocation":"848:1:21","nodeType":"VariableDeclaration","scope":3133,"src":"840:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:21"},"src":"811:40:21"},{"body":{"id":3185,"nodeType":"Block","src":"2285:622:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3148,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"2299:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:21","memberName":"length","nodeType":"MemberAccess","src":"2299:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3183,"nodeType":"Block","src":"2793:108:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:21","typeDescriptions":{}}},"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3174,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"2827:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:21","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3118,"src":"2827:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3178,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"2872:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:21","memberName":"length","nodeType":"MemberAccess","src":"2872:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:21","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3147,"id":3182,"nodeType":"Return","src":"2807:83:21"}]},"id":3184,"nodeType":"IfStatement","src":"2295:606:21","trueBody":{"id":3169,"nodeType":"Block","src":"2323:464:21","statements":[{"assignments":[3153],"declarations":[{"constant":false,"id":3153,"mutability":"mutable","name":"r","nameLocation":"2345:1:21","nodeType":"VariableDeclaration","scope":3169,"src":"2337:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3154,"nodeType":"VariableDeclarationStatement","src":"2337:9:21"},{"assignments":[3156],"declarations":[{"constant":false,"id":3156,"mutability":"mutable","name":"s","nameLocation":"2368:1:21","nodeType":"VariableDeclaration","scope":3169,"src":"2360:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3157,"nodeType":"VariableDeclarationStatement","src":"2360:9:21"},{"assignments":[3159],"declarations":[{"constant":false,"id":3159,"mutability":"mutable","name":"v","nameLocation":"2389:1:21","nodeType":"VariableDeclaration","scope":3169,"src":"2383:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3158,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3160,"nodeType":"VariableDeclarationStatement","src":"2383:7:21"},{"AST":{"nativeSrc":"2560:171:21","nodeType":"YulBlock","src":"2560:171:21","statements":[{"nativeSrc":"2578:32:21","nodeType":"YulAssignment","src":"2578:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:21","nodeType":"YulIdentifier","src":"2593:9:21"},{"kind":"number","nativeSrc":"2604:4:21","nodeType":"YulLiteral","src":"2604:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:21","nodeType":"YulIdentifier","src":"2589:3:21"},"nativeSrc":"2589:20:21","nodeType":"YulFunctionCall","src":"2589:20:21"}],"functionName":{"name":"mload","nativeSrc":"2583:5:21","nodeType":"YulIdentifier","src":"2583:5:21"},"nativeSrc":"2583:27:21","nodeType":"YulFunctionCall","src":"2583:27:21"},"variableNames":[{"name":"r","nativeSrc":"2578:1:21","nodeType":"YulIdentifier","src":"2578:1:21"}]},{"nativeSrc":"2627:32:21","nodeType":"YulAssignment","src":"2627:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:21","nodeType":"YulIdentifier","src":"2642:9:21"},{"kind":"number","nativeSrc":"2653:4:21","nodeType":"YulLiteral","src":"2653:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:21","nodeType":"YulIdentifier","src":"2638:3:21"},"nativeSrc":"2638:20:21","nodeType":"YulFunctionCall","src":"2638:20:21"}],"functionName":{"name":"mload","nativeSrc":"2632:5:21","nodeType":"YulIdentifier","src":"2632:5:21"},"nativeSrc":"2632:27:21","nodeType":"YulFunctionCall","src":"2632:27:21"},"variableNames":[{"name":"s","nativeSrc":"2627:1:21","nodeType":"YulIdentifier","src":"2627:1:21"}]},{"nativeSrc":"2676:41:21","nodeType":"YulAssignment","src":"2676:41:21","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:21","nodeType":"YulLiteral","src":"2686:1:21","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:21","nodeType":"YulIdentifier","src":"2699:9:21"},{"kind":"number","nativeSrc":"2710:4:21","nodeType":"YulLiteral","src":"2710:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:21","nodeType":"YulIdentifier","src":"2695:3:21"},"nativeSrc":"2695:20:21","nodeType":"YulFunctionCall","src":"2695:20:21"}],"functionName":{"name":"mload","nativeSrc":"2689:5:21","nodeType":"YulIdentifier","src":"2689:5:21"},"nativeSrc":"2689:27:21","nodeType":"YulFunctionCall","src":"2689:27:21"}],"functionName":{"name":"byte","nativeSrc":"2681:4:21","nodeType":"YulIdentifier","src":"2681:4:21"},"nativeSrc":"2681:36:21","nodeType":"YulFunctionCall","src":"2681:36:21"},"variableNames":[{"name":"v","nativeSrc":"2676:1:21","nodeType":"YulIdentifier","src":"2676:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3153,"isOffset":false,"isSlot":false,"src":"2578:1:21","valueSize":1},{"declaration":3156,"isOffset":false,"isSlot":false,"src":"2627:1:21","valueSize":1},{"declaration":3138,"isOffset":false,"isSlot":false,"src":"2593:9:21","valueSize":1},{"declaration":3138,"isOffset":false,"isSlot":false,"src":"2642:9:21","valueSize":1},{"declaration":3138,"isOffset":false,"isSlot":false,"src":"2699:9:21","valueSize":1},{"declaration":3159,"isOffset":false,"isSlot":false,"src":"2676:1:21","valueSize":1}],"flags":["memory-safe"],"id":3161,"nodeType":"InlineAssembly","src":"2535:196:21"},{"expression":{"arguments":[{"id":3163,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"2762:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3164,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"2768:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3165,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"2771:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3166,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"2774:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3162,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3374,"src":"2751:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3147,"id":3168,"nodeType":"Return","src":"2744:32:21"}]}}]},"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"857:1267:21","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:21","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"hash","nameLocation":"2166:4:21","nodeType":"VariableDeclaration","scope":3186,"src":"2158:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"signature","nameLocation":"2193:9:21","nodeType":"VariableDeclaration","scope":3186,"src":"2180:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3137,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:21"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:21","nodeType":"VariableDeclaration","scope":3186,"src":"2232:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"err","nameLocation":"2264:3:21","nodeType":"VariableDeclaration","scope":3186,"src":"2251:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3143,"nodeType":"UserDefinedTypeName","pathNode":{"id":3142,"name":"RecoverError","nameLocations":["2251:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"2251:12:21"},"referencedDeclaration":3120,"src":"2251:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:21","nodeType":"VariableDeclaration","scope":3186,"src":"2269:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:21"},"scope":3460,"src":"2129:778:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3215,"nodeType":"Block","src":"3801:168:21","statements":[{"assignments":[3197,3200,3202],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:21","nodeType":"VariableDeclaration","scope":3215,"src":"3812:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3196,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"error","nameLocation":"3844:5:21","nodeType":"VariableDeclaration","scope":3215,"src":"3831:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3199,"nodeType":"UserDefinedTypeName","pathNode":{"id":3198,"name":"RecoverError","nameLocations":["3831:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"3831:12:21"},"referencedDeclaration":3120,"src":"3831:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3202,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:21","nodeType":"VariableDeclaration","scope":3215,"src":"3851:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3207,"initialValue":{"arguments":[{"id":3204,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"3882:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3205,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"3888:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3203,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3186,"src":"3871:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:21"},{"expression":{"arguments":[{"id":3209,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"3920:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"id":3210,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"3927:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3208,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"3908:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3120_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3212,"nodeType":"ExpressionStatement","src":"3908:28:21"},{"expression":{"id":3213,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"3953:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3195,"id":3214,"nodeType":"Return","src":"3946:16:21"}]},"documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"2913:796:21","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:21","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"hash","nameLocation":"3739:4:21","nodeType":"VariableDeclaration","scope":3216,"src":"3731:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"signature","nameLocation":"3758:9:21","nodeType":"VariableDeclaration","scope":3216,"src":"3745:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3190,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:21"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"3792:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:21"},"scope":3460,"src":"3714:255:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3265,"nodeType":"Block","src":"4348:342:21","statements":[{"id":3264,"nodeType":"UncheckedBlock","src":"4358:326:21","statements":[{"assignments":[3234],"declarations":[{"constant":false,"id":3234,"mutability":"mutable","name":"s","nameLocation":"4390:1:21","nodeType":"VariableDeclaration","scope":3264,"src":"4382:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3241,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"4394:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:21","typeDescriptions":{}}},"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:21"},{"assignments":[3243],"declarations":[{"constant":false,"id":3243,"mutability":"mutable","name":"v","nameLocation":"4591:1:21","nodeType":"VariableDeclaration","scope":3264,"src":"4585:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3242,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3256,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3248,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"4610:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:21","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:21","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3244,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:21","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:21"},{"expression":{"arguments":[{"id":3258,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"4659:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3259,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"4665:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3260,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"4668:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3261,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"4671:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3257,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3374,"src":"4648:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3232,"id":3263,"nodeType":"Return","src":"4641:32:21"}]}]},"documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"3975:205:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3266,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:21","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"hash","nameLocation":"4222:4:21","nodeType":"VariableDeclaration","scope":3266,"src":"4214:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"r","nameLocation":"4244:1:21","nodeType":"VariableDeclaration","scope":3266,"src":"4236:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"vs","nameLocation":"4263:2:21","nodeType":"VariableDeclaration","scope":3266,"src":"4255:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:21"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:21","nodeType":"VariableDeclaration","scope":3266,"src":"4295:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3225,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"err","nameLocation":"4327:3:21","nodeType":"VariableDeclaration","scope":3266,"src":"4314:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3228,"nodeType":"UserDefinedTypeName","pathNode":{"id":3227,"name":"RecoverError","nameLocations":["4314:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"4314:12:21"},"referencedDeclaration":3120,"src":"4314:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:21","nodeType":"VariableDeclaration","scope":3266,"src":"4332:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:21"},"scope":3460,"src":"4185:505:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3298,"nodeType":"Block","src":"4903:164:21","statements":[{"assignments":[3279,3282,3284],"declarations":[{"constant":false,"id":3279,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:21","nodeType":"VariableDeclaration","scope":3298,"src":"4914:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3278,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"error","nameLocation":"4946:5:21","nodeType":"VariableDeclaration","scope":3298,"src":"4933:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3281,"nodeType":"UserDefinedTypeName","pathNode":{"id":3280,"name":"RecoverError","nameLocations":["4933:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"4933:12:21"},"referencedDeclaration":3120,"src":"4933:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:21","nodeType":"VariableDeclaration","scope":3298,"src":"4953:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3290,"initialValue":{"arguments":[{"id":3286,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"4984:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3287,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"4990:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3288,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"4993:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3285,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3266,"src":"4973:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:21"},{"expression":{"arguments":[{"id":3292,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"5018:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"id":3293,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"5025:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3291,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5006:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3120_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3295,"nodeType":"ExpressionStatement","src":"5006:28:21"},{"expression":{"id":3296,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"5051:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3277,"id":3297,"nodeType":"Return","src":"5044:16:21"}]},"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"4696:116:21","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3299,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:21","nodeType":"FunctionDefinition","parameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"hash","nameLocation":"4842:4:21","nodeType":"VariableDeclaration","scope":3299,"src":"4834:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"r","nameLocation":"4856:1:21","nodeType":"VariableDeclaration","scope":3299,"src":"4848:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"vs","nameLocation":"4867:2:21","nodeType":"VariableDeclaration","scope":3299,"src":"4859:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:21"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3299,"src":"4894:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3275,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:21"},"scope":3460,"src":"4817:250:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3373,"nodeType":"Block","src":"5382:1372:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3320,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"6278:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:21","typeDescriptions":{}}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3334,"nodeType":"IfStatement","src":"6266:164:21","trueBody":{"id":3333,"nodeType":"Block","src":"6351:79:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:21","typeDescriptions":{}}},"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3328,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"6385:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:21","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3119,"src":"6385:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"id":3330,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"6417:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3317,"id":3332,"nodeType":"Return","src":"6365:54:21"}]}},{"assignments":[3336],"declarations":[{"constant":false,"id":3336,"mutability":"mutable","name":"signer","nameLocation":"6532:6:21","nodeType":"VariableDeclaration","scope":3373,"src":"6524:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3335,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3343,"initialValue":{"arguments":[{"id":3338,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"6551:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3339,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6557:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3340,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"6560:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3341,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"6563:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3337,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:21","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"6579:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3345,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:21","typeDescriptions":{}}},"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3363,"nodeType":"IfStatement","src":"6575:113:21","trueBody":{"id":3362,"nodeType":"Block","src":"6601:87:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3350,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:21","typeDescriptions":{}}},"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3354,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"6635:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:21","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3117,"src":"6635:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:21","typeDescriptions":{}}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3317,"id":3361,"nodeType":"Return","src":"6615:62:21"}]}},{"expression":{"components":[{"id":3364,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"6706:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3365,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"6714:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:21","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3116,"src":"6714:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:21","typeDescriptions":{}}},"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3317,"id":3372,"nodeType":"Return","src":"6698:49:21"}]},"documentation":{"id":3300,"nodeType":"StructuredDocumentation","src":"5073:125:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3374,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:21","nodeType":"FunctionDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"hash","nameLocation":"5240:4:21","nodeType":"VariableDeclaration","scope":3374,"src":"5232:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"v","nameLocation":"5260:1:21","nodeType":"VariableDeclaration","scope":3374,"src":"5254:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3303,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"r","nameLocation":"5279:1:21","nodeType":"VariableDeclaration","scope":3374,"src":"5271:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"s","nameLocation":"5298:1:21","nodeType":"VariableDeclaration","scope":3374,"src":"5290:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:21"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:21","nodeType":"VariableDeclaration","scope":3374,"src":"5329:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3310,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"err","nameLocation":"5361:3:21","nodeType":"VariableDeclaration","scope":3374,"src":"5348:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3313,"nodeType":"UserDefinedTypeName","pathNode":{"id":3312,"name":"RecoverError","nameLocations":["5348:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"5348:12:21"},"referencedDeclaration":3120,"src":"5348:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:21","nodeType":"VariableDeclaration","scope":3374,"src":"5366:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:21"},"scope":3460,"src":"5203:1551:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"6981:166:21","statements":[{"assignments":[3389,3392,3394],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:21","nodeType":"VariableDeclaration","scope":3409,"src":"6992:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3388,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"error","nameLocation":"7024:5:21","nodeType":"VariableDeclaration","scope":3409,"src":"7011:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3391,"nodeType":"UserDefinedTypeName","pathNode":{"id":3390,"name":"RecoverError","nameLocations":["7011:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"7011:12:21"},"referencedDeclaration":3120,"src":"7011:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3394,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:21","nodeType":"VariableDeclaration","scope":3409,"src":"7031:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3401,"initialValue":{"arguments":[{"id":3396,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"7062:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3397,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"7068:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3398,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"7071:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3399,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"7074:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3395,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3374,"src":"7051:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:21"},{"expression":{"arguments":[{"id":3403,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"7098:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"id":3404,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"7105:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3402,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"7086:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3120_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3406,"nodeType":"ExpressionStatement","src":"7086:28:21"},{"expression":{"id":3407,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"7131:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3387,"id":3408,"nodeType":"Return","src":"7124:16:21"}]},"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"6760:122:21","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:21","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"hash","nameLocation":"6912:4:21","nodeType":"VariableDeclaration","scope":3410,"src":"6904:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"v","nameLocation":"6924:1:21","nodeType":"VariableDeclaration","scope":3410,"src":"6918:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3378,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"r","nameLocation":"6935:1:21","nodeType":"VariableDeclaration","scope":3410,"src":"6927:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"s","nameLocation":"6946:1:21","nodeType":"VariableDeclaration","scope":3410,"src":"6938:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:21"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3410,"src":"6972:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:21"},"scope":3460,"src":"6887:260:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3458,"nodeType":"Block","src":"7352:460:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3419,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"7366:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3420,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"7375:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:21","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3116,"src":"7375:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"7462:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3426,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"7471:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:21","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3117,"src":"7471:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"7567:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3434,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"7576:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:21","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3118,"src":"7576:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3445,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"7701:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3446,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"7710:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:21","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3119,"src":"7710:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3454,"nodeType":"IfStatement","src":"7697:109:21","trueBody":{"id":3453,"nodeType":"Block","src":"7742:64:21","statements":[{"errorCall":{"arguments":[{"id":3450,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"7786:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3449,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"7763:22:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3452,"nodeType":"RevertStatement","src":"7756:39:21"}]}},"id":3455,"nodeType":"IfStatement","src":"7563:243:21","trueBody":{"id":3444,"nodeType":"Block","src":"7613:78:21","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3440,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"7670:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:21","typeDescriptions":{}}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3437,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"7634:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3443,"nodeType":"RevertStatement","src":"7627:53:21"}]}},"id":3456,"nodeType":"IfStatement","src":"7458:348:21","trueBody":{"id":3432,"nodeType":"Block","src":"7502:55:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3429,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"7523:21:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3431,"nodeType":"RevertStatement","src":"7516:30:21"}]}},"id":3457,"nodeType":"IfStatement","src":"7362:444:21","trueBody":{"id":3424,"nodeType":"Block","src":"7397:55:21","statements":[{"functionReturnParameters":3418,"id":3423,"nodeType":"Return","src":"7411:7:21"}]}}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"7153:122:21","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3459,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:21","nodeType":"FunctionDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"error","nameLocation":"7314:5:21","nodeType":"VariableDeclaration","scope":3459,"src":"7301:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3413,"nodeType":"UserDefinedTypeName","pathNode":{"id":3412,"name":"RecoverError","nameLocations":["7301:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"7301:12:21"},"referencedDeclaration":3120,"src":"7301:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:21","nodeType":"VariableDeclaration","scope":3459,"src":"7321:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:21"},"returnParameters":{"id":3418,"nodeType":"ParameterList","parameters":[],"src":"7352:0:21"},"scope":3460,"src":"7280:532:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3461,"src":"344:7470:21","usedErrors":[3123,3128,3133],"usedEvents":[]}],"src":"112:7703:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3687],"IERC5267":[220],"MessageHashUtils":[4874],"ShortString":[2457],"ShortStrings":[2668]},"id":3688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3462,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":4875,"src":"139:56:22","symbolAliases":[{"foreign":{"id":3463,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"147:16:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":2669,"src":"196:62:22","symbolAliases":[{"foreign":{"id":3465,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"204:12:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3466,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"218:11:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":221,"src":"259:55:22","symbolAliases":[{"foreign":{"id":3468,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"267:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3471,"name":"IERC5267","nameLocations":["1988:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":220,"src":"1988:8:22"},"id":3472,"nodeType":"InheritanceSpecifier","src":"1988:8:22"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"316:1643:22","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3687,"linearizedBaseContracts":[3687,220],"name":"EIP712","nameLocation":"1978:6:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3474,"libraryName":{"id":3473,"name":"ShortStrings","nameLocations":["2009:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2668,"src":"2009:12:22"},"nodeType":"UsingForDirective","src":"2003:25:22"},{"constant":true,"id":3479,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:22","nodeType":"VariableDeclaration","scope":3687,"src":"2034:140:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3476,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3481,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:22","nodeType":"VariableDeclaration","scope":3687,"src":"2373:48:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3483,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:22","nodeType":"VariableDeclaration","scope":3687,"src":"2427:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3485,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:22","nodeType":"VariableDeclaration","scope":3687,"src":"2473:37:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3487,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:22","nodeType":"VariableDeclaration","scope":3687,"src":"2517:37:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3489,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:22","nodeType":"VariableDeclaration","scope":3687,"src":"2560:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3492,"mutability":"immutable","name":"_name","nameLocation":"2637:5:22","nodeType":"VariableDeclaration","scope":3687,"src":"2607:35:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":3491,"nodeType":"UserDefinedTypeName","pathNode":{"id":3490,"name":"ShortString","nameLocations":["2607:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2607:11:22"},"referencedDeclaration":2457,"src":"2607:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3495,"mutability":"immutable","name":"_version","nameLocation":"2678:8:22","nodeType":"VariableDeclaration","scope":3687,"src":"2648:38:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":3494,"nodeType":"UserDefinedTypeName","pathNode":{"id":3493,"name":"ShortString","nameLocations":["2648:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2648:11:22"},"referencedDeclaration":2457,"src":"2648:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3497,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:22","nodeType":"VariableDeclaration","scope":3687,"src":"2692:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3496,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3499,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:22","nodeType":"VariableDeclaration","scope":3687,"src":"2726:31:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3498,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3556,"nodeType":"Block","src":"3383:376:22","statements":[{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3507,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"3393:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3510,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"3432:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3508,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"3401:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:22","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2609,"src":"3401:30:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2457_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"src":"3393:53:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"id":3513,"nodeType":"ExpressionStatement","src":"3393:53:22"},{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3514,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"3456:8:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3517,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"3501:16:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3515,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"3467:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:22","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2609,"src":"3467:33:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2457_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"src":"3456:62:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"id":3520,"nodeType":"ExpressionStatement","src":"3456:62:22"},{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3521,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"3528:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3525,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"3558:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3523,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:22","typeDescriptions":{}}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3522,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3529,"nodeType":"ExpressionStatement","src":"3528:36:22"},{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3530,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"3574:14:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3534,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"3607:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3532,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:22","typeDescriptions":{}}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3531,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3538,"nodeType":"ExpressionStatement","src":"3574:42:22"},{"expression":{"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3539,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"3627:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3540,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:22","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3543,"nodeType":"ExpressionStatement","src":"3627:30:22"},{"expression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3544,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"3667:22:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3545,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"3692:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3548,"nodeType":"ExpressionStatement","src":"3667:48:22"},{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3549,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"3725:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3552,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}],"id":3551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:22","typeDescriptions":{}}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3555,"nodeType":"ExpressionStatement","src":"3725:27:22"}]},"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"2764:559:22","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3557,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"name","nameLocation":"3354:4:22","nodeType":"VariableDeclaration","scope":3557,"src":"3340:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3501,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"version","nameLocation":"3374:7:22","nodeType":"VariableDeclaration","scope":3557,"src":"3360:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3503,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:22"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[],"src":"3383:0:22"},"scope":3687,"src":"3328:431:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3582,"nodeType":"Block","src":"3907:200:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3565,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}],"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3563,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:22","typeDescriptions":{}}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3567,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"3938:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3569,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:22","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3571,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"3970:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3580,"nodeType":"Block","src":"4046:55:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3577,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"4067:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3562,"id":3579,"nodeType":"Return","src":"4060:30:22"}]},"id":3581,"nodeType":"IfStatement","src":"3917:184:22","trueBody":{"id":3576,"nodeType":"Block","src":"3986:54:22","statements":[{"expression":{"id":3574,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"4007:22:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3562,"id":3575,"nodeType":"Return","src":"4000:29:22"}]}}]},"documentation":{"id":3558,"nodeType":"StructuredDocumentation","src":"3765:75:22","text":" @dev Returns the domain separator for the current chain."},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:22","nodeType":"FunctionDefinition","parameters":{"id":3559,"nodeType":"ParameterList","parameters":[],"src":"3872:2:22"},"returnParameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"3898:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:22"},"scope":3687,"src":"3845:262:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3603,"nodeType":"Block","src":"4177:115:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":3591,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"4215:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3592,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"4226:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3593,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"4239:14:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3594,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:22","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3598,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3596,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:22","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3589,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:22","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:22","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3588,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3587,"id":3602,"nodeType":"Return","src":"4187:98:22"}]},"id":3604,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:22","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[],"src":"4143:2:22"},"returnParameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3604,"src":"4168:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:22"},"scope":3687,"src":"4113:179:22","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3619,"nodeType":"Block","src":"5003:90:22","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3614,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"5053:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3616,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"5075:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3612,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"5020:16:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4874_$","typeString":"type(library MessageHashUtils)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:22","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4873,"src":"5020:32:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3611,"id":3618,"nodeType":"Return","src":"5013:73:22"}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"4298:614:22","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:22","nodeType":"FunctionDefinition","parameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:22","nodeType":"VariableDeclaration","scope":3620,"src":"4943:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:22"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3620,"src":"4994:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:22"},"scope":3687,"src":"4917:176:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[219],"body":{"id":3661,"nodeType":"Block","src":"5472:229:22","statements":[{"expression":{"components":[{"hexValue":"0f","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3640,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"5533:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3642,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"5560:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3644,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:22","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3648,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}],"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:22","typeDescriptions":{}}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:22","typeDescriptions":{}}},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ArrayTypeName","src":"5672:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3638,"id":3660,"nodeType":"Return","src":"5482:212:22"}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"5099:40:22","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:22","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[],"src":"5165:2:22"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"fields","nameLocation":"5249:6:22","nodeType":"VariableDeclaration","scope":3662,"src":"5242:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3623,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"name","nameLocation":"5283:4:22","nodeType":"VariableDeclaration","scope":3662,"src":"5269:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3625,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"version","nameLocation":"5315:7:22","nodeType":"VariableDeclaration","scope":3662,"src":"5301:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3627,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:22","nodeType":"VariableDeclaration","scope":3662,"src":"5336:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:22","nodeType":"VariableDeclaration","scope":3662,"src":"5365:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3631,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"salt","nameLocation":"5412:4:22","nodeType":"VariableDeclaration","scope":3662,"src":"5404:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:22","nodeType":"VariableDeclaration","scope":3662,"src":"5430:27:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3636,"nodeType":"ArrayTypeName","src":"5430:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:22"},"scope":3687,"src":"5144:557:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3673,"nodeType":"Block","src":"6082:65:22","statements":[{"expression":{"arguments":[{"id":3670,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"6126:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3668,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6099:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:22","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2636,"src":"6099:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3667,"id":3672,"nodeType":"Return","src":"6092:48:22"}]},"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"5707:256:22","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3674,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:22","nodeType":"FunctionDefinition","parameters":{"id":3664,"nodeType":"ParameterList","parameters":[],"src":"6041:2:22"},"returnParameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3674,"src":"6067:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3665,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:22"},"scope":3687,"src":"6021:126:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3685,"nodeType":"Block","src":"6537:71:22","statements":[{"expression":{"arguments":[{"id":3682,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"6584:16:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3680,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"6554:8:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:22","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2636,"src":"6554:29:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3679,"id":3684,"nodeType":"Return","src":"6547:54:22"}]},"documentation":{"id":3675,"nodeType":"StructuredDocumentation","src":"6153:262:22","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:22","nodeType":"FunctionDefinition","parameters":{"id":3676,"nodeType":"ParameterList","parameters":[],"src":"6496:2:22"},"returnParameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3686,"src":"6522:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3677,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:22"},"scope":3687,"src":"6473:135:22","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3688,"src":"1960:4650:22","usedErrors":[2465,2467],"usedEvents":[200]}],"src":"113:6498:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[3727]},"id":3728,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3689,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"139:81:23","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":3727,"linearizedBaseContracts":[3727],"name":"Hashes","nameLocation":"229:6:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":3713,"nodeType":"Block","src":"588:85:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"605:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3701,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"609:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3708,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"661:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"664:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3707,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"641:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"641:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:61:23","trueExpression":{"arguments":[{"id":3704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"633:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"636:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3703,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"613:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3699,"id":3712,"nodeType":"Return","src":"598:68:23"}]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"242:257:23","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":3714,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:23","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"a","nameLocation":"542:1:23","nodeType":"VariableDeclaration","scope":3714,"src":"534:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"b","nameLocation":"553:1:23","nodeType":"VariableDeclaration","scope":3714,"src":"545:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:23"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3714,"src":"579:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:23"},"scope":3727,"src":"504:169:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3725,"nodeType":"Block","src":"881:151:23","statements":[{"AST":{"nativeSrc":"916:110:23","nodeType":"YulBlock","src":"916:110:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"937:4:23","nodeType":"YulLiteral","src":"937:4:23","type":"","value":"0x00"},{"name":"a","nativeSrc":"943:1:23","nodeType":"YulIdentifier","src":"943:1:23"}],"functionName":{"name":"mstore","nativeSrc":"930:6:23","nodeType":"YulIdentifier","src":"930:6:23"},"nativeSrc":"930:15:23","nodeType":"YulFunctionCall","src":"930:15:23"},"nativeSrc":"930:15:23","nodeType":"YulExpressionStatement","src":"930:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"965:4:23","nodeType":"YulLiteral","src":"965:4:23","type":"","value":"0x20"},{"name":"b","nativeSrc":"971:1:23","nodeType":"YulIdentifier","src":"971:1:23"}],"functionName":{"name":"mstore","nativeSrc":"958:6:23","nodeType":"YulIdentifier","src":"958:6:23"},"nativeSrc":"958:15:23","nodeType":"YulFunctionCall","src":"958:15:23"},"nativeSrc":"958:15:23","nodeType":"YulExpressionStatement","src":"958:15:23"},{"nativeSrc":"986:30:23","nodeType":"YulAssignment","src":"986:30:23","value":{"arguments":[{"kind":"number","nativeSrc":"1005:4:23","nodeType":"YulLiteral","src":"1005:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1011:4:23","nodeType":"YulLiteral","src":"1011:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"995:9:23","nodeType":"YulIdentifier","src":"995:9:23"},"nativeSrc":"995:21:23","nodeType":"YulFunctionCall","src":"995:21:23"},"variableNames":[{"name":"value","nativeSrc":"986:5:23","nodeType":"YulIdentifier","src":"986:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3717,"isOffset":false,"isSlot":false,"src":"943:1:23","valueSize":1},{"declaration":3719,"isOffset":false,"isSlot":false,"src":"971:1:23","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"986:5:23","valueSize":1}],"flags":["memory-safe"],"id":3724,"nodeType":"InlineAssembly","src":"891:135:23"}]},"documentation":{"id":3715,"nodeType":"StructuredDocumentation","src":"679:109:23","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientKeccak256","nameLocation":"802:19:23","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"a","nameLocation":"830:1:23","nodeType":"VariableDeclaration","scope":3726,"src":"822:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"822:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"b","nameLocation":"841:1:23","nodeType":"VariableDeclaration","scope":3726,"src":"833:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"833:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"821:22:23"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"value","nameLocation":"874:5:23","nodeType":"VariableDeclaration","scope":3726,"src":"866:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"866:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"865:15:23"},"scope":3727,"src":"793:239:23","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3728,"src":"221:813:23","usedErrors":[],"usedEvents":[]}],"src":"113:922:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[3727],"MerkleProof":[4800]},"id":4801,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3729,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":3731,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4801,"sourceUnit":3728,"src":"232:36:24","symbolAliases":[{"foreign":{"id":3730,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"240:6:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":3732,"nodeType":"StructuredDocumentation","src":"270:1082:24","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":4800,"linearizedBaseContracts":[4800],"name":"MerkleProof","nameLocation":"1361:11:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3733,"nodeType":"StructuredDocumentation","src":"1379:60:24","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":3735,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:24","nodeType":"ErrorDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[],"src":"1478:2:24"},"src":"1444:37:24"},{"body":{"id":3755,"nodeType":"Block","src":"1999:57:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3749,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"2029:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3750,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"2036:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3748,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[3797,3879],"referencedDeclaration":3797,"src":"2016:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3752,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"2045:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3747,"id":3754,"nodeType":"Return","src":"2009:40:24"}]},"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"1487:410:24","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":3756,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:24","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"proof","nameLocation":"1935:5:24","nodeType":"VariableDeclaration","scope":3756,"src":"1918:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3738,"nodeType":"ArrayTypeName","src":"1918:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"root","nameLocation":"1950:4:24","nodeType":"VariableDeclaration","scope":3756,"src":"1942:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:24","nodeType":"VariableDeclaration","scope":3756,"src":"1956:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:24"},"returnParameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3756,"src":"1993:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3745,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:24"},"scope":4800,"src":"1902:154:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3796,"nodeType":"Block","src":"2549:216:24","statements":[{"assignments":[3768],"declarations":[{"constant":false,"id":3768,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:24","nodeType":"VariableDeclaration","scope":3796,"src":"2559:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3770,"initialValue":{"id":3769,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"2582:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:24"},{"body":{"id":3792,"nodeType":"Block","src":"2639:91:24","statements":[{"expression":{"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3782,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2653:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3785,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2696:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3786,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"2710:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3788,"indexExpression":{"id":3787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2716:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3783,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"2668:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3727_$","typeString":"type(library Hashes)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:24","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"2668:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3791,"nodeType":"ExpressionStatement","src":"2653:66:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2616:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3776,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"2620:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:24","memberName":"length","nodeType":"MemberAccess","src":"2620:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3793,"initializationExpression":{"assignments":[3772],"declarations":[{"constant":false,"id":3772,"mutability":"mutable","name":"i","nameLocation":"2609:1:24","nodeType":"VariableDeclaration","scope":3793,"src":"2601:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3774,"initialValue":{"hexValue":"30","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:24","subExpression":{"id":3779,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2634:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3781,"nodeType":"ExpressionStatement","src":"2634:3:24"},"nodeType":"ForStatement","src":"2596:134:24"},{"expression":{"id":3794,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2746:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3766,"id":3795,"nodeType":"Return","src":"2739:19:24"}]},"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"2062:390:24","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":3797,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:24","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"proof","nameLocation":"2496:5:24","nodeType":"VariableDeclaration","scope":3797,"src":"2479:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3759,"nodeType":"ArrayTypeName","src":"2479:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:24","nodeType":"VariableDeclaration","scope":3797,"src":"2503:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:24"},"returnParameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3797,"src":"2540:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:24"},"scope":4800,"src":"2457:308:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3828,"nodeType":"Block","src":"3376:65:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3821,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"3406:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3822,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"3413:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3823,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"3419:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":3820,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[3797,3879],"referencedDeclaration":3879,"src":"3393:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3825,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"3430:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3819,"id":3827,"nodeType":"Return","src":"3386:48:24"}]},"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"2771:407:24","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:24","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"proof","nameLocation":"3225:5:24","nodeType":"VariableDeclaration","scope":3829,"src":"3208:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3800,"nodeType":"ArrayTypeName","src":"3208:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"root","nameLocation":"3248:4:24","nodeType":"VariableDeclaration","scope":3829,"src":"3240:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:24","nodeType":"VariableDeclaration","scope":3829,"src":"3262:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:24","nodeType":"VariableDeclaration","scope":3829,"src":"3284:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3814,"nodeType":"FunctionTypeName","parameterTypes":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"3293:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"3302:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:24"},"returnParameterTypes":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"3325:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:24"},"src":"3284:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:24"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"3370:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3817,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:24"},"scope":4800,"src":"3183:258:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3878,"nodeType":"Block","src":"4019:195:24","statements":[{"assignments":[3851],"declarations":[{"constant":false,"id":3851,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:24","nodeType":"VariableDeclaration","scope":3878,"src":"4029:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3853,"initialValue":{"id":3852,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"4052:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:24"},{"body":{"id":3874,"nodeType":"Block","src":"4109:70:24","statements":[{"expression":{"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3865,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4123:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3867,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4145:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3868,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"4159:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3870,"indexExpression":{"id":3869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"4165:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3866,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"4138:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3873,"nodeType":"ExpressionStatement","src":"4123:45:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"4086:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3859,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"4090:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:24","memberName":"length","nodeType":"MemberAccess","src":"4090:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3875,"initializationExpression":{"assignments":[3855],"declarations":[{"constant":false,"id":3855,"mutability":"mutable","name":"i","nameLocation":"4079:1:24","nodeType":"VariableDeclaration","scope":3875,"src":"4071:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3857,"initialValue":{"hexValue":"30","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:24","subExpression":{"id":3862,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"4104:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3864,"nodeType":"ExpressionStatement","src":"4104:3:24"},"nodeType":"ForStatement","src":"4066:113:24"},{"expression":{"id":3876,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4195:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3849,"id":3877,"nodeType":"Return","src":"4188:19:24"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"3447:387:24","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":3879,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:24","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"proof","nameLocation":"3887:5:24","nodeType":"VariableDeclaration","scope":3879,"src":"3870:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3832,"nodeType":"ArrayTypeName","src":"3870:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:24","nodeType":"VariableDeclaration","scope":3879,"src":"3902:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:24","nodeType":"VariableDeclaration","scope":3879,"src":"3924:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3844,"nodeType":"FunctionTypeName","parameterTypes":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"3933:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"3942:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:24"},"returnParameterTypes":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"3965:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:24"},"src":"3924:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:24"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3879,"src":"4010:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:24"},"scope":4800,"src":"3839:375:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3899,"nodeType":"Block","src":"4744:65:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3893,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"4782:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3894,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4789:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3892,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[3941,4023],"referencedDeclaration":3941,"src":"4761:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3896,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"4798:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3891,"id":3898,"nodeType":"Return","src":"4754:48:24"}]},"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"4220:412:24","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":3900,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:24","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"proof","nameLocation":"4680:5:24","nodeType":"VariableDeclaration","scope":3900,"src":"4661:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3882,"nodeType":"ArrayTypeName","src":"4661:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"root","nameLocation":"4695:4:24","nodeType":"VariableDeclaration","scope":3900,"src":"4687:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3887,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:24","nodeType":"VariableDeclaration","scope":3900,"src":"4701:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:24"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3900,"src":"4738:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3889,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:24"},"scope":4800,"src":"4637:172:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3940,"nodeType":"Block","src":"5314:216:24","statements":[{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:24","nodeType":"VariableDeclaration","scope":3940,"src":"5324:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3914,"initialValue":{"id":3913,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"5347:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:24"},{"body":{"id":3936,"nodeType":"Block","src":"5404:91:24","statements":[{"expression":{"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3926,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5418:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3929,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5461:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3930,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"5475:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3932,"indexExpression":{"id":3931,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5481:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3927,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"5433:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3727_$","typeString":"type(library Hashes)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:24","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"5433:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3935,"nodeType":"ExpressionStatement","src":"5418:66:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3919,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5381:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3920,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"5385:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:24","memberName":"length","nodeType":"MemberAccess","src":"5385:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3937,"initializationExpression":{"assignments":[3916],"declarations":[{"constant":false,"id":3916,"mutability":"mutable","name":"i","nameLocation":"5374:1:24","nodeType":"VariableDeclaration","scope":3937,"src":"5366:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3918,"initialValue":{"hexValue":"30","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:24","subExpression":{"id":3923,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5399:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3925,"nodeType":"ExpressionStatement","src":"5399:3:24"},"nodeType":"ForStatement","src":"5361:134:24"},{"expression":{"id":3938,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5511:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3910,"id":3939,"nodeType":"Return","src":"5504:19:24"}]},"documentation":{"id":3901,"nodeType":"StructuredDocumentation","src":"4815:392:24","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":3941,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:24","nodeType":"FunctionDefinition","parameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"proof","nameLocation":"5261:5:24","nodeType":"VariableDeclaration","scope":3941,"src":"5242:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3903,"nodeType":"ArrayTypeName","src":"5242:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3906,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:24","nodeType":"VariableDeclaration","scope":3941,"src":"5268:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:24"},"returnParameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3941,"src":"5305:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:24"},"scope":4800,"src":"5212:318:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3972,"nodeType":"Block","src":"6153:73:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3965,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"6191:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3966,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"6198:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3967,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"6204:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":3964,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[3941,4023],"referencedDeclaration":4023,"src":"6170:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3969,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"6215:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3963,"id":3971,"nodeType":"Return","src":"6163:56:24"}]},"documentation":{"id":3942,"nodeType":"StructuredDocumentation","src":"5536:409:24","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":3973,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:24","nodeType":"FunctionDefinition","parameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"proof","nameLocation":"6002:5:24","nodeType":"VariableDeclaration","scope":3973,"src":"5983:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3944,"nodeType":"ArrayTypeName","src":"5983:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"root","nameLocation":"6025:4:24","nodeType":"VariableDeclaration","scope":3973,"src":"6017:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:24","nodeType":"VariableDeclaration","scope":3973,"src":"6039:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:24","nodeType":"VariableDeclaration","scope":3973,"src":"6061:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3958,"nodeType":"FunctionTypeName","parameterTypes":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"6070:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"6079:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:24"},"returnParameterTypes":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"6102:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:24"},"src":"6061:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:24"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"6147:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3961,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:24"},"scope":4800,"src":"5950:276:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4022,"nodeType":"Block","src":"6816:195:24","statements":[{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:24","nodeType":"VariableDeclaration","scope":4022,"src":"6826:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3997,"initialValue":{"id":3996,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"6849:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:24"},{"body":{"id":4018,"nodeType":"Block","src":"6906:70:24","statements":[{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4009,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"6920:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4011,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"6942:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4012,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"6956:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4014,"indexExpression":{"id":4013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6962:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4010,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"6935:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4017,"nodeType":"ExpressionStatement","src":"6920:45:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6883:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4003,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"6887:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:24","memberName":"length","nodeType":"MemberAccess","src":"6887:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4019,"initializationExpression":{"assignments":[3999],"declarations":[{"constant":false,"id":3999,"mutability":"mutable","name":"i","nameLocation":"6876:1:24","nodeType":"VariableDeclaration","scope":4019,"src":"6868:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4001,"initialValue":{"hexValue":"30","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:24","subExpression":{"id":4006,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6901:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"6901:3:24"},"nodeType":"ForStatement","src":"6863:113:24"},{"expression":{"id":4020,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"6992:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3993,"id":4021,"nodeType":"Return","src":"6985:19:24"}]},"documentation":{"id":3974,"nodeType":"StructuredDocumentation","src":"6232:389:24","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:24","nodeType":"FunctionDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"proof","nameLocation":"6684:5:24","nodeType":"VariableDeclaration","scope":4023,"src":"6665:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3976,"nodeType":"ArrayTypeName","src":"6665:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:24","nodeType":"VariableDeclaration","scope":4023,"src":"6699:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:24","nodeType":"VariableDeclaration","scope":4023,"src":"6721:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3988,"nodeType":"FunctionTypeName","parameterTypes":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"6730:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"6739:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:24"},"returnParameterTypes":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"6762:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:24"},"src":"6721:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:24"},"returnParameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4023,"src":"6807:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:24"},"scope":4800,"src":"6626:385:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"7797:76:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4041,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"7832:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4042,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"7839:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":4043,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"7851:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4040,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[4207,4411],"referencedDeclaration":4207,"src":"7814:17:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4045,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"7862:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4039,"id":4047,"nodeType":"Return","src":"7807:59:24"}]},"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"7017:593:24","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:24","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"proof","nameLocation":"7667:5:24","nodeType":"VariableDeclaration","scope":4049,"src":"7650:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4026,"nodeType":"ArrayTypeName","src":"7650:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4030,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:24","nodeType":"VariableDeclaration","scope":4049,"src":"7682:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4028,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4029,"nodeType":"ArrayTypeName","src":"7682:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"root","nameLocation":"7724:4:24","nodeType":"VariableDeclaration","scope":4049,"src":"7716:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:24","nodeType":"VariableDeclaration","scope":4049,"src":"7738:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4034,"nodeType":"ArrayTypeName","src":"7738:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:24"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"7791:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4037,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:24"},"scope":4800,"src":"7615:258:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4206,"nodeType":"Block","src":"9159:2104:24","statements":[{"assignments":[4065],"declarations":[{"constant":false,"id":4065,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:24","nodeType":"VariableDeclaration","scope":4206,"src":"9543:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4064,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4068,"initialValue":{"expression":{"id":4066,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"9563:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:24","memberName":"length","nodeType":"MemberAccess","src":"9563:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:24"},{"assignments":[4070],"declarations":[{"constant":false,"id":4070,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:24","nodeType":"VariableDeclaration","scope":4206,"src":"9586:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4073,"initialValue":{"expression":{"id":4071,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"9610:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:24","memberName":"length","nodeType":"MemberAccess","src":"9610:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"9675:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4075,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"9687:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:24","memberName":"length","nodeType":"MemberAccess","src":"9687:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4078,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"9703:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4086,"nodeType":"IfStatement","src":"9671:113:24","trueBody":{"id":4085,"nodeType":"Block","src":"9722:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4082,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"9743:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4084,"nodeType":"RevertStatement","src":"9736:37:24"}]}},{"assignments":[4091],"declarations":[{"constant":false,"id":4091,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:24","nodeType":"VariableDeclaration","scope":4206,"src":"10028:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4090,"nodeType":"ArrayTypeName","src":"10028:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4097,"initialValue":{"arguments":[{"id":4095,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10068:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4093,"nodeType":"ArrayTypeName","src":"10058:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:24"},{"assignments":[4099],"declarations":[{"constant":false,"id":4099,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:24","nodeType":"VariableDeclaration","scope":4206,"src":"10092:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4098,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4101,"initialValue":{"hexValue":"30","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:24"},{"assignments":[4103],"declarations":[{"constant":false,"id":4103,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:24","nodeType":"VariableDeclaration","scope":4206,"src":"10121:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4105,"initialValue":{"hexValue":"30","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:24"},{"assignments":[4107],"declarations":[{"constant":false,"id":4107,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:24","nodeType":"VariableDeclaration","scope":4206,"src":"10150:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4109,"initialValue":{"hexValue":"30","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:24"},{"body":{"id":4169,"nodeType":"Block","src":"10590:310:24","statements":[{"assignments":[4121],"declarations":[{"constant":false,"id":4121,"mutability":"mutable","name":"a","nameLocation":"10612:1:24","nodeType":"VariableDeclaration","scope":4169,"src":"10604:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4134,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10616:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4123,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"10626:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4129,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"10658:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4132,"indexExpression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:24","subExpression":{"id":4130,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"10665:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:24","trueExpression":{"baseExpression":{"id":4125,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"10638:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4128,"indexExpression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:24","subExpression":{"id":4126,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10645:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:24"},{"assignments":[4136],"declarations":[{"constant":false,"id":4136,"mutability":"mutable","name":"b","nameLocation":"10697:1:24","nodeType":"VariableDeclaration","scope":4169,"src":"10689:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4158,"initialValue":{"condition":{"baseExpression":{"id":4137,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"10701:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4139,"indexExpression":{"id":4138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10712:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4153,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"10813:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4156,"indexExpression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:24","subExpression":{"id":4154,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"10819:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:24","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10734:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4141,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"10744:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4147,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"10776:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4150,"indexExpression":{"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:24","subExpression":{"id":4148,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"10783:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:24","trueExpression":{"baseExpression":{"id":4143,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"10756:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4146,"indexExpression":{"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:24","subExpression":{"id":4144,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10763:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:24"},{"expression":{"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4159,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"10844:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4161,"indexExpression":{"id":4160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10851:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"10884:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4165,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"10887:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4162,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"10856:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3727_$","typeString":"type(library Hashes)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:24","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"10856:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4168,"nodeType":"ExpressionStatement","src":"10844:45:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10566:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4115,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10570:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4170,"initializationExpression":{"assignments":[4111],"declarations":[{"constant":false,"id":4111,"mutability":"mutable","name":"i","nameLocation":"10559:1:24","nodeType":"VariableDeclaration","scope":4170,"src":"10551:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4113,"initialValue":{"hexValue":"30","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:24","subExpression":{"id":4117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10585:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4119,"nodeType":"ExpressionStatement","src":"10585:3:24"},"nodeType":"ForStatement","src":"10546:354:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4171,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10914:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4191,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"11155:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4203,"nodeType":"Block","src":"11217:40:24","statements":[{"expression":{"baseExpression":{"id":4199,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"11238:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4201,"indexExpression":{"hexValue":"30","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4063,"id":4202,"nodeType":"Return","src":"11231:15:24"}]},"id":4204,"nodeType":"IfStatement","src":"11151:106:24","trueBody":{"id":4198,"nodeType":"Block","src":"11170:41:24","statements":[{"expression":{"baseExpression":{"id":4194,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"11191:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4196,"indexExpression":{"hexValue":"30","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4063,"id":4197,"nodeType":"Return","src":"11184:16:24"}]}},"id":4205,"nodeType":"IfStatement","src":"10910:347:24","trueBody":{"id":4190,"nodeType":"Block","src":"10933:212:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"10951:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4175,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"10963:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:24","memberName":"length","nodeType":"MemberAccess","src":"10963:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4182,"nodeType":"IfStatement","src":"10947:100:24","trueBody":{"id":4181,"nodeType":"Block","src":"10977:70:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4178,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"11002:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4180,"nodeType":"RevertStatement","src":"10995:37:24"}]}},{"id":4189,"nodeType":"UncheckedBlock","src":"11060:75:24","statements":[{"expression":{"baseExpression":{"id":4183,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"11095:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4187,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"11102:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4063,"id":4188,"nodeType":"Return","src":"11088:32:24"}]}]}}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"7879:1100:24","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4207,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:24","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"proof","nameLocation":"9037:5:24","nodeType":"VariableDeclaration","scope":4207,"src":"9020:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4052,"nodeType":"ArrayTypeName","src":"9020:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:24","nodeType":"VariableDeclaration","scope":4207,"src":"9052:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4054,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4055,"nodeType":"ArrayTypeName","src":"9052:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:24","nodeType":"VariableDeclaration","scope":4207,"src":"9086:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4058,"nodeType":"ArrayTypeName","src":"9086:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:24"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:24","nodeType":"VariableDeclaration","scope":4207,"src":"9139:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:24"},"scope":4800,"src":"8984:2279:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"12112:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4235,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"12147:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4236,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"12154:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":4237,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"12166:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4238,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"12174:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4234,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[4207,4411],"referencedDeclaration":4411,"src":"12129:17:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4240,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"12185:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4233,"id":4242,"nodeType":"Return","src":"12122:67:24"}]},"documentation":{"id":4208,"nodeType":"StructuredDocumentation","src":"11269:590:24","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:24","nodeType":"FunctionDefinition","parameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"proof","nameLocation":"11916:5:24","nodeType":"VariableDeclaration","scope":4244,"src":"11899:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4210,"nodeType":"ArrayTypeName","src":"11899:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4214,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:24","nodeType":"VariableDeclaration","scope":4244,"src":"11931:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4212,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4213,"nodeType":"ArrayTypeName","src":"11931:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4216,"mutability":"mutable","name":"root","nameLocation":"11973:4:24","nodeType":"VariableDeclaration","scope":4244,"src":"11965:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:24","nodeType":"VariableDeclaration","scope":4244,"src":"11987:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4218,"nodeType":"ArrayTypeName","src":"11987:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:24","nodeType":"VariableDeclaration","scope":4244,"src":"12020:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4228,"nodeType":"FunctionTypeName","parameterTypes":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4228,"src":"12029:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4228,"src":"12038:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:24"},"returnParameterTypes":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4228,"src":"12061:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:24"},"src":"12020:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:24"},"returnParameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"12106:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4231,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:24"},"scope":4800,"src":"11864:332:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4410,"nodeType":"Block","src":"13545:2083:24","statements":[{"assignments":[4270],"declarations":[{"constant":false,"id":4270,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:24","nodeType":"VariableDeclaration","scope":4410,"src":"13929:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4273,"initialValue":{"expression":{"id":4271,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"13949:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:24","memberName":"length","nodeType":"MemberAccess","src":"13949:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:24"},{"assignments":[4275],"declarations":[{"constant":false,"id":4275,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:24","nodeType":"VariableDeclaration","scope":4410,"src":"13972:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4278,"initialValue":{"expression":{"id":4276,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"13996:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:24","memberName":"length","nodeType":"MemberAccess","src":"13996:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"14061:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4280,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"14073:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:24","memberName":"length","nodeType":"MemberAccess","src":"14073:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4283,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"14089:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4291,"nodeType":"IfStatement","src":"14057:113:24","trueBody":{"id":4290,"nodeType":"Block","src":"14108:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4287,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"14129:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4289,"nodeType":"RevertStatement","src":"14122:37:24"}]}},{"assignments":[4296],"declarations":[{"constant":false,"id":4296,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:24","nodeType":"VariableDeclaration","scope":4410,"src":"14414:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4295,"nodeType":"ArrayTypeName","src":"14414:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4302,"initialValue":{"arguments":[{"id":4300,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"14454:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4298,"nodeType":"ArrayTypeName","src":"14444:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:24"},{"assignments":[4304],"declarations":[{"constant":false,"id":4304,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:24","nodeType":"VariableDeclaration","scope":4410,"src":"14478:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4306,"initialValue":{"hexValue":"30","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:24"},{"assignments":[4308],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:24","nodeType":"VariableDeclaration","scope":4410,"src":"14507:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4310,"initialValue":{"hexValue":"30","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:24"},{"assignments":[4312],"declarations":[{"constant":false,"id":4312,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:24","nodeType":"VariableDeclaration","scope":4410,"src":"14536:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4311,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4314,"initialValue":{"hexValue":"30","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:24"},{"body":{"id":4373,"nodeType":"Block","src":"14976:289:24","statements":[{"assignments":[4326],"declarations":[{"constant":false,"id":4326,"mutability":"mutable","name":"a","nameLocation":"14998:1:24","nodeType":"VariableDeclaration","scope":4373,"src":"14990:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4339,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"15002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4328,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"15012:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4334,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15044:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4337,"indexExpression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:24","subExpression":{"id":4335,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"15051:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:24","trueExpression":{"baseExpression":{"id":4330,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"15024:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4333,"indexExpression":{"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:24","subExpression":{"id":4331,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"15031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:24"},{"assignments":[4341],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"b","nameLocation":"15083:1:24","nodeType":"VariableDeclaration","scope":4373,"src":"15075:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4363,"initialValue":{"condition":{"baseExpression":{"id":4342,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"15087:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4344,"indexExpression":{"id":4343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"15098:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4358,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"15199:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4361,"indexExpression":{"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:24","subExpression":{"id":4359,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"15205:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:24","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"15120:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4346,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"15130:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4352,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15162:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4355,"indexExpression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:24","subExpression":{"id":4353,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"15169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:24","trueExpression":{"baseExpression":{"id":4348,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"15142:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4351,"indexExpression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:24","subExpression":{"id":4349,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"15149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:24"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4364,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15230:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4366,"indexExpression":{"id":4365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"15237:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"15249:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"15252:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4367,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"15242:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4372,"nodeType":"ExpressionStatement","src":"15230:24:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"14952:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4320,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"14956:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"initializationExpression":{"assignments":[4316],"declarations":[{"constant":false,"id":4316,"mutability":"mutable","name":"i","nameLocation":"14945:1:24","nodeType":"VariableDeclaration","scope":4374,"src":"14937:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4318,"initialValue":{"hexValue":"30","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:24","subExpression":{"id":4322,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"14971:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"14971:3:24"},"nodeType":"ForStatement","src":"14932:333:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"15279:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4395,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"15520:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4407,"nodeType":"Block","src":"15582:40:24","statements":[{"expression":{"baseExpression":{"id":4403,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"15603:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4405,"indexExpression":{"hexValue":"30","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4268,"id":4406,"nodeType":"Return","src":"15596:15:24"}]},"id":4408,"nodeType":"IfStatement","src":"15516:106:24","trueBody":{"id":4402,"nodeType":"Block","src":"15535:41:24","statements":[{"expression":{"baseExpression":{"id":4398,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"15556:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4400,"indexExpression":{"hexValue":"30","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4268,"id":4401,"nodeType":"Return","src":"15549:16:24"}]}},"id":4409,"nodeType":"IfStatement","src":"15275:347:24","trueBody":{"id":4394,"nodeType":"Block","src":"15298:212:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"15316:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4379,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"15328:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:24","memberName":"length","nodeType":"MemberAccess","src":"15328:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4386,"nodeType":"IfStatement","src":"15312:100:24","trueBody":{"id":4385,"nodeType":"Block","src":"15342:70:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4382,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"15367:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4384,"nodeType":"RevertStatement","src":"15360:37:24"}]}},{"id":4393,"nodeType":"UncheckedBlock","src":"15425:75:24","statements":[{"expression":{"baseExpression":{"id":4387,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15460:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4391,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"15467:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4268,"id":4392,"nodeType":"Return","src":"15453:32:24"}]}]}}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"12202:1097:24","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4411,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:24","nodeType":"FunctionDefinition","parameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"proof","nameLocation":"13357:5:24","nodeType":"VariableDeclaration","scope":4411,"src":"13340:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4247,"nodeType":"ArrayTypeName","src":"13340:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:24","nodeType":"VariableDeclaration","scope":4411,"src":"13372:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4249,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4250,"nodeType":"ArrayTypeName","src":"13372:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:24","nodeType":"VariableDeclaration","scope":4411,"src":"13406:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4253,"nodeType":"ArrayTypeName","src":"13406:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4264,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:24","nodeType":"VariableDeclaration","scope":4411,"src":"13439:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4263,"nodeType":"FunctionTypeName","parameterTypes":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"13448:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"13457:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:24"},"returnParameterTypes":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"13480:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:24"},"src":"13439:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:24"},"returnParameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:24","nodeType":"VariableDeclaration","scope":4411,"src":"13525:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:24"},"scope":4800,"src":"13304:2324:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4436,"nodeType":"Block","src":"16436:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4429,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"16479:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4430,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"16486:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4431,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"16498:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4428,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4595,4799],"referencedDeclaration":4595,"src":"16453:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4433,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"16509:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4427,"id":4435,"nodeType":"Return","src":"16446:67:24"}]},"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"15634:603:24","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":4437,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:24","nodeType":"FunctionDefinition","parameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"proof","nameLocation":"16304:5:24","nodeType":"VariableDeclaration","scope":4437,"src":"16285:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4414,"nodeType":"ArrayTypeName","src":"16285:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:24","nodeType":"VariableDeclaration","scope":4437,"src":"16319:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4416,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4417,"nodeType":"ArrayTypeName","src":"16319:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"root","nameLocation":"16363:4:24","nodeType":"VariableDeclaration","scope":4437,"src":"16355:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4423,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:24","nodeType":"VariableDeclaration","scope":4437,"src":"16377:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4422,"nodeType":"ArrayTypeName","src":"16377:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:24"},"returnParameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4437,"src":"16430:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4425,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:24"},"scope":4800,"src":"16242:278:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4594,"nodeType":"Block","src":"17820:2104:24","statements":[{"assignments":[4453],"declarations":[{"constant":false,"id":4453,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:24","nodeType":"VariableDeclaration","scope":4594,"src":"18204:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4456,"initialValue":{"expression":{"id":4454,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"18224:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:24","memberName":"length","nodeType":"MemberAccess","src":"18224:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:24"},{"assignments":[4458],"declarations":[{"constant":false,"id":4458,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:24","nodeType":"VariableDeclaration","scope":4594,"src":"18247:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4461,"initialValue":{"expression":{"id":4459,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"18271:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:24","memberName":"length","nodeType":"MemberAccess","src":"18271:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4462,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"18336:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4463,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"18348:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:24","memberName":"length","nodeType":"MemberAccess","src":"18348:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4466,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"18364:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4474,"nodeType":"IfStatement","src":"18332:113:24","trueBody":{"id":4473,"nodeType":"Block","src":"18383:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4470,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"18404:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4472,"nodeType":"RevertStatement","src":"18397:37:24"}]}},{"assignments":[4479],"declarations":[{"constant":false,"id":4479,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:24","nodeType":"VariableDeclaration","scope":4594,"src":"18689:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4478,"nodeType":"ArrayTypeName","src":"18689:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4485,"initialValue":{"arguments":[{"id":4483,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"18729:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4481,"nodeType":"ArrayTypeName","src":"18719:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:24"},{"assignments":[4487],"declarations":[{"constant":false,"id":4487,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:24","nodeType":"VariableDeclaration","scope":4594,"src":"18753:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4486,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4489,"initialValue":{"hexValue":"30","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:24"},{"assignments":[4491],"declarations":[{"constant":false,"id":4491,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:24","nodeType":"VariableDeclaration","scope":4594,"src":"18782:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4493,"initialValue":{"hexValue":"30","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:24"},{"assignments":[4495],"declarations":[{"constant":false,"id":4495,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:24","nodeType":"VariableDeclaration","scope":4594,"src":"18811:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4497,"initialValue":{"hexValue":"30","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:24"},{"body":{"id":4557,"nodeType":"Block","src":"19251:310:24","statements":[{"assignments":[4509],"declarations":[{"constant":false,"id":4509,"mutability":"mutable","name":"a","nameLocation":"19273:1:24","nodeType":"VariableDeclaration","scope":4557,"src":"19265:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4522,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19277:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4511,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"19287:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4517,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"19319:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4520,"indexExpression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:24","subExpression":{"id":4518,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"19326:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:24","trueExpression":{"baseExpression":{"id":4513,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"19299:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4516,"indexExpression":{"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:24","subExpression":{"id":4514,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19306:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:24"},{"assignments":[4524],"declarations":[{"constant":false,"id":4524,"mutability":"mutable","name":"b","nameLocation":"19358:1:24","nodeType":"VariableDeclaration","scope":4557,"src":"19350:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4546,"initialValue":{"condition":{"baseExpression":{"id":4525,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"19362:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4527,"indexExpression":{"id":4526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"19373:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4541,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19474:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4544,"indexExpression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:24","subExpression":{"id":4542,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"19480:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:24","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19395:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4529,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"19405:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4535,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"19437:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4538,"indexExpression":{"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:24","subExpression":{"id":4536,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"19444:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:24","trueExpression":{"baseExpression":{"id":4531,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"19417:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4534,"indexExpression":{"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:24","subExpression":{"id":4532,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19424:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:24"},{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4547,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"19505:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4549,"indexExpression":{"id":4548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"19512:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"19545:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"19548:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4550,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"19517:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3727_$","typeString":"type(library Hashes)"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:24","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"19517:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4556,"nodeType":"ExpressionStatement","src":"19505:45:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"19227:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4503,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"19231:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4558,"initializationExpression":{"assignments":[4499],"declarations":[{"constant":false,"id":4499,"mutability":"mutable","name":"i","nameLocation":"19220:1:24","nodeType":"VariableDeclaration","scope":4558,"src":"19212:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4501,"initialValue":{"hexValue":"30","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:24","subExpression":{"id":4505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"19246:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4507,"nodeType":"ExpressionStatement","src":"19246:3:24"},"nodeType":"ForStatement","src":"19207:354:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"19575:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"19816:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4591,"nodeType":"Block","src":"19878:40:24","statements":[{"expression":{"baseExpression":{"id":4587,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19899:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4589,"indexExpression":{"hexValue":"30","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4451,"id":4590,"nodeType":"Return","src":"19892:15:24"}]},"id":4592,"nodeType":"IfStatement","src":"19812:106:24","trueBody":{"id":4586,"nodeType":"Block","src":"19831:41:24","statements":[{"expression":{"baseExpression":{"id":4582,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"19852:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4584,"indexExpression":{"hexValue":"30","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4451,"id":4585,"nodeType":"Return","src":"19845:16:24"}]}},"id":4593,"nodeType":"IfStatement","src":"19571:347:24","trueBody":{"id":4578,"nodeType":"Block","src":"19594:212:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"19612:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4563,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19624:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:24","memberName":"length","nodeType":"MemberAccess","src":"19624:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"nodeType":"IfStatement","src":"19608:100:24","trueBody":{"id":4569,"nodeType":"Block","src":"19638:70:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4566,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19663:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4568,"nodeType":"RevertStatement","src":"19656:37:24"}]}},{"id":4577,"nodeType":"UncheckedBlock","src":"19721:75:24","statements":[{"expression":{"baseExpression":{"id":4571,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"19756:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4575,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"19763:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4451,"id":4576,"nodeType":"Return","src":"19749:32:24"}]}]}}]},"documentation":{"id":4438,"nodeType":"StructuredDocumentation","src":"16526:1102:24","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4595,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:24","nodeType":"FunctionDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"proof","nameLocation":"17696:5:24","nodeType":"VariableDeclaration","scope":4595,"src":"17677:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4440,"nodeType":"ArrayTypeName","src":"17677:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4444,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:24","nodeType":"VariableDeclaration","scope":4595,"src":"17711:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4442,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4443,"nodeType":"ArrayTypeName","src":"17711:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4447,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:24","nodeType":"VariableDeclaration","scope":4595,"src":"17747:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4446,"nodeType":"ArrayTypeName","src":"17747:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:24"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:24","nodeType":"VariableDeclaration","scope":4595,"src":"17800:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:24"},"scope":4800,"src":"17633:2291:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4631,"nodeType":"Block","src":"20795:92:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4623,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"20838:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4624,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"20845:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4625,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"20857:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4626,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"20865:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4622,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4595,4799],"referencedDeclaration":4799,"src":"20812:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4628,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"20876:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4621,"id":4630,"nodeType":"Return","src":"20805:75:24"}]},"documentation":{"id":4596,"nodeType":"StructuredDocumentation","src":"19930:600:24","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":4632,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:24","nodeType":"FunctionDefinition","parameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"proof","nameLocation":"20597:5:24","nodeType":"VariableDeclaration","scope":4632,"src":"20578:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4598,"nodeType":"ArrayTypeName","src":"20578:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:24","nodeType":"VariableDeclaration","scope":4632,"src":"20612:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4600,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4601,"nodeType":"ArrayTypeName","src":"20612:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"root","nameLocation":"20656:4:24","nodeType":"VariableDeclaration","scope":4632,"src":"20648:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:24","nodeType":"VariableDeclaration","scope":4632,"src":"20670:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4606,"nodeType":"ArrayTypeName","src":"20670:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4617,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:24","nodeType":"VariableDeclaration","scope":4632,"src":"20703:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4616,"nodeType":"FunctionTypeName","parameterTypes":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4616,"src":"20712:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4616,"src":"20721:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:24"},"returnParameterTypes":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4616,"src":"20744:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:24"},"src":"20703:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:24"},"returnParameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4632,"src":"20789:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4619,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:24"},"scope":4800,"src":"20535:352:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4798,"nodeType":"Block","src":"22250:2083:24","statements":[{"assignments":[4658],"declarations":[{"constant":false,"id":4658,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:24","nodeType":"VariableDeclaration","scope":4798,"src":"22634:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4661,"initialValue":{"expression":{"id":4659,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"22654:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:24","memberName":"length","nodeType":"MemberAccess","src":"22654:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:24"},{"assignments":[4663],"declarations":[{"constant":false,"id":4663,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:24","nodeType":"VariableDeclaration","scope":4798,"src":"22677:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4666,"initialValue":{"expression":{"id":4664,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"22701:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:24","memberName":"length","nodeType":"MemberAccess","src":"22701:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"22766:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4668,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"22778:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:24","memberName":"length","nodeType":"MemberAccess","src":"22778:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"22794:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4679,"nodeType":"IfStatement","src":"22762:113:24","trueBody":{"id":4678,"nodeType":"Block","src":"22813:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4675,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"22834:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4677,"nodeType":"RevertStatement","src":"22827:37:24"}]}},{"assignments":[4684],"declarations":[{"constant":false,"id":4684,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:24","nodeType":"VariableDeclaration","scope":4798,"src":"23119:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4683,"nodeType":"ArrayTypeName","src":"23119:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4690,"initialValue":{"arguments":[{"id":4688,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"23159:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4686,"nodeType":"ArrayTypeName","src":"23149:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:24"},{"assignments":[4692],"declarations":[{"constant":false,"id":4692,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:24","nodeType":"VariableDeclaration","scope":4798,"src":"23183:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4694,"initialValue":{"hexValue":"30","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:24"},{"assignments":[4696],"declarations":[{"constant":false,"id":4696,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:24","nodeType":"VariableDeclaration","scope":4798,"src":"23212:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4698,"initialValue":{"hexValue":"30","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:24"},{"assignments":[4700],"declarations":[{"constant":false,"id":4700,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:24","nodeType":"VariableDeclaration","scope":4798,"src":"23241:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4702,"initialValue":{"hexValue":"30","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:24"},{"body":{"id":4761,"nodeType":"Block","src":"23681:289:24","statements":[{"assignments":[4714],"declarations":[{"constant":false,"id":4714,"mutability":"mutable","name":"a","nameLocation":"23703:1:24","nodeType":"VariableDeclaration","scope":4761,"src":"23695:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4727,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23707:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4716,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"23717:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4722,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"23749:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4725,"indexExpression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:24","subExpression":{"id":4723,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"23756:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:24","trueExpression":{"baseExpression":{"id":4718,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"23729:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4721,"indexExpression":{"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:24","subExpression":{"id":4719,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23736:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:24"},{"assignments":[4729],"declarations":[{"constant":false,"id":4729,"mutability":"mutable","name":"b","nameLocation":"23788:1:24","nodeType":"VariableDeclaration","scope":4761,"src":"23780:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4751,"initialValue":{"condition":{"baseExpression":{"id":4730,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"23792:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4732,"indexExpression":{"id":4731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"23803:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4746,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"23904:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4749,"indexExpression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:24","subExpression":{"id":4747,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"23910:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:24","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23825:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4734,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"23835:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4740,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"23867:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4743,"indexExpression":{"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:24","subExpression":{"id":4741,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"23874:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:24","trueExpression":{"baseExpression":{"id":4736,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"23847:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4739,"indexExpression":{"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:24","subExpression":{"id":4737,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23854:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:24"},{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4752,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"23935:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4754,"indexExpression":{"id":4753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"23942:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4756,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"23954:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4757,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"23957:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4755,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"23947:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4760,"nodeType":"ExpressionStatement","src":"23935:24:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"23657:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4708,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"23661:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4762,"initializationExpression":{"assignments":[4704],"declarations":[{"constant":false,"id":4704,"mutability":"mutable","name":"i","nameLocation":"23650:1:24","nodeType":"VariableDeclaration","scope":4762,"src":"23642:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4706,"initialValue":{"hexValue":"30","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:24","subExpression":{"id":4710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"23676:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"23676:3:24"},"nodeType":"ForStatement","src":"23637:333:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"23984:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4783,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"24225:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4795,"nodeType":"Block","src":"24287:40:24","statements":[{"expression":{"baseExpression":{"id":4791,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"24308:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4793,"indexExpression":{"hexValue":"30","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4656,"id":4794,"nodeType":"Return","src":"24301:15:24"}]},"id":4796,"nodeType":"IfStatement","src":"24221:106:24","trueBody":{"id":4790,"nodeType":"Block","src":"24240:41:24","statements":[{"expression":{"baseExpression":{"id":4786,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"24261:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4788,"indexExpression":{"hexValue":"30","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4656,"id":4789,"nodeType":"Return","src":"24254:16:24"}]}},"id":4797,"nodeType":"IfStatement","src":"23980:347:24","trueBody":{"id":4782,"nodeType":"Block","src":"24003:212:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4766,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"24021:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4767,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"24033:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:24","memberName":"length","nodeType":"MemberAccess","src":"24033:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4774,"nodeType":"IfStatement","src":"24017:100:24","trueBody":{"id":4773,"nodeType":"Block","src":"24047:70:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4770,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"24072:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4772,"nodeType":"RevertStatement","src":"24065:37:24"}]}},{"id":4781,"nodeType":"UncheckedBlock","src":"24130:75:24","statements":[{"expression":{"baseExpression":{"id":4775,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"24165:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4779,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"24172:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4656,"id":4780,"nodeType":"Return","src":"24158:32:24"}]}]}}]},"documentation":{"id":4633,"nodeType":"StructuredDocumentation","src":"20893:1099:24","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4799,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:24","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"proof","nameLocation":"22060:5:24","nodeType":"VariableDeclaration","scope":4799,"src":"22041:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4635,"nodeType":"ArrayTypeName","src":"22041:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4639,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:24","nodeType":"VariableDeclaration","scope":4799,"src":"22075:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4637,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4638,"nodeType":"ArrayTypeName","src":"22075:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:24","nodeType":"VariableDeclaration","scope":4799,"src":"22111:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4641,"nodeType":"ArrayTypeName","src":"22111:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:24","nodeType":"VariableDeclaration","scope":4799,"src":"22144:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4651,"nodeType":"FunctionTypeName","parameterTypes":{"id":4647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"22153:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"22162:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:24"},"returnParameterTypes":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"22185:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:24"},"src":"22144:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:24"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:24","nodeType":"VariableDeclaration","scope":4799,"src":"22230:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:24"},"scope":4800,"src":"21997:2336:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4801,"src":"1353:22982:24","usedErrors":[3735],"usedEvents":[]}],"src":"206:24130:24"},"id":24},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4874],"Strings":[3112]},"id":4875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4802,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4875,"sourceUnit":3113,"src":"149:39:25","symbolAliases":[{"foreign":{"id":4803,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"157:7:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4805,"nodeType":"StructuredDocumentation","src":"190:330:25","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4874,"linearizedBaseContracts":[4874],"name":"MessageHashUtils","nameLocation":"529:16:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":4814,"nodeType":"Block","src":"1314:341:25","statements":[{"AST":{"nativeSrc":"1349:300:25","nodeType":"YulBlock","src":"1349:300:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:25","nodeType":"YulLiteral","src":"1370:4:25","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:25","nodeType":"YulLiteral","src":"1376:34:25","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:25","nodeType":"YulIdentifier","src":"1363:6:25"},"nativeSrc":"1363:48:25","nodeType":"YulFunctionCall","src":"1363:48:25"},"nativeSrc":"1363:48:25","nodeType":"YulExpressionStatement","src":"1363:48:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:25","nodeType":"YulLiteral","src":"1472:4:25","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:25","nodeType":"YulIdentifier","src":"1478:11:25"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:25","nodeType":"YulIdentifier","src":"1465:6:25"},"nativeSrc":"1465:25:25","nodeType":"YulFunctionCall","src":"1465:25:25"},"nativeSrc":"1465:25:25","nodeType":"YulExpressionStatement","src":"1465:25:25"},{"nativeSrc":"1544:31:25","nodeType":"YulAssignment","src":"1544:31:25","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:25","nodeType":"YulLiteral","src":"1564:4:25","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:25","nodeType":"YulLiteral","src":"1570:4:25","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:25","nodeType":"YulIdentifier","src":"1554:9:25"},"nativeSrc":"1554:21:25","nodeType":"YulFunctionCall","src":"1554:21:25"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:25","nodeType":"YulIdentifier","src":"1544:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4811,"isOffset":false,"isSlot":false,"src":"1544:6:25","valueSize":1},{"declaration":4808,"isOffset":false,"isSlot":false,"src":"1478:11:25","valueSize":1}],"flags":["memory-safe"],"id":4813,"nodeType":"InlineAssembly","src":"1324:325:25"}]},"documentation":{"id":4806,"nodeType":"StructuredDocumentation","src":"552:665:25","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4815,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:25","nodeType":"FunctionDefinition","parameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:25","nodeType":"VariableDeclaration","scope":4815,"src":"1254:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:25"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"digest","nameLocation":"1306:6:25","nodeType":"VariableDeclaration","scope":4815,"src":"1298:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:25"},"scope":4874,"src":"1222:433:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4840,"nodeType":"Block","src":"2207:143:25","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4832,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"2316:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:25","memberName":"length","nodeType":"MemberAccess","src":"2316:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4830,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"2299:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3112_$","typeString":"type(library Strings)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:25","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2860,"src":"2299:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4828,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:25","typeDescriptions":{}}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4836,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"2334:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4824,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:25","typeDescriptions":{}}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:25","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4823,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4822,"id":4839,"nodeType":"Return","src":"2217:126:25"}]},"documentation":{"id":4816,"nodeType":"StructuredDocumentation","src":"1661:455:25","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4841,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:25","nodeType":"FunctionDefinition","parameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"message","nameLocation":"2166:7:25","nodeType":"VariableDeclaration","scope":4841,"src":"2153:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4817,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:25"},"returnParameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4841,"src":"2198:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:25"},"scope":4874,"src":"2121:229:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4860,"nodeType":"Block","src":"2804:80:25","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4855,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"2860:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4856,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"2871:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4852,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4851,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4850,"id":4859,"nodeType":"Return","src":"2814:63:25"}]},"documentation":{"id":4842,"nodeType":"StructuredDocumentation","src":"2356:332:25","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4861,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:25","nodeType":"FunctionDefinition","parameters":{"id":4847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"validator","nameLocation":"2742:9:25","nodeType":"VariableDeclaration","scope":4861,"src":"2734:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4843,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4846,"mutability":"mutable","name":"data","nameLocation":"2766:4:25","nodeType":"VariableDeclaration","scope":4861,"src":"2753:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4845,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:25"},"returnParameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4861,"src":"2795:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:25"},"scope":4874,"src":"2693:191:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4872,"nodeType":"Block","src":"3435:265:25","statements":[{"AST":{"nativeSrc":"3470:224:25","nodeType":"YulBlock","src":"3470:224:25","statements":[{"nativeSrc":"3484:22:25","nodeType":"YulVariableDeclaration","src":"3484:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:25","nodeType":"YulLiteral","src":"3501:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:25","nodeType":"YulIdentifier","src":"3495:5:25"},"nativeSrc":"3495:11:25","nodeType":"YulFunctionCall","src":"3495:11:25"},"variables":[{"name":"ptr","nativeSrc":"3488:3:25","nodeType":"YulTypedName","src":"3488:3:25","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:25","nodeType":"YulIdentifier","src":"3526:3:25"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:25","nodeType":"YulLiteral","src":"3531:10:25","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:25","nodeType":"YulIdentifier","src":"3519:6:25"},"nativeSrc":"3519:23:25","nodeType":"YulFunctionCall","src":"3519:23:25"},"nativeSrc":"3519:23:25","nodeType":"YulExpressionStatement","src":"3519:23:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:25","nodeType":"YulIdentifier","src":"3566:3:25"},{"kind":"number","nativeSrc":"3571:4:25","nodeType":"YulLiteral","src":"3571:4:25","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:25","nodeType":"YulIdentifier","src":"3562:3:25"},"nativeSrc":"3562:14:25","nodeType":"YulFunctionCall","src":"3562:14:25"},{"name":"domainSeparator","nativeSrc":"3578:15:25","nodeType":"YulIdentifier","src":"3578:15:25"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:25","nodeType":"YulIdentifier","src":"3555:6:25"},"nativeSrc":"3555:39:25","nodeType":"YulFunctionCall","src":"3555:39:25"},"nativeSrc":"3555:39:25","nodeType":"YulExpressionStatement","src":"3555:39:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:25","nodeType":"YulIdentifier","src":"3618:3:25"},{"kind":"number","nativeSrc":"3623:4:25","nodeType":"YulLiteral","src":"3623:4:25","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:25","nodeType":"YulIdentifier","src":"3614:3:25"},"nativeSrc":"3614:14:25","nodeType":"YulFunctionCall","src":"3614:14:25"},{"name":"structHash","nativeSrc":"3630:10:25","nodeType":"YulIdentifier","src":"3630:10:25"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:25","nodeType":"YulIdentifier","src":"3607:6:25"},"nativeSrc":"3607:34:25","nodeType":"YulFunctionCall","src":"3607:34:25"},"nativeSrc":"3607:34:25","nodeType":"YulExpressionStatement","src":"3607:34:25"},{"nativeSrc":"3654:30:25","nodeType":"YulAssignment","src":"3654:30:25","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:25","nodeType":"YulIdentifier","src":"3674:3:25"},{"kind":"number","nativeSrc":"3679:4:25","nodeType":"YulLiteral","src":"3679:4:25","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:25","nodeType":"YulIdentifier","src":"3664:9:25"},"nativeSrc":"3664:20:25","nodeType":"YulFunctionCall","src":"3664:20:25"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:25","nodeType":"YulIdentifier","src":"3654:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4869,"isOffset":false,"isSlot":false,"src":"3654:6:25","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"3578:15:25","valueSize":1},{"declaration":4866,"isOffset":false,"isSlot":false,"src":"3630:10:25","valueSize":1}],"flags":["memory-safe"],"id":4871,"nodeType":"InlineAssembly","src":"3445:249:25"}]},"documentation":{"id":4862,"nodeType":"StructuredDocumentation","src":"2890:431:25","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4873,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:25","nodeType":"FunctionDefinition","parameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:25","nodeType":"VariableDeclaration","scope":4873,"src":"3351:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:25","nodeType":"VariableDeclaration","scope":4873,"src":"3376:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:25"},"returnParameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"digest","nameLocation":"3427:6:25","nodeType":"VariableDeclaration","scope":4873,"src":"3419:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:25"},"scope":4874,"src":"3326:374:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4875,"src":"521:3181:25","usedErrors":[],"usedEvents":[]}],"src":"123:3580:25"},"id":25},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4898],"IERC165":[4910]},"id":4899,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4876,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4878,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4899,"sourceUnit":4911,"src":"140:38:26","symbolAliases":[{"foreign":{"id":4877,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"148:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4880,"name":"IERC165","nameLocations":["688:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"688:7:26"},"id":4881,"nodeType":"InheritanceSpecifier","src":"688:7:26"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4879,"nodeType":"StructuredDocumentation","src":"180:479:26","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4898,"linearizedBaseContracts":[4898,4910],"name":"ERC165","nameLocation":"678:6:26","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4909],"body":{"id":4896,"nodeType":"Block","src":"845:64:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4889,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"862:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4891,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"882:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4910_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4910_$","typeString":"type(contract IERC165)"}],"id":4890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4910","typeString":"type(contract IERC165)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:26","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4888,"id":4895,"nodeType":"Return","src":"855:47:26"}]},"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"702:56:26","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4897,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:26","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:26","nodeType":"VariableDeclaration","scope":4897,"src":"790:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4883,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:26"},"returnParameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4897,"src":"839:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4886,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:26"},"scope":4898,"src":"763:146:26","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4899,"src":"660:251:26","usedErrors":[],"usedEvents":[]}],"src":"114:798:26"},"id":26},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4910]},"id":4911,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4900,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"141:280:27","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4910,"linearizedBaseContracts":[4910],"name":"IERC165","nameLocation":"432:7:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4902,"nodeType":"StructuredDocumentation","src":"446:340:27","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4909,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:27","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:27","nodeType":"VariableDeclaration","scope":4909,"src":"818:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4903,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:27"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4909,"src":"861:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4906,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:27"},"scope":4910,"src":"791:76:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4911,"src":"422:447:27","usedErrors":[],"usedEvents":[]}],"src":"115:755:27"},"id":27},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6516],"Panic":[2451],"SafeCast":[8281]},"id":6517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4912,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6517,"sourceUnit":2452,"src":"129:35:28","symbolAliases":[{"foreign":{"id":4913,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"137:5:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6517,"sourceUnit":8282,"src":"165:40:28","symbolAliases":[{"foreign":{"id":4915,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"173:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4917,"nodeType":"StructuredDocumentation","src":"207:73:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6516,"linearizedBaseContracts":[6516],"name":"Math","nameLocation":"289:4:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4922,"members":[{"id":4918,"name":"Floor","nameLocation":"324:5:28","nodeType":"EnumValue","src":"324:5:28"},{"id":4919,"name":"Ceil","nameLocation":"367:4:28","nodeType":"EnumValue","src":"367:4:28"},{"id":4920,"name":"Trunc","nameLocation":"409:5:28","nodeType":"EnumValue","src":"409:5:28"},{"id":4921,"name":"Expand","nameLocation":"439:6:28","nodeType":"EnumValue","src":"439:6:28"}],"name":"Rounding","nameLocation":"305:8:28","nodeType":"EnumDefinition","src":"300:169:28"},{"body":{"id":4953,"nodeType":"Block","src":"677:140:28","statements":[{"id":4952,"nodeType":"UncheckedBlock","src":"687:124:28","statements":[{"assignments":[4935],"declarations":[{"constant":false,"id":4935,"mutability":"mutable","name":"c","nameLocation":"719:1:28","nodeType":"VariableDeclaration","scope":4952,"src":"711:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4939,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"723:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4937,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"727:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"746:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"750:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4947,"nodeType":"IfStatement","src":"742:28:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4933,"id":4946,"nodeType":"Return","src":"753:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4949,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"798:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4933,"id":4951,"nodeType":"Return","src":"784:16:28"}]}]},"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"475:106:28","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:28","nodeType":"FunctionDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"a","nameLocation":"610:1:28","nodeType":"VariableDeclaration","scope":4954,"src":"602:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"b","nameLocation":"621:1:28","nodeType":"VariableDeclaration","scope":4954,"src":"613:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:28"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"success","nameLocation":"652:7:28","nodeType":"VariableDeclaration","scope":4954,"src":"647:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4929,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4932,"mutability":"mutable","name":"result","nameLocation":"669:6:28","nodeType":"VariableDeclaration","scope":4954,"src":"661:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:28"},"scope":6516,"src":"586:231:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4981,"nodeType":"Block","src":"1028:113:28","statements":[{"id":4980,"nodeType":"UncheckedBlock","src":"1038:97:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"1066:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"1070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4973,"nodeType":"IfStatement","src":"1062:28:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4965,"id":4972,"nodeType":"Return","src":"1073:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"1118:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4976,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"1122:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4965,"id":4979,"nodeType":"Return","src":"1104:20:28"}]}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"823:109:28","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4982,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:28","nodeType":"FunctionDefinition","parameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"a","nameLocation":"961:1:28","nodeType":"VariableDeclaration","scope":4982,"src":"953:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4959,"mutability":"mutable","name":"b","nameLocation":"972:1:28","nodeType":"VariableDeclaration","scope":4982,"src":"964:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:28"},"returnParameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"success","nameLocation":"1003:7:28","nodeType":"VariableDeclaration","scope":4982,"src":"998:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4961,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4964,"mutability":"mutable","name":"result","nameLocation":"1020:6:28","nodeType":"VariableDeclaration","scope":4982,"src":"1012:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:28"},"scope":6516,"src":"937:204:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5023,"nodeType":"Block","src":"1355:417:28","statements":[{"id":5022,"nodeType":"UncheckedBlock","src":"1365:401:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"1623:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5001,"nodeType":"IfStatement","src":"1619:28:28","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4993,"id":5000,"nodeType":"Return","src":"1631:16:28"}},{"assignments":[5003],"declarations":[{"constant":false,"id":5003,"mutability":"mutable","name":"c","nameLocation":"1669:1:28","nodeType":"VariableDeclaration","scope":5022,"src":"1661:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5007,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"1673:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"1677:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"1696:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"1700:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"1705:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"IfStatement","src":"1692:33:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4993,"id":5016,"nodeType":"Return","src":"1708:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5019,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"1753:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4993,"id":5021,"nodeType":"Return","src":"1739:16:28"}]}]},"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"1147:112:28","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":5024,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:28","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"a","nameLocation":"1288:1:28","nodeType":"VariableDeclaration","scope":5024,"src":"1280:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4987,"mutability":"mutable","name":"b","nameLocation":"1299:1:28","nodeType":"VariableDeclaration","scope":5024,"src":"1291:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:28"},"returnParameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"success","nameLocation":"1330:7:28","nodeType":"VariableDeclaration","scope":5024,"src":"1325:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4989,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"result","nameLocation":"1347:6:28","nodeType":"VariableDeclaration","scope":5024,"src":"1339:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:28"},"scope":6516,"src":"1264:508:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5051,"nodeType":"Block","src":"1987:114:28","statements":[{"id":5050,"nodeType":"UncheckedBlock","src":"1997:98:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"2025:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"2021:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5035,"id":5042,"nodeType":"Return","src":"2033:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"2078:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"2082:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5035,"id":5049,"nodeType":"Return","src":"2064:20:28"}]}]},"documentation":{"id":5025,"nodeType":"StructuredDocumentation","src":"1778:113:28","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5052,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:28","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"a","nameLocation":"1920:1:28","nodeType":"VariableDeclaration","scope":5052,"src":"1912:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"b","nameLocation":"1931:1:28","nodeType":"VariableDeclaration","scope":5052,"src":"1923:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:28"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"success","nameLocation":"1962:7:28","nodeType":"VariableDeclaration","scope":5052,"src":"1957:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5031,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5034,"mutability":"mutable","name":"result","nameLocation":"1979:6:28","nodeType":"VariableDeclaration","scope":5052,"src":"1971:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:28"},"scope":6516,"src":"1896:205:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5079,"nodeType":"Block","src":"2326:114:28","statements":[{"id":5078,"nodeType":"UncheckedBlock","src":"2336:98:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"2364:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5071,"nodeType":"IfStatement","src":"2360:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5063,"id":5070,"nodeType":"Return","src":"2372:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"2417:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"2421:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5063,"id":5077,"nodeType":"Return","src":"2403:20:28"}]}]},"documentation":{"id":5053,"nodeType":"StructuredDocumentation","src":"2107:123:28","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5080,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:28","nodeType":"FunctionDefinition","parameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"a","nameLocation":"2259:1:28","nodeType":"VariableDeclaration","scope":5080,"src":"2251:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5057,"mutability":"mutable","name":"b","nameLocation":"2270:1:28","nodeType":"VariableDeclaration","scope":5080,"src":"2262:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:28"},"returnParameters":{"id":5063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"success","nameLocation":"2301:7:28","nodeType":"VariableDeclaration","scope":5080,"src":"2296:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5059,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5062,"mutability":"mutable","name":"result","nameLocation":"2318:6:28","nodeType":"VariableDeclaration","scope":5080,"src":"2310:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:28"},"scope":6516,"src":"2235:205:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"2912:207:28","statements":[{"id":5105,"nodeType":"UncheckedBlock","src":"2922:191:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"3060:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"3066:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5094,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"3070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5099,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"3091:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5097,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"3075:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"3075:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5091,"id":5104,"nodeType":"Return","src":"3053:49:28"}]}]},"documentation":{"id":5081,"nodeType":"StructuredDocumentation","src":"2446:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:28","nodeType":"FunctionDefinition","parameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"condition","nameLocation":"2847:9:28","nodeType":"VariableDeclaration","scope":5107,"src":"2842:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5082,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"a","nameLocation":"2866:1:28","nodeType":"VariableDeclaration","scope":5107,"src":"2858:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5084,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"b","nameLocation":"2877:1:28","nodeType":"VariableDeclaration","scope":5107,"src":"2869:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:28"},"returnParameters":{"id":5091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"2903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:28"},"scope":6516,"src":"2825:294:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5125,"nodeType":"Block","src":"3256:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5118,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"3281:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5119,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"3285:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"3288:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"3291:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5117,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"3273:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5116,"id":5124,"nodeType":"Return","src":"3266:27:28"}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"3125:59:28","text":" @dev Returns the largest of two numbers."},"id":5126,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:28","nodeType":"FunctionDefinition","parameters":{"id":5113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"a","nameLocation":"3210:1:28","nodeType":"VariableDeclaration","scope":5126,"src":"3202:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5112,"mutability":"mutable","name":"b","nameLocation":"3221:1:28","nodeType":"VariableDeclaration","scope":5126,"src":"3213:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5111,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:28"},"returnParameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5126,"src":"3247:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:28"},"scope":6516,"src":"3189:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5144,"nodeType":"Block","src":"3438:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5137,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"3463:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3467:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"3470:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5141,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3473:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5136,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"3455:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5135,"id":5143,"nodeType":"Return","src":"3448:27:28"}]},"documentation":{"id":5127,"nodeType":"StructuredDocumentation","src":"3306:60:28","text":" @dev Returns the smallest of two numbers."},"id":5145,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:28","nodeType":"FunctionDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"a","nameLocation":"3392:1:28","nodeType":"VariableDeclaration","scope":5145,"src":"3384:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5131,"mutability":"mutable","name":"b","nameLocation":"3403:1:28","nodeType":"VariableDeclaration","scope":5145,"src":"3395:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5130,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:28"},"returnParameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5145,"src":"3429:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5133,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:28"},"scope":6516,"src":"3371:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5167,"nodeType":"Block","src":"3666:82:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"3721:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5156,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"3725:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"3731:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5160,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"3735:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5154,"id":5166,"nodeType":"Return","src":"3713:28:28"}]},"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"3488:102:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5168,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:28","nodeType":"FunctionDefinition","parameters":{"id":5151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"a","nameLocation":"3620:1:28","nodeType":"VariableDeclaration","scope":5168,"src":"3612:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5150,"mutability":"mutable","name":"b","nameLocation":"3631:1:28","nodeType":"VariableDeclaration","scope":5168,"src":"3623:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5149,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:28"},"returnParameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5168,"src":"3657:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:28"},"scope":6516,"src":"3595:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5208,"nodeType":"Block","src":"4040:633:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"4054:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5189,"nodeType":"IfStatement","src":"4050:150:28","trueBody":{"id":5188,"nodeType":"Block","src":"4062:138:28","statements":[{"expression":{"arguments":[{"expression":{"id":5184,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"4166:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"4166:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5181,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"4154:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"4154:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5187,"nodeType":"ExpressionStatement","src":"4154:35:28"}]}},{"id":5207,"nodeType":"UncheckedBlock","src":"4583:84:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"4630:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5190,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"4614:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"4614:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"4641:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"4650:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5177,"id":5206,"nodeType":"Return","src":"4607:49:28"}]}]},"documentation":{"id":5169,"nodeType":"StructuredDocumentation","src":"3754:210:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5209,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:28","nodeType":"FunctionDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5171,"mutability":"mutable","name":"a","nameLocation":"3994:1:28","nodeType":"VariableDeclaration","scope":5209,"src":"3986:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5173,"mutability":"mutable","name":"b","nameLocation":"4005:1:28","nodeType":"VariableDeclaration","scope":5209,"src":"3997:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:28"},"returnParameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5209,"src":"4031:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:28"},"scope":6516,"src":"3969:704:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5345,"nodeType":"Block","src":"5094:4128:28","statements":[{"id":5344,"nodeType":"UncheckedBlock","src":"5104:4112:28","statements":[{"assignments":[5222],"declarations":[{"constant":false,"id":5222,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:28","nodeType":"VariableDeclaration","scope":5344,"src":"5433:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5226,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"5449:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5224,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"5453:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:28"},{"assignments":[5228],"declarations":[{"constant":false,"id":5228,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:28","nodeType":"VariableDeclaration","scope":5344,"src":"5513:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5227,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5229,"nodeType":"VariableDeclarationStatement","src":"5513:13:28"},{"AST":{"nativeSrc":"5593:122:28","nodeType":"YulBlock","src":"5593:122:28","statements":[{"nativeSrc":"5611:30:28","nodeType":"YulVariableDeclaration","src":"5611:30:28","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:28","nodeType":"YulIdentifier","src":"5628:1:28"},{"name":"y","nativeSrc":"5631:1:28","nodeType":"YulIdentifier","src":"5631:1:28"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:28","nodeType":"YulLiteral","src":"5638:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:28","nodeType":"YulIdentifier","src":"5634:3:28"},"nativeSrc":"5634:6:28","nodeType":"YulFunctionCall","src":"5634:6:28"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:28","nodeType":"YulIdentifier","src":"5621:6:28"},"nativeSrc":"5621:20:28","nodeType":"YulFunctionCall","src":"5621:20:28"},"variables":[{"name":"mm","nativeSrc":"5615:2:28","nodeType":"YulTypedName","src":"5615:2:28","type":""}]},{"nativeSrc":"5658:43:28","nodeType":"YulAssignment","src":"5658:43:28","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:28","nodeType":"YulIdentifier","src":"5675:2:28"},{"name":"prod0","nativeSrc":"5679:5:28","nodeType":"YulIdentifier","src":"5679:5:28"}],"functionName":{"name":"sub","nativeSrc":"5671:3:28","nodeType":"YulIdentifier","src":"5671:3:28"},"nativeSrc":"5671:14:28","nodeType":"YulFunctionCall","src":"5671:14:28"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:28","nodeType":"YulIdentifier","src":"5690:2:28"},{"name":"prod0","nativeSrc":"5694:5:28","nodeType":"YulIdentifier","src":"5694:5:28"}],"functionName":{"name":"lt","nativeSrc":"5687:2:28","nodeType":"YulIdentifier","src":"5687:2:28"},"nativeSrc":"5687:13:28","nodeType":"YulFunctionCall","src":"5687:13:28"}],"functionName":{"name":"sub","nativeSrc":"5667:3:28","nodeType":"YulIdentifier","src":"5667:3:28"},"nativeSrc":"5667:34:28","nodeType":"YulFunctionCall","src":"5667:34:28"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:28","nodeType":"YulIdentifier","src":"5658:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5222,"isOffset":false,"isSlot":false,"src":"5679:5:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"5694:5:28","valueSize":1},{"declaration":5228,"isOffset":false,"isSlot":false,"src":"5658:5:28","valueSize":1},{"declaration":5212,"isOffset":false,"isSlot":false,"src":"5628:1:28","valueSize":1},{"declaration":5214,"isOffset":false,"isSlot":false,"src":"5631:1:28","valueSize":1}],"id":5230,"nodeType":"InlineAssembly","src":"5584:131:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5231,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"5796:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5239,"nodeType":"IfStatement","src":"5792:368:28","trueBody":{"id":5238,"nodeType":"Block","src":"5808:352:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"6126:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5235,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"6134:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5220,"id":5237,"nodeType":"Return","src":"6119:26:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"6270:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5241,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"6285:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5258,"nodeType":"IfStatement","src":"6266:143:28","trueBody":{"id":5257,"nodeType":"Block","src":"6292:117:28","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5247,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"6330:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5250,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6348:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"6348:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5252,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6372:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2414,"src":"6372:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5246,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"6322:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5243,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6310:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"6310:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"ExpressionStatement","src":"6310:84:28"}]}},{"assignments":[5260],"declarations":[{"constant":false,"id":5260,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:28","nodeType":"VariableDeclaration","scope":5344,"src":"6664:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5261,"nodeType":"VariableDeclarationStatement","src":"6664:17:28"},{"AST":{"nativeSrc":"6704:291:28","nodeType":"YulBlock","src":"6704:291:28","statements":[{"nativeSrc":"6773:38:28","nodeType":"YulAssignment","src":"6773:38:28","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:28","nodeType":"YulIdentifier","src":"6793:1:28"},{"name":"y","nativeSrc":"6796:1:28","nodeType":"YulIdentifier","src":"6796:1:28"},{"name":"denominator","nativeSrc":"6799:11:28","nodeType":"YulIdentifier","src":"6799:11:28"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:28","nodeType":"YulIdentifier","src":"6786:6:28"},"nativeSrc":"6786:25:28","nodeType":"YulFunctionCall","src":"6786:25:28"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:28","nodeType":"YulIdentifier","src":"6773:9:28"}]},{"nativeSrc":"6893:41:28","nodeType":"YulAssignment","src":"6893:41:28","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:28","nodeType":"YulIdentifier","src":"6906:5:28"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:28","nodeType":"YulIdentifier","src":"6916:9:28"},{"name":"prod0","nativeSrc":"6927:5:28","nodeType":"YulIdentifier","src":"6927:5:28"}],"functionName":{"name":"gt","nativeSrc":"6913:2:28","nodeType":"YulIdentifier","src":"6913:2:28"},"nativeSrc":"6913:20:28","nodeType":"YulFunctionCall","src":"6913:20:28"}],"functionName":{"name":"sub","nativeSrc":"6902:3:28","nodeType":"YulIdentifier","src":"6902:3:28"},"nativeSrc":"6902:32:28","nodeType":"YulFunctionCall","src":"6902:32:28"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:28","nodeType":"YulIdentifier","src":"6893:5:28"}]},{"nativeSrc":"6951:30:28","nodeType":"YulAssignment","src":"6951:30:28","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:28","nodeType":"YulIdentifier","src":"6964:5:28"},{"name":"remainder","nativeSrc":"6971:9:28","nodeType":"YulIdentifier","src":"6971:9:28"}],"functionName":{"name":"sub","nativeSrc":"6960:3:28","nodeType":"YulIdentifier","src":"6960:3:28"},"nativeSrc":"6960:21:28","nodeType":"YulFunctionCall","src":"6960:21:28"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:28","nodeType":"YulIdentifier","src":"6951:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5216,"isOffset":false,"isSlot":false,"src":"6799:11:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"6927:5:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"6951:5:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"6964:5:28","valueSize":1},{"declaration":5228,"isOffset":false,"isSlot":false,"src":"6893:5:28","valueSize":1},{"declaration":5228,"isOffset":false,"isSlot":false,"src":"6906:5:28","valueSize":1},{"declaration":5260,"isOffset":false,"isSlot":false,"src":"6773:9:28","valueSize":1},{"declaration":5260,"isOffset":false,"isSlot":false,"src":"6916:9:28","valueSize":1},{"declaration":5260,"isOffset":false,"isSlot":false,"src":"6971:9:28","valueSize":1},{"declaration":5212,"isOffset":false,"isSlot":false,"src":"6793:1:28","valueSize":1},{"declaration":5214,"isOffset":false,"isSlot":false,"src":"6796:1:28","valueSize":1}],"id":5262,"nodeType":"InlineAssembly","src":"6695:300:28"},{"assignments":[5264],"declarations":[{"constant":false,"id":5264,"mutability":"mutable","name":"twos","nameLocation":"7207:4:28","nodeType":"VariableDeclaration","scope":5344,"src":"7199:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5271,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"7214:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5267,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"7233:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:28"},{"AST":{"nativeSrc":"7268:366:28","nodeType":"YulBlock","src":"7268:366:28","statements":[{"nativeSrc":"7333:37:28","nodeType":"YulAssignment","src":"7333:37:28","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:28","nodeType":"YulIdentifier","src":"7352:11:28"},{"name":"twos","nativeSrc":"7365:4:28","nodeType":"YulIdentifier","src":"7365:4:28"}],"functionName":{"name":"div","nativeSrc":"7348:3:28","nodeType":"YulIdentifier","src":"7348:3:28"},"nativeSrc":"7348:22:28","nodeType":"YulFunctionCall","src":"7348:22:28"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:28","nodeType":"YulIdentifier","src":"7333:11:28"}]},{"nativeSrc":"7437:25:28","nodeType":"YulAssignment","src":"7437:25:28","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:28","nodeType":"YulIdentifier","src":"7450:5:28"},{"name":"twos","nativeSrc":"7457:4:28","nodeType":"YulIdentifier","src":"7457:4:28"}],"functionName":{"name":"div","nativeSrc":"7446:3:28","nodeType":"YulIdentifier","src":"7446:3:28"},"nativeSrc":"7446:16:28","nodeType":"YulFunctionCall","src":"7446:16:28"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:28","nodeType":"YulIdentifier","src":"7437:5:28"}]},{"nativeSrc":"7581:39:28","nodeType":"YulAssignment","src":"7581:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:28","nodeType":"YulLiteral","src":"7601:1:28","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:28","nodeType":"YulIdentifier","src":"7604:4:28"}],"functionName":{"name":"sub","nativeSrc":"7597:3:28","nodeType":"YulIdentifier","src":"7597:3:28"},"nativeSrc":"7597:12:28","nodeType":"YulFunctionCall","src":"7597:12:28"},{"name":"twos","nativeSrc":"7611:4:28","nodeType":"YulIdentifier","src":"7611:4:28"}],"functionName":{"name":"div","nativeSrc":"7593:3:28","nodeType":"YulIdentifier","src":"7593:3:28"},"nativeSrc":"7593:23:28","nodeType":"YulFunctionCall","src":"7593:23:28"},{"kind":"number","nativeSrc":"7618:1:28","nodeType":"YulLiteral","src":"7618:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:28","nodeType":"YulIdentifier","src":"7589:3:28"},"nativeSrc":"7589:31:28","nodeType":"YulFunctionCall","src":"7589:31:28"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:28","nodeType":"YulIdentifier","src":"7581:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5216,"isOffset":false,"isSlot":false,"src":"7333:11:28","valueSize":1},{"declaration":5216,"isOffset":false,"isSlot":false,"src":"7352:11:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"7437:5:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"7450:5:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7365:4:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7457:4:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7581:4:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7604:4:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7611:4:28","valueSize":1}],"id":5272,"nodeType":"InlineAssembly","src":"7259:375:28"},{"expression":{"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5273,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"7700:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"7709:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5275,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"7717:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5278,"nodeType":"ExpressionStatement","src":"7700:21:28"},{"assignments":[5280],"declarations":[{"constant":false,"id":5280,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:28","nodeType":"VariableDeclaration","scope":5344,"src":"8056:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5279,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5282,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8079:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:28"},{"expression":{"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5288,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8312:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8327:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5291,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8341:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5295,"nodeType":"ExpressionStatement","src":"8312:36:28"},{"expression":{"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5296,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8382:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8397:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5299,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8411:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5303,"nodeType":"ExpressionStatement","src":"8382:36:28"},{"expression":{"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5304,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8454:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5306,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8469:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5307,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8483:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5311,"nodeType":"ExpressionStatement","src":"8454:36:28"},{"expression":{"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5312,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8525:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8540:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5315,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8554:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5319,"nodeType":"ExpressionStatement","src":"8525:36:28"},{"expression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5320,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8598:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8613:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5323,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8627:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5327,"nodeType":"ExpressionStatement","src":"8598:36:28"},{"expression":{"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5328,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8672:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8687:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5331,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8701:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5335,"nodeType":"ExpressionStatement","src":"8672:36:28"},{"expression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"9154:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5337,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"9163:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5338,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"9171:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5341,"nodeType":"ExpressionStatement","src":"9154:24:28"},{"expression":{"id":5342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"9199:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5220,"id":5343,"nodeType":"Return","src":"9192:13:28"}]}]},"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"4679:312:28","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5346,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:28","nodeType":"FunctionDefinition","parameters":{"id":5217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"x","nameLocation":"5020:1:28","nodeType":"VariableDeclaration","scope":5346,"src":"5012:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5214,"mutability":"mutable","name":"y","nameLocation":"5031:1:28","nodeType":"VariableDeclaration","scope":5346,"src":"5023:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5213,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5216,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:28","nodeType":"VariableDeclaration","scope":5346,"src":"5034:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:28"},"returnParameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"result","nameLocation":"5086:6:28","nodeType":"VariableDeclaration","scope":5346,"src":"5078:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:28"},"scope":6516,"src":"4996:4226:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5382,"nodeType":"Block","src":"9461:128:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5362,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"9485:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5363,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"9488:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5364,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"9491:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5361,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5346,5383],"referencedDeclaration":5346,"src":"9478:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5369,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"9539:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":5368,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"9522:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5372,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"9559:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5373,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"9562:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5374,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"9565:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5371,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5366,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"9506:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"9506:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5360,"id":5381,"nodeType":"Return","src":"9471:111:28"}]},"documentation":{"id":5347,"nodeType":"StructuredDocumentation","src":"9228:118:28","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5383,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:28","nodeType":"FunctionDefinition","parameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5349,"mutability":"mutable","name":"x","nameLocation":"9375:1:28","nodeType":"VariableDeclaration","scope":5383,"src":"9367:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5348,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5351,"mutability":"mutable","name":"y","nameLocation":"9386:1:28","nodeType":"VariableDeclaration","scope":5383,"src":"9378:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:28","nodeType":"VariableDeclaration","scope":5383,"src":"9389:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5352,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5356,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:28","nodeType":"VariableDeclaration","scope":5383,"src":"9410:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":5355,"nodeType":"UserDefinedTypeName","pathNode":{"id":5354,"name":"Rounding","nameLocations":["9410:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"9410:8:28"},"referencedDeclaration":4922,"src":"9410:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:28"},"returnParameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5383,"src":"9452:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:28"},"scope":6516,"src":"9351:238:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5479,"nodeType":"Block","src":"10223:1849:28","statements":[{"id":5478,"nodeType":"UncheckedBlock","src":"10233:1833:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5393,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"10261:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"10257:20:28","trueBody":{"expression":{"hexValue":"30","id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5392,"id":5397,"nodeType":"Return","src":"10269:8:28"}},{"assignments":[5400],"declarations":[{"constant":false,"id":5400,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:28","nodeType":"VariableDeclaration","scope":5478,"src":"10748:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5399,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5404,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"10768:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5402,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"10772:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:28"},{"assignments":[5406],"declarations":[{"constant":false,"id":5406,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:28","nodeType":"VariableDeclaration","scope":5478,"src":"10787:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5405,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5408,"initialValue":{"id":5407,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"10801:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:28"},{"assignments":[5410],"declarations":[{"constant":false,"id":5410,"mutability":"mutable","name":"x","nameLocation":"10945:1:28","nodeType":"VariableDeclaration","scope":5478,"src":"10938:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5409,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5412,"initialValue":{"hexValue":"30","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:28"},{"assignments":[5414],"declarations":[{"constant":false,"id":5414,"mutability":"mutable","name":"y","nameLocation":"10971:1:28","nodeType":"VariableDeclaration","scope":5478,"src":"10964:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5413,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5416,"initialValue":{"hexValue":"31","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:28"},{"body":{"id":5453,"nodeType":"Block","src":"11014:882:28","statements":[{"assignments":[5421],"declarations":[{"constant":false,"id":5421,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:28","nodeType":"VariableDeclaration","scope":5453,"src":"11032:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5425,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5422,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11051:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5423,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"11057:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:28"},{"expression":{"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5426,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11086:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5427,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"11091:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5428,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5429,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"11191:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5430,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11436:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5431,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"11442:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5432,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"11454:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5437,"nodeType":"ExpressionStatement","src":"11085:395:28"},{"expression":{"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5438,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"11500:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5439,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11503:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5440,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5441,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11585:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"11839:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11843:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5446,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"11854:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5444,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:28","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5452,"nodeType":"ExpressionStatement","src":"11499:382:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5417,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"10998:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5454,"nodeType":"WhileStatement","src":"10991:905:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5455,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11914:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5460,"nodeType":"IfStatement","src":"11910:22:28","trueBody":{"expression":{"hexValue":"30","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5392,"id":5459,"nodeType":"Return","src":"11924:8:28"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5462,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"11983:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5465,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"11990:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:28","subExpression":{"id":5468,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"12003:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:28","typeDescriptions":{}}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5474,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"12015:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:28","typeDescriptions":{}}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5461,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"11975:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5392,"id":5477,"nodeType":"Return","src":"11968:50:28"}]}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"9595:553:28","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5480,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:28","nodeType":"FunctionDefinition","parameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"a","nameLocation":"10177:1:28","nodeType":"VariableDeclaration","scope":5480,"src":"10169:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5388,"mutability":"mutable","name":"n","nameLocation":"10188:1:28","nodeType":"VariableDeclaration","scope":5480,"src":"10180:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:28"},"returnParameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5480,"src":"10214:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:28"},"scope":6516,"src":"10153:1919:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5500,"nodeType":"Block","src":"12672:82:28","statements":[{"id":5499,"nodeType":"UncheckedBlock","src":"12682:66:28","statements":[{"expression":{"arguments":[{"id":5492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"12725:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12728:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5496,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12735:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5490,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"12713:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6516_$","typeString":"type(library Math)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:28","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5537,"src":"12713:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5489,"id":5498,"nodeType":"Return","src":"12706:31:28"}]}]},"documentation":{"id":5481,"nodeType":"StructuredDocumentation","src":"12078:514:28","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5501,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:28","nodeType":"FunctionDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"a","nameLocation":"12626:1:28","nodeType":"VariableDeclaration","scope":5501,"src":"12618:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5485,"mutability":"mutable","name":"p","nameLocation":"12637:1:28","nodeType":"VariableDeclaration","scope":5501,"src":"12629:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:28"},"returnParameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5501,"src":"12663:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:28"},"scope":6516,"src":"12597:157:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5536,"nodeType":"Block","src":"13524:174:28","statements":[{"assignments":[5514,5516],"declarations":[{"constant":false,"id":5514,"mutability":"mutable","name":"success","nameLocation":"13540:7:28","nodeType":"VariableDeclaration","scope":5536,"src":"13535:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5513,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5516,"mutability":"mutable","name":"result","nameLocation":"13557:6:28","nodeType":"VariableDeclaration","scope":5536,"src":"13549:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5515,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5522,"initialValue":{"arguments":[{"id":5518,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"13577:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5519,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"13580:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5520,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"13583:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5517,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5561,5643],"referencedDeclaration":5561,"src":"13567:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:28"},{"condition":{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:28","subExpression":{"id":5523,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"13600:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5533,"nodeType":"IfStatement","src":"13595:74:28","trueBody":{"id":5532,"nodeType":"Block","src":"13609:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":5528,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"13635:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"13635:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5525,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"13623:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"13623:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5531,"nodeType":"ExpressionStatement","src":"13623:35:28"}]}},{"expression":{"id":5534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"13685:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5512,"id":5535,"nodeType":"Return","src":"13678:13:28"}]},"documentation":{"id":5502,"nodeType":"StructuredDocumentation","src":"12760:678:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5537,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:28","nodeType":"FunctionDefinition","parameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"b","nameLocation":"13467:1:28","nodeType":"VariableDeclaration","scope":5537,"src":"13459:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5506,"mutability":"mutable","name":"e","nameLocation":"13478:1:28","nodeType":"VariableDeclaration","scope":5537,"src":"13470:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5505,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5508,"mutability":"mutable","name":"m","nameLocation":"13489:1:28","nodeType":"VariableDeclaration","scope":5537,"src":"13481:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:28"},"returnParameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5537,"src":"13515:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:28"},"scope":6516,"src":"13443:255:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5560,"nodeType":"Block","src":"14552:1493:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"14566:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5558,"nodeType":"IfStatement","src":"14562:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5550,"id":5557,"nodeType":"Return","src":"14574:17:28"}},{"AST":{"nativeSrc":"14626:1413:28","nodeType":"YulBlock","src":"14626:1413:28","statements":[{"nativeSrc":"14640:22:28","nodeType":"YulVariableDeclaration","src":"14640:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:28","nodeType":"YulLiteral","src":"14657:4:28","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:28","nodeType":"YulIdentifier","src":"14651:5:28"},"nativeSrc":"14651:11:28","nodeType":"YulFunctionCall","src":"14651:11:28"},"variables":[{"name":"ptr","nativeSrc":"14644:3:28","nodeType":"YulTypedName","src":"14644:3:28","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:28","nodeType":"YulIdentifier","src":"15570:3:28"},{"kind":"number","nativeSrc":"15575:4:28","nodeType":"YulLiteral","src":"15575:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:28","nodeType":"YulIdentifier","src":"15563:6:28"},"nativeSrc":"15563:17:28","nodeType":"YulFunctionCall","src":"15563:17:28"},"nativeSrc":"15563:17:28","nodeType":"YulExpressionStatement","src":"15563:17:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:28","nodeType":"YulIdentifier","src":"15604:3:28"},{"kind":"number","nativeSrc":"15609:4:28","nodeType":"YulLiteral","src":"15609:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:28","nodeType":"YulIdentifier","src":"15600:3:28"},"nativeSrc":"15600:14:28","nodeType":"YulFunctionCall","src":"15600:14:28"},{"kind":"number","nativeSrc":"15616:4:28","nodeType":"YulLiteral","src":"15616:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:28","nodeType":"YulIdentifier","src":"15593:6:28"},"nativeSrc":"15593:28:28","nodeType":"YulFunctionCall","src":"15593:28:28"},"nativeSrc":"15593:28:28","nodeType":"YulExpressionStatement","src":"15593:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:28","nodeType":"YulIdentifier","src":"15645:3:28"},{"kind":"number","nativeSrc":"15650:4:28","nodeType":"YulLiteral","src":"15650:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:28","nodeType":"YulIdentifier","src":"15641:3:28"},"nativeSrc":"15641:14:28","nodeType":"YulFunctionCall","src":"15641:14:28"},{"kind":"number","nativeSrc":"15657:4:28","nodeType":"YulLiteral","src":"15657:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:28","nodeType":"YulIdentifier","src":"15634:6:28"},"nativeSrc":"15634:28:28","nodeType":"YulFunctionCall","src":"15634:28:28"},"nativeSrc":"15634:28:28","nodeType":"YulExpressionStatement","src":"15634:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:28","nodeType":"YulIdentifier","src":"15686:3:28"},{"kind":"number","nativeSrc":"15691:4:28","nodeType":"YulLiteral","src":"15691:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:28","nodeType":"YulIdentifier","src":"15682:3:28"},"nativeSrc":"15682:14:28","nodeType":"YulFunctionCall","src":"15682:14:28"},{"name":"b","nativeSrc":"15698:1:28","nodeType":"YulIdentifier","src":"15698:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:28","nodeType":"YulIdentifier","src":"15675:6:28"},"nativeSrc":"15675:25:28","nodeType":"YulFunctionCall","src":"15675:25:28"},"nativeSrc":"15675:25:28","nodeType":"YulExpressionStatement","src":"15675:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:28","nodeType":"YulIdentifier","src":"15724:3:28"},{"kind":"number","nativeSrc":"15729:4:28","nodeType":"YulLiteral","src":"15729:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:28","nodeType":"YulIdentifier","src":"15720:3:28"},"nativeSrc":"15720:14:28","nodeType":"YulFunctionCall","src":"15720:14:28"},{"name":"e","nativeSrc":"15736:1:28","nodeType":"YulIdentifier","src":"15736:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:28","nodeType":"YulIdentifier","src":"15713:6:28"},"nativeSrc":"15713:25:28","nodeType":"YulFunctionCall","src":"15713:25:28"},"nativeSrc":"15713:25:28","nodeType":"YulExpressionStatement","src":"15713:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:28","nodeType":"YulIdentifier","src":"15762:3:28"},{"kind":"number","nativeSrc":"15767:4:28","nodeType":"YulLiteral","src":"15767:4:28","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:28","nodeType":"YulIdentifier","src":"15758:3:28"},"nativeSrc":"15758:14:28","nodeType":"YulFunctionCall","src":"15758:14:28"},{"name":"m","nativeSrc":"15774:1:28","nodeType":"YulIdentifier","src":"15774:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:28","nodeType":"YulIdentifier","src":"15751:6:28"},"nativeSrc":"15751:25:28","nodeType":"YulFunctionCall","src":"15751:25:28"},"nativeSrc":"15751:25:28","nodeType":"YulExpressionStatement","src":"15751:25:28"},{"nativeSrc":"15938:57:28","nodeType":"YulAssignment","src":"15938:57:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:28","nodeType":"YulIdentifier","src":"15960:3:28"},"nativeSrc":"15960:5:28","nodeType":"YulFunctionCall","src":"15960:5:28"},{"kind":"number","nativeSrc":"15967:4:28","nodeType":"YulLiteral","src":"15967:4:28","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:28","nodeType":"YulIdentifier","src":"15973:3:28"},{"kind":"number","nativeSrc":"15978:4:28","nodeType":"YulLiteral","src":"15978:4:28","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:28","nodeType":"YulLiteral","src":"15984:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:28","nodeType":"YulLiteral","src":"15990:4:28","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:28","nodeType":"YulIdentifier","src":"15949:10:28"},"nativeSrc":"15949:46:28","nodeType":"YulFunctionCall","src":"15949:46:28"},"variableNames":[{"name":"success","nativeSrc":"15938:7:28","nodeType":"YulIdentifier","src":"15938:7:28"}]},{"nativeSrc":"16008:21:28","nodeType":"YulAssignment","src":"16008:21:28","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:28","nodeType":"YulLiteral","src":"16024:4:28","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:28","nodeType":"YulIdentifier","src":"16018:5:28"},"nativeSrc":"16018:11:28","nodeType":"YulFunctionCall","src":"16018:11:28"},"variableNames":[{"name":"result","nativeSrc":"16008:6:28","nodeType":"YulIdentifier","src":"16008:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5540,"isOffset":false,"isSlot":false,"src":"15698:1:28","valueSize":1},{"declaration":5542,"isOffset":false,"isSlot":false,"src":"15736:1:28","valueSize":1},{"declaration":5544,"isOffset":false,"isSlot":false,"src":"15774:1:28","valueSize":1},{"declaration":5549,"isOffset":false,"isSlot":false,"src":"16008:6:28","valueSize":1},{"declaration":5547,"isOffset":false,"isSlot":false,"src":"15938:7:28","valueSize":1}],"flags":["memory-safe"],"id":5559,"nodeType":"InlineAssembly","src":"14601:1438:28"}]},"documentation":{"id":5538,"nodeType":"StructuredDocumentation","src":"13704:738:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5561,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:28","nodeType":"FunctionDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"b","nameLocation":"14474:1:28","nodeType":"VariableDeclaration","scope":5561,"src":"14466:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5542,"mutability":"mutable","name":"e","nameLocation":"14485:1:28","nodeType":"VariableDeclaration","scope":5561,"src":"14477:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5544,"mutability":"mutable","name":"m","nameLocation":"14496:1:28","nodeType":"VariableDeclaration","scope":5561,"src":"14488:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5543,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:28"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"success","nameLocation":"14527:7:28","nodeType":"VariableDeclaration","scope":5561,"src":"14522:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5546,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5549,"mutability":"mutable","name":"result","nameLocation":"14544:6:28","nodeType":"VariableDeclaration","scope":5561,"src":"14536:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:28"},"scope":6516,"src":"14447:1598:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5596,"nodeType":"Block","src":"16242:179:28","statements":[{"assignments":[5574,5576],"declarations":[{"constant":false,"id":5574,"mutability":"mutable","name":"success","nameLocation":"16258:7:28","nodeType":"VariableDeclaration","scope":5596,"src":"16253:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5573,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5576,"mutability":"mutable","name":"result","nameLocation":"16280:6:28","nodeType":"VariableDeclaration","scope":5596,"src":"16267:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5575,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5582,"initialValue":{"arguments":[{"id":5578,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"16300:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5579,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"16303:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5580,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"16306:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5577,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5561,5643],"referencedDeclaration":5643,"src":"16290:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:28"},{"condition":{"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:28","subExpression":{"id":5583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"16323:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5593,"nodeType":"IfStatement","src":"16318:74:28","trueBody":{"id":5592,"nodeType":"Block","src":"16332:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":5588,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"16358:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"16358:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5585,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"16346:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"16346:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5591,"nodeType":"ExpressionStatement","src":"16346:35:28"}]}},{"expression":{"id":5594,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"16408:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5572,"id":5595,"nodeType":"Return","src":"16401:13:28"}]},"documentation":{"id":5562,"nodeType":"StructuredDocumentation","src":"16051:85:28","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5597,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:28","nodeType":"FunctionDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"b","nameLocation":"16170:1:28","nodeType":"VariableDeclaration","scope":5597,"src":"16157:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5563,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5566,"mutability":"mutable","name":"e","nameLocation":"16186:1:28","nodeType":"VariableDeclaration","scope":5597,"src":"16173:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5565,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5568,"mutability":"mutable","name":"m","nameLocation":"16202:1:28","nodeType":"VariableDeclaration","scope":5597,"src":"16189:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5567,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:28"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5597,"src":"16228:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5570,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:28"},"scope":6516,"src":"16141:280:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"16675:771:28","statements":[{"condition":{"arguments":[{"id":5612,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"16700:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5611,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"16689:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5621,"nodeType":"IfStatement","src":"16685:47:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5615,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5610,"id":5620,"nodeType":"Return","src":"16704:28:28"}},{"assignments":[5623],"declarations":[{"constant":false,"id":5623,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:28","nodeType":"VariableDeclaration","scope":5642,"src":"16743:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5626,"initialValue":{"expression":{"id":5624,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"16758:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:28","memberName":"length","nodeType":"MemberAccess","src":"16758:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:28"},{"expression":{"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"16848:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5630,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"16874:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:28","memberName":"length","nodeType":"MemberAccess","src":"16874:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5632,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"16884:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:28","memberName":"length","nodeType":"MemberAccess","src":"16884:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5634,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"16894:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"16900:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5636,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"16903:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5637,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"16906:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5628,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5640,"nodeType":"ExpressionStatement","src":"16848:60:28"},{"AST":{"nativeSrc":"16944:496:28","nodeType":"YulBlock","src":"16944:496:28","statements":[{"nativeSrc":"16958:32:28","nodeType":"YulVariableDeclaration","src":"16958:32:28","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:28","nodeType":"YulIdentifier","src":"16977:6:28"},{"kind":"number","nativeSrc":"16985:4:28","nodeType":"YulLiteral","src":"16985:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:28","nodeType":"YulIdentifier","src":"16973:3:28"},"nativeSrc":"16973:17:28","nodeType":"YulFunctionCall","src":"16973:17:28"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:28","nodeType":"YulTypedName","src":"16962:7:28","type":""}]},{"nativeSrc":"17080:73:28","nodeType":"YulAssignment","src":"17080:73:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:28","nodeType":"YulIdentifier","src":"17102:3:28"},"nativeSrc":"17102:5:28","nodeType":"YulFunctionCall","src":"17102:5:28"},{"kind":"number","nativeSrc":"17109:4:28","nodeType":"YulLiteral","src":"17109:4:28","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:28","nodeType":"YulIdentifier","src":"17115:7:28"},{"arguments":[{"name":"result","nativeSrc":"17130:6:28","nodeType":"YulIdentifier","src":"17130:6:28"}],"functionName":{"name":"mload","nativeSrc":"17124:5:28","nodeType":"YulIdentifier","src":"17124:5:28"},"nativeSrc":"17124:13:28","nodeType":"YulFunctionCall","src":"17124:13:28"},{"name":"dataPtr","nativeSrc":"17139:7:28","nodeType":"YulIdentifier","src":"17139:7:28"},{"name":"mLen","nativeSrc":"17148:4:28","nodeType":"YulIdentifier","src":"17148:4:28"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:28","nodeType":"YulIdentifier","src":"17091:10:28"},"nativeSrc":"17091:62:28","nodeType":"YulFunctionCall","src":"17091:62:28"},"variableNames":[{"name":"success","nativeSrc":"17080:7:28","nodeType":"YulIdentifier","src":"17080:7:28"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:28","nodeType":"YulIdentifier","src":"17309:6:28"},{"name":"mLen","nativeSrc":"17317:4:28","nodeType":"YulIdentifier","src":"17317:4:28"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:28","nodeType":"YulIdentifier","src":"17302:6:28"},"nativeSrc":"17302:20:28","nodeType":"YulFunctionCall","src":"17302:20:28"},"nativeSrc":"17302:20:28","nodeType":"YulExpressionStatement","src":"17302:20:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:28","nodeType":"YulLiteral","src":"17405:4:28","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:28","nodeType":"YulIdentifier","src":"17415:7:28"},{"name":"mLen","nativeSrc":"17424:4:28","nodeType":"YulIdentifier","src":"17424:4:28"}],"functionName":{"name":"add","nativeSrc":"17411:3:28","nodeType":"YulIdentifier","src":"17411:3:28"},"nativeSrc":"17411:18:28","nodeType":"YulFunctionCall","src":"17411:18:28"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:28","nodeType":"YulIdentifier","src":"17398:6:28"},"nativeSrc":"17398:32:28","nodeType":"YulFunctionCall","src":"17398:32:28"},"nativeSrc":"17398:32:28","nodeType":"YulExpressionStatement","src":"17398:32:28"}]},"evmVersion":"paris","externalReferences":[{"declaration":5623,"isOffset":false,"isSlot":false,"src":"17148:4:28","valueSize":1},{"declaration":5623,"isOffset":false,"isSlot":false,"src":"17317:4:28","valueSize":1},{"declaration":5623,"isOffset":false,"isSlot":false,"src":"17424:4:28","valueSize":1},{"declaration":5609,"isOffset":false,"isSlot":false,"src":"16977:6:28","valueSize":1},{"declaration":5609,"isOffset":false,"isSlot":false,"src":"17130:6:28","valueSize":1},{"declaration":5609,"isOffset":false,"isSlot":false,"src":"17309:6:28","valueSize":1},{"declaration":5607,"isOffset":false,"isSlot":false,"src":"17080:7:28","valueSize":1}],"flags":["memory-safe"],"id":5641,"nodeType":"InlineAssembly","src":"16919:521:28"}]},"documentation":{"id":5598,"nodeType":"StructuredDocumentation","src":"16427:88:28","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5643,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:28","nodeType":"FunctionDefinition","parameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"b","nameLocation":"16561:1:28","nodeType":"VariableDeclaration","scope":5643,"src":"16548:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5599,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5602,"mutability":"mutable","name":"e","nameLocation":"16585:1:28","nodeType":"VariableDeclaration","scope":5643,"src":"16572:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5601,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5604,"mutability":"mutable","name":"m","nameLocation":"16609:1:28","nodeType":"VariableDeclaration","scope":5643,"src":"16596:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5603,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:28"},"returnParameters":{"id":5610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"success","nameLocation":"16645:7:28","nodeType":"VariableDeclaration","scope":5643,"src":"16640:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5606,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5609,"mutability":"mutable","name":"result","nameLocation":"16667:6:28","nodeType":"VariableDeclaration","scope":5643,"src":"16654:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5608,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:28"},"scope":6516,"src":"16520:926:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5675,"nodeType":"Block","src":"17601:176:28","statements":[{"body":{"id":5671,"nodeType":"Block","src":"17658:92:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5662,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"17676:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5664,"indexExpression":{"id":5663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"17686:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5670,"nodeType":"IfStatement","src":"17672:68:28","trueBody":{"id":5669,"nodeType":"Block","src":"17695:45:28","statements":[{"expression":{"hexValue":"66616c7365","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5650,"id":5668,"nodeType":"Return","src":"17713:12:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"17631:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5656,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"17635:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:28","memberName":"length","nodeType":"MemberAccess","src":"17635:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"initializationExpression":{"assignments":[5652],"declarations":[{"constant":false,"id":5652,"mutability":"mutable","name":"i","nameLocation":"17624:1:28","nodeType":"VariableDeclaration","scope":5672,"src":"17616:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5651,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5654,"initialValue":{"hexValue":"30","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:28","subExpression":{"id":5659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"17655:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5661,"nodeType":"ExpressionStatement","src":"17653:3:28"},"nodeType":"ForStatement","src":"17611:139:28"},{"expression":{"hexValue":"74727565","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5650,"id":5674,"nodeType":"Return","src":"17759:11:28"}]},"documentation":{"id":5644,"nodeType":"StructuredDocumentation","src":"17452:72:28","text":" @dev Returns whether the provided byte array is zero."},"id":5676,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:28","nodeType":"FunctionDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5646,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:28","nodeType":"VariableDeclaration","scope":5676,"src":"17549:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5645,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:28"},"returnParameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5676,"src":"17595:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5648,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:28"},"scope":6516,"src":"17529:248:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5894,"nodeType":"Block","src":"18137:5124:28","statements":[{"id":5893,"nodeType":"UncheckedBlock","src":"18147:5108:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"18241:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5690,"nodeType":"IfStatement","src":"18237:53:28","trueBody":{"id":5689,"nodeType":"Block","src":"18249:41:28","statements":[{"expression":{"id":5687,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"18274:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5683,"id":5688,"nodeType":"Return","src":"18267:8:28"}]}},{"assignments":[5692],"declarations":[{"constant":false,"id":5692,"mutability":"mutable","name":"aa","nameLocation":"19225:2:28","nodeType":"VariableDeclaration","scope":5893,"src":"19217:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5694,"initialValue":{"id":5693,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"19230:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:28"},{"assignments":[5696],"declarations":[{"constant":false,"id":5696,"mutability":"mutable","name":"xn","nameLocation":"19253:2:28","nodeType":"VariableDeclaration","scope":5893,"src":"19245:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5695,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5698,"initialValue":{"hexValue":"31","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5699,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19278:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5714,"nodeType":"IfStatement","src":"19274:92:28","trueBody":{"id":5713,"nodeType":"Block","src":"19296:70:28","statements":[{"expression":{"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5705,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19314:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5708,"nodeType":"ExpressionStatement","src":"19314:10:28"},{"expression":{"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5709,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19342:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5712,"nodeType":"ExpressionStatement","src":"19342:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19383:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5730,"nodeType":"IfStatement","src":"19379:90:28","trueBody":{"id":5729,"nodeType":"Block","src":"19400:69:28","statements":[{"expression":{"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5721,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19418:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5724,"nodeType":"ExpressionStatement","src":"19418:9:28"},{"expression":{"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5725,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19445:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5728,"nodeType":"ExpressionStatement","src":"19445:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19486:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5746,"nodeType":"IfStatement","src":"19482:90:28","trueBody":{"id":5745,"nodeType":"Block","src":"19503:69:28","statements":[{"expression":{"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5737,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19521:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5740,"nodeType":"ExpressionStatement","src":"19521:9:28"},{"expression":{"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5741,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19548:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5744,"nodeType":"ExpressionStatement","src":"19548:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5747,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19589:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5762,"nodeType":"IfStatement","src":"19585:89:28","trueBody":{"id":5761,"nodeType":"Block","src":"19606:68:28","statements":[{"expression":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5753,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19624:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5756,"nodeType":"ExpressionStatement","src":"19624:9:28"},{"expression":{"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5757,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19651:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5760,"nodeType":"ExpressionStatement","src":"19651:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19691:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5778,"nodeType":"IfStatement","src":"19687:87:28","trueBody":{"id":5777,"nodeType":"Block","src":"19707:67:28","statements":[{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5769,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19725:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5772,"nodeType":"ExpressionStatement","src":"19725:8:28"},{"expression":{"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19751:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5776,"nodeType":"ExpressionStatement","src":"19751:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5779,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19791:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5794,"nodeType":"IfStatement","src":"19787:87:28","trueBody":{"id":5793,"nodeType":"Block","src":"19807:67:28","statements":[{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19825:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5788,"nodeType":"ExpressionStatement","src":"19825:8:28"},{"expression":{"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5789,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19851:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5792,"nodeType":"ExpressionStatement","src":"19851:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5795,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19891:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5806,"nodeType":"IfStatement","src":"19887:61:28","trueBody":{"id":5805,"nodeType":"Block","src":"19907:41:28","statements":[{"expression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5801,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19925:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5804,"nodeType":"ExpressionStatement","src":"19925:8:28"}]}},{"expression":{"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5807,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"20368:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5809,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"20378:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5815,"nodeType":"ExpressionStatement","src":"20368:18:28"},{"expression":{"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5816,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22273:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5817,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22279:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22284:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5819,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22288:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5826,"nodeType":"ExpressionStatement","src":"22273:23:28"},{"expression":{"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5827,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22382:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5828,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22388:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22393:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5830,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22397:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5837,"nodeType":"ExpressionStatement","src":"22382:23:28"},{"expression":{"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5838,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22493:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5839,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22499:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22504:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5841,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22508:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5848,"nodeType":"ExpressionStatement","src":"22493:23:28"},{"expression":{"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5849,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22602:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5850,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22608:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22613:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5852,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22617:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5859,"nodeType":"ExpressionStatement","src":"22602:23:28"},{"expression":{"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5860,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22712:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22718:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22723:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5863,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22727:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5870,"nodeType":"ExpressionStatement","src":"22712:23:28"},{"expression":{"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5871,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22822:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5872,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22828:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22833:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5874,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22837:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5881,"nodeType":"ExpressionStatement","src":"22822:23:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"23211:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5885,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"23232:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"23237:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5887,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"23241:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5883,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"23216:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"23216:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5683,"id":5892,"nodeType":"Return","src":"23204:40:28"}]}]},"documentation":{"id":5677,"nodeType":"StructuredDocumentation","src":"17783:292:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5895,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:28","nodeType":"FunctionDefinition","parameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"a","nameLocation":"18102:1:28","nodeType":"VariableDeclaration","scope":5895,"src":"18094:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:28"},"returnParameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5895,"src":"18128:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:28"},"scope":6516,"src":"18080:5181:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5928,"nodeType":"Block","src":"23434:171:28","statements":[{"id":5927,"nodeType":"UncheckedBlock","src":"23444:155:28","statements":[{"assignments":[5907],"declarations":[{"constant":false,"id":5907,"mutability":"mutable","name":"result","nameLocation":"23476:6:28","nodeType":"VariableDeclaration","scope":5927,"src":"23468:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5911,"initialValue":{"arguments":[{"id":5909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"23490:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5908,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5895,5929],"referencedDeclaration":5895,"src":"23485:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"23513:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5916,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"23555:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":5915,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"23538:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"23568:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"23577:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"23586:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5913,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"23522:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"23522:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5905,"id":5926,"nodeType":"Return","src":"23506:82:28"}]}]},"documentation":{"id":5896,"nodeType":"StructuredDocumentation","src":"23267:86:28","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5929,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:28","nodeType":"FunctionDefinition","parameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"a","nameLocation":"23380:1:28","nodeType":"VariableDeclaration","scope":5929,"src":"23372:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5897,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5901,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:28","nodeType":"VariableDeclaration","scope":5929,"src":"23383:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":5900,"nodeType":"UserDefinedTypeName","pathNode":{"id":5899,"name":"Rounding","nameLocations":["23383:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"23383:8:28"},"referencedDeclaration":4922,"src":"23383:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:28"},"returnParameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5929,"src":"23425:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5903,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:28"},"scope":6516,"src":"23358:247:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6124,"nodeType":"Block","src":"23796:981:28","statements":[{"assignments":[5938],"declarations":[{"constant":false,"id":5938,"mutability":"mutable","name":"result","nameLocation":"23814:6:28","nodeType":"VariableDeclaration","scope":6124,"src":"23806:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5940,"initialValue":{"hexValue":"30","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:28"},{"assignments":[5942],"declarations":[{"constant":false,"id":5942,"mutability":"mutable","name":"exp","nameLocation":"23842:3:28","nodeType":"VariableDeclaration","scope":6124,"src":"23834:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5943,"nodeType":"VariableDeclarationStatement","src":"23834:11:28"},{"id":6121,"nodeType":"UncheckedBlock","src":"23855:893:28","statements":[{"expression":{"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5944,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23879:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"23907:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5946,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"23891:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"23891:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5959,"nodeType":"ExpressionStatement","src":"23879:51:28"},{"expression":{"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"23944:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5961,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23954:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5963,"nodeType":"ExpressionStatement","src":"23944:13:28"},{"expression":{"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"23971:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5965,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23981:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5967,"nodeType":"ExpressionStatement","src":"23971:13:28"},{"expression":{"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5968,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23999:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24026:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5970,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24010:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24010:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5983,"nodeType":"ExpressionStatement","src":"23999:49:28"},{"expression":{"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24062:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5985,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24072:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5987,"nodeType":"ExpressionStatement","src":"24062:13:28"},{"expression":{"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24089:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5989,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24099:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5991,"nodeType":"ExpressionStatement","src":"24089:13:28"},{"expression":{"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5992,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24117:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24144:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5994,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24128:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24128:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6007,"nodeType":"ExpressionStatement","src":"24117:49:28"},{"expression":{"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24180:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6009,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24190:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6011,"nodeType":"ExpressionStatement","src":"24180:13:28"},{"expression":{"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24207:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6013,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24217:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6015,"nodeType":"ExpressionStatement","src":"24207:13:28"},{"expression":{"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6016,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24235:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24262:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6018,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24246:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24246:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6031,"nodeType":"ExpressionStatement","src":"24235:49:28"},{"expression":{"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24298:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6033,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24308:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6035,"nodeType":"ExpressionStatement","src":"24298:13:28"},{"expression":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24325:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6037,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24335:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6039,"nodeType":"ExpressionStatement","src":"24325:13:28"},{"expression":{"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6040,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24353:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24379:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6042,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24363:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24363:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6055,"nodeType":"ExpressionStatement","src":"24353:47:28"},{"expression":{"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24414:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6057,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24424:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6059,"nodeType":"ExpressionStatement","src":"24414:13:28"},{"expression":{"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24441:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6061,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24451:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6063,"nodeType":"ExpressionStatement","src":"24441:13:28"},{"expression":{"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6064,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24469:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24495:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:28","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6066,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24479:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24479:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6079,"nodeType":"ExpressionStatement","src":"24469:47:28"},{"expression":{"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24530:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6081,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24540:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6083,"nodeType":"ExpressionStatement","src":"24530:13:28"},{"expression":{"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24557:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6085,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24567:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6087,"nodeType":"ExpressionStatement","src":"24557:13:28"},{"expression":{"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6088,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24585:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24611:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6090,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24595:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24595:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6103,"nodeType":"ExpressionStatement","src":"24585:47:28"},{"expression":{"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24646:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6105,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24656:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6107,"nodeType":"ExpressionStatement","src":"24646:13:28"},{"expression":{"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24673:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6109,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24683:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6111,"nodeType":"ExpressionStatement","src":"24673:13:28"},{"expression":{"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24701:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24727:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6113,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24711:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24711:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6120,"nodeType":"ExpressionStatement","src":"24701:36:28"}]},{"expression":{"id":6122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24764:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5936,"id":6123,"nodeType":"Return","src":"24757:13:28"}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"23611:119:28","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6125,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:28","nodeType":"FunctionDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"value","nameLocation":"23757:5:28","nodeType":"VariableDeclaration","scope":6125,"src":"23749:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5931,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:28"},"returnParameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6125,"src":"23787:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5934,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:28"},"scope":6516,"src":"23735:1042:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6158,"nodeType":"Block","src":"25010:175:28","statements":[{"id":6157,"nodeType":"UncheckedBlock","src":"25020:159:28","statements":[{"assignments":[6137],"declarations":[{"constant":false,"id":6137,"mutability":"mutable","name":"result","nameLocation":"25052:6:28","nodeType":"VariableDeclaration","scope":6157,"src":"25044:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6141,"initialValue":{"arguments":[{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"25066:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6125,6159],"referencedDeclaration":6125,"src":"25061:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"25093:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6146,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"25135:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":6145,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"25118:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"25153:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"25162:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6143,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"25102:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"25102:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6135,"id":6156,"nodeType":"Return","src":"25086:82:28"}]}]},"documentation":{"id":6126,"nodeType":"StructuredDocumentation","src":"24783:142:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6159,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:28","nodeType":"FunctionDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"value","nameLocation":"24952:5:28","nodeType":"VariableDeclaration","scope":6159,"src":"24944:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6127,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6131,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:28","nodeType":"VariableDeclaration","scope":6159,"src":"24959:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":6130,"nodeType":"UserDefinedTypeName","pathNode":{"id":6129,"name":"Rounding","nameLocations":["24959:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"24959:8:28"},"referencedDeclaration":4922,"src":"24959:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:28"},"returnParameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6159,"src":"25001:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6133,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:28"},"scope":6516,"src":"24930:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6287,"nodeType":"Block","src":"25378:854:28","statements":[{"assignments":[6168],"declarations":[{"constant":false,"id":6168,"mutability":"mutable","name":"result","nameLocation":"25396:6:28","nodeType":"VariableDeclaration","scope":6287,"src":"25388:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6170,"initialValue":{"hexValue":"30","id":6169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:28"},{"id":6284,"nodeType":"UncheckedBlock","src":"25416:787:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25444:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6187,"nodeType":"IfStatement","src":"25440:103:28","trueBody":{"id":6186,"nodeType":"Block","src":"25463:80:28","statements":[{"expression":{"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25481:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6181,"nodeType":"ExpressionStatement","src":"25481:17:28"},{"expression":{"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25516:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6185,"nodeType":"ExpressionStatement","src":"25516:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25560:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6204,"nodeType":"IfStatement","src":"25556:103:28","trueBody":{"id":6203,"nodeType":"Block","src":"25579:80:28","statements":[{"expression":{"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25597:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6198,"nodeType":"ExpressionStatement","src":"25597:17:28"},{"expression":{"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25632:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6202,"nodeType":"ExpressionStatement","src":"25632:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25676:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6221,"nodeType":"IfStatement","src":"25672:103:28","trueBody":{"id":6220,"nodeType":"Block","src":"25695:80:28","statements":[{"expression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25713:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6215,"nodeType":"ExpressionStatement","src":"25713:17:28"},{"expression":{"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25748:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6219,"nodeType":"ExpressionStatement","src":"25748:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25792:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6238,"nodeType":"IfStatement","src":"25788:100:28","trueBody":{"id":6237,"nodeType":"Block","src":"25810:78:28","statements":[{"expression":{"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25828:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6232,"nodeType":"ExpressionStatement","src":"25828:16:28"},{"expression":{"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25862:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6236,"nodeType":"ExpressionStatement","src":"25862:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25905:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6255,"nodeType":"IfStatement","src":"25901:100:28","trueBody":{"id":6254,"nodeType":"Block","src":"25923:78:28","statements":[{"expression":{"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25941:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6249,"nodeType":"ExpressionStatement","src":"25941:16:28"},{"expression":{"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25975:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6253,"nodeType":"ExpressionStatement","src":"25975:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"26018:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6272,"nodeType":"IfStatement","src":"26014:100:28","trueBody":{"id":6271,"nodeType":"Block","src":"26036:78:28","statements":[{"expression":{"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"26054:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6266,"nodeType":"ExpressionStatement","src":"26054:16:28"},{"expression":{"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"26088:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6270,"nodeType":"ExpressionStatement","src":"26088:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"26131:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6283,"nodeType":"IfStatement","src":"26127:66:28","trueBody":{"id":6282,"nodeType":"Block","src":"26149:44:28","statements":[{"expression":{"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"26167:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6281,"nodeType":"ExpressionStatement","src":"26167:11:28"}]}}]},{"expression":{"id":6285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"26219:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6166,"id":6286,"nodeType":"Return","src":"26212:13:28"}]},"documentation":{"id":6160,"nodeType":"StructuredDocumentation","src":"25191:120:28","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6288,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:28","nodeType":"FunctionDefinition","parameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"value","nameLocation":"25339:5:28","nodeType":"VariableDeclaration","scope":6288,"src":"25331:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6161,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:28"},"returnParameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6288,"src":"25369:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:28"},"scope":6516,"src":"25316:916:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6321,"nodeType":"Block","src":"26467:177:28","statements":[{"id":6320,"nodeType":"UncheckedBlock","src":"26477:161:28","statements":[{"assignments":[6300],"declarations":[{"constant":false,"id":6300,"mutability":"mutable","name":"result","nameLocation":"26509:6:28","nodeType":"VariableDeclaration","scope":6320,"src":"26501:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6299,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6304,"initialValue":{"arguments":[{"id":6302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"26524:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6301,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6288,6322],"referencedDeclaration":6288,"src":"26518:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"26551:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6309,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"26593:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":6308,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"26576:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"26612:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"26621:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6306,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"26560:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"26560:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6298,"id":6319,"nodeType":"Return","src":"26544:83:28"}]}]},"documentation":{"id":6289,"nodeType":"StructuredDocumentation","src":"26238:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6322,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:28","nodeType":"FunctionDefinition","parameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"value","nameLocation":"26409:5:28","nodeType":"VariableDeclaration","scope":6322,"src":"26401:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6290,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6294,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:28","nodeType":"VariableDeclaration","scope":6322,"src":"26416:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":6293,"nodeType":"UserDefinedTypeName","pathNode":{"id":6292,"name":"Rounding","nameLocations":["26416:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"26416:8:28"},"referencedDeclaration":4922,"src":"26416:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:28"},"returnParameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6322,"src":"26458:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6296,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:28"},"scope":6516,"src":"26386:258:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"26964:674:28","statements":[{"assignments":[6331],"declarations":[{"constant":false,"id":6331,"mutability":"mutable","name":"result","nameLocation":"26982:6:28","nodeType":"VariableDeclaration","scope":6458,"src":"26974:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6330,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6333,"initialValue":{"hexValue":"30","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:28"},{"assignments":[6335],"declarations":[{"constant":false,"id":6335,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:28","nodeType":"VariableDeclaration","scope":6458,"src":"27002:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6336,"nodeType":"VariableDeclarationStatement","src":"27002:12:28"},{"id":6455,"nodeType":"UncheckedBlock","src":"27024:585:28","statements":[{"expression":{"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6337,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27048:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27071:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6338,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27055:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27055:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6350,"nodeType":"ExpressionStatement","src":"27048:46:28"},{"expression":{"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27108:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6352,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27118:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6356,"nodeType":"ExpressionStatement","src":"27108:20:28"},{"expression":{"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27142:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6358,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27152:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6362,"nodeType":"ExpressionStatement","src":"27142:19:28"},{"expression":{"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6363,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27176:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27199:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":6372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6364,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27183:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27183:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6376,"nodeType":"ExpressionStatement","src":"27176:45:28"},{"expression":{"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27235:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6378,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27245:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6382,"nodeType":"ExpressionStatement","src":"27235:19:28"},{"expression":{"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27268:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6384,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27278:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6388,"nodeType":"ExpressionStatement","src":"27268:18:28"},{"expression":{"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6389,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27301:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27324:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6390,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27308:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27308:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6402,"nodeType":"ExpressionStatement","src":"27301:45:28"},{"expression":{"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27360:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27370:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6408,"nodeType":"ExpressionStatement","src":"27360:19:28"},{"expression":{"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27393:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6410,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27403:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6414,"nodeType":"ExpressionStatement","src":"27393:18:28"},{"expression":{"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6415,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27426:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27449:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6416,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27433:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27433:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6428,"nodeType":"ExpressionStatement","src":"27426:45:28"},{"expression":{"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27485:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6430,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27495:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6434,"nodeType":"ExpressionStatement","src":"27485:19:28"},{"expression":{"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27518:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6436,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27528:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6440,"nodeType":"ExpressionStatement","src":"27518:18:28"},{"expression":{"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27551:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27577:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6442,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27561:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27561:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6454,"nodeType":"ExpressionStatement","src":"27551:47:28"}]},{"expression":{"id":6456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27625:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6329,"id":6457,"nodeType":"Return","src":"27618:13:28"}]},"documentation":{"id":6323,"nodeType":"StructuredDocumentation","src":"26650:246:28","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:28","nodeType":"FunctionDefinition","parameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"value","nameLocation":"26925:5:28","nodeType":"VariableDeclaration","scope":6459,"src":"26917:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6324,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:28"},"returnParameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6459,"src":"26955:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6327,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:28"},"scope":6516,"src":"26901:737:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6495,"nodeType":"Block","src":"27875:184:28","statements":[{"id":6494,"nodeType":"UncheckedBlock","src":"27885:168:28","statements":[{"assignments":[6471],"declarations":[{"constant":false,"id":6471,"mutability":"mutable","name":"result","nameLocation":"27917:6:28","nodeType":"VariableDeclaration","scope":6494,"src":"27909:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6470,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6475,"initialValue":{"arguments":[{"id":6473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"27933:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6472,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6459,6496],"referencedDeclaration":6459,"src":"27926:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"27960:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6480,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"28002:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":6479,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"27985:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"28021:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"28036:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6477,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27969:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27969:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6469,"id":6493,"nodeType":"Return","src":"27953:89:28"}]}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"27644:144:28","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6496,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:28","nodeType":"FunctionDefinition","parameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"27817:5:28","nodeType":"VariableDeclaration","scope":6496,"src":"27809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6461,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6465,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:28","nodeType":"VariableDeclaration","scope":6496,"src":"27824:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":6464,"nodeType":"UserDefinedTypeName","pathNode":{"id":6463,"name":"Rounding","nameLocations":["27824:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"27824:8:28"},"referencedDeclaration":4922,"src":"27824:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:28"},"returnParameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6496,"src":"27866:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6467,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:28"},"scope":6516,"src":"27793:266:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6514,"nodeType":"Block","src":"28257:48:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6507,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"28280:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":6506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6505,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:28","typeDescriptions":{}}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6504,"id":6513,"nodeType":"Return","src":"28267:31:28"}]},"documentation":{"id":6497,"nodeType":"StructuredDocumentation","src":"28065:113:28","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6515,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:28","nodeType":"FunctionDefinition","parameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:28","nodeType":"VariableDeclaration","scope":6515,"src":"28209:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":6499,"nodeType":"UserDefinedTypeName","pathNode":{"id":6498,"name":"Rounding","nameLocations":["28209:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"28209:8:28"},"referencedDeclaration":4922,"src":"28209:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:28"},"returnParameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6515,"src":"28251:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6502,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:28"},"scope":6516,"src":"28183:122:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6517,"src":"281:28026:28","usedErrors":[],"usedEvents":[]}],"src":"103:28205:28"},"id":28},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8281]},"id":8282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6518,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6519,"nodeType":"StructuredDocumentation","src":"218:550:29","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8281,"linearizedBaseContracts":[8281],"name":"SafeCast","nameLocation":"777:8:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6520,"nodeType":"StructuredDocumentation","src":"792:68:29","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6526,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:29","nodeType":"ErrorDefinition","parameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"bits","nameLocation":"908:4:29","nodeType":"VariableDeclaration","scope":6526,"src":"902:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6521,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6524,"mutability":"mutable","name":"value","nameLocation":"922:5:29","nodeType":"VariableDeclaration","scope":6526,"src":"914:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6523,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:29"},"src":"865:64:29"},{"documentation":{"id":6527,"nodeType":"StructuredDocumentation","src":"935:75:29","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6531,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:29","nodeType":"ErrorDefinition","parameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"value","nameLocation":"1056:5:29","nodeType":"VariableDeclaration","scope":6531,"src":"1049:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6528,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:29"},"src":"1015:48:29"},{"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"1069:67:29","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6538,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:29","nodeType":"ErrorDefinition","parameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"bits","nameLocation":"1183:4:29","nodeType":"VariableDeclaration","scope":6538,"src":"1177:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6533,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6536,"mutability":"mutable","name":"value","nameLocation":"1196:5:29","nodeType":"VariableDeclaration","scope":6538,"src":"1189:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6535,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:29"},"src":"1141:62:29"},{"documentation":{"id":6539,"nodeType":"StructuredDocumentation","src":"1209:75:29","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6543,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:29","nodeType":"ErrorDefinition","parameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"value","nameLocation":"1331:5:29","nodeType":"VariableDeclaration","scope":6543,"src":"1323:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:29"},"src":"1289:49:29"},{"body":{"id":6570,"nodeType":"Block","src":"1695:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"1709:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6553,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:29","memberName":"max","nodeType":"MemberAccess","src":"1717:17:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6564,"nodeType":"IfStatement","src":"1705:105:29","trueBody":{"id":6563,"nodeType":"Block","src":"1736:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"1793:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6558,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"1757:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6562,"nodeType":"RevertStatement","src":"1750:49:29"}]}},{"expression":{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"1834:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6565,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:29","typeDescriptions":{}}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6550,"id":6569,"nodeType":"Return","src":"1819:21:29"}]},"documentation":{"id":6544,"nodeType":"StructuredDocumentation","src":"1344:280:29","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6571,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:29","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"value","nameLocation":"1656:5:29","nodeType":"VariableDeclaration","scope":6571,"src":"1648:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:29"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6571,"src":"1686:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6548,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:29"},"scope":8281,"src":"1629:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6598,"nodeType":"Block","src":"2204:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"2218:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6581,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:29","memberName":"max","nodeType":"MemberAccess","src":"2226:17:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6592,"nodeType":"IfStatement","src":"2214:105:29","trueBody":{"id":6591,"nodeType":"Block","src":"2245:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"2302:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6586,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"2266:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6590,"nodeType":"RevertStatement","src":"2259:49:29"}]}},{"expression":{"arguments":[{"id":6595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"2343:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6593,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:29","typeDescriptions":{}}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6578,"id":6597,"nodeType":"Return","src":"2328:21:29"}]},"documentation":{"id":6572,"nodeType":"StructuredDocumentation","src":"1853:280:29","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6599,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:29","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"value","nameLocation":"2165:5:29","nodeType":"VariableDeclaration","scope":6599,"src":"2157:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:29"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6599,"src":"2195:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6576,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:29"},"scope":8281,"src":"2138:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6626,"nodeType":"Block","src":"2713:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"2727:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6609,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:29","memberName":"max","nodeType":"MemberAccess","src":"2735:17:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6620,"nodeType":"IfStatement","src":"2723:105:29","trueBody":{"id":6619,"nodeType":"Block","src":"2754:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"2811:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6614,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"2775:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6618,"nodeType":"RevertStatement","src":"2768:49:29"}]}},{"expression":{"arguments":[{"id":6623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"2852:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6621,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:29","typeDescriptions":{}}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6606,"id":6625,"nodeType":"Return","src":"2837:21:29"}]},"documentation":{"id":6600,"nodeType":"StructuredDocumentation","src":"2362:280:29","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6627,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:29","nodeType":"FunctionDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"value","nameLocation":"2674:5:29","nodeType":"VariableDeclaration","scope":6627,"src":"2666:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:29"},"returnParameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6627,"src":"2704:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6604,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:29"},"scope":8281,"src":"2647:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6654,"nodeType":"Block","src":"3222:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"3236:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6637,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:29","memberName":"max","nodeType":"MemberAccess","src":"3244:17:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6648,"nodeType":"IfStatement","src":"3232:105:29","trueBody":{"id":6647,"nodeType":"Block","src":"3263:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"3320:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6642,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"3284:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6646,"nodeType":"RevertStatement","src":"3277:49:29"}]}},{"expression":{"arguments":[{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"3361:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6649,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:29","typeDescriptions":{}}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6634,"id":6653,"nodeType":"Return","src":"3346:21:29"}]},"documentation":{"id":6628,"nodeType":"StructuredDocumentation","src":"2871:280:29","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6655,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:29","nodeType":"FunctionDefinition","parameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"value","nameLocation":"3183:5:29","nodeType":"VariableDeclaration","scope":6655,"src":"3175:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:29"},"returnParameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6655,"src":"3213:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6632,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:29"},"scope":8281,"src":"3156:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6682,"nodeType":"Block","src":"3731:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"3745:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6665,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6664,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:29","memberName":"max","nodeType":"MemberAccess","src":"3753:17:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6676,"nodeType":"IfStatement","src":"3741:105:29","trueBody":{"id":6675,"nodeType":"Block","src":"3772:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"3829:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6670,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"3793:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6674,"nodeType":"RevertStatement","src":"3786:49:29"}]}},{"expression":{"arguments":[{"id":6679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"3870:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6677,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:29","typeDescriptions":{}}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6662,"id":6681,"nodeType":"Return","src":"3855:21:29"}]},"documentation":{"id":6656,"nodeType":"StructuredDocumentation","src":"3380:280:29","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6683,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:29","nodeType":"FunctionDefinition","parameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6658,"mutability":"mutable","name":"value","nameLocation":"3692:5:29","nodeType":"VariableDeclaration","scope":6683,"src":"3684:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:29"},"returnParameters":{"id":6662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6683,"src":"3722:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6660,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:29"},"scope":8281,"src":"3665:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6710,"nodeType":"Block","src":"4240:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4254:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6693,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6692,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:29","memberName":"max","nodeType":"MemberAccess","src":"4262:17:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6704,"nodeType":"IfStatement","src":"4250:105:29","trueBody":{"id":6703,"nodeType":"Block","src":"4281:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4338:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6698,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"4302:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6702,"nodeType":"RevertStatement","src":"4295:49:29"}]}},{"expression":{"arguments":[{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4379:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6705,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:29","typeDescriptions":{}}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6690,"id":6709,"nodeType":"Return","src":"4364:21:29"}]},"documentation":{"id":6684,"nodeType":"StructuredDocumentation","src":"3889:280:29","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6711,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:29","nodeType":"FunctionDefinition","parameters":{"id":6687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6686,"mutability":"mutable","name":"value","nameLocation":"4201:5:29","nodeType":"VariableDeclaration","scope":6711,"src":"4193:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6685,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:29"},"returnParameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6711,"src":"4231:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6688,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:29"},"scope":8281,"src":"4174:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6738,"nodeType":"Block","src":"4749:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"4763:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6721,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6720,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:29","memberName":"max","nodeType":"MemberAccess","src":"4771:17:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6732,"nodeType":"IfStatement","src":"4759:105:29","trueBody":{"id":6731,"nodeType":"Block","src":"4790:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"4847:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6726,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"4811:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6730,"nodeType":"RevertStatement","src":"4804:49:29"}]}},{"expression":{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"4888:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6733,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:29","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6718,"id":6737,"nodeType":"Return","src":"4873:21:29"}]},"documentation":{"id":6712,"nodeType":"StructuredDocumentation","src":"4398:280:29","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6739,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:29","nodeType":"FunctionDefinition","parameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6714,"mutability":"mutable","name":"value","nameLocation":"4710:5:29","nodeType":"VariableDeclaration","scope":6739,"src":"4702:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:29"},"returnParameters":{"id":6718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6739,"src":"4740:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6716,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:29"},"scope":8281,"src":"4683:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6766,"nodeType":"Block","src":"5258:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5272:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6749,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:29","memberName":"max","nodeType":"MemberAccess","src":"5280:17:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6760,"nodeType":"IfStatement","src":"5268:105:29","trueBody":{"id":6759,"nodeType":"Block","src":"5299:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5356:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6754,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"5320:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6758,"nodeType":"RevertStatement","src":"5313:49:29"}]}},{"expression":{"arguments":[{"id":6763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5397:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6761,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:29","typeDescriptions":{}}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6746,"id":6765,"nodeType":"Return","src":"5382:21:29"}]},"documentation":{"id":6740,"nodeType":"StructuredDocumentation","src":"4907:280:29","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:29","nodeType":"FunctionDefinition","parameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"value","nameLocation":"5219:5:29","nodeType":"VariableDeclaration","scope":6767,"src":"5211:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6741,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:29"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6767,"src":"5249:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6744,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:29"},"scope":8281,"src":"5192:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6794,"nodeType":"Block","src":"5767:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"5781:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6777,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:29","memberName":"max","nodeType":"MemberAccess","src":"5789:17:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6788,"nodeType":"IfStatement","src":"5777:105:29","trueBody":{"id":6787,"nodeType":"Block","src":"5808:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"5865:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6782,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"5829:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6786,"nodeType":"RevertStatement","src":"5822:49:29"}]}},{"expression":{"arguments":[{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"5906:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6789,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:29","typeDescriptions":{}}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6774,"id":6793,"nodeType":"Return","src":"5891:21:29"}]},"documentation":{"id":6768,"nodeType":"StructuredDocumentation","src":"5416:280:29","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6795,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:29","nodeType":"FunctionDefinition","parameters":{"id":6771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6770,"mutability":"mutable","name":"value","nameLocation":"5728:5:29","nodeType":"VariableDeclaration","scope":6795,"src":"5720:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6769,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:29"},"returnParameters":{"id":6774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6795,"src":"5758:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6772,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:29"},"scope":8281,"src":"5701:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6822,"nodeType":"Block","src":"6276:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"6290:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6805,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:29","memberName":"max","nodeType":"MemberAccess","src":"6298:17:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6816,"nodeType":"IfStatement","src":"6286:105:29","trueBody":{"id":6815,"nodeType":"Block","src":"6317:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"6374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6810,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"6338:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6814,"nodeType":"RevertStatement","src":"6331:49:29"}]}},{"expression":{"arguments":[{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"6415:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6817,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:29","typeDescriptions":{}}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6802,"id":6821,"nodeType":"Return","src":"6400:21:29"}]},"documentation":{"id":6796,"nodeType":"StructuredDocumentation","src":"5925:280:29","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6823,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:29","nodeType":"FunctionDefinition","parameters":{"id":6799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"mutability":"mutable","name":"value","nameLocation":"6237:5:29","nodeType":"VariableDeclaration","scope":6823,"src":"6229:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6797,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:29"},"returnParameters":{"id":6802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6823,"src":"6267:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6800,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:29"},"scope":8281,"src":"6210:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6850,"nodeType":"Block","src":"6785:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"6799:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6833,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6832,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:29","memberName":"max","nodeType":"MemberAccess","src":"6807:17:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6844,"nodeType":"IfStatement","src":"6795:105:29","trueBody":{"id":6843,"nodeType":"Block","src":"6826:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"6883:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6838,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"6847:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6842,"nodeType":"RevertStatement","src":"6840:49:29"}]}},{"expression":{"arguments":[{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"6924:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6845,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:29","typeDescriptions":{}}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6830,"id":6849,"nodeType":"Return","src":"6909:21:29"}]},"documentation":{"id":6824,"nodeType":"StructuredDocumentation","src":"6434:280:29","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6851,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:29","nodeType":"FunctionDefinition","parameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"value","nameLocation":"6746:5:29","nodeType":"VariableDeclaration","scope":6851,"src":"6738:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6825,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:29"},"returnParameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6851,"src":"6776:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6828,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:29"},"scope":8281,"src":"6719:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6878,"nodeType":"Block","src":"7294:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"7308:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6861,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:29","memberName":"max","nodeType":"MemberAccess","src":"7316:17:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6872,"nodeType":"IfStatement","src":"7304:105:29","trueBody":{"id":6871,"nodeType":"Block","src":"7335:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"7392:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6866,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"7356:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6870,"nodeType":"RevertStatement","src":"7349:49:29"}]}},{"expression":{"arguments":[{"id":6875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"7433:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6873,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:29","typeDescriptions":{}}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6858,"id":6877,"nodeType":"Return","src":"7418:21:29"}]},"documentation":{"id":6852,"nodeType":"StructuredDocumentation","src":"6943:280:29","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6879,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:29","nodeType":"FunctionDefinition","parameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"value","nameLocation":"7255:5:29","nodeType":"VariableDeclaration","scope":6879,"src":"7247:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6853,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:29"},"returnParameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6879,"src":"7285:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6856,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:29"},"scope":8281,"src":"7228:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6906,"nodeType":"Block","src":"7803:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"7817:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6889,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6888,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:29","memberName":"max","nodeType":"MemberAccess","src":"7825:17:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6900,"nodeType":"IfStatement","src":"7813:105:29","trueBody":{"id":6899,"nodeType":"Block","src":"7844:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"7901:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6894,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"7865:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6898,"nodeType":"RevertStatement","src":"7858:49:29"}]}},{"expression":{"arguments":[{"id":6903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"7942:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6901,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:29","typeDescriptions":{}}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6886,"id":6905,"nodeType":"Return","src":"7927:21:29"}]},"documentation":{"id":6880,"nodeType":"StructuredDocumentation","src":"7452:280:29","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6907,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:29","nodeType":"FunctionDefinition","parameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6882,"mutability":"mutable","name":"value","nameLocation":"7764:5:29","nodeType":"VariableDeclaration","scope":6907,"src":"7756:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6881,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:29"},"returnParameters":{"id":6886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6907,"src":"7794:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6884,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:29"},"scope":8281,"src":"7737:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6934,"nodeType":"Block","src":"8312:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"8326:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6917,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:29","memberName":"max","nodeType":"MemberAccess","src":"8334:17:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6928,"nodeType":"IfStatement","src":"8322:105:29","trueBody":{"id":6927,"nodeType":"Block","src":"8353:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"8410:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6922,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"8374:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6926,"nodeType":"RevertStatement","src":"8367:49:29"}]}},{"expression":{"arguments":[{"id":6931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"8451:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6929,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:29","typeDescriptions":{}}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6914,"id":6933,"nodeType":"Return","src":"8436:21:29"}]},"documentation":{"id":6908,"nodeType":"StructuredDocumentation","src":"7961:280:29","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6935,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:29","nodeType":"FunctionDefinition","parameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"value","nameLocation":"8273:5:29","nodeType":"VariableDeclaration","scope":6935,"src":"8265:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6909,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:29"},"returnParameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6935,"src":"8303:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6912,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:29"},"scope":8281,"src":"8246:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6962,"nodeType":"Block","src":"8821:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"8835:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6945,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6944,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:29","memberName":"max","nodeType":"MemberAccess","src":"8843:17:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6956,"nodeType":"IfStatement","src":"8831:105:29","trueBody":{"id":6955,"nodeType":"Block","src":"8862:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"8919:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6950,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"8883:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6954,"nodeType":"RevertStatement","src":"8876:49:29"}]}},{"expression":{"arguments":[{"id":6959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"8960:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6957,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:29","typeDescriptions":{}}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6942,"id":6961,"nodeType":"Return","src":"8945:21:29"}]},"documentation":{"id":6936,"nodeType":"StructuredDocumentation","src":"8470:280:29","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6963,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:29","nodeType":"FunctionDefinition","parameters":{"id":6939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"value","nameLocation":"8782:5:29","nodeType":"VariableDeclaration","scope":6963,"src":"8774:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6937,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:29"},"returnParameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6963,"src":"8812:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6940,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:29"},"scope":8281,"src":"8755:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6990,"nodeType":"Block","src":"9330:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"9344:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6973,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6972,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:29","memberName":"max","nodeType":"MemberAccess","src":"9352:17:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6984,"nodeType":"IfStatement","src":"9340:105:29","trueBody":{"id":6983,"nodeType":"Block","src":"9371:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"9428:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6978,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"9392:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6982,"nodeType":"RevertStatement","src":"9385:49:29"}]}},{"expression":{"arguments":[{"id":6987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"9469:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6985,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:29","typeDescriptions":{}}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6970,"id":6989,"nodeType":"Return","src":"9454:21:29"}]},"documentation":{"id":6964,"nodeType":"StructuredDocumentation","src":"8979:280:29","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6991,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:29","nodeType":"FunctionDefinition","parameters":{"id":6967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"value","nameLocation":"9291:5:29","nodeType":"VariableDeclaration","scope":6991,"src":"9283:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6965,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:29"},"returnParameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6991,"src":"9321:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6968,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:29"},"scope":8281,"src":"9264:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7018,"nodeType":"Block","src":"9839:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"9853:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7001,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7000,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:29","memberName":"max","nodeType":"MemberAccess","src":"9861:17:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7012,"nodeType":"IfStatement","src":"9849:105:29","trueBody":{"id":7011,"nodeType":"Block","src":"9880:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"9937:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7006,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"9901:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7010,"nodeType":"RevertStatement","src":"9894:49:29"}]}},{"expression":{"arguments":[{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"9978:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7013,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:29","typeDescriptions":{}}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6998,"id":7017,"nodeType":"Return","src":"9963:21:29"}]},"documentation":{"id":6992,"nodeType":"StructuredDocumentation","src":"9488:280:29","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7019,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:29","nodeType":"FunctionDefinition","parameters":{"id":6995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6994,"mutability":"mutable","name":"value","nameLocation":"9800:5:29","nodeType":"VariableDeclaration","scope":7019,"src":"9792:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6993,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:29"},"returnParameters":{"id":6998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7019,"src":"9830:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6996,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:29"},"scope":8281,"src":"9773:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7046,"nodeType":"Block","src":"10348:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"10362:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7029,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7028,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:29","memberName":"max","nodeType":"MemberAccess","src":"10370:17:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7040,"nodeType":"IfStatement","src":"10358:105:29","trueBody":{"id":7039,"nodeType":"Block","src":"10389:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"10446:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7034,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"10410:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7038,"nodeType":"RevertStatement","src":"10403:49:29"}]}},{"expression":{"arguments":[{"id":7043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"10487:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7041,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:29","typeDescriptions":{}}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7026,"id":7045,"nodeType":"Return","src":"10472:21:29"}]},"documentation":{"id":7020,"nodeType":"StructuredDocumentation","src":"9997:280:29","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7047,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:29","nodeType":"FunctionDefinition","parameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"value","nameLocation":"10309:5:29","nodeType":"VariableDeclaration","scope":7047,"src":"10301:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7021,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:29"},"returnParameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7047,"src":"10339:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7024,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:29"},"scope":8281,"src":"10282:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7074,"nodeType":"Block","src":"10857:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"10871:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7057,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7056,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:29","memberName":"max","nodeType":"MemberAccess","src":"10879:17:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7068,"nodeType":"IfStatement","src":"10867:105:29","trueBody":{"id":7067,"nodeType":"Block","src":"10898:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"10955:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7062,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"10919:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7066,"nodeType":"RevertStatement","src":"10912:49:29"}]}},{"expression":{"arguments":[{"id":7071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"10996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7069,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:29","typeDescriptions":{}}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7054,"id":7073,"nodeType":"Return","src":"10981:21:29"}]},"documentation":{"id":7048,"nodeType":"StructuredDocumentation","src":"10506:280:29","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7075,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:29","nodeType":"FunctionDefinition","parameters":{"id":7051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"mutability":"mutable","name":"value","nameLocation":"10818:5:29","nodeType":"VariableDeclaration","scope":7075,"src":"10810:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7049,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:29"},"returnParameters":{"id":7054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7075,"src":"10848:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7052,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:29"},"scope":8281,"src":"10791:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7102,"nodeType":"Block","src":"11360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"11374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7085,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7084,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:29","memberName":"max","nodeType":"MemberAccess","src":"11382:16:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7096,"nodeType":"IfStatement","src":"11370:103:29","trueBody":{"id":7095,"nodeType":"Block","src":"11400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"11456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7090,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"11421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7094,"nodeType":"RevertStatement","src":"11414:48:29"}]}},{"expression":{"arguments":[{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"11496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7097,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:29","typeDescriptions":{}}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7082,"id":7101,"nodeType":"Return","src":"11482:20:29"}]},"documentation":{"id":7076,"nodeType":"StructuredDocumentation","src":"11015:276:29","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7103,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"mutability":"mutable","name":"value","nameLocation":"11322:5:29","nodeType":"VariableDeclaration","scope":7103,"src":"11314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:29"},"returnParameters":{"id":7082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7103,"src":"11352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7080,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:29"},"scope":8281,"src":"11296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7130,"nodeType":"Block","src":"11860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"11874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7113,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:29","memberName":"max","nodeType":"MemberAccess","src":"11882:16:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7124,"nodeType":"IfStatement","src":"11870:103:29","trueBody":{"id":7123,"nodeType":"Block","src":"11900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"11956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7118,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"11921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7122,"nodeType":"RevertStatement","src":"11914:48:29"}]}},{"expression":{"arguments":[{"id":7127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"11996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7125,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:29","typeDescriptions":{}}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7110,"id":7129,"nodeType":"Return","src":"11982:20:29"}]},"documentation":{"id":7104,"nodeType":"StructuredDocumentation","src":"11515:276:29","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7131,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7106,"mutability":"mutable","name":"value","nameLocation":"11822:5:29","nodeType":"VariableDeclaration","scope":7131,"src":"11814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7105,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:29"},"returnParameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7131,"src":"11852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7108,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:29"},"scope":8281,"src":"11796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7158,"nodeType":"Block","src":"12360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"12374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7141,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7140,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:29","memberName":"max","nodeType":"MemberAccess","src":"12382:16:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7152,"nodeType":"IfStatement","src":"12370:103:29","trueBody":{"id":7151,"nodeType":"Block","src":"12400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"12456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7146,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"12421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7150,"nodeType":"RevertStatement","src":"12414:48:29"}]}},{"expression":{"arguments":[{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"12496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7153,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:29","typeDescriptions":{}}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7138,"id":7157,"nodeType":"Return","src":"12482:20:29"}]},"documentation":{"id":7132,"nodeType":"StructuredDocumentation","src":"12015:276:29","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7159,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7134,"mutability":"mutable","name":"value","nameLocation":"12322:5:29","nodeType":"VariableDeclaration","scope":7159,"src":"12314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7133,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:29"},"returnParameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7159,"src":"12352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7136,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:29"},"scope":8281,"src":"12296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7186,"nodeType":"Block","src":"12860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"12874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7169,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7168,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:29","memberName":"max","nodeType":"MemberAccess","src":"12882:16:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7180,"nodeType":"IfStatement","src":"12870:103:29","trueBody":{"id":7179,"nodeType":"Block","src":"12900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"12956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7174,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"12921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7178,"nodeType":"RevertStatement","src":"12914:48:29"}]}},{"expression":{"arguments":[{"id":7183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"12996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7181,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:29","typeDescriptions":{}}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7166,"id":7185,"nodeType":"Return","src":"12982:20:29"}]},"documentation":{"id":7160,"nodeType":"StructuredDocumentation","src":"12515:276:29","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7187,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7162,"mutability":"mutable","name":"value","nameLocation":"12822:5:29","nodeType":"VariableDeclaration","scope":7187,"src":"12814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7161,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:29"},"returnParameters":{"id":7166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7187,"src":"12852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7164,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:29"},"scope":8281,"src":"12796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7214,"nodeType":"Block","src":"13360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"13374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7197,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:29","memberName":"max","nodeType":"MemberAccess","src":"13382:16:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7208,"nodeType":"IfStatement","src":"13370:103:29","trueBody":{"id":7207,"nodeType":"Block","src":"13400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"13456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7202,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"13421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7206,"nodeType":"RevertStatement","src":"13414:48:29"}]}},{"expression":{"arguments":[{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"13496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7209,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:29","typeDescriptions":{}}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7194,"id":7213,"nodeType":"Return","src":"13482:20:29"}]},"documentation":{"id":7188,"nodeType":"StructuredDocumentation","src":"13015:276:29","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7215,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"value","nameLocation":"13322:5:29","nodeType":"VariableDeclaration","scope":7215,"src":"13314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7189,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:29"},"returnParameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7215,"src":"13352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7192,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:29"},"scope":8281,"src":"13296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7242,"nodeType":"Block","src":"13860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"13874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7225,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:29","memberName":"max","nodeType":"MemberAccess","src":"13882:16:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7236,"nodeType":"IfStatement","src":"13870:103:29","trueBody":{"id":7235,"nodeType":"Block","src":"13900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"13956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7230,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"13921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7234,"nodeType":"RevertStatement","src":"13914:48:29"}]}},{"expression":{"arguments":[{"id":7239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"13996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7237,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:29","typeDescriptions":{}}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7222,"id":7241,"nodeType":"Return","src":"13982:20:29"}]},"documentation":{"id":7216,"nodeType":"StructuredDocumentation","src":"13515:276:29","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7243,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7218,"mutability":"mutable","name":"value","nameLocation":"13822:5:29","nodeType":"VariableDeclaration","scope":7243,"src":"13814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7217,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:29"},"returnParameters":{"id":7222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7243,"src":"13852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7220,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:29"},"scope":8281,"src":"13796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7270,"nodeType":"Block","src":"14360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"14374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7253,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:29","memberName":"max","nodeType":"MemberAccess","src":"14382:16:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7264,"nodeType":"IfStatement","src":"14370:103:29","trueBody":{"id":7263,"nodeType":"Block","src":"14400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"14456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7258,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"14421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7262,"nodeType":"RevertStatement","src":"14414:48:29"}]}},{"expression":{"arguments":[{"id":7267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"14496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7265,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:29","typeDescriptions":{}}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7250,"id":7269,"nodeType":"Return","src":"14482:20:29"}]},"documentation":{"id":7244,"nodeType":"StructuredDocumentation","src":"14015:276:29","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"value","nameLocation":"14322:5:29","nodeType":"VariableDeclaration","scope":7271,"src":"14314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7245,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:29"},"returnParameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7271,"src":"14352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7248,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:29"},"scope":8281,"src":"14296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7298,"nodeType":"Block","src":"14860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"14874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7281,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7280,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:29","memberName":"max","nodeType":"MemberAccess","src":"14882:16:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7292,"nodeType":"IfStatement","src":"14870:103:29","trueBody":{"id":7291,"nodeType":"Block","src":"14900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"14956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7286,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"14921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7290,"nodeType":"RevertStatement","src":"14914:48:29"}]}},{"expression":{"arguments":[{"id":7295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"14996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7293,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:29","typeDescriptions":{}}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7278,"id":7297,"nodeType":"Return","src":"14982:20:29"}]},"documentation":{"id":7272,"nodeType":"StructuredDocumentation","src":"14515:276:29","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7299,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7274,"mutability":"mutable","name":"value","nameLocation":"14822:5:29","nodeType":"VariableDeclaration","scope":7299,"src":"14814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7273,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:29"},"returnParameters":{"id":7278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7299,"src":"14852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7276,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:29"},"scope":8281,"src":"14796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7326,"nodeType":"Block","src":"15360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"15374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7309,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7308,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:29","memberName":"max","nodeType":"MemberAccess","src":"15382:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7320,"nodeType":"IfStatement","src":"15370:103:29","trueBody":{"id":7319,"nodeType":"Block","src":"15400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"15456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7314,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"15421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7318,"nodeType":"RevertStatement","src":"15414:48:29"}]}},{"expression":{"arguments":[{"id":7323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"15496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7321,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:29","typeDescriptions":{}}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7306,"id":7325,"nodeType":"Return","src":"15482:20:29"}]},"documentation":{"id":7300,"nodeType":"StructuredDocumentation","src":"15015:276:29","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7302,"mutability":"mutable","name":"value","nameLocation":"15322:5:29","nodeType":"VariableDeclaration","scope":7327,"src":"15314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7301,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:29"},"returnParameters":{"id":7306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7327,"src":"15352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7304,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:29"},"scope":8281,"src":"15296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7354,"nodeType":"Block","src":"15860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"15874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7337,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7336,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:29","memberName":"max","nodeType":"MemberAccess","src":"15882:16:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7348,"nodeType":"IfStatement","src":"15870:103:29","trueBody":{"id":7347,"nodeType":"Block","src":"15900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"15956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7342,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"15921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7346,"nodeType":"RevertStatement","src":"15914:48:29"}]}},{"expression":{"arguments":[{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"15996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7349,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:29","typeDescriptions":{}}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7334,"id":7353,"nodeType":"Return","src":"15982:20:29"}]},"documentation":{"id":7328,"nodeType":"StructuredDocumentation","src":"15515:276:29","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7355,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7330,"mutability":"mutable","name":"value","nameLocation":"15822:5:29","nodeType":"VariableDeclaration","scope":7355,"src":"15814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7329,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:29"},"returnParameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7355,"src":"15852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7332,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:29"},"scope":8281,"src":"15796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7382,"nodeType":"Block","src":"16360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"16374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7365,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:29","memberName":"max","nodeType":"MemberAccess","src":"16382:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7376,"nodeType":"IfStatement","src":"16370:103:29","trueBody":{"id":7375,"nodeType":"Block","src":"16400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"16456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7370,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"16421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7374,"nodeType":"RevertStatement","src":"16414:48:29"}]}},{"expression":{"arguments":[{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"16496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7377,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:29","typeDescriptions":{}}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7362,"id":7381,"nodeType":"Return","src":"16482:20:29"}]},"documentation":{"id":7356,"nodeType":"StructuredDocumentation","src":"16015:276:29","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7383,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7358,"mutability":"mutable","name":"value","nameLocation":"16322:5:29","nodeType":"VariableDeclaration","scope":7383,"src":"16314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7357,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:29"},"returnParameters":{"id":7362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7383,"src":"16352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7360,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:29"},"scope":8281,"src":"16296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7410,"nodeType":"Block","src":"16854:146:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"16868:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7393,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:29","memberName":"max","nodeType":"MemberAccess","src":"16876:15:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7404,"nodeType":"IfStatement","src":"16864:101:29","trueBody":{"id":7403,"nodeType":"Block","src":"16893:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"16948:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7398,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"16914:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7402,"nodeType":"RevertStatement","src":"16907:47:29"}]}},{"expression":{"arguments":[{"id":7407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"16987:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7405,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:29","typeDescriptions":{}}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7390,"id":7409,"nodeType":"Return","src":"16974:19:29"}]},"documentation":{"id":7384,"nodeType":"StructuredDocumentation","src":"16515:272:29","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7411,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:29","nodeType":"FunctionDefinition","parameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"value","nameLocation":"16817:5:29","nodeType":"VariableDeclaration","scope":7411,"src":"16809:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7385,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:29"},"returnParameters":{"id":7390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7411,"src":"16847:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7388,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:29"},"scope":8281,"src":"16792:208:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7433,"nodeType":"Block","src":"17236:128:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"17250:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7427,"nodeType":"IfStatement","src":"17246:81:29","trueBody":{"id":7426,"nodeType":"Block","src":"17261:66:29","statements":[{"errorCall":{"arguments":[{"id":7423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"17310:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7422,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"17282:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7425,"nodeType":"RevertStatement","src":"17275:41:29"}]}},{"expression":{"arguments":[{"id":7430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"17351:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7428,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:29","typeDescriptions":{}}},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7418,"id":7432,"nodeType":"Return","src":"17336:21:29"}]},"documentation":{"id":7412,"nodeType":"StructuredDocumentation","src":"17006:160:29","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7434,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:29","nodeType":"FunctionDefinition","parameters":{"id":7415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7414,"mutability":"mutable","name":"value","nameLocation":"17197:5:29","nodeType":"VariableDeclaration","scope":7434,"src":"17190:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7413,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:29"},"returnParameters":{"id":7418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7434,"src":"17227:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7416,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:29"},"scope":8281,"src":"17171:193:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7459,"nodeType":"Block","src":"17761:150:29","statements":[{"expression":{"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"17771:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"17791:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7443,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:29","typeDescriptions":{}}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7448,"nodeType":"ExpressionStatement","src":"17771:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"17811:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"17825:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7458,"nodeType":"IfStatement","src":"17807:98:29","trueBody":{"id":7457,"nodeType":"Block","src":"17832:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"17888:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7452,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"17853:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7456,"nodeType":"RevertStatement","src":"17846:48:29"}]}}]},"documentation":{"id":7435,"nodeType":"StructuredDocumentation","src":"17370:312:29","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7460,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:29","nodeType":"FunctionDefinition","parameters":{"id":7438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7437,"mutability":"mutable","name":"value","nameLocation":"17712:5:29","nodeType":"VariableDeclaration","scope":7460,"src":"17705:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7436,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:29"},"returnParameters":{"id":7441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7440,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:29","nodeType":"VariableDeclaration","scope":7460,"src":"17742:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7439,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:29"},"scope":8281,"src":"17687:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7485,"nodeType":"Block","src":"18308:150:29","statements":[{"expression":{"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"18318:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"18338:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7469,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:29","typeDescriptions":{}}},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7474,"nodeType":"ExpressionStatement","src":"18318:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"18358:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"18372:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7484,"nodeType":"IfStatement","src":"18354:98:29","trueBody":{"id":7483,"nodeType":"Block","src":"18379:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"18435:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7478,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"18400:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7482,"nodeType":"RevertStatement","src":"18393:48:29"}]}}]},"documentation":{"id":7461,"nodeType":"StructuredDocumentation","src":"17917:312:29","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7486,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:29","nodeType":"FunctionDefinition","parameters":{"id":7464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7463,"mutability":"mutable","name":"value","nameLocation":"18259:5:29","nodeType":"VariableDeclaration","scope":7486,"src":"18252:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7462,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:29"},"returnParameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7466,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:29","nodeType":"VariableDeclaration","scope":7486,"src":"18289:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7465,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:29"},"scope":8281,"src":"18234:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7511,"nodeType":"Block","src":"18855:150:29","statements":[{"expression":{"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"18865:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"18885:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7495,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:29","typeDescriptions":{}}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7500,"nodeType":"ExpressionStatement","src":"18865:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"18905:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"18919:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7510,"nodeType":"IfStatement","src":"18901:98:29","trueBody":{"id":7509,"nodeType":"Block","src":"18926:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"18982:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7504,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"18947:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7508,"nodeType":"RevertStatement","src":"18940:48:29"}]}}]},"documentation":{"id":7487,"nodeType":"StructuredDocumentation","src":"18464:312:29","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7512,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:29","nodeType":"FunctionDefinition","parameters":{"id":7490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7489,"mutability":"mutable","name":"value","nameLocation":"18806:5:29","nodeType":"VariableDeclaration","scope":7512,"src":"18799:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7488,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:29"},"returnParameters":{"id":7493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7492,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:29","nodeType":"VariableDeclaration","scope":7512,"src":"18836:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7491,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:29"},"scope":8281,"src":"18781:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7537,"nodeType":"Block","src":"19402:150:29","statements":[{"expression":{"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"19412:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"19432:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7521,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:29","typeDescriptions":{}}},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7526,"nodeType":"ExpressionStatement","src":"19412:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"19452:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"19466:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7536,"nodeType":"IfStatement","src":"19448:98:29","trueBody":{"id":7535,"nodeType":"Block","src":"19473:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"19529:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7530,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"19494:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7534,"nodeType":"RevertStatement","src":"19487:48:29"}]}}]},"documentation":{"id":7513,"nodeType":"StructuredDocumentation","src":"19011:312:29","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7538,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:29","nodeType":"FunctionDefinition","parameters":{"id":7516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7515,"mutability":"mutable","name":"value","nameLocation":"19353:5:29","nodeType":"VariableDeclaration","scope":7538,"src":"19346:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7514,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:29"},"returnParameters":{"id":7519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7518,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:29","nodeType":"VariableDeclaration","scope":7538,"src":"19383:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7517,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:29"},"scope":8281,"src":"19328:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7563,"nodeType":"Block","src":"19949:150:29","statements":[{"expression":{"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"19959:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"19979:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7547,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:29","typeDescriptions":{}}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7552,"nodeType":"ExpressionStatement","src":"19959:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"19999:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"20013:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7562,"nodeType":"IfStatement","src":"19995:98:29","trueBody":{"id":7561,"nodeType":"Block","src":"20020:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"20076:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7556,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"20041:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7560,"nodeType":"RevertStatement","src":"20034:48:29"}]}}]},"documentation":{"id":7539,"nodeType":"StructuredDocumentation","src":"19558:312:29","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7564,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:29","nodeType":"FunctionDefinition","parameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7541,"mutability":"mutable","name":"value","nameLocation":"19900:5:29","nodeType":"VariableDeclaration","scope":7564,"src":"19893:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7540,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:29"},"returnParameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7544,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:29","nodeType":"VariableDeclaration","scope":7564,"src":"19930:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7543,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:29"},"scope":8281,"src":"19875:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7589,"nodeType":"Block","src":"20496:150:29","statements":[{"expression":{"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"20506:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"20526:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7573,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:29","typeDescriptions":{}}},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7578,"nodeType":"ExpressionStatement","src":"20506:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"20546:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"20560:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7588,"nodeType":"IfStatement","src":"20542:98:29","trueBody":{"id":7587,"nodeType":"Block","src":"20567:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"20623:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7582,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"20588:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7586,"nodeType":"RevertStatement","src":"20581:48:29"}]}}]},"documentation":{"id":7565,"nodeType":"StructuredDocumentation","src":"20105:312:29","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7590,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:29","nodeType":"FunctionDefinition","parameters":{"id":7568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7567,"mutability":"mutable","name":"value","nameLocation":"20447:5:29","nodeType":"VariableDeclaration","scope":7590,"src":"20440:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7566,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:29"},"returnParameters":{"id":7571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7570,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:29","nodeType":"VariableDeclaration","scope":7590,"src":"20477:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7569,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:29"},"scope":8281,"src":"20422:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7615,"nodeType":"Block","src":"21043:150:29","statements":[{"expression":{"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"21053:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"21073:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7599,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:29","typeDescriptions":{}}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7604,"nodeType":"ExpressionStatement","src":"21053:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"21093:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"21107:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7614,"nodeType":"IfStatement","src":"21089:98:29","trueBody":{"id":7613,"nodeType":"Block","src":"21114:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"21170:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7608,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"21135:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7612,"nodeType":"RevertStatement","src":"21128:48:29"}]}}]},"documentation":{"id":7591,"nodeType":"StructuredDocumentation","src":"20652:312:29","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7616,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:29","nodeType":"FunctionDefinition","parameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"value","nameLocation":"20994:5:29","nodeType":"VariableDeclaration","scope":7616,"src":"20987:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7592,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:29"},"returnParameters":{"id":7597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7596,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:29","nodeType":"VariableDeclaration","scope":7616,"src":"21024:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7595,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:29"},"scope":8281,"src":"20969:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7641,"nodeType":"Block","src":"21590:150:29","statements":[{"expression":{"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"21600:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"21620:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7625,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:29","typeDescriptions":{}}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7630,"nodeType":"ExpressionStatement","src":"21600:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"21640:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"21654:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7640,"nodeType":"IfStatement","src":"21636:98:29","trueBody":{"id":7639,"nodeType":"Block","src":"21661:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"21717:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7634,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"21682:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7638,"nodeType":"RevertStatement","src":"21675:48:29"}]}}]},"documentation":{"id":7617,"nodeType":"StructuredDocumentation","src":"21199:312:29","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7642,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:29","nodeType":"FunctionDefinition","parameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"value","nameLocation":"21541:5:29","nodeType":"VariableDeclaration","scope":7642,"src":"21534:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7618,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:29"},"returnParameters":{"id":7623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:29","nodeType":"VariableDeclaration","scope":7642,"src":"21571:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7621,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:29"},"scope":8281,"src":"21516:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7667,"nodeType":"Block","src":"22137:150:29","statements":[{"expression":{"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"22147:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"22167:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7651,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:29","typeDescriptions":{}}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7656,"nodeType":"ExpressionStatement","src":"22147:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"22187:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"22201:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7666,"nodeType":"IfStatement","src":"22183:98:29","trueBody":{"id":7665,"nodeType":"Block","src":"22208:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"22264:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7660,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"22229:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7664,"nodeType":"RevertStatement","src":"22222:48:29"}]}}]},"documentation":{"id":7643,"nodeType":"StructuredDocumentation","src":"21746:312:29","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7668,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:29","nodeType":"FunctionDefinition","parameters":{"id":7646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7645,"mutability":"mutable","name":"value","nameLocation":"22088:5:29","nodeType":"VariableDeclaration","scope":7668,"src":"22081:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7644,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:29"},"returnParameters":{"id":7649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7648,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:29","nodeType":"VariableDeclaration","scope":7668,"src":"22118:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7647,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:29"},"scope":8281,"src":"22063:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7693,"nodeType":"Block","src":"22684:150:29","statements":[{"expression":{"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"22694:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"22714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7677,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:29","typeDescriptions":{}}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7682,"nodeType":"ExpressionStatement","src":"22694:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"22734:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"22748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7692,"nodeType":"IfStatement","src":"22730:98:29","trueBody":{"id":7691,"nodeType":"Block","src":"22755:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"22811:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7686,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"22776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7690,"nodeType":"RevertStatement","src":"22769:48:29"}]}}]},"documentation":{"id":7669,"nodeType":"StructuredDocumentation","src":"22293:312:29","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7694,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:29","nodeType":"FunctionDefinition","parameters":{"id":7672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7671,"mutability":"mutable","name":"value","nameLocation":"22635:5:29","nodeType":"VariableDeclaration","scope":7694,"src":"22628:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7670,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:29"},"returnParameters":{"id":7675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7674,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:29","nodeType":"VariableDeclaration","scope":7694,"src":"22665:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7673,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:29"},"scope":8281,"src":"22610:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7719,"nodeType":"Block","src":"23231:150:29","statements":[{"expression":{"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"23241:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"23261:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7703,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:29","typeDescriptions":{}}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7708,"nodeType":"ExpressionStatement","src":"23241:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"23281:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"23295:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7718,"nodeType":"IfStatement","src":"23277:98:29","trueBody":{"id":7717,"nodeType":"Block","src":"23302:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"23358:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7712,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"23323:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7716,"nodeType":"RevertStatement","src":"23316:48:29"}]}}]},"documentation":{"id":7695,"nodeType":"StructuredDocumentation","src":"22840:312:29","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7720,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:29","nodeType":"FunctionDefinition","parameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"value","nameLocation":"23182:5:29","nodeType":"VariableDeclaration","scope":7720,"src":"23175:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7696,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:29"},"returnParameters":{"id":7701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:29","nodeType":"VariableDeclaration","scope":7720,"src":"23212:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7699,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:29"},"scope":8281,"src":"23157:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7745,"nodeType":"Block","src":"23778:150:29","statements":[{"expression":{"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"23788:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"23808:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7729,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:29","typeDescriptions":{}}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7734,"nodeType":"ExpressionStatement","src":"23788:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"23828:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"23842:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7744,"nodeType":"IfStatement","src":"23824:98:29","trueBody":{"id":7743,"nodeType":"Block","src":"23849:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"23905:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7738,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"23870:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7742,"nodeType":"RevertStatement","src":"23863:48:29"}]}}]},"documentation":{"id":7721,"nodeType":"StructuredDocumentation","src":"23387:312:29","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7746,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:29","nodeType":"FunctionDefinition","parameters":{"id":7724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7723,"mutability":"mutable","name":"value","nameLocation":"23729:5:29","nodeType":"VariableDeclaration","scope":7746,"src":"23722:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7722,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:29"},"returnParameters":{"id":7727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:29","nodeType":"VariableDeclaration","scope":7746,"src":"23759:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7725,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:29"},"scope":8281,"src":"23704:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7771,"nodeType":"Block","src":"24325:150:29","statements":[{"expression":{"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"24335:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"24355:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7755,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:29","typeDescriptions":{}}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7760,"nodeType":"ExpressionStatement","src":"24335:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"24375:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"24389:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7770,"nodeType":"IfStatement","src":"24371:98:29","trueBody":{"id":7769,"nodeType":"Block","src":"24396:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"24452:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7764,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"24417:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7768,"nodeType":"RevertStatement","src":"24410:48:29"}]}}]},"documentation":{"id":7747,"nodeType":"StructuredDocumentation","src":"23934:312:29","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7772,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:29","nodeType":"FunctionDefinition","parameters":{"id":7750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"value","nameLocation":"24276:5:29","nodeType":"VariableDeclaration","scope":7772,"src":"24269:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7748,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:29"},"returnParameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7752,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:29","nodeType":"VariableDeclaration","scope":7772,"src":"24306:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7751,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:29"},"scope":8281,"src":"24251:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7797,"nodeType":"Block","src":"24872:150:29","statements":[{"expression":{"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"24882:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"24902:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7781,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:29","typeDescriptions":{}}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7786,"nodeType":"ExpressionStatement","src":"24882:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"24922:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"24936:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7796,"nodeType":"IfStatement","src":"24918:98:29","trueBody":{"id":7795,"nodeType":"Block","src":"24943:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"24999:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7790,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"24964:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7794,"nodeType":"RevertStatement","src":"24957:48:29"}]}}]},"documentation":{"id":7773,"nodeType":"StructuredDocumentation","src":"24481:312:29","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7798,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:29","nodeType":"FunctionDefinition","parameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"value","nameLocation":"24823:5:29","nodeType":"VariableDeclaration","scope":7798,"src":"24816:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7774,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:29"},"returnParameters":{"id":7779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7778,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:29","nodeType":"VariableDeclaration","scope":7798,"src":"24853:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7777,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:29"},"scope":8281,"src":"24798:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7823,"nodeType":"Block","src":"25419:150:29","statements":[{"expression":{"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"25429:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"25449:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7807,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:29","typeDescriptions":{}}},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7812,"nodeType":"ExpressionStatement","src":"25429:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"25469:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"25483:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7822,"nodeType":"IfStatement","src":"25465:98:29","trueBody":{"id":7821,"nodeType":"Block","src":"25490:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"25546:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7816,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"25511:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7820,"nodeType":"RevertStatement","src":"25504:48:29"}]}}]},"documentation":{"id":7799,"nodeType":"StructuredDocumentation","src":"25028:312:29","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7824,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:29","nodeType":"FunctionDefinition","parameters":{"id":7802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7801,"mutability":"mutable","name":"value","nameLocation":"25370:5:29","nodeType":"VariableDeclaration","scope":7824,"src":"25363:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7800,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:29"},"returnParameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:29","nodeType":"VariableDeclaration","scope":7824,"src":"25400:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7803,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:29"},"scope":8281,"src":"25345:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7849,"nodeType":"Block","src":"25966:150:29","statements":[{"expression":{"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"25976:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"25996:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7833,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:29","typeDescriptions":{}}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7838,"nodeType":"ExpressionStatement","src":"25976:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"26016:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"26030:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7848,"nodeType":"IfStatement","src":"26012:98:29","trueBody":{"id":7847,"nodeType":"Block","src":"26037:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"26093:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7842,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"26058:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7846,"nodeType":"RevertStatement","src":"26051:48:29"}]}}]},"documentation":{"id":7825,"nodeType":"StructuredDocumentation","src":"25575:312:29","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7850,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:29","nodeType":"FunctionDefinition","parameters":{"id":7828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7827,"mutability":"mutable","name":"value","nameLocation":"25917:5:29","nodeType":"VariableDeclaration","scope":7850,"src":"25910:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7826,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:29"},"returnParameters":{"id":7831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7830,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:29","nodeType":"VariableDeclaration","scope":7850,"src":"25947:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7829,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:29"},"scope":8281,"src":"25892:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7875,"nodeType":"Block","src":"26513:150:29","statements":[{"expression":{"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"26523:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"26543:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7859,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:29","typeDescriptions":{}}},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7864,"nodeType":"ExpressionStatement","src":"26523:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"26563:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"26577:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7874,"nodeType":"IfStatement","src":"26559:98:29","trueBody":{"id":7873,"nodeType":"Block","src":"26584:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"26640:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7868,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"26605:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7872,"nodeType":"RevertStatement","src":"26598:48:29"}]}}]},"documentation":{"id":7851,"nodeType":"StructuredDocumentation","src":"26122:312:29","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7876,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:29","nodeType":"FunctionDefinition","parameters":{"id":7854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7853,"mutability":"mutable","name":"value","nameLocation":"26464:5:29","nodeType":"VariableDeclaration","scope":7876,"src":"26457:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7852,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:29"},"returnParameters":{"id":7857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7856,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:29","nodeType":"VariableDeclaration","scope":7876,"src":"26494:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7855,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:29"},"scope":8281,"src":"26439:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7901,"nodeType":"Block","src":"27060:150:29","statements":[{"expression":{"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"27070:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"27090:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7885,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:29","typeDescriptions":{}}},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7890,"nodeType":"ExpressionStatement","src":"27070:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"27110:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"27124:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7900,"nodeType":"IfStatement","src":"27106:98:29","trueBody":{"id":7899,"nodeType":"Block","src":"27131:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"27187:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7894,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"27152:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7898,"nodeType":"RevertStatement","src":"27145:48:29"}]}}]},"documentation":{"id":7877,"nodeType":"StructuredDocumentation","src":"26669:312:29","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7902,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:29","nodeType":"FunctionDefinition","parameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7879,"mutability":"mutable","name":"value","nameLocation":"27011:5:29","nodeType":"VariableDeclaration","scope":7902,"src":"27004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7878,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:29"},"returnParameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:29","nodeType":"VariableDeclaration","scope":7902,"src":"27041:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7881,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:29"},"scope":8281,"src":"26986:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7927,"nodeType":"Block","src":"27607:150:29","statements":[{"expression":{"id":7915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"27617:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"27637:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7911,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:29","typeDescriptions":{}}},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7916,"nodeType":"ExpressionStatement","src":"27617:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"27657:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"27671:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7926,"nodeType":"IfStatement","src":"27653:98:29","trueBody":{"id":7925,"nodeType":"Block","src":"27678:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"27734:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7920,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"27699:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7924,"nodeType":"RevertStatement","src":"27692:48:29"}]}}]},"documentation":{"id":7903,"nodeType":"StructuredDocumentation","src":"27216:312:29","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7928,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:29","nodeType":"FunctionDefinition","parameters":{"id":7906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7905,"mutability":"mutable","name":"value","nameLocation":"27558:5:29","nodeType":"VariableDeclaration","scope":7928,"src":"27551:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7904,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:29"},"returnParameters":{"id":7909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7908,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:29","nodeType":"VariableDeclaration","scope":7928,"src":"27588:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7907,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:29"},"scope":8281,"src":"27533:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7953,"nodeType":"Block","src":"28147:148:29","statements":[{"expression":{"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"28157:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"28176:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7937,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:29","typeDescriptions":{}}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7942,"nodeType":"ExpressionStatement","src":"28157:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"28196:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"28210:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7952,"nodeType":"IfStatement","src":"28192:97:29","trueBody":{"id":7951,"nodeType":"Block","src":"28217:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"28272:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7946,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"28238:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7950,"nodeType":"RevertStatement","src":"28231:47:29"}]}}]},"documentation":{"id":7929,"nodeType":"StructuredDocumentation","src":"27763:307:29","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7954,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:29","nodeType":"FunctionDefinition","parameters":{"id":7932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7931,"mutability":"mutable","name":"value","nameLocation":"28099:5:29","nodeType":"VariableDeclaration","scope":7954,"src":"28092:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7930,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:29"},"returnParameters":{"id":7935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7934,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:29","nodeType":"VariableDeclaration","scope":7954,"src":"28129:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7933,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:29"},"scope":8281,"src":"28075:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7979,"nodeType":"Block","src":"28685:148:29","statements":[{"expression":{"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"28695:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"28714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7963,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:29","typeDescriptions":{}}},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7968,"nodeType":"ExpressionStatement","src":"28695:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"28734:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"28748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7978,"nodeType":"IfStatement","src":"28730:97:29","trueBody":{"id":7977,"nodeType":"Block","src":"28755:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"28810:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7972,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"28776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7976,"nodeType":"RevertStatement","src":"28769:47:29"}]}}]},"documentation":{"id":7955,"nodeType":"StructuredDocumentation","src":"28301:307:29","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7980,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:29","nodeType":"FunctionDefinition","parameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7957,"mutability":"mutable","name":"value","nameLocation":"28637:5:29","nodeType":"VariableDeclaration","scope":7980,"src":"28630:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7956,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:29"},"returnParameters":{"id":7961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7960,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:29","nodeType":"VariableDeclaration","scope":7980,"src":"28667:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7959,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:29"},"scope":8281,"src":"28613:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8005,"nodeType":"Block","src":"29223:148:29","statements":[{"expression":{"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"29233:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"29252:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7989,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:29","typeDescriptions":{}}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7994,"nodeType":"ExpressionStatement","src":"29233:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"29272:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"29286:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8004,"nodeType":"IfStatement","src":"29268:97:29","trueBody":{"id":8003,"nodeType":"Block","src":"29293:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"29348:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7998,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"29314:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8002,"nodeType":"RevertStatement","src":"29307:47:29"}]}}]},"documentation":{"id":7981,"nodeType":"StructuredDocumentation","src":"28839:307:29","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8006,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:29","nodeType":"FunctionDefinition","parameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"mutability":"mutable","name":"value","nameLocation":"29175:5:29","nodeType":"VariableDeclaration","scope":8006,"src":"29168:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7982,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:29"},"returnParameters":{"id":7987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7986,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:29","nodeType":"VariableDeclaration","scope":8006,"src":"29205:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7985,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:29"},"scope":8281,"src":"29151:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8031,"nodeType":"Block","src":"29761:148:29","statements":[{"expression":{"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"29771:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"29790:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8015,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:29","typeDescriptions":{}}},"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8020,"nodeType":"ExpressionStatement","src":"29771:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"29810:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"29824:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8030,"nodeType":"IfStatement","src":"29806:97:29","trueBody":{"id":8029,"nodeType":"Block","src":"29831:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"29886:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8024,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"29852:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8028,"nodeType":"RevertStatement","src":"29845:47:29"}]}}]},"documentation":{"id":8007,"nodeType":"StructuredDocumentation","src":"29377:307:29","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8032,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:29","nodeType":"FunctionDefinition","parameters":{"id":8010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8009,"mutability":"mutable","name":"value","nameLocation":"29713:5:29","nodeType":"VariableDeclaration","scope":8032,"src":"29706:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8008,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:29"},"returnParameters":{"id":8013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8012,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:29","nodeType":"VariableDeclaration","scope":8032,"src":"29743:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8011,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:29"},"scope":8281,"src":"29689:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8057,"nodeType":"Block","src":"30299:148:29","statements":[{"expression":{"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"30309:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"30328:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8041,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:29","typeDescriptions":{}}},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8046,"nodeType":"ExpressionStatement","src":"30309:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"30348:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"30362:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8056,"nodeType":"IfStatement","src":"30344:97:29","trueBody":{"id":8055,"nodeType":"Block","src":"30369:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"30424:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8050,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"30390:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8054,"nodeType":"RevertStatement","src":"30383:47:29"}]}}]},"documentation":{"id":8033,"nodeType":"StructuredDocumentation","src":"29915:307:29","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:29","nodeType":"FunctionDefinition","parameters":{"id":8036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8035,"mutability":"mutable","name":"value","nameLocation":"30251:5:29","nodeType":"VariableDeclaration","scope":8058,"src":"30244:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8034,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:29"},"returnParameters":{"id":8039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8038,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:29","nodeType":"VariableDeclaration","scope":8058,"src":"30281:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8037,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:29"},"scope":8281,"src":"30227:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8083,"nodeType":"Block","src":"30837:148:29","statements":[{"expression":{"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"30847:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"30866:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8067,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:29","typeDescriptions":{}}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8072,"nodeType":"ExpressionStatement","src":"30847:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"30886:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"30900:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8082,"nodeType":"IfStatement","src":"30882:97:29","trueBody":{"id":8081,"nodeType":"Block","src":"30907:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"30962:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8076,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"30928:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8080,"nodeType":"RevertStatement","src":"30921:47:29"}]}}]},"documentation":{"id":8059,"nodeType":"StructuredDocumentation","src":"30453:307:29","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8084,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:29","nodeType":"FunctionDefinition","parameters":{"id":8062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8061,"mutability":"mutable","name":"value","nameLocation":"30789:5:29","nodeType":"VariableDeclaration","scope":8084,"src":"30782:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8060,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:29"},"returnParameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8064,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:29","nodeType":"VariableDeclaration","scope":8084,"src":"30819:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8063,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:29"},"scope":8281,"src":"30765:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8109,"nodeType":"Block","src":"31375:148:29","statements":[{"expression":{"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"31385:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"31404:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8093,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:29","typeDescriptions":{}}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8098,"nodeType":"ExpressionStatement","src":"31385:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"31424:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"31438:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8108,"nodeType":"IfStatement","src":"31420:97:29","trueBody":{"id":8107,"nodeType":"Block","src":"31445:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"31500:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8102,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"31466:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8106,"nodeType":"RevertStatement","src":"31459:47:29"}]}}]},"documentation":{"id":8085,"nodeType":"StructuredDocumentation","src":"30991:307:29","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8110,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:29","nodeType":"FunctionDefinition","parameters":{"id":8088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8087,"mutability":"mutable","name":"value","nameLocation":"31327:5:29","nodeType":"VariableDeclaration","scope":8110,"src":"31320:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8086,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:29"},"returnParameters":{"id":8091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8090,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:29","nodeType":"VariableDeclaration","scope":8110,"src":"31357:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8089,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:29"},"scope":8281,"src":"31303:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8135,"nodeType":"Block","src":"31913:148:29","statements":[{"expression":{"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"31923:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"31942:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8119,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:29","typeDescriptions":{}}},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8124,"nodeType":"ExpressionStatement","src":"31923:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"31962:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"31976:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8134,"nodeType":"IfStatement","src":"31958:97:29","trueBody":{"id":8133,"nodeType":"Block","src":"31983:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"32038:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8128,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"32004:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8132,"nodeType":"RevertStatement","src":"31997:47:29"}]}}]},"documentation":{"id":8111,"nodeType":"StructuredDocumentation","src":"31529:307:29","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:29","nodeType":"FunctionDefinition","parameters":{"id":8114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8113,"mutability":"mutable","name":"value","nameLocation":"31865:5:29","nodeType":"VariableDeclaration","scope":8136,"src":"31858:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8112,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:29"},"returnParameters":{"id":8117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8116,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:29","nodeType":"VariableDeclaration","scope":8136,"src":"31895:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8115,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:29"},"scope":8281,"src":"31841:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8161,"nodeType":"Block","src":"32451:148:29","statements":[{"expression":{"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"32461:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"32480:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8145,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:29","typeDescriptions":{}}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8150,"nodeType":"ExpressionStatement","src":"32461:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"32500:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"32514:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8160,"nodeType":"IfStatement","src":"32496:97:29","trueBody":{"id":8159,"nodeType":"Block","src":"32521:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"32576:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8154,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"32542:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8158,"nodeType":"RevertStatement","src":"32535:47:29"}]}}]},"documentation":{"id":8137,"nodeType":"StructuredDocumentation","src":"32067:307:29","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:29","nodeType":"FunctionDefinition","parameters":{"id":8140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8139,"mutability":"mutable","name":"value","nameLocation":"32403:5:29","nodeType":"VariableDeclaration","scope":8162,"src":"32396:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8138,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:29"},"returnParameters":{"id":8143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:29","nodeType":"VariableDeclaration","scope":8162,"src":"32433:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8141,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:29"},"scope":8281,"src":"32379:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8187,"nodeType":"Block","src":"32989:148:29","statements":[{"expression":{"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"32999:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"33018:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8171,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:29","typeDescriptions":{}}},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8176,"nodeType":"ExpressionStatement","src":"32999:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"33038:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"33052:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8186,"nodeType":"IfStatement","src":"33034:97:29","trueBody":{"id":8185,"nodeType":"Block","src":"33059:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"33114:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8180,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"33080:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8184,"nodeType":"RevertStatement","src":"33073:47:29"}]}}]},"documentation":{"id":8163,"nodeType":"StructuredDocumentation","src":"32605:307:29","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8188,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:29","nodeType":"FunctionDefinition","parameters":{"id":8166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8165,"mutability":"mutable","name":"value","nameLocation":"32941:5:29","nodeType":"VariableDeclaration","scope":8188,"src":"32934:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8164,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:29"},"returnParameters":{"id":8169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8168,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:29","nodeType":"VariableDeclaration","scope":8188,"src":"32971:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8167,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:29"},"scope":8281,"src":"32917:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8213,"nodeType":"Block","src":"33527:148:29","statements":[{"expression":{"id":8201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"33537:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"33556:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8197,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:29","typeDescriptions":{}}},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8202,"nodeType":"ExpressionStatement","src":"33537:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"33576:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"33590:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8212,"nodeType":"IfStatement","src":"33572:97:29","trueBody":{"id":8211,"nodeType":"Block","src":"33597:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"33652:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8206,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"33618:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8210,"nodeType":"RevertStatement","src":"33611:47:29"}]}}]},"documentation":{"id":8189,"nodeType":"StructuredDocumentation","src":"33143:307:29","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:29","nodeType":"FunctionDefinition","parameters":{"id":8192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8191,"mutability":"mutable","name":"value","nameLocation":"33479:5:29","nodeType":"VariableDeclaration","scope":8214,"src":"33472:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8190,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:29"},"returnParameters":{"id":8195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8194,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:29","nodeType":"VariableDeclaration","scope":8214,"src":"33509:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8193,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:29"},"scope":8281,"src":"33455:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8239,"nodeType":"Block","src":"34058:146:29","statements":[{"expression":{"id":8227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"34068:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"34086:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8223,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:29","typeDescriptions":{}}},"id":8226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8228,"nodeType":"ExpressionStatement","src":"34068:24:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"34106:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"34120:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8238,"nodeType":"IfStatement","src":"34102:96:29","trueBody":{"id":8237,"nodeType":"Block","src":"34127:71:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"34181:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8232,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"34148:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8236,"nodeType":"RevertStatement","src":"34141:46:29"}]}}]},"documentation":{"id":8215,"nodeType":"StructuredDocumentation","src":"33681:302:29","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:29","nodeType":"FunctionDefinition","parameters":{"id":8218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8217,"mutability":"mutable","name":"value","nameLocation":"34011:5:29","nodeType":"VariableDeclaration","scope":8240,"src":"34004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8216,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:29"},"returnParameters":{"id":8221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8220,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:29","nodeType":"VariableDeclaration","scope":8240,"src":"34041:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8219,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:29"},"scope":8281,"src":"33988:216:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8269,"nodeType":"Block","src":"34444:250:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"34557:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8252,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:29","memberName":"max","nodeType":"MemberAccess","src":"34573:16:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8249,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:29","typeDescriptions":{}}},"id":8256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8263,"nodeType":"IfStatement","src":"34553:105:29","trueBody":{"id":8262,"nodeType":"Block","src":"34592:66:29","statements":[{"errorCall":{"arguments":[{"id":8259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"34641:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8258,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"34613:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8261,"nodeType":"RevertStatement","src":"34606:41:29"}]}},{"expression":{"arguments":[{"id":8266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"34681:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8264,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:29","typeDescriptions":{}}},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8247,"id":8268,"nodeType":"Return","src":"34667:20:29"}]},"documentation":{"id":8241,"nodeType":"StructuredDocumentation","src":"34210:165:29","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:29","nodeType":"FunctionDefinition","parameters":{"id":8244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8243,"mutability":"mutable","name":"value","nameLocation":"34406:5:29","nodeType":"VariableDeclaration","scope":8270,"src":"34398:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8242,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:29"},"returnParameters":{"id":8247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8270,"src":"34436:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8245,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:29"},"scope":8281,"src":"34380:314:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8279,"nodeType":"Block","src":"34853:87:29","statements":[{"AST":{"nativeSrc":"34888:46:29","nodeType":"YulBlock","src":"34888:46:29","statements":[{"nativeSrc":"34902:22:29","nodeType":"YulAssignment","src":"34902:22:29","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:29","nodeType":"YulIdentifier","src":"34921:1:29"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:29","nodeType":"YulIdentifier","src":"34914:6:29"},"nativeSrc":"34914:9:29","nodeType":"YulFunctionCall","src":"34914:9:29"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:29","nodeType":"YulIdentifier","src":"34907:6:29"},"nativeSrc":"34907:17:29","nodeType":"YulFunctionCall","src":"34907:17:29"},"variableNames":[{"name":"u","nativeSrc":"34902:1:29","nodeType":"YulIdentifier","src":"34902:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8273,"isOffset":false,"isSlot":false,"src":"34921:1:29","valueSize":1},{"declaration":8276,"isOffset":false,"isSlot":false,"src":"34902:1:29","valueSize":1}],"flags":["memory-safe"],"id":8278,"nodeType":"InlineAssembly","src":"34863:71:29"}]},"documentation":{"id":8271,"nodeType":"StructuredDocumentation","src":"34700:90:29","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8280,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:29","nodeType":"FunctionDefinition","parameters":{"id":8274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8273,"mutability":"mutable","name":"b","nameLocation":"34816:1:29","nodeType":"VariableDeclaration","scope":8280,"src":"34811:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8272,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:29"},"returnParameters":{"id":8277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8276,"mutability":"mutable","name":"u","nameLocation":"34850:1:29","nodeType":"VariableDeclaration","scope":8280,"src":"34842:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8275,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:29"},"scope":8281,"src":"34795:145:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8282,"src":"769:34173:29","usedErrors":[6526,6531,6538,6543],"usedEvents":[]}],"src":"192:34751:29"},"id":29},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8281],"SignedMath":[8425]},"id":8426,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8283,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8426,"sourceUnit":8282,"src":"135:40:30","symbolAliases":[{"foreign":{"id":8284,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"143:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8286,"nodeType":"StructuredDocumentation","src":"177:80:30","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8425,"linearizedBaseContracts":[8425],"name":"SignedMath","nameLocation":"266:10:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":8315,"nodeType":"Block","src":"746:215:30","statements":[{"id":8314,"nodeType":"UncheckedBlock","src":"756:199:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"894:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"900:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"904:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8307,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"932:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8305,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"916:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"916:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8303,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:30","typeDescriptions":{}}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8297,"id":8313,"nodeType":"Return","src":"887:57:30"}]}]},"documentation":{"id":8287,"nodeType":"StructuredDocumentation","src":"283:374:30","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8316,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:30","nodeType":"FunctionDefinition","parameters":{"id":8294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8289,"mutability":"mutable","name":"condition","nameLocation":"684:9:30","nodeType":"VariableDeclaration","scope":8316,"src":"679:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8288,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8291,"mutability":"mutable","name":"a","nameLocation":"702:1:30","nodeType":"VariableDeclaration","scope":8316,"src":"695:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8290,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8293,"mutability":"mutable","name":"b","nameLocation":"712:1:30","nodeType":"VariableDeclaration","scope":8316,"src":"705:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8292,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:30"},"returnParameters":{"id":8297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8316,"src":"738:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8295,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:30"},"scope":8425,"src":"662:299:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8334,"nodeType":"Block","src":"1102:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"1127:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"1131:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"1134:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"1137:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8326,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"1119:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8325,"id":8333,"nodeType":"Return","src":"1112:27:30"}]},"documentation":{"id":8317,"nodeType":"StructuredDocumentation","src":"967:66:30","text":" @dev Returns the largest of two signed numbers."},"id":8335,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:30","nodeType":"FunctionDefinition","parameters":{"id":8322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8319,"mutability":"mutable","name":"a","nameLocation":"1058:1:30","nodeType":"VariableDeclaration","scope":8335,"src":"1051:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8318,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8321,"mutability":"mutable","name":"b","nameLocation":"1068:1:30","nodeType":"VariableDeclaration","scope":8335,"src":"1061:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8320,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:30"},"returnParameters":{"id":8325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8335,"src":"1094:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8323,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:30"},"scope":8425,"src":"1038:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8353,"nodeType":"Block","src":"1288:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"1313:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8347,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"1317:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"1320:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"1323:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8345,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"1305:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8344,"id":8352,"nodeType":"Return","src":"1298:27:30"}]},"documentation":{"id":8336,"nodeType":"StructuredDocumentation","src":"1152:67:30","text":" @dev Returns the smallest of two signed numbers."},"id":8354,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:30","nodeType":"FunctionDefinition","parameters":{"id":8341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"a","nameLocation":"1244:1:30","nodeType":"VariableDeclaration","scope":8354,"src":"1237:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8337,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8340,"mutability":"mutable","name":"b","nameLocation":"1254:1:30","nodeType":"VariableDeclaration","scope":8354,"src":"1247:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8339,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:30"},"returnParameters":{"id":8344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8354,"src":"1280:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8342,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:30"},"scope":8425,"src":"1224:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8397,"nodeType":"Block","src":"1537:162:30","statements":[{"assignments":[8365],"declarations":[{"constant":false,"id":8365,"mutability":"mutable","name":"x","nameLocation":"1606:1:30","nodeType":"VariableDeclaration","scope":8397,"src":"1599:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8364,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8378,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"1611:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"1615:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"1622:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8371,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"1626:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:30"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8379,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8365,"src":"1651:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8384,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8365,"src":"1671:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:30","typeDescriptions":{}}},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8380,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:30","typeDescriptions":{}}},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"1685:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"1689:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8363,"id":8396,"nodeType":"Return","src":"1644:48:30"}]},"documentation":{"id":8355,"nodeType":"StructuredDocumentation","src":"1338:126:30","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8398,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:30","nodeType":"FunctionDefinition","parameters":{"id":8360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8357,"mutability":"mutable","name":"a","nameLocation":"1493:1:30","nodeType":"VariableDeclaration","scope":8398,"src":"1486:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8356,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8359,"mutability":"mutable","name":"b","nameLocation":"1503:1:30","nodeType":"VariableDeclaration","scope":8398,"src":"1496:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8358,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:30"},"returnParameters":{"id":8363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8398,"src":"1529:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8361,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:30"},"scope":8425,"src":"1469:230:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8423,"nodeType":"Block","src":"1843:767:30","statements":[{"id":8422,"nodeType":"UncheckedBlock","src":"1853:751:30","statements":[{"assignments":[8407],"declarations":[{"constant":false,"id":8407,"mutability":"mutable","name":"mask","nameLocation":"2424:4:30","nodeType":"VariableDeclaration","scope":8422,"src":"2417:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8406,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8411,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8408,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"2431:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8414,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"2576:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8415,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"2580:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8418,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"2588:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:30","typeDescriptions":{}}},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8405,"id":8421,"nodeType":"Return","src":"2560:33:30"}]}]},"documentation":{"id":8399,"nodeType":"StructuredDocumentation","src":"1705:78:30","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8424,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:30","nodeType":"FunctionDefinition","parameters":{"id":8402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8401,"mutability":"mutable","name":"n","nameLocation":"1808:1:30","nodeType":"VariableDeclaration","scope":8424,"src":"1801:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8400,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:30"},"returnParameters":{"id":8405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8424,"src":"1834:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:30"},"scope":8425,"src":"1788:822:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8426,"src":"258:2354:30","usedErrors":[],"usedEvents":[]}],"src":"109:2504:30"},"id":30},"src/blockchain/evm/contracts/DirectMintNFTV2.sol":{"ast":{"absolutePath":"src/blockchain/evm/contracts/DirectMintNFTV2.sol","exportedSymbols":{"Context":[2399],"ECDSA":[3460],"EIP712":[3687],"ERC165":[4898],"ERC2981":[2369],"ERC721":[1318],"ERC721Enumerable":[1839],"ERC721URIStorage":[1965],"ERC721Utils":[2102],"Hashes":[3727],"IERC165":[4910],"IERC2981":[171],"IERC4906":[195],"IERC5267":[220],"IERC721":[1435],"IERC721Enumerable":[1997],"IERC721Errors":[314],"IERC721Metadata":[2025],"LaunchNFTV2":[9627],"MerkleProof":[4800],"MessageHashUtils":[4874],"Ownable":[147],"ShortString":[2457],"ShortStrings":[2668],"Strings":[3112]},"id":9628,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8427,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:31"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":8428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9628,"sourceUnit":1319,"src":"58:57:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":8429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9628,"sourceUnit":1966,"src":"116:78:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","file":"@openzeppelin/contracts/token/common/ERC2981.sol","id":8430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9628,"sourceUnit":2370,"src":"195:58:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8431,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9628,"sourceUnit":148,"src":"254:52:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":8432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9628,"sourceUnit":1840,"src":"307:78:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":8433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9628,"sourceUnit":3461,"src":"386:62:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":8434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9628,"sourceUnit":3688,"src":"449:63:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":8435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9628,"sourceUnit":4801,"src":"513:68:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8436,"name":"ERC721","nameLocations":["648:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"648:6:31"},"id":8437,"nodeType":"InheritanceSpecifier","src":"648:6:31"},{"baseName":{"id":8438,"name":"ERC721URIStorage","nameLocations":["658:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"658:16:31"},"id":8439,"nodeType":"InheritanceSpecifier","src":"658:16:31"},{"baseName":{"id":8440,"name":"ERC2981","nameLocations":["678:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":2369,"src":"678:7:31"},"id":8441,"nodeType":"InheritanceSpecifier","src":"678:7:31"},{"baseName":{"id":8442,"name":"Ownable","nameLocations":["689:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"689:7:31"},"id":8443,"nodeType":"InheritanceSpecifier","src":"689:7:31"},{"baseName":{"id":8444,"name":"ERC721Enumerable","nameLocations":["700:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1839,"src":"700:16:31"},"id":8445,"nodeType":"InheritanceSpecifier","src":"700:16:31"},{"baseName":{"id":8446,"name":"EIP712","nameLocations":["720:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"720:6:31"},"id":8447,"nodeType":"InheritanceSpecifier","src":"720:6:31"}],"canonicalName":"LaunchNFTV2","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9627,"linearizedBaseContracts":[9627,3687,220,1839,1997,147,2369,1965,1318,314,2025,195,1435,4898,171,4910,2399],"name":"LaunchNFTV2","nameLocation":"631:11:31","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8450,"libraryName":{"id":8448,"name":"ECDSA","nameLocations":["737:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":3460,"src":"737:5:31"},"nodeType":"UsingForDirective","src":"731:24:31","typeName":{"id":8449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"747:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"LaunchNFTV2.PhaseType","id":8454,"members":[{"id":8451,"name":"NOT_STARTED","nameLocation":"780:11:31","nodeType":"EnumValue","src":"780:11:31"},{"id":8452,"name":"WHITELIST","nameLocation":"797:9:31","nodeType":"EnumValue","src":"797:9:31"},{"id":8453,"name":"PUBLIC","nameLocation":"812:6:31","nodeType":"EnumValue","src":"812:6:31"}],"name":"PhaseType","nameLocation":"764:9:31","nodeType":"EnumDefinition","src":"759:63:31"},{"canonicalName":"LaunchNFTV2.Phase","id":8474,"members":[{"constant":false,"id":8457,"mutability":"mutable","name":"phaseType","nameLocation":"855:9:31","nodeType":"VariableDeclaration","scope":8474,"src":"845:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"typeName":{"id":8456,"nodeType":"UserDefinedTypeName","pathNode":{"id":8455,"name":"PhaseType","nameLocations":["845:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"845:9:31"},"referencedDeclaration":8454,"src":"845:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"visibility":"internal"},{"constant":false,"id":8459,"mutability":"mutable","name":"price","nameLocation":"878:5:31","nodeType":"VariableDeclaration","scope":8474,"src":"870:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8458,"name":"uint256","nodeType":"ElementaryTypeName","src":"870:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8461,"mutability":"mutable","name":"startTime","nameLocation":"897:9:31","nodeType":"VariableDeclaration","scope":8474,"src":"889:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8460,"name":"uint256","nodeType":"ElementaryTypeName","src":"889:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8463,"mutability":"mutable","name":"endTime","nameLocation":"920:7:31","nodeType":"VariableDeclaration","scope":8474,"src":"912:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8462,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8465,"mutability":"mutable","name":"maxSupply","nameLocation":"941:9:31","nodeType":"VariableDeclaration","scope":8474,"src":"933:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8464,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8467,"mutability":"mutable","name":"maxPerWallet","nameLocation":"964:12:31","nodeType":"VariableDeclaration","scope":8474,"src":"956:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8466,"name":"uint256","nodeType":"ElementaryTypeName","src":"956:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8469,"mutability":"mutable","name":"maxMintPerPhase","nameLocation":"1032:15:31","nodeType":"VariableDeclaration","scope":8474,"src":"1024:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1024:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8471,"mutability":"mutable","name":"mintedInPhase","nameLocation":"1103:13:31","nodeType":"VariableDeclaration","scope":8474,"src":"1095:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1095:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8473,"mutability":"mutable","name":"merkleRoot","nameLocation":"1162:10:31","nodeType":"VariableDeclaration","scope":8474,"src":"1154:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1154:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Phase","nameLocation":"833:5:31","nodeType":"StructDefinition","scope":9627,"src":"826:351:31","visibility":"public"},{"constant":false,"functionSelector":"65d65e86","id":8476,"mutability":"immutable","name":"backendSigner","nameLocation":"1242:13:31","nodeType":"VariableDeclaration","scope":9627,"src":"1217:38:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8475,"name":"address","nodeType":"ElementaryTypeName","src":"1217:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":8481,"mutability":"constant","name":"MINT_TYPEHASH","nameLocation":"1342:13:31","nodeType":"VariableDeclaration","scope":9627,"src":"1317:188:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1317:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d696e74526571756573742861646472657373206d696e7465722c75696e7432353620746f6b656e49642c737472696e67207572692c75696e743235362070726963652c75696e74323536207068617365496e6465782c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":8479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1379:120:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_280749f6b9ac9e1a05f80919c2e8f043f5e409a99355ae2c6e1ab8664f17cb8d","typeString":"literal_string \"MintRequest(address minter,uint256 tokenId,string uri,uint256 price,uint256 phaseIndex,uint256 nonce,uint256 deadline)\""},"value":"MintRequest(address minter,uint256 tokenId,string uri,uint256 price,uint256 phaseIndex,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_280749f6b9ac9e1a05f80919c2e8f043f5e409a99355ae2c6e1ab8664f17cb8d","typeString":"literal_string \"MintRequest(address minter,uint256 tokenId,string uri,uint256 price,uint256 phaseIndex,uint256 nonce,uint256 deadline)\""}],"id":8478,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1362:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1362:143:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":8485,"mutability":"mutable","name":"nonces","nameLocation":"1546:6:31","nodeType":"VariableDeclaration","scope":9627,"src":"1510:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8484,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8482,"name":"address","nodeType":"ElementaryTypeName","src":"1518:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1510:27:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"2e37eef6","id":8489,"mutability":"mutable","name":"phases","nameLocation":"1603:6:31","nodeType":"VariableDeclaration","scope":9627,"src":"1588:21:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase[]"},"typeName":{"baseType":{"id":8487,"nodeType":"UserDefinedTypeName","pathNode":{"id":8486,"name":"Phase","nameLocations":["1588:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"1588:5:31"},"referencedDeclaration":8474,"src":"1588:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"}},"id":8488,"nodeType":"ArrayTypeName","src":"1588:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage_ptr","typeString":"struct LaunchNFTV2.Phase[]"}},"visibility":"public"},{"constant":false,"id":8496,"mutability":"mutable","name":"mintedPerWalletInPhase","nameLocation":"1675:22:31","nodeType":"VariableDeclaration","scope":9627,"src":"1613:84:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8454_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV2.PhaseType => uint256))"},"typeName":{"id":8495,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8490,"name":"address","nodeType":"ElementaryTypeName","src":"1621:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1613:49:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8454_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV2.PhaseType => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8494,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8492,"nodeType":"UserDefinedTypeName","pathNode":{"id":8491,"name":"PhaseType","nameLocations":["1640:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"1640:9:31"},"referencedDeclaration":8454,"src":"1640:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"Mapping","src":"1632:29:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PhaseType_$8454_$_t_uint256_$","typeString":"mapping(enum LaunchNFTV2.PhaseType => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1653:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":8498,"mutability":"immutable","name":"royaltyFeePercentage","nameLocation":"1760:20:31","nodeType":"VariableDeclaration","scope":9627,"src":"1735:45:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8497,"name":"uint96","nodeType":"ElementaryTypeName","src":"1735:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"private"},{"constant":false,"functionSelector":"cdd78cfc","id":8500,"mutability":"mutable","name":"platformFeePercentage","nameLocation":"1798:21:31","nodeType":"VariableDeclaration","scope":9627,"src":"1784:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8499,"name":"uint96","nodeType":"ElementaryTypeName","src":"1784:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"eb13554f","id":8502,"mutability":"mutable","name":"platformFeeRecipient","nameLocation":"1838:20:31","nodeType":"VariableDeclaration","scope":9627,"src":"1823:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8501,"name":"address","nodeType":"ElementaryTypeName","src":"1823:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"99f38cf3feaad38e0a2e22ef51bdd4faba32b432520a951248d77057596a425a","id":8511,"name":"TokenMinted","nameLocation":"1881:11:31","nodeType":"EventDefinition","parameters":{"id":8510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8504,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1914:7:31","nodeType":"VariableDeclaration","scope":8511,"src":"1898:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1898:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8506,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1943:9:31","nodeType":"VariableDeclaration","scope":8511,"src":"1927:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8505,"name":"address","nodeType":"ElementaryTypeName","src":"1927:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8509,"indexed":false,"mutability":"mutable","name":"phaseType","nameLocation":"1968:9:31","nodeType":"VariableDeclaration","scope":8511,"src":"1958:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"typeName":{"id":8508,"nodeType":"UserDefinedTypeName","pathNode":{"id":8507,"name":"PhaseType","nameLocations":["1958:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"1958:9:31"},"referencedDeclaration":8454,"src":"1958:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"visibility":"internal"}],"src":"1892:89:31"},"src":"1875:107:31"},{"anonymous":false,"eventSelector":"0c1e64363396ef448152a5abccf24231295b872b93e1b6a53908ff34c8390a78","id":8532,"name":"PhaseAdded","nameLocation":"1991:10:31","nodeType":"EventDefinition","parameters":{"id":8531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8513,"indexed":true,"mutability":"mutable","name":"phaseIndex","nameLocation":"2023:10:31","nodeType":"VariableDeclaration","scope":8532,"src":"2007:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2007:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8516,"indexed":false,"mutability":"mutable","name":"phaseType","nameLocation":"2049:9:31","nodeType":"VariableDeclaration","scope":8532,"src":"2039:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"typeName":{"id":8515,"nodeType":"UserDefinedTypeName","pathNode":{"id":8514,"name":"PhaseType","nameLocations":["2039:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"2039:9:31"},"referencedDeclaration":8454,"src":"2039:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"visibility":"internal"},{"constant":false,"id":8518,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2072:5:31","nodeType":"VariableDeclaration","scope":8532,"src":"2064:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2064:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8520,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"2091:9:31","nodeType":"VariableDeclaration","scope":8532,"src":"2083:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8519,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8522,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"2114:7:31","nodeType":"VariableDeclaration","scope":8532,"src":"2106:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2106:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8524,"indexed":false,"mutability":"mutable","name":"maxSupply","nameLocation":"2135:9:31","nodeType":"VariableDeclaration","scope":8532,"src":"2127:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8526,"indexed":false,"mutability":"mutable","name":"maxPerWallet","nameLocation":"2158:12:31","nodeType":"VariableDeclaration","scope":8532,"src":"2150:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2150:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8528,"indexed":false,"mutability":"mutable","name":"maxMintPerPhase","nameLocation":"2184:15:31","nodeType":"VariableDeclaration","scope":8532,"src":"2176:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2176:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8530,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"2213:10:31","nodeType":"VariableDeclaration","scope":8532,"src":"2205:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2205:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2001:226:31"},"src":"1985:243:31"},{"anonymous":false,"eventSelector":"83c587334c090f25e5a6aec0675c11d1310c8b758fe5a28308a6cf7ff9db4e53","id":8553,"name":"PhaseUpdated","nameLocation":"2237:12:31","nodeType":"EventDefinition","parameters":{"id":8552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8534,"indexed":true,"mutability":"mutable","name":"phaseIndex","nameLocation":"2271:10:31","nodeType":"VariableDeclaration","scope":8553,"src":"2255:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2255:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8537,"indexed":false,"mutability":"mutable","name":"phaseType","nameLocation":"2297:9:31","nodeType":"VariableDeclaration","scope":8553,"src":"2287:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"typeName":{"id":8536,"nodeType":"UserDefinedTypeName","pathNode":{"id":8535,"name":"PhaseType","nameLocations":["2287:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"2287:9:31"},"referencedDeclaration":8454,"src":"2287:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"visibility":"internal"},{"constant":false,"id":8539,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2320:5:31","nodeType":"VariableDeclaration","scope":8553,"src":"2312:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8541,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"2339:9:31","nodeType":"VariableDeclaration","scope":8553,"src":"2331:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8540,"name":"uint256","nodeType":"ElementaryTypeName","src":"2331:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8543,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"2362:7:31","nodeType":"VariableDeclaration","scope":8553,"src":"2354:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2354:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8545,"indexed":false,"mutability":"mutable","name":"maxSupply","nameLocation":"2383:9:31","nodeType":"VariableDeclaration","scope":8553,"src":"2375:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2375:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8547,"indexed":false,"mutability":"mutable","name":"maxPerWallet","nameLocation":"2406:12:31","nodeType":"VariableDeclaration","scope":8553,"src":"2398:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2398:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8549,"indexed":false,"mutability":"mutable","name":"maxMintPerPhase","nameLocation":"2432:15:31","nodeType":"VariableDeclaration","scope":8553,"src":"2424:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2424:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8551,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"2461:10:31","nodeType":"VariableDeclaration","scope":8553,"src":"2453:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2453:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2249:226:31"},"src":"2231:245:31"},{"anonymous":false,"eventSelector":"bad9436335ddabdd6fc56ea571323eb7dcfc0e82e9dbaf786bbb2a2ad6de573c","id":8559,"name":"PlatformFeeUpdated","nameLocation":"2485:18:31","nodeType":"EventDefinition","parameters":{"id":8558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8555,"indexed":false,"mutability":"mutable","name":"newPercentage","nameLocation":"2511:13:31","nodeType":"VariableDeclaration","scope":8559,"src":"2504:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8554,"name":"uint96","nodeType":"ElementaryTypeName","src":"2504:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8557,"indexed":false,"mutability":"mutable","name":"newRecipient","nameLocation":"2534:12:31","nodeType":"VariableDeclaration","scope":8559,"src":"2526:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8556,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2503:44:31"},"src":"2479:69:31"},{"anonymous":false,"eventSelector":"60188009b974c2fa66ee3b916d93f64d6534ea2204e0c466f9784ace689e8e49","id":8565,"name":"WithdrawCompleted","nameLocation":"2557:17:31","nodeType":"EventDefinition","parameters":{"id":8564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8561,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2591:9:31","nodeType":"VariableDeclaration","scope":8565,"src":"2575:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8560,"name":"address","nodeType":"ElementaryTypeName","src":"2575:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8563,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2610:6:31","nodeType":"VariableDeclaration","scope":8565,"src":"2602:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8562,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2574:43:31"},"src":"2551:67:31"},{"errorSelector":"21094a9b","id":8567,"name":"PhaseNotActive","nameLocation":"2628:14:31","nodeType":"ErrorDefinition","parameters":{"id":8566,"nodeType":"ParameterList","parameters":[],"src":"2642:2:31"},"src":"2622:23:31"},{"errorSelector":"8baa579f","id":8569,"name":"InvalidSignature","nameLocation":"2654:16:31","nodeType":"ErrorDefinition","parameters":{"id":8568,"nodeType":"ParameterList","parameters":[],"src":"2670:2:31"},"src":"2648:25:31"},{"errorSelector":"0819bdcd","id":8571,"name":"SignatureExpired","nameLocation":"2682:16:31","nodeType":"ErrorDefinition","parameters":{"id":8570,"nodeType":"ParameterList","parameters":[],"src":"2698:2:31"},"src":"2676:25:31"},{"errorSelector":"b05e92fa","id":8573,"name":"InvalidMerkleProof","nameLocation":"2710:18:31","nodeType":"ErrorDefinition","parameters":{"id":8572,"nodeType":"ParameterList","parameters":[],"src":"2728:2:31"},"src":"2704:27:31"},{"errorSelector":"3e3f7e0d","id":8575,"name":"ExceedsPhaseSupply","nameLocation":"2740:18:31","nodeType":"ErrorDefinition","parameters":{"id":8574,"nodeType":"ParameterList","parameters":[],"src":"2758:2:31"},"src":"2734:27:31"},{"errorSelector":"5107dbe7","id":8577,"name":"ExceedsWalletLimit","nameLocation":"2770:18:31","nodeType":"ErrorDefinition","parameters":{"id":8576,"nodeType":"ParameterList","parameters":[],"src":"2788:2:31"},"src":"2764:27:31"},{"errorSelector":"cd1c8867","id":8579,"name":"InsufficientPayment","nameLocation":"2800:19:31","nodeType":"ErrorDefinition","parameters":{"id":8578,"nodeType":"ParameterList","parameters":[],"src":"2819:2:31"},"src":"2794:28:31"},{"errorSelector":"43a8b010","id":8581,"name":"PriceMismatch","nameLocation":"2831:13:31","nodeType":"ErrorDefinition","parameters":{"id":8580,"nodeType":"ParameterList","parameters":[],"src":"2844:2:31"},"src":"2825:22:31"},{"errorSelector":"90b8ec18","id":8583,"name":"TransferFailed","nameLocation":"2856:14:31","nodeType":"ErrorDefinition","parameters":{"id":8582,"nodeType":"ParameterList","parameters":[],"src":"2870:2:31"},"src":"2850:23:31"},{"errorSelector":"3d911d57","id":8585,"name":"InvalidPhaseIndex","nameLocation":"2882:17:31","nodeType":"ErrorDefinition","parameters":{"id":8584,"nodeType":"ParameterList","parameters":[],"src":"2899:2:31"},"src":"2876:26:31"},{"errorSelector":"514c71c2","id":8587,"name":"InvalidPhaseConfiguration","nameLocation":"2911:25:31","nodeType":"ErrorDefinition","parameters":{"id":8586,"nodeType":"ParameterList","parameters":[],"src":"2936:2:31"},"src":"2905:34:31"},{"errorSelector":"27fdfacf","id":8589,"name":"OverlappingPhases","nameLocation":"2948:17:31","nodeType":"ErrorDefinition","parameters":{"id":8588,"nodeType":"ParameterList","parameters":[],"src":"2965:2:31"},"src":"2942:26:31"},{"errorSelector":"a9477e09","id":8591,"name":"NoActivePhase","nameLocation":"2977:13:31","nodeType":"ErrorDefinition","parameters":{"id":8590,"nodeType":"ParameterList","parameters":[],"src":"2990:2:31"},"src":"2971:22:31"},{"body":{"id":8694,"nodeType":"Block","src":"3270:865:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8620,"name":"_royaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8599,"src":"3284:11:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":8621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3299:4:31","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"3284:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f79616c7479206665652063616e6e6f742065786365656420313025","id":8623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3305:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6","typeString":"literal_string \"Royalty fee cannot exceed 10%\""},"value":"Royalty fee cannot exceed 10%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6","typeString":"literal_string \"Royalty fee cannot exceed 10%\""}],"id":8619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3276:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3276:61:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8625,"nodeType":"ExpressionStatement","src":"3276:61:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8627,"name":"_platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"3351:12:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":8628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3367:4:31","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"3351:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6174666f726d206665652063616e6e6f742065786365656420313025","id":8630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3373:32:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270","typeString":"literal_string \"Platform fee cannot exceed 10%\""},"value":"Platform fee cannot exceed 10%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270","typeString":"literal_string \"Platform fee cannot exceed 10%\""}],"id":8626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3343:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3343:63:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8632,"nodeType":"ExpressionStatement","src":"3343:63:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8634,"name":"_platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"3427:21:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3452:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8635,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:31","typeDescriptions":{}}},"id":8638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3452:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3427:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420706c6174666f726d2066656520726563697069656e74","id":8640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3470:32:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0","typeString":"literal_string \"Invalid platform fee recipient\""},"value":"Invalid platform fee recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0","typeString":"literal_string \"Invalid platform fee recipient\""}],"id":8633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3412:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3412:96:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8642,"nodeType":"ExpressionStatement","src":"3412:96:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8644,"name":"_backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"3522:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3548:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3540:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8645,"name":"address","nodeType":"ElementaryTypeName","src":"3540:7:31","typeDescriptions":{}}},"id":8648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3522:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206261636b656e64207369676e6572","id":8650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3552:24:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a","typeString":"literal_string \"Invalid backend signer\""},"value":"Invalid backend signer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a","typeString":"literal_string \"Invalid backend signer\""}],"id":8643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3514:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:63:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8652,"nodeType":"ExpressionStatement","src":"3514:63:31"},{"expression":{"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8653,"name":"backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"3584:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8654,"name":"_backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"3600:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3584:30:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8656,"nodeType":"ExpressionStatement","src":"3584:30:31"},{"expression":{"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8657,"name":"royaltyFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"3620:20:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8658,"name":"_royaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8599,"src":"3643:11:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3620:34:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":8660,"nodeType":"ExpressionStatement","src":"3620:34:31"},{"expression":{"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8661,"name":"platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"3660:21:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8662,"name":"_platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"3684:12:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3660:36:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":8664,"nodeType":"ExpressionStatement","src":"3660:36:31"},{"expression":{"id":8667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8665,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"3702:20:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8666,"name":"_platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"3725:21:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3702:44:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8668,"nodeType":"ExpressionStatement","src":"3702:44:31"},{"expression":{"arguments":[{"id":8670,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8593,"src":"3772:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8671,"name":"royaltyFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"3786:20:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":8669,"name":"_setDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3753:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":8672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:54:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8673,"nodeType":"ExpressionStatement","src":"3753:54:31"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8678,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"3901:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":8679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3911:11:31","memberName":"NOT_STARTED","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"3901:21:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},{"hexValue":"30","id":8680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3939:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3961:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3981:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4003:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4028:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4056:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4082:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":8689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4113:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4105:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4105:7:31","typeDescriptions":{}}},"id":8690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4105:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8677,"name":"Phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8474,"src":"3874:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Phase_$8474_storage_ptr_$","typeString":"type(struct LaunchNFTV2.Phase storage pointer)"}},"id":8691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3890:9:31","3932:5:31","3950:9:31","3972:7:31","3992:9:31","4014:12:31","4039:15:31","4067:13:31","4093:10:31"],"names":["phaseType","price","startTime","endTime","maxSupply","maxPerWallet","maxMintPerPhase","mintedInPhase","merkleRoot"],"nodeType":"FunctionCall","src":"3874:250:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}],"expression":{"id":8674,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"3855:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":8676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3862:4:31","memberName":"push","nodeType":"MemberAccess","src":"3855:11:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Phase_$8474_storage_$dyn_storage_ptr_$_t_struct$_Phase_$8474_storage_$returns$__$attached_to$_t_array$_t_struct$_Phase_$8474_storage_$dyn_storage_ptr_$","typeString":"function (struct LaunchNFTV2.Phase storage ref[] storage pointer,struct LaunchNFTV2.Phase storage ref)"}},"id":8692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3855:275:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8693,"nodeType":"ExpressionStatement","src":"3855:275:31"}]},"id":8695,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8608,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"3208:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8609,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"3214:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8610,"kind":"baseConstructorSpecifier","modifierName":{"id":8607,"name":"ERC721","nameLocations":["3201:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"3201:6:31"},"nodeType":"ModifierInvocation","src":"3201:20:31"},{"arguments":[{"id":8612,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8593,"src":"3230:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8613,"kind":"baseConstructorSpecifier","modifierName":{"id":8611,"name":"Ownable","nameLocations":["3222:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3222:7:31"},"nodeType":"ModifierInvocation","src":"3222:21:31"},{"arguments":[{"hexValue":"556e69666965644e4654","id":8615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3251:12:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c97125c8d5f52e86f4370bcf04d9dda50997b0022ed726068b6de79e1c30d6fe","typeString":"literal_string \"UnifiedNFT\""},"value":"UnifiedNFT"},{"hexValue":"31","id":8616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3265:3:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":8617,"kind":"baseConstructorSpecifier","modifierName":{"id":8614,"name":"EIP712","nameLocations":["3244:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"3244:6:31"},"nodeType":"ModifierInvocation","src":"3244:25:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8593,"mutability":"mutable","name":"initialOwner","nameLocation":"3022:12:31","nodeType":"VariableDeclaration","scope":8695,"src":"3014:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8592,"name":"address","nodeType":"ElementaryTypeName","src":"3014:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8595,"mutability":"mutable","name":"name","nameLocation":"3054:4:31","nodeType":"VariableDeclaration","scope":8695,"src":"3040:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8594,"name":"string","nodeType":"ElementaryTypeName","src":"3040:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8597,"mutability":"mutable","name":"symbol","nameLocation":"3078:6:31","nodeType":"VariableDeclaration","scope":8695,"src":"3064:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8596,"name":"string","nodeType":"ElementaryTypeName","src":"3064:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8599,"mutability":"mutable","name":"_royaltyFee","nameLocation":"3097:11:31","nodeType":"VariableDeclaration","scope":8695,"src":"3090:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8598,"name":"uint96","nodeType":"ElementaryTypeName","src":"3090:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8601,"mutability":"mutable","name":"_platformFee","nameLocation":"3121:12:31","nodeType":"VariableDeclaration","scope":8695,"src":"3114:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8600,"name":"uint96","nodeType":"ElementaryTypeName","src":"3114:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8603,"mutability":"mutable","name":"_platformFeeRecipient","nameLocation":"3147:21:31","nodeType":"VariableDeclaration","scope":8695,"src":"3139:29:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8602,"name":"address","nodeType":"ElementaryTypeName","src":"3139:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8605,"mutability":"mutable","name":"_backendSigner","nameLocation":"3182:14:31","nodeType":"VariableDeclaration","scope":8695,"src":"3174:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8604,"name":"address","nodeType":"ElementaryTypeName","src":"3174:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3008:192:31"},"returnParameters":{"id":8618,"nodeType":"ParameterList","parameters":[],"src":"3270:0:31"},"scope":9627,"src":"2997:1138:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8973,"nodeType":"Block","src":"4340:2871:31","statements":[{"assignments":[8710,8713],"declarations":[{"constant":false,"id":8710,"mutability":"mutable","name":"phaseIndex","nameLocation":"4397:10:31","nodeType":"VariableDeclaration","scope":8973,"src":"4389:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8709,"name":"uint256","nodeType":"ElementaryTypeName","src":"4389:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8713,"mutability":"mutable","name":"currentPhase","nameLocation":"4423:12:31","nodeType":"VariableDeclaration","scope":8973,"src":"4409:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"},"typeName":{"id":8712,"nodeType":"UserDefinedTypeName","pathNode":{"id":8711,"name":"Phase","nameLocations":["4409:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"4409:5:31"},"referencedDeclaration":8474,"src":"4409:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"}},"visibility":"internal"}],"id":8716,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8714,"name":"_getActivePhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9033,"src":"4439:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_struct$_Phase_$8474_storage_ptr_$","typeString":"function () view returns (uint256,struct LaunchNFTV2.Phase storage pointer)"}},"id":8715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4439:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_struct$_Phase_$8474_storage_ptr_$","typeString":"tuple(uint256,struct LaunchNFTV2.Phase storage pointer)"}},"nodeType":"VariableDeclarationStatement","src":"4388:68:31"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"id":8721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8717,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"4521:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4534:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"4521:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8719,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"4547:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":8720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4557:9:31","memberName":"WHITELIST","nodeType":"MemberAccess","referencedDeclaration":8452,"src":"4547:19:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"4521:45:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8746,"nodeType":"IfStatement","src":"4517:242:31","trueBody":{"id":8745,"nodeType":"Block","src":"4568:191:31","statements":[{"assignments":[8723],"declarations":[{"constant":false,"id":8723,"mutability":"mutable","name":"leaf","nameLocation":"4584:4:31","nodeType":"VariableDeclaration","scope":8745,"src":"4576:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4576:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8731,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":8727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4618:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4622:6:31","memberName":"sender","nodeType":"MemberAccess","src":"4618:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8725,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4601:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4605:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"4601:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4601:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8724,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4591:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4591:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4576:54:31"},{"condition":{"id":8739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4642:63:31","subExpression":{"arguments":[{"id":8734,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"4662:11:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"expression":{"id":8735,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"4675:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4688:10:31","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":8473,"src":"4675:23:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8737,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8723,"src":"4700:4:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8732,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"4643:11:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$4800_$","typeString":"type(library MerkleProof)"}},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4655:6:31","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":3756,"src":"4643:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4643:62:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8744,"nodeType":"IfStatement","src":"4638:115:31","trueBody":{"id":8743,"nodeType":"Block","src":"4707:46:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8740,"name":"InvalidMerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"4724:18:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4724:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8742,"nodeType":"RevertStatement","src":"4717:27:31"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8747,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8701,"src":"4793:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8748,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4804:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4810:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"4804:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4793:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8754,"nodeType":"IfStatement","src":"4789:57:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8751,"name":"SignatureExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"4828:16:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4828:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8753,"nodeType":"RevertStatement","src":"4821:25:31"}},{"assignments":[8756],"declarations":[{"constant":false,"id":8756,"mutability":"mutable","name":"structHash","nameLocation":"4941:10:31","nodeType":"VariableDeclaration","scope":8973,"src":"4933:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4933:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8781,"initialValue":{"arguments":[{"arguments":[{"id":8760,"name":"MINT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8481,"src":"4991:13:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5014:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5018:6:31","memberName":"sender","nodeType":"MemberAccess","src":"5014:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8763,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8697,"src":"5034:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":8767,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"5067:3:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5061:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8765,"name":"bytes","nodeType":"ElementaryTypeName","src":"5061:5:31","typeDescriptions":{}}},"id":8768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5061:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":8764,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5051:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5051:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8770,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5082:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5095:5:31","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":8459,"src":"5082:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8772,"name":"phaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"5168:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5231:20:31","subExpression":{"baseExpression":{"id":8773,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"5231:6:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8776,"indexExpression":{"expression":{"id":8774,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5238:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5242:6:31","memberName":"sender","nodeType":"MemberAccess","src":"5238:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5231:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8778,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8701,"src":"5261:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8758,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4971:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4975:6:31","memberName":"encode","nodeType":"MemberAccess","src":"4971:10:31","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4971:306:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8757,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4954:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4954:329:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4933:350:31"},{"assignments":[8783],"declarations":[{"constant":false,"id":8783,"mutability":"mutable","name":"hash","nameLocation":"5298:4:31","nodeType":"VariableDeclaration","scope":8973,"src":"5290:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8787,"initialValue":{"arguments":[{"id":8785,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"5322:10:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8784,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"5305:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":8786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5305:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5290:43:31"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8790,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8703,"src":"5356:9:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":8788,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8783,"src":"5343:4:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:7:31","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3216,"src":"5343:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5343:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8792,"name":"backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"5370:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5343:40:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8797,"nodeType":"IfStatement","src":"5339:71:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8794,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"5392:16:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5392:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8796,"nodeType":"RevertStatement","src":"5385:25:31"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8798,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5474:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5478:5:31","memberName":"value","nodeType":"MemberAccess","src":"5474:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8800,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5487:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5500:5:31","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":8459,"src":"5487:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5474:31:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8806,"nodeType":"IfStatement","src":"5470:59:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8803,"name":"PriceMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"5514:13:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8805,"nodeType":"RevertStatement","src":"5507:22:31"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8807,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5619:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5632:9:31","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8465,"src":"5619:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5645:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5619:27:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8811,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5656:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5669:13:31","memberName":"mintedInPhase","nodeType":"MemberAccess","referencedDeclaration":8471,"src":"5656:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8813,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5686:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5699:9:31","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8465,"src":"5686:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5656:52:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5619:89:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8821,"nodeType":"IfStatement","src":"5608:149:31","trueBody":{"id":8820,"nodeType":"Block","src":"5715:42:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8817,"name":"ExceedsPhaseSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"5730:18:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8819,"nodeType":"RevertStatement","src":"5723:27:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5837:87:31","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"id":8826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8822,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5839:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5852:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"5839:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8824,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"5865:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":8825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5875:6:31","memberName":"PUBLIC","nodeType":"MemberAccess","referencedDeclaration":8453,"src":"5865:16:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"5839:42:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8827,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5893:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5906:12:31","memberName":"maxPerWallet","nodeType":"MemberAccess","referencedDeclaration":8467,"src":"5893:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5922:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5893:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5839:84:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":8832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5838:86:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":8834,"name":"mintedPerWalletInPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"5934:22:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8454_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV2.PhaseType => uint256))"}},"id":8837,"indexExpression":{"expression":{"id":8835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5957:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5961:6:31","memberName":"sender","nodeType":"MemberAccess","src":"5957:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5934:34:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PhaseType_$8454_$_t_uint256_$","typeString":"mapping(enum LaunchNFTV2.PhaseType => uint256)"}},"id":8840,"indexExpression":{"expression":{"id":8838,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5969:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5982:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"5969:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5934:58:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8841,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"6002:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6015:12:31","memberName":"maxPerWallet","nodeType":"MemberAccess","referencedDeclaration":8467,"src":"6002:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5934:93:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5837:190:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8849,"nodeType":"IfStatement","src":"5826:250:31","trueBody":{"id":8848,"nodeType":"Block","src":"6034:42:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8845,"name":"ExceedsWalletLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8577,"src":"6049:18:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6049:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8847,"nodeType":"RevertStatement","src":"6042:27:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6177:90:31","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8850,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"6179:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6192:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"6179:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8852,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"6205:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":8853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6215:6:31","memberName":"PUBLIC","nodeType":"MemberAccess","referencedDeclaration":8453,"src":"6205:16:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"6179:42:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8855,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"6233:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6246:15:31","memberName":"maxMintPerPhase","nodeType":"MemberAccess","referencedDeclaration":8469,"src":"6233:28:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6265:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6233:33:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6179:87:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":8860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6178:89:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8862,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"6277:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6290:13:31","memberName":"mintedInPhase","nodeType":"MemberAccess","referencedDeclaration":8471,"src":"6277:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8864,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"6307:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6320:15:31","memberName":"maxMintPerPhase","nodeType":"MemberAccess","referencedDeclaration":8469,"src":"6307:28:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6277:58:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6177:158:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8872,"nodeType":"IfStatement","src":"6166:218:31","trueBody":{"id":8871,"nodeType":"Block","src":"6342:42:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8868,"name":"ExceedsPhaseSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"6357:18:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6357:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8870,"nodeType":"RevertStatement","src":"6350:27:31"}]}},{"assignments":[8874],"declarations":[{"constant":false,"id":8874,"mutability":"mutable","name":"platformFeeAmount","nameLocation":"6418:17:31","nodeType":"VariableDeclaration","scope":8973,"src":"6410:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8873,"name":"uint256","nodeType":"ElementaryTypeName","src":"6410:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8882,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8875,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6439:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6443:5:31","memberName":"value","nodeType":"MemberAccess","src":"6439:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8877,"name":"platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"6451:21:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6439:33:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6438:35:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":8880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6476:5:31","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"6438:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6410:71:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8883,"name":"platformFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8874,"src":"6492:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6512:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6492:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8902,"nodeType":"IfStatement","src":"6488:177:31","trueBody":{"id":8901,"nodeType":"Block","src":"6515:150:31","statements":[{"assignments":[8887,null],"declarations":[{"constant":false,"id":8887,"mutability":"mutable","name":"success","nameLocation":"6529:7:31","nodeType":"VariableDeclaration","scope":8901,"src":"6524:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8886,"name":"bool","nodeType":"ElementaryTypeName","src":"6524:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8894,"initialValue":{"arguments":[{"hexValue":"","id":8892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6603:2:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":8888,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"6542:20:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:4:31","memberName":"call","nodeType":"MemberAccess","src":"6542:25:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8890,"name":"platformFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8874,"src":"6575:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6542:51:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6542:71:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6523:90:31"},{"condition":{"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6625:8:31","subExpression":{"id":8895,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"6626:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8900,"nodeType":"IfStatement","src":"6621:37:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8897,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"6642:14:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6642:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8899,"nodeType":"RevertStatement","src":"6635:23:31"}}]}},{"assignments":[8904],"declarations":[{"constant":false,"id":8904,"mutability":"mutable","name":"remainingAmount","nameLocation":"6679:15:31","nodeType":"VariableDeclaration","scope":8973,"src":"6671:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8903,"name":"uint256","nodeType":"ElementaryTypeName","src":"6671:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8909,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8905,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6697:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6701:5:31","memberName":"value","nodeType":"MemberAccess","src":"6697:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8907,"name":"platformFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8874,"src":"6709:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6697:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6671:55:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8910,"name":"remainingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8904,"src":"6736:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6754:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6736:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8930,"nodeType":"IfStatement","src":"6732:144:31","trueBody":{"id":8929,"nodeType":"Block","src":"6757:119:31","statements":[{"assignments":[8914,null],"declarations":[{"constant":false,"id":8914,"mutability":"mutable","name":"success","nameLocation":"6771:7:31","nodeType":"VariableDeclaration","scope":8929,"src":"6766:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8913,"name":"bool","nodeType":"ElementaryTypeName","src":"6766:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8922,"initialValue":{"arguments":[{"hexValue":"","id":8920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6821:2:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8915,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"6784:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6792:4:31","memberName":"call","nodeType":"MemberAccess","src":"6784:12:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8918,"name":"remainingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8904,"src":"6804:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6784:36:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6765:59:31"},{"condition":{"id":8924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6836:8:31","subExpression":{"id":8923,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"6837:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8928,"nodeType":"IfStatement","src":"6832:37:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8925,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"6853:14:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6853:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8927,"nodeType":"RevertStatement","src":"6846:23:31"}}]}},{"expression":{"id":8934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6916:28:31","subExpression":{"expression":{"id":8931,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"6916:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6929:13:31","memberName":"mintedInPhase","nodeType":"MemberAccess","referencedDeclaration":8471,"src":"6916:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8935,"nodeType":"ExpressionStatement","src":"6916:28:31"},{"expression":{"id":8943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6950:60:31","subExpression":{"baseExpression":{"baseExpression":{"id":8936,"name":"mintedPerWalletInPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"6950:22:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8454_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV2.PhaseType => uint256))"}},"id":8941,"indexExpression":{"expression":{"id":8937,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6973:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6977:6:31","memberName":"sender","nodeType":"MemberAccess","src":"6973:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6950:34:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PhaseType_$8454_$_t_uint256_$","typeString":"mapping(enum LaunchNFTV2.PhaseType => uint256)"}},"id":8942,"indexExpression":{"expression":{"id":8939,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"6985:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6998:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"6985:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6950:58:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8944,"nodeType":"ExpressionStatement","src":"6950:60:31"},{"expression":{"arguments":[{"expression":{"id":8946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7045:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7049:6:31","memberName":"sender","nodeType":"MemberAccess","src":"7045:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8948,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8697,"src":"7057:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8945,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[996,1026],"referencedDeclaration":996,"src":"7035:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7035:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8950,"nodeType":"ExpressionStatement","src":"7035:30:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8953,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"7081:3:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7075:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8951,"name":"bytes","nodeType":"ElementaryTypeName","src":"7075:5:31","typeDescriptions":{}}},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7075:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7086:6:31","memberName":"length","nodeType":"MemberAccess","src":"7075:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7095:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7075:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8964,"nodeType":"IfStatement","src":"7071:68:31","trueBody":{"id":8963,"nodeType":"Block","src":"7098:41:31","statements":[{"expression":{"arguments":[{"id":8959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8697,"src":"7119:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8960,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"7128:3:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8958,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"7106:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":8961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8962,"nodeType":"ExpressionStatement","src":"7106:26:31"}]}},{"eventCall":{"arguments":[{"id":8966,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8697,"src":"7162:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8967,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7171:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7175:6:31","memberName":"sender","nodeType":"MemberAccess","src":"7171:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8969,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"7183:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":8970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7196:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"7183:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}],"id":8965,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8511,"src":"7150:11:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_PhaseType_$8454_$returns$__$","typeString":"function (uint256,address,enum LaunchNFTV2.PhaseType)"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7150:56:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8972,"nodeType":"EmitStatement","src":"7145:61:31"}]},"functionSelector":"ee5f4f13","id":8974,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"4148:4:31","nodeType":"FunctionDefinition","parameters":{"id":8707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8697,"mutability":"mutable","name":"tokenId","nameLocation":"4166:7:31","nodeType":"VariableDeclaration","scope":8974,"src":"4158:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8696,"name":"uint256","nodeType":"ElementaryTypeName","src":"4158:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8699,"mutability":"mutable","name":"uri","nameLocation":"4195:3:31","nodeType":"VariableDeclaration","scope":8974,"src":"4179:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":8698,"name":"string","nodeType":"ElementaryTypeName","src":"4179:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8701,"mutability":"mutable","name":"deadline","nameLocation":"4212:8:31","nodeType":"VariableDeclaration","scope":8974,"src":"4204:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8700,"name":"uint256","nodeType":"ElementaryTypeName","src":"4204:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8703,"mutability":"mutable","name":"signature","nameLocation":"4241:9:31","nodeType":"VariableDeclaration","scope":8974,"src":"4226:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8702,"name":"bytes","nodeType":"ElementaryTypeName","src":"4226:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8706,"mutability":"mutable","name":"merkleProof","nameLocation":"4275:11:31","nodeType":"VariableDeclaration","scope":8974,"src":"4256:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4256:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8705,"nodeType":"ArrayTypeName","src":"4256:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4152:170:31"},"returnParameters":{"id":8708,"nodeType":"ParameterList","parameters":[],"src":"4340:0:31"},"scope":9627,"src":"4139:3072:31","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9032,"nodeType":"Block","src":"7320:331:31","statements":[{"assignments":[8983],"declarations":[{"constant":false,"id":8983,"mutability":"mutable","name":"timestamp","nameLocation":"7334:9:31","nodeType":"VariableDeclaration","scope":9032,"src":"7326:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8982,"name":"uint256","nodeType":"ElementaryTypeName","src":"7326:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8986,"initialValue":{"expression":{"id":8984,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7346:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7352:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"7346:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7326:35:31"},{"body":{"id":9027,"nodeType":"Block","src":"7412:206:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8998,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"7433:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9000,"indexExpression":{"id":8999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"7440:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7433:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}},"id":9001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7443:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"7433:19:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":9002,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"7456:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":9003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7466:11:31","memberName":"NOT_STARTED","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"7456:21:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"7433:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9005,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8983,"src":"7489:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":9006,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"7502:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9008,"indexExpression":{"id":9007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"7509:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7502:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}},"id":9009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7512:9:31","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":8461,"src":"7502:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7489:32:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7433:88:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9012,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8983,"src":"7533:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":9013,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"7546:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9015,"indexExpression":{"id":9014,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"7553:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7546:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}},"id":9016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7556:7:31","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8463,"src":"7546:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7533:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7433:130:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9026,"nodeType":"IfStatement","src":"7420:192:31","trueBody":{"id":9025,"nodeType":"Block","src":"7572:40:31","statements":[{"expression":{"components":[{"id":9019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"7590:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":9020,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"7593:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9022,"indexExpression":{"id":9021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"7600:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7593:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}}],"id":9023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7589:14:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_struct$_Phase_$8474_storage_$","typeString":"tuple(uint256,struct LaunchNFTV2.Phase storage ref)"}},"functionReturnParameters":8981,"id":9024,"nodeType":"Return","src":"7582:21:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"7388:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8992,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"7392:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":8993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7399:6:31","memberName":"length","nodeType":"MemberAccess","src":"7392:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7388:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9028,"initializationExpression":{"assignments":[8988],"declarations":[{"constant":false,"id":8988,"mutability":"mutable","name":"i","nameLocation":"7381:1:31","nodeType":"VariableDeclaration","scope":9028,"src":"7373:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7373:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8990,"initialValue":{"hexValue":"30","id":8989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7385:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7373:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7407:3:31","subExpression":{"id":8995,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"7407:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8997,"nodeType":"ExpressionStatement","src":"7407:3:31"},"nodeType":"ForStatement","src":"7368:250:31"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9029,"name":"NoActivePhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8591,"src":"7631:13:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7631:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9031,"nodeType":"RevertStatement","src":"7624:22:31"}]},"id":9033,"implemented":true,"kind":"function","modifiers":[],"name":"_getActivePhase","nameLocation":"7224:15:31","nodeType":"FunctionDefinition","parameters":{"id":8975,"nodeType":"ParameterList","parameters":[],"src":"7239:2:31"},"returnParameters":{"id":8981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8977,"mutability":"mutable","name":"phaseIndex","nameLocation":"7285:10:31","nodeType":"VariableDeclaration","scope":9033,"src":"7277:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8976,"name":"uint256","nodeType":"ElementaryTypeName","src":"7277:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8980,"mutability":"mutable","name":"phase","nameLocation":"7311:5:31","nodeType":"VariableDeclaration","scope":9033,"src":"7297:19:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"},"typeName":{"id":8979,"nodeType":"UserDefinedTypeName","pathNode":{"id":8978,"name":"Phase","nameLocations":["7297:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"7297:5:31"},"referencedDeclaration":8474,"src":"7297:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"}},"visibility":"internal"}],"src":"7276:41:31"},"scope":9627,"src":"7215:436:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9044,"nodeType":"Block","src":"7758:35:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9041,"name":"_getActivePhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9033,"src":"7771:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_struct$_Phase_$8474_storage_ptr_$","typeString":"function () view returns (uint256,struct LaunchNFTV2.Phase storage pointer)"}},"id":9042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7771:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_struct$_Phase_$8474_storage_ptr_$","typeString":"tuple(uint256,struct LaunchNFTV2.Phase storage pointer)"}},"functionReturnParameters":9040,"id":9043,"nodeType":"Return","src":"7764:24:31"}]},"functionSelector":"1ce97fd1","id":9045,"implemented":true,"kind":"function","modifiers":[],"name":"getActivePhase","nameLocation":"7664:14:31","nodeType":"FunctionDefinition","parameters":{"id":9034,"nodeType":"ParameterList","parameters":[],"src":"7678:2:31"},"returnParameters":{"id":9040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9036,"mutability":"mutable","name":"phaseIndex","nameLocation":"7724:10:31","nodeType":"VariableDeclaration","scope":9045,"src":"7716:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9035,"name":"uint256","nodeType":"ElementaryTypeName","src":"7716:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9039,"mutability":"mutable","name":"phase","nameLocation":"7749:5:31","nodeType":"VariableDeclaration","scope":9045,"src":"7736:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase"},"typeName":{"id":9038,"nodeType":"UserDefinedTypeName","pathNode":{"id":9037,"name":"Phase","nameLocations":["7736:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"7736:5:31"},"referencedDeclaration":8474,"src":"7736:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"}},"visibility":"internal"}],"src":"7715:40:31"},"scope":9627,"src":"7655:138:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9185,"nodeType":"Block","src":"8036:1556:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9068,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9052,"src":"8050:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9069,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9054,"src":"8063:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8050:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074696d652072616e6765","id":9071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8073:20:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc","typeString":"literal_string \"Invalid time range\""},"value":"Invalid time range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc","typeString":"literal_string \"Invalid time range\""}],"id":9067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8042:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8042:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9073,"nodeType":"ExpressionStatement","src":"8042:52:31"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9074,"name":"_phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"8185:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9075,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"8199:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":9076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8209:6:31","memberName":"PUBLIC","nodeType":"MemberAccess","referencedDeclaration":8453,"src":"8199:16:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"8185:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9103,"nodeType":"Block","src":"8306:310:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9080,"name":"_maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"8322:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8338:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8322:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d6178207065722077616c6c657420666f72206e6f6e2d7075626c6963207068617365","id":9083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8341:45:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3","typeString":"literal_string \"Invalid max per wallet for non-public phase\""},"value":"Invalid max per wallet for non-public phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3","typeString":"literal_string \"Invalid max per wallet for non-public phase\""}],"id":9079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8314:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8314:73:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9085,"nodeType":"ExpressionStatement","src":"8314:73:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9087,"name":"_maxMintPerPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"8412:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8431:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8412:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d6178206d696e742070657220706861736520666f72206e6f6e2d7075626c6963207068617365","id":9090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8442:49:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c","typeString":"literal_string \"Invalid max mint per phase for non-public phase\""},"value":"Invalid max mint per phase for non-public phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c","typeString":"literal_string \"Invalid max mint per phase for non-public phase\""}],"id":9086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8395:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8395:104:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9092,"nodeType":"ExpressionStatement","src":"8395:104:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9094,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9062,"src":"8524:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8547:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8539:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8539:7:31","typeDescriptions":{}}},"id":9098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8539:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8524:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6520726f6f7420726571756972656420666f722077686974656c697374207068617365","id":9100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8559:42:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef","typeString":"literal_string \"Merkle root required for whitelist phase\""},"value":"Merkle root required for whitelist phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef","typeString":"literal_string \"Merkle root required for whitelist phase\""}],"id":9093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8507:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8507:102:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9102,"nodeType":"ExpressionStatement","src":"8507:102:31"}]},"id":9104,"nodeType":"IfStatement","src":"8181:435:31","trueBody":{"id":9078,"nodeType":"Block","src":"8217:83:31","statements":[]}},{"body":{"id":9145,"nodeType":"Block","src":"8702:316:31","statements":[{"assignments":[9118],"declarations":[{"constant":false,"id":9118,"mutability":"mutable","name":"existingPhase","nameLocation":"8723:13:31","nodeType":"VariableDeclaration","scope":9145,"src":"8710:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase"},"typeName":{"id":9117,"nodeType":"UserDefinedTypeName","pathNode":{"id":9116,"name":"Phase","nameLocations":["8710:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"8710:5:31"},"referencedDeclaration":8474,"src":"8710:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"}},"visibility":"internal"}],"id":9122,"initialValue":{"baseExpression":{"id":9119,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"8739:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9121,"indexExpression":{"id":9120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9106,"src":"8746:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8739:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8710:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9123,"name":"existingPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"8760:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}},"id":9124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8774:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"8760:23:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9125,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"8787:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":9126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8797:11:31","memberName":"NOT_STARTED","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"8787:21:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"8760:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9129,"nodeType":"IfStatement","src":"8756:62:31","trueBody":{"id":9128,"nodeType":"Continue","src":"8810:8:31"}},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9130,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9052,"src":"8873:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9131,"name":"existingPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"8887:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}},"id":9132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8901:7:31","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8463,"src":"8887:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8873:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9134,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9054,"src":"8922:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9135,"name":"existingPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"8934:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}},"id":9136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8948:9:31","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":8461,"src":"8934:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8922:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8873:84:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8872:86:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9144,"nodeType":"IfStatement","src":"8859:153:31","trueBody":{"id":9143,"nodeType":"Block","src":"8967:45:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9140,"name":"OverlappingPhases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8589,"src":"8984:17:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8984:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9142,"nodeType":"RevertStatement","src":"8977:26:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9106,"src":"8678:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9110,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"8682:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8689:6:31","memberName":"length","nodeType":"MemberAccess","src":"8682:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8678:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9146,"initializationExpression":{"assignments":[9106],"declarations":[{"constant":false,"id":9106,"mutability":"mutable","name":"i","nameLocation":"8671:1:31","nodeType":"VariableDeclaration","scope":9146,"src":"8663:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9105,"name":"uint256","nodeType":"ElementaryTypeName","src":"8663:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9108,"initialValue":{"hexValue":"30","id":9107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8675:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8663:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8697:3:31","subExpression":{"id":9113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9106,"src":"8697:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9115,"nodeType":"ExpressionStatement","src":"8697:3:31"},"nodeType":"ForStatement","src":"8658:360:31"},{"assignments":[9149],"declarations":[{"constant":false,"id":9149,"mutability":"mutable","name":"newPhase","nameLocation":"9037:8:31","nodeType":"VariableDeclaration","scope":9185,"src":"9024:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase"},"typeName":{"id":9148,"nodeType":"UserDefinedTypeName","pathNode":{"id":9147,"name":"Phase","nameLocations":["9024:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"9024:5:31"},"referencedDeclaration":8474,"src":"9024:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"}},"visibility":"internal"}],"id":9161,"initialValue":{"arguments":[{"id":9151,"name":"_phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"9073:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},{"id":9152,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9050,"src":"9098:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9153,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9052,"src":"9123:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9154,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9054,"src":"9150:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9155,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9056,"src":"9177:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9156,"name":"_maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"9209:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9157,"name":"_maxMintPerPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"9247:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":9158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9159,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9062,"src":"9307:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9150,"name":"Phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8474,"src":"9048:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Phase_$8474_storage_ptr_$","typeString":"type(struct LaunchNFTV2.Phase storage pointer)"}},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9062:9:31","9091:5:31","9112:9:31","9141:7:31","9166:9:31","9195:12:31","9230:15:31","9271:13:31","9295:10:31"],"names":["phaseType","price","startTime","endTime","maxSupply","maxPerWallet","maxMintPerPhase","mintedInPhase","merkleRoot"],"nodeType":"FunctionCall","src":"9048:277:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}},"nodeType":"VariableDeclarationStatement","src":"9024:301:31"},{"assignments":[9163],"declarations":[{"constant":false,"id":9163,"mutability":"mutable","name":"phaseIndex","nameLocation":"9340:10:31","nodeType":"VariableDeclaration","scope":9185,"src":"9332:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9162,"name":"uint256","nodeType":"ElementaryTypeName","src":"9332:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9166,"initialValue":{"expression":{"id":9164,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"9353:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9360:6:31","memberName":"length","nodeType":"MemberAccess","src":"9353:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9332:34:31"},{"expression":{"arguments":[{"id":9170,"name":"newPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9149,"src":"9384:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}],"expression":{"id":9167,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"9372:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9379:4:31","memberName":"push","nodeType":"MemberAccess","src":"9372:11:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Phase_$8474_storage_$dyn_storage_ptr_$_t_struct$_Phase_$8474_storage_$returns$__$attached_to$_t_array$_t_struct$_Phase_$8474_storage_$dyn_storage_ptr_$","typeString":"function (struct LaunchNFTV2.Phase storage ref[] storage pointer,struct LaunchNFTV2.Phase storage ref)"}},"id":9171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9372:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9172,"nodeType":"ExpressionStatement","src":"9372:21:31"},{"eventCall":{"arguments":[{"id":9174,"name":"phaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9163,"src":"9423:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9175,"name":"_phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"9441:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},{"id":9176,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9050,"src":"9459:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9177,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9052,"src":"9473:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9178,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9054,"src":"9491:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9179,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9056,"src":"9507:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9180,"name":"_maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"9525:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9181,"name":"_maxMintPerPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"9546:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9182,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9062,"src":"9570:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9173,"name":"PhaseAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8532,"src":"9405:10:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_PhaseType_$8454_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,enum LaunchNFTV2.PhaseType,uint256,uint256,uint256,uint256,uint256,uint256,bytes32)"}},"id":9183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9405:182:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9184,"nodeType":"EmitStatement","src":"9400:187:31"}]},"functionSelector":"7a989281","id":9186,"implemented":true,"kind":"function","modifiers":[{"id":9065,"kind":"modifierInvocation","modifierName":{"id":9064,"name":"onlyOwner","nameLocations":["8026:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8026:9:31"},"nodeType":"ModifierInvocation","src":"8026:9:31"}],"name":"addPhase","nameLocation":"7806:8:31","nodeType":"FunctionDefinition","parameters":{"id":9063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9048,"mutability":"mutable","name":"_phaseType","nameLocation":"7830:10:31","nodeType":"VariableDeclaration","scope":9186,"src":"7820:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"typeName":{"id":9047,"nodeType":"UserDefinedTypeName","pathNode":{"id":9046,"name":"PhaseType","nameLocations":["7820:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"7820:9:31"},"referencedDeclaration":8454,"src":"7820:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"visibility":"internal"},{"constant":false,"id":9050,"mutability":"mutable","name":"_price","nameLocation":"7854:6:31","nodeType":"VariableDeclaration","scope":9186,"src":"7846:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9049,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9052,"mutability":"mutable","name":"_startTime","nameLocation":"7874:10:31","nodeType":"VariableDeclaration","scope":9186,"src":"7866:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9051,"name":"uint256","nodeType":"ElementaryTypeName","src":"7866:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9054,"mutability":"mutable","name":"_endTime","nameLocation":"7898:8:31","nodeType":"VariableDeclaration","scope":9186,"src":"7890:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9053,"name":"uint256","nodeType":"ElementaryTypeName","src":"7890:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9056,"mutability":"mutable","name":"_maxSupply","nameLocation":"7920:10:31","nodeType":"VariableDeclaration","scope":9186,"src":"7912:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9055,"name":"uint256","nodeType":"ElementaryTypeName","src":"7912:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9058,"mutability":"mutable","name":"_maxPerWallet","nameLocation":"7944:13:31","nodeType":"VariableDeclaration","scope":9186,"src":"7936:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9057,"name":"uint256","nodeType":"ElementaryTypeName","src":"7936:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9060,"mutability":"mutable","name":"_maxMintPerPhase","nameLocation":"7971:16:31","nodeType":"VariableDeclaration","scope":9186,"src":"7963:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9059,"name":"uint256","nodeType":"ElementaryTypeName","src":"7963:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9062,"mutability":"mutable","name":"_merkleRoot","nameLocation":"8001:11:31","nodeType":"VariableDeclaration","scope":9186,"src":"7993:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7993:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7814:202:31"},"returnParameters":{"id":9066,"nodeType":"ParameterList","parameters":[],"src":"8036:0:31"},"scope":9627,"src":"7797:1795:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9370,"nodeType":"Block","src":"9863:1658:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9210,"name":"_phaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"9873:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9211,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"9888:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9895:6:31","memberName":"length","nodeType":"MemberAccess","src":"9888:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9873:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9217,"nodeType":"IfStatement","src":"9869:60:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9214,"name":"InvalidPhaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"9910:17:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9216,"nodeType":"RevertStatement","src":"9903:26:31"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9218,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"9939:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9219,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"9953:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9939:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9224,"nodeType":"IfStatement","src":"9935:62:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9221,"name":"InvalidPhaseConfiguration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"9970:25:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9223,"nodeType":"RevertStatement","src":"9963:34:31"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"id":9228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9225,"name":"_phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9191,"src":"10062:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9226,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"10076:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":9227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10086:6:31","memberName":"PUBLIC","nodeType":"MemberAccess","referencedDeclaration":8453,"src":"10076:16:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"10062:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9254,"nodeType":"Block","src":"10183:215:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9230,"name":"_maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9201,"src":"10195:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10212:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10195:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9236,"nodeType":"IfStatement","src":"10191:58:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9233,"name":"InvalidPhaseConfiguration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"10222:25:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10222:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9235,"nodeType":"RevertStatement","src":"10215:34:31"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9237,"name":"_maxMintPerPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"10261:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10281:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9243,"nodeType":"IfStatement","src":"10257:61:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9240,"name":"InvalidPhaseConfiguration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"10291:25:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10291:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9242,"nodeType":"RevertStatement","src":"10284:34:31"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":9249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9244,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"10330:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10353:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10345:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10345:7:31","typeDescriptions":{}}},"id":9248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10345:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10330:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9253,"nodeType":"IfStatement","src":"10326:65:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9250,"name":"InvalidPhaseConfiguration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"10364:25:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10364:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9252,"nodeType":"RevertStatement","src":"10357:34:31"}}]},"id":9255,"nodeType":"IfStatement","src":"10058:340:31","trueBody":{"id":9229,"nodeType":"Block","src":"10094:83:31","statements":[]}},{"body":{"id":9301,"nodeType":"Block","src":"10484:386:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"10496:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9268,"name":"_phaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"10501:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10496:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9271,"nodeType":"IfStatement","src":"10492:30:31","trueBody":{"id":9270,"nodeType":"Continue","src":"10514:8:31"}},{"assignments":[9274],"declarations":[{"constant":false,"id":9274,"mutability":"mutable","name":"existingPhase","nameLocation":"10575:13:31","nodeType":"VariableDeclaration","scope":9301,"src":"10562:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase"},"typeName":{"id":9273,"nodeType":"UserDefinedTypeName","pathNode":{"id":9272,"name":"Phase","nameLocations":["10562:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"10562:5:31"},"referencedDeclaration":8474,"src":"10562:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"}},"visibility":"internal"}],"id":9278,"initialValue":{"baseExpression":{"id":9275,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"10591:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9277,"indexExpression":{"id":9276,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"10598:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10591:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10562:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9279,"name":"existingPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"10612:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}},"id":9280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10626:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"10612:23:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9281,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"10639:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":9282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10649:11:31","memberName":"NOT_STARTED","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"10639:21:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"10612:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9285,"nodeType":"IfStatement","src":"10608:62:31","trueBody":{"id":9284,"nodeType":"Continue","src":"10662:8:31"}},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9286,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"10725:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9287,"name":"existingPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"10739:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}},"id":9288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10753:7:31","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8463,"src":"10739:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10725:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9290,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"10774:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9291,"name":"existingPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"10786:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_memory_ptr","typeString":"struct LaunchNFTV2.Phase memory"}},"id":9292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10800:9:31","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":8461,"src":"10786:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10774:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10725:84:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10724:86:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9300,"nodeType":"IfStatement","src":"10711:153:31","trueBody":{"id":9299,"nodeType":"Block","src":"10819:45:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9296,"name":"OverlappingPhases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8589,"src":"10836:17:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10836:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9298,"nodeType":"RevertStatement","src":"10829:26:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9260,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"10460:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9261,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"10464:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10471:6:31","memberName":"length","nodeType":"MemberAccess","src":"10464:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10460:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9302,"initializationExpression":{"assignments":[9257],"declarations":[{"constant":false,"id":9257,"mutability":"mutable","name":"i","nameLocation":"10453:1:31","nodeType":"VariableDeclaration","scope":9302,"src":"10445:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9256,"name":"uint256","nodeType":"ElementaryTypeName","src":"10445:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9259,"initialValue":{"hexValue":"30","id":9258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10457:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10445:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10479:3:31","subExpression":{"id":9264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"10479:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9266,"nodeType":"ExpressionStatement","src":"10479:3:31"},"nodeType":"ForStatement","src":"10440:430:31"},{"assignments":[9305],"declarations":[{"constant":false,"id":9305,"mutability":"mutable","name":"phaseToUpdate","nameLocation":"10890:13:31","nodeType":"VariableDeclaration","scope":9370,"src":"10876:27:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"},"typeName":{"id":9304,"nodeType":"UserDefinedTypeName","pathNode":{"id":9303,"name":"Phase","nameLocations":["10876:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8474,"src":"10876:5:31"},"referencedDeclaration":8474,"src":"10876:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase"}},"visibility":"internal"}],"id":9309,"initialValue":{"baseExpression":{"id":9306,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"10906:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9308,"indexExpression":{"id":9307,"name":"_phaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"10913:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10906:19:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10876:49:31"},{"expression":{"id":9314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9310,"name":"phaseToUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"10931:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":9312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10945:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"10931:23:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9313,"name":"_phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9191,"src":"10957:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"10931:36:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"id":9315,"nodeType":"ExpressionStatement","src":"10931:36:31"},{"expression":{"id":9320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9316,"name":"phaseToUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"10973:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":9318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10987:5:31","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":8459,"src":"10973:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9319,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9193,"src":"10995:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10973:28:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9321,"nodeType":"ExpressionStatement","src":"10973:28:31"},{"expression":{"id":9326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9322,"name":"phaseToUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"11007:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":9324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11021:9:31","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":8461,"src":"11007:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9325,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"11033:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11007:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9327,"nodeType":"ExpressionStatement","src":"11007:36:31"},{"expression":{"id":9332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9328,"name":"phaseToUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"11049:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":9330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11063:7:31","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8463,"src":"11049:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9331,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"11073:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11049:32:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9333,"nodeType":"ExpressionStatement","src":"11049:32:31"},{"expression":{"id":9338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9334,"name":"phaseToUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"11087:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":9336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11101:9:31","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8465,"src":"11087:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9337,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"11113:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11087:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9339,"nodeType":"ExpressionStatement","src":"11087:36:31"},{"expression":{"id":9344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9340,"name":"phaseToUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"11129:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":9342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11143:12:31","memberName":"maxPerWallet","nodeType":"MemberAccess","referencedDeclaration":8467,"src":"11129:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9343,"name":"_maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9201,"src":"11158:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11129:42:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9345,"nodeType":"ExpressionStatement","src":"11129:42:31"},{"expression":{"id":9350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9346,"name":"phaseToUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"11177:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":9348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11191:15:31","memberName":"maxMintPerPhase","nodeType":"MemberAccess","referencedDeclaration":8469,"src":"11177:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9349,"name":"_maxMintPerPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"11209:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11177:48:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9351,"nodeType":"ExpressionStatement","src":"11177:48:31"},{"expression":{"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9352,"name":"phaseToUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"11231:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage_ptr","typeString":"struct LaunchNFTV2.Phase storage pointer"}},"id":9354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11245:10:31","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":8473,"src":"11231:24:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9355,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"11258:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11231:38:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9357,"nodeType":"ExpressionStatement","src":"11231:38:31"},{"eventCall":{"arguments":[{"id":9359,"name":"_phaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"11351:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9360,"name":"_phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9191,"src":"11370:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},{"id":9361,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9193,"src":"11388:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9362,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"11402:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9363,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"11420:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9364,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"11436:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9365,"name":"_maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9201,"src":"11454:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9366,"name":"_maxMintPerPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"11475:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9367,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"11499:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9358,"name":"PhaseUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"11331:12:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_PhaseType_$8454_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,enum LaunchNFTV2.PhaseType,uint256,uint256,uint256,uint256,uint256,uint256,bytes32)"}},"id":9368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11331:185:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9369,"nodeType":"EmitStatement","src":"11326:190:31"}]},"functionSelector":"a4836c11","id":9371,"implemented":true,"kind":"function","modifiers":[{"id":9208,"kind":"modifierInvocation","modifierName":{"id":9207,"name":"onlyOwner","nameLocations":["9853:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9853:9:31"},"nodeType":"ModifierInvocation","src":"9853:9:31"}],"name":"updatePhase","nameLocation":"9605:11:31","nodeType":"FunctionDefinition","parameters":{"id":9206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9188,"mutability":"mutable","name":"_phaseIndex","nameLocation":"9630:11:31","nodeType":"VariableDeclaration","scope":9371,"src":"9622:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9187,"name":"uint256","nodeType":"ElementaryTypeName","src":"9622:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9191,"mutability":"mutable","name":"_phaseType","nameLocation":"9657:10:31","nodeType":"VariableDeclaration","scope":9371,"src":"9647:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"typeName":{"id":9190,"nodeType":"UserDefinedTypeName","pathNode":{"id":9189,"name":"PhaseType","nameLocations":["9647:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"9647:9:31"},"referencedDeclaration":8454,"src":"9647:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"visibility":"internal"},{"constant":false,"id":9193,"mutability":"mutable","name":"_price","nameLocation":"9681:6:31","nodeType":"VariableDeclaration","scope":9371,"src":"9673:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9192,"name":"uint256","nodeType":"ElementaryTypeName","src":"9673:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9195,"mutability":"mutable","name":"_startTime","nameLocation":"9701:10:31","nodeType":"VariableDeclaration","scope":9371,"src":"9693:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9194,"name":"uint256","nodeType":"ElementaryTypeName","src":"9693:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9197,"mutability":"mutable","name":"_endTime","nameLocation":"9725:8:31","nodeType":"VariableDeclaration","scope":9371,"src":"9717:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9196,"name":"uint256","nodeType":"ElementaryTypeName","src":"9717:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9199,"mutability":"mutable","name":"_maxSupply","nameLocation":"9747:10:31","nodeType":"VariableDeclaration","scope":9371,"src":"9739:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9198,"name":"uint256","nodeType":"ElementaryTypeName","src":"9739:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9201,"mutability":"mutable","name":"_maxPerWallet","nameLocation":"9771:13:31","nodeType":"VariableDeclaration","scope":9371,"src":"9763:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9200,"name":"uint256","nodeType":"ElementaryTypeName","src":"9763:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9203,"mutability":"mutable","name":"_maxMintPerPhase","nameLocation":"9798:16:31","nodeType":"VariableDeclaration","scope":9371,"src":"9790:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9202,"name":"uint256","nodeType":"ElementaryTypeName","src":"9790:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9205,"mutability":"mutable","name":"_merkleRoot","nameLocation":"9828:11:31","nodeType":"VariableDeclaration","scope":9371,"src":"9820:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9820:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9616:227:31"},"returnParameters":{"id":9209,"nodeType":"ParameterList","parameters":[],"src":"9863:0:31"},"scope":9627,"src":"9596:1925:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9410,"nodeType":"Block","src":"11626:291:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9381,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"11640:14:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":9382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11658:4:31","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"11640:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6174666f726d206665652063616e6e6f742065786365656420313025","id":9384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11664:32:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270","typeString":"literal_string \"Platform fee cannot exceed 10%\""},"value":"Platform fee cannot exceed 10%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270","typeString":"literal_string \"Platform fee cannot exceed 10%\""}],"id":9380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11632:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11632:65:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9386,"nodeType":"ExpressionStatement","src":"11632:65:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9388,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"11711:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11736:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11728:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9389,"name":"address","nodeType":"ElementaryTypeName","src":"11728:7:31","typeDescriptions":{}}},"id":9392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11728:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11711:27:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066656520726563697069656e74","id":9394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11740:23:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361","typeString":"literal_string \"Invalid fee recipient\""},"value":"Invalid fee recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361","typeString":"literal_string \"Invalid fee recipient\""}],"id":9387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11703:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11703:61:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9396,"nodeType":"ExpressionStatement","src":"11703:61:31"},{"expression":{"id":9399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9397,"name":"platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"11771:21:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9398,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"11795:14:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11771:38:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":9400,"nodeType":"ExpressionStatement","src":"11771:38:31"},{"expression":{"id":9403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9401,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"11815:20:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9402,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"11838:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11815:36:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9404,"nodeType":"ExpressionStatement","src":"11815:36:31"},{"eventCall":{"arguments":[{"id":9406,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"11882:14:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9407,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"11898:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9405,"name":"PlatformFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8559,"src":"11863:18:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint96_$_t_address_$returns$__$","typeString":"function (uint96,address)"}},"id":9408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11863:49:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9409,"nodeType":"EmitStatement","src":"11858:54:31"}]},"functionSelector":"decc4a6a","id":9411,"implemented":true,"kind":"function","modifiers":[{"id":9378,"kind":"modifierInvocation","modifierName":{"id":9377,"name":"onlyOwner","nameLocations":["11616:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11616:9:31"},"nodeType":"ModifierInvocation","src":"11616:9:31"}],"name":"setPlatformFee","nameLocation":"11534:14:31","nodeType":"FunctionDefinition","parameters":{"id":9376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9373,"mutability":"mutable","name":"_feePercentage","nameLocation":"11561:14:31","nodeType":"VariableDeclaration","scope":9411,"src":"11554:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9372,"name":"uint96","nodeType":"ElementaryTypeName","src":"11554:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9375,"mutability":"mutable","name":"_feeRecipient","nameLocation":"11589:13:31","nodeType":"VariableDeclaration","scope":9411,"src":"11581:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9374,"name":"address","nodeType":"ElementaryTypeName","src":"11581:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11548:58:31"},"returnParameters":{"id":9379,"nodeType":"ParameterList","parameters":[],"src":"11626:0:31"},"scope":9627,"src":"11525:392:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9453,"nodeType":"Block","src":"12029:250:31","statements":[{"assignments":[9417],"declarations":[{"constant":false,"id":9417,"mutability":"mutable","name":"balance","nameLocation":"12043:7:31","nodeType":"VariableDeclaration","scope":9453,"src":"12035:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9416,"name":"uint256","nodeType":"ElementaryTypeName","src":"12035:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9423,"initialValue":{"expression":{"arguments":[{"id":9420,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12061:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_LaunchNFTV2_$9627","typeString":"contract LaunchNFTV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LaunchNFTV2_$9627","typeString":"contract LaunchNFTV2"}],"id":9419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12053:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9418,"name":"address","nodeType":"ElementaryTypeName","src":"12053:7:31","typeDescriptions":{}}},"id":9421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12053:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12067:7:31","memberName":"balance","nodeType":"MemberAccess","src":"12053:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12035:39:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9425,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9417,"src":"12088:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12098:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12088:11:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2062616c616e636520746f207769746864726177","id":9428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12101:24:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5","typeString":"literal_string \"No balance to withdraw\""},"value":"No balance to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5","typeString":"literal_string \"No balance to withdraw\""}],"id":9424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12080:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12080:46:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9430,"nodeType":"ExpressionStatement","src":"12080:46:31"},{"assignments":[9432,null],"declarations":[{"constant":false,"id":9432,"mutability":"mutable","name":"success","nameLocation":"12139:7:31","nodeType":"VariableDeclaration","scope":9453,"src":"12134:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9431,"name":"bool","nodeType":"ElementaryTypeName","src":"12134:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9440,"initialValue":{"arguments":[{"hexValue":"","id":9438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12181:2:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9433,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"12152:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12160:4:31","memberName":"call","nodeType":"MemberAccess","src":"12152:12:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":9436,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9417,"src":"12172:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12152:28:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12133:51:31"},{"condition":{"id":9442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12194:8:31","subExpression":{"id":9441,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"12195:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9446,"nodeType":"IfStatement","src":"12190:37:31","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9443,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"12211:14:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12211:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9445,"nodeType":"RevertStatement","src":"12204:23:31"}},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9448,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"12257:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12257:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9450,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9417,"src":"12266:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9447,"name":"WithdrawCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"12239:17:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12239:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9452,"nodeType":"EmitStatement","src":"12234:40:31"}]},"functionSelector":"3ccfd60b","id":9454,"implemented":true,"kind":"function","modifiers":[{"id":9414,"kind":"modifierInvocation","modifierName":{"id":9413,"name":"onlyOwner","nameLocations":["12019:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12019:9:31"},"nodeType":"ModifierInvocation","src":"12019:9:31"}],"name":"withdraw","nameLocation":"11999:8:31","nodeType":"FunctionDefinition","parameters":{"id":9412,"nodeType":"ParameterList","parameters":[],"src":"12007:2:31"},"returnParameters":{"id":9415,"nodeType":"ParameterList","parameters":[],"src":"12029:0:31"},"scope":9627,"src":"11990:289:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[462,1517,1888,2179],"body":{"id":9471,"nodeType":"Block","src":"12469:54:31","statements":[{"expression":{"arguments":[{"id":9468,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9456,"src":"12506:11:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9466,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12482:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LaunchNFTV2_$9627_$","typeString":"type(contract super LaunchNFTV2)"}},"id":9467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12488:17:31","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1517,"src":"12482:23:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":9469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12482:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9465,"id":9470,"nodeType":"Return","src":"12475:43:31"}]},"functionSelector":"01ffc9a7","id":9472,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"12316:17:31","nodeType":"FunctionDefinition","overrides":{"id":9462,"nodeType":"OverrideSpecifier","overrides":[{"id":9458,"name":"ERC721","nameLocations":["12395:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"12395:6:31"},{"id":9459,"name":"ERC721URIStorage","nameLocations":["12403:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"12403:16:31"},{"id":9460,"name":"ERC2981","nameLocations":["12421:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":2369,"src":"12421:7:31"},{"id":9461,"name":"ERC721Enumerable","nameLocations":["12430:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1839,"src":"12430:16:31"}],"src":"12386:61:31"},"parameters":{"id":9457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9456,"mutability":"mutable","name":"interfaceId","nameLocation":"12346:11:31","nodeType":"VariableDeclaration","scope":9472,"src":"12339:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9455,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12339:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12333:28:31"},"returnParameters":{"id":9465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9472,"src":"12461:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9463,"name":"bool","nodeType":"ElementaryTypeName","src":"12461:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12460:6:31"},"scope":9627,"src":"12307:216:31","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[557,1945],"body":{"id":9487,"nodeType":"Block","src":"12641:41:31","statements":[{"expression":{"arguments":[{"id":9484,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"12669:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9482,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12654:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LaunchNFTV2_$9627_$","typeString":"type(contract super LaunchNFTV2)"}},"id":9483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12660:8:31","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1945,"src":"12654:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":9485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12654:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9481,"id":9486,"nodeType":"Return","src":"12647:30:31"}]},"functionSelector":"c87b56dd","id":9488,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"12536:8:31","nodeType":"FunctionDefinition","overrides":{"id":9478,"nodeType":"OverrideSpecifier","overrides":[{"id":9476,"name":"ERC721","nameLocations":["12591:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"12591:6:31"},{"id":9477,"name":"ERC721URIStorage","nameLocations":["12599:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"12599:16:31"}],"src":"12582:34:31"},"parameters":{"id":9475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9474,"mutability":"mutable","name":"tokenId","nameLocation":"12558:7:31","nodeType":"VariableDeclaration","scope":9488,"src":"12550:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9473,"name":"uint256","nodeType":"ElementaryTypeName","src":"12550:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12544:25:31"},"returnParameters":{"id":9481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9488,"src":"12626:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9479,"name":"string","nodeType":"ElementaryTypeName","src":"12626:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12625:15:31"},"scope":9627,"src":"12527:155:31","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[931,1652],"body":{"id":9509,"nodeType":"Block","src":"12824:50:31","statements":[{"expression":{"arguments":[{"id":9504,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"12851:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9505,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9492,"src":"12855:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9506,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9494,"src":"12864:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9502,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12837:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LaunchNFTV2_$9627_$","typeString":"type(contract super LaunchNFTV2)"}},"id":9503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12843:7:31","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1652,"src":"12837:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12837:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9501,"id":9508,"nodeType":"Return","src":"12830:39:31"}]},"id":9510,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"12695:7:31","nodeType":"FunctionDefinition","overrides":{"id":9498,"nodeType":"OverrideSpecifier","overrides":[{"id":9496,"name":"ERC721","nameLocations":["12780:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"12780:6:31"},{"id":9497,"name":"ERC721Enumerable","nameLocations":["12788:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1839,"src":"12788:16:31"}],"src":"12771:34:31"},"parameters":{"id":9495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9490,"mutability":"mutable","name":"to","nameLocation":"12716:2:31","nodeType":"VariableDeclaration","scope":9510,"src":"12708:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9489,"name":"address","nodeType":"ElementaryTypeName","src":"12708:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9492,"mutability":"mutable","name":"tokenId","nameLocation":"12732:7:31","nodeType":"VariableDeclaration","scope":9510,"src":"12724:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9491,"name":"uint256","nodeType":"ElementaryTypeName","src":"12724:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9494,"mutability":"mutable","name":"auth","nameLocation":"12753:4:31","nodeType":"VariableDeclaration","scope":9510,"src":"12745:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9493,"name":"address","nodeType":"ElementaryTypeName","src":"12745:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12702:59:31"},"returnParameters":{"id":9501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9510,"src":"12815:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9499,"name":"address","nodeType":"ElementaryTypeName","src":"12815:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12814:9:31"},"scope":9627,"src":"12686:188:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[841,1838],"body":{"id":9527,"nodeType":"Block","src":"12992:49:31","statements":[{"expression":{"arguments":[{"id":9523,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9512,"src":"13021:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9514,"src":"13030:5:31","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":9520,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12998:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LaunchNFTV2_$9627_$","typeString":"type(contract super LaunchNFTV2)"}},"id":9522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13004:16:31","memberName":"_increaseBalance","nodeType":"MemberAccess","referencedDeclaration":1838,"src":"12998:22:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$","typeString":"function (address,uint128)"}},"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12998:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9526,"nodeType":"ExpressionStatement","src":"12998:38:31"}]},"id":9528,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"12887:16:31","nodeType":"FunctionDefinition","overrides":{"id":9518,"nodeType":"OverrideSpecifier","overrides":[{"id":9516,"name":"ERC721","nameLocations":["12966:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"12966:6:31"},{"id":9517,"name":"ERC721Enumerable","nameLocations":["12974:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1839,"src":"12974:16:31"}],"src":"12957:34:31"},"parameters":{"id":9515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9512,"mutability":"mutable","name":"account","nameLocation":"12917:7:31","nodeType":"VariableDeclaration","scope":9528,"src":"12909:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9511,"name":"address","nodeType":"ElementaryTypeName","src":"12909:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9514,"mutability":"mutable","name":"value","nameLocation":"12938:5:31","nodeType":"VariableDeclaration","scope":9528,"src":"12930:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":9513,"name":"uint128","nodeType":"ElementaryTypeName","src":"12930:7:31","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"12903:44:31"},"returnParameters":{"id":9519,"nodeType":"ParameterList","parameters":[],"src":"12992:0:31"},"scope":9627,"src":"12878:163:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9536,"nodeType":"Block","src":"13127:38:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9533,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"13140:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":9534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9532,"id":9535,"nodeType":"Return","src":"13133:27:31"}]},"functionSelector":"ed24911d","id":9537,"implemented":true,"kind":"function","modifiers":[],"name":"getDomainSeparator","nameLocation":"13074:18:31","nodeType":"FunctionDefinition","parameters":{"id":9529,"nodeType":"ParameterList","parameters":[],"src":"13092:2:31"},"returnParameters":{"id":9532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9537,"src":"13118:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13118:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13117:9:31"},"scope":9627,"src":"13065:100:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9548,"nodeType":"Block","src":"13233:30:31","statements":[{"expression":{"baseExpression":{"id":9544,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"13246:6:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9546,"indexExpression":{"id":9545,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9539,"src":"13253:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13246:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9543,"id":9547,"nodeType":"Return","src":"13239:19:31"}]},"functionSelector":"2d0335ab","id":9549,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"13178:8:31","nodeType":"FunctionDefinition","parameters":{"id":9540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9539,"mutability":"mutable","name":"user","nameLocation":"13195:4:31","nodeType":"VariableDeclaration","scope":9549,"src":"13187:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9538,"name":"address","nodeType":"ElementaryTypeName","src":"13187:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13186:14:31"},"returnParameters":{"id":9543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9549,"src":"13224:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9541,"name":"uint256","nodeType":"ElementaryTypeName","src":"13224:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13223:9:31"},"scope":9627,"src":"13169:94:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9565,"nodeType":"Block","src":"13372:57:31","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":9559,"name":"mintedPerWalletInPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"13385:22:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8454_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV2.PhaseType => uint256))"}},"id":9561,"indexExpression":{"id":9560,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9551,"src":"13408:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13385:28:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PhaseType_$8454_$_t_uint256_$","typeString":"mapping(enum LaunchNFTV2.PhaseType => uint256)"}},"id":9563,"indexExpression":{"id":9562,"name":"phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9554,"src":"13414:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13385:39:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9558,"id":9564,"nodeType":"Return","src":"13378:46:31"}]},"functionSelector":"f7330c2d","id":9566,"implemented":true,"kind":"function","modifiers":[],"name":"getMintedInPhase","nameLocation":"13276:16:31","nodeType":"FunctionDefinition","parameters":{"id":9555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9551,"mutability":"mutable","name":"user","nameLocation":"13306:4:31","nodeType":"VariableDeclaration","scope":9566,"src":"13298:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9550,"name":"address","nodeType":"ElementaryTypeName","src":"13298:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9554,"mutability":"mutable","name":"phaseType","nameLocation":"13326:9:31","nodeType":"VariableDeclaration","scope":9566,"src":"13316:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"typeName":{"id":9553,"nodeType":"UserDefinedTypeName","pathNode":{"id":9552,"name":"PhaseType","nameLocations":["13316:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"13316:9:31"},"referencedDeclaration":8454,"src":"13316:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"visibility":"internal"}],"src":"13292:47:31"},"returnParameters":{"id":9558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9566,"src":"13363:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9556,"name":"uint256","nodeType":"ElementaryTypeName","src":"13363:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13362:9:31"},"scope":9627,"src":"13267:162:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9574,"nodeType":"Block","src":"13490:31:31","statements":[{"expression":{"expression":{"id":9571,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"13503:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13510:6:31","memberName":"length","nodeType":"MemberAccess","src":"13503:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9570,"id":9573,"nodeType":"Return","src":"13496:20:31"}]},"functionSelector":"db5e0063","id":9575,"implemented":true,"kind":"function","modifiers":[],"name":"getPhaseCount","nameLocation":"13442:13:31","nodeType":"FunctionDefinition","parameters":{"id":9567,"nodeType":"ParameterList","parameters":[],"src":"13455:2:31"},"returnParameters":{"id":9570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9575,"src":"13481:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9568,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13480:9:31"},"scope":9627,"src":"13433:88:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9625,"nodeType":"Block","src":"13584:311:31","statements":[{"assignments":[9581],"declarations":[{"constant":false,"id":9581,"mutability":"mutable","name":"timestamp","nameLocation":"13598:9:31","nodeType":"VariableDeclaration","scope":9625,"src":"13590:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9580,"name":"uint256","nodeType":"ElementaryTypeName","src":"13590:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9584,"initialValue":{"expression":{"id":9582,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13610:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13616:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"13610:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13590:35:31"},{"body":{"id":9621,"nodeType":"Block","src":"13676:196:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"},"id":9602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9596,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"13697:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9598,"indexExpression":{"id":9597,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9586,"src":"13704:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13697:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}},"id":9599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13707:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"13697:19:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":9600,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"13720:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8454_$","typeString":"type(enum LaunchNFTV2.PhaseType)"}},"id":9601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13730:11:31","memberName":"NOT_STARTED","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"13720:21:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8454","typeString":"enum LaunchNFTV2.PhaseType"}},"src":"13697:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9603,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"13753:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":9604,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"13766:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9606,"indexExpression":{"id":9605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9586,"src":"13773:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13766:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}},"id":9607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13776:9:31","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":8461,"src":"13766:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13753:32:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13697:88:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9610,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"13797:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":9611,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"13810:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9613,"indexExpression":{"id":9612,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9586,"src":"13817:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13810:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8474_storage","typeString":"struct LaunchNFTV2.Phase storage ref"}},"id":9614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13820:7:31","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8463,"src":"13810:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13797:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13697:130:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9620,"nodeType":"IfStatement","src":"13684:182:31","trueBody":{"id":9619,"nodeType":"Block","src":"13836:30:31","statements":[{"expression":{"hexValue":"74727565","id":9617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13853:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9579,"id":9618,"nodeType":"Return","src":"13846:11:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9589,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9586,"src":"13652:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9590,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8489,"src":"13656:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8474_storage_$dyn_storage","typeString":"struct LaunchNFTV2.Phase storage ref[] storage ref"}},"id":9591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13663:6:31","memberName":"length","nodeType":"MemberAccess","src":"13656:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13652:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9622,"initializationExpression":{"assignments":[9586],"declarations":[{"constant":false,"id":9586,"mutability":"mutable","name":"i","nameLocation":"13645:1:31","nodeType":"VariableDeclaration","scope":9622,"src":"13637:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9585,"name":"uint256","nodeType":"ElementaryTypeName","src":"13637:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9588,"initialValue":{"hexValue":"30","id":9587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13649:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13637:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13671:3:31","subExpression":{"id":9593,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9586,"src":"13671:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9595,"nodeType":"ExpressionStatement","src":"13671:3:31"},"nodeType":"ForStatement","src":"13632:240:31"},{"expression":{"hexValue":"66616c7365","id":9623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13885:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9579,"id":9624,"nodeType":"Return","src":"13878:12:31"}]},"functionSelector":"072a1319","id":9626,"implemented":true,"kind":"function","modifiers":[],"name":"isActivePhasePresent","nameLocation":"13534:20:31","nodeType":"FunctionDefinition","parameters":{"id":9576,"nodeType":"ParameterList","parameters":[],"src":"13554:2:31"},"returnParameters":{"id":9579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9626,"src":"13578:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9577,"name":"bool","nodeType":"ElementaryTypeName","src":"13578:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13577:6:31"},"scope":9627,"src":"13525:370:31","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9628,"src":"622:13275:31","usedErrors":[13,18,272,277,286,291,296,303,308,313,1490,1493,2134,2139,2148,2155,2465,2467,3123,3128,3133,8567,8569,8571,8573,8575,8577,8579,8581,8583,8585,8587,8589,8591],"usedEvents":[24,187,194,200,1334,1343,1352,8511,8532,8553,8559,8565]}],"src":"32:13866:31"},"id":31}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the ERC that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive}, interfere with enumerability and should not be used together with {ERC721Enumerable}.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00\",\"dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a28091ddc0c74bac4c67a3ac04136eb37e65f0d65d15d3d70d173c0f3dd61fea64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP1 SWAP2 0xDD 0xC0 0xC7 0x4B 0xAC 0x4C PUSH8 0xA3AC04136EB37E65 CREATE 0xD6 TSTORE ISZERO 0xD3 0xD7 0xD OR EXTCODECOPY 0xF RETURNDATASIZE 0xD6 0x1F 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"431:1480:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a28091ddc0c74bac4c67a3ac04136eb37e65f0d65d15d3d70d173c0f3dd61fea64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP1 SWAP2 0xDD 0xC0 0xC7 0x4B 0xAC 0x4C PUSH8 0xA3AC04136EB37E65 CREATE 0xD6 TSTORE ISZERO 0xD3 0xD7 0xD OR EXTCODECOPY 0xF RETURNDATASIZE 0xD6 0x1F 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"431:1480:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x01818908219f73eecfbbe8999ac583ee3fcbfe8e39e8e0a823199737d0ed8052\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://674bafb0a373297befe1b5fe4f5a02cc18a305d8f9a4577deddc2030a611433e\",\"dweb:/ipfs/QmPq5sBp1upRbBVdU5kd1VyG4tHAbv9z6V1NSPuPs8vAtd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220315420d2a34f54a0426c9d4fa643e55c756e077cf0b1ca748a3d08550624cc3764736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLOAD KECCAK256 0xD2 LOG3 0x4F SLOAD LOG0 TIMESTAMP PUSH13 0x9D4FA643E55C756E077CF0B1CA PUSH21 0x8A3D08550624CC3764736F6C634300081B00330000 ","sourceMap":"657:1315:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220315420d2a34f54a0426c9d4fa643e55c756e077cf0b1ca748a3d08550624cc3764736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLOAD KECCAK256 0xD2 LOG3 0x4F SLOAD LOG0 TIMESTAMP PUSH13 0x9D4FA643E55C756E077CF0B1CA PUSH21 0x8A3D08550624CC3764736F6C634300081B00330000 ","sourceMap":"657:1315:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a74f5a2d5fd6e59ea01c9239fd7f1b426ee3b2b1e16aa6400c77cb80ca3f8a164736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH21 0xF5A2D5FD6E59EA01C9239FD7F1B426EE3B2B1E16AA PUSH5 0xC77CB80C LOG3 0xF8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3026:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a74f5a2d5fd6e59ea01c9239fd7f1b426ee3b2b1e16aa6400c77cb80ca3f8a164736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH21 0xF5A2D5FD6E59EA01C9239FD7F1B426EE3B2B1E16AA PUSH5 0xC77CB80C LOG3 0xF8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3026:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c5b9741516a89aa3b21db03a537447b20e0f0eca242db0ef8c93e38ed69d9f664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY JUMPDEST SWAP8 COINBASE MLOAD PUSH11 0x89AA3B21DB03A537447B20 0xE0 CREATE 0xEC LOG2 TIMESTAMP 0xDB 0xE 0xF8 0xC9 RETURNDATACOPY CODESIZE 0xED PUSH10 0xD9F664736F6C63430008 SHL STOP CALLER ","sourceMap":"1407:2774:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c5b9741516a89aa3b21db03a537447b20e0f0eca242db0ef8c93e38ed69d9f664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY JUMPDEST SWAP8 COINBASE MLOAD PUSH11 0x89AA3B21DB03A537447B20 0xE0 CREATE 0xEC LOG2 TIMESTAMP 0xDB 0xE 0xF8 0xC9 RETURNDATACOPY CODESIZE 0xED PUSH10 0xD9F664736F6C63430008 SHL STOP CALLER ","sourceMap":"1407:2774:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699303a5c52bc84a454e1d7f1979e68af835e3d029de02ddc146e280c842441964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9303A5C52BC84A454E1D PUSH32 0x1979E68AF835E3D029DE02DDC146E280C842441964736F6C634300081B003300 ","sourceMap":"251:3680:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699303a5c52bc84a454e1d7f1979e68af835e3d029de02ddc146e280c842441964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9303A5C52BC84A454E1D PUSH32 0x1979E68AF835E3D029DE02DDC146E280C842441964736F6C634300081B003300 ","sourceMap":"251:3680:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200609642c22ba18325abd959c2f05794f0e137b8622597c479ac1b7b6cecbaefa64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD MULMOD PUSH5 0x2C22BA1832 GAS 0xBD SWAP6 SWAP13 0x2F SDIV PUSH26 0x4F0E137B8622597C479AC1B7B6CECBAEFA64736F6C634300081B STOP CALLER ","sourceMap":"344:7470:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200609642c22ba18325abd959c2f05794f0e137b8622597c479ac1b7b6cecbaefa64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD MULMOD PUSH5 0x2C22BA1832 GAS 0xBD SWAP6 SWAP13 0x2F SDIV PUSH26 0x4F0E137B8622597C479AC1B7B6CECBAEFA64736F6C634300081B STOP CALLER ","sourceMap":"344:7470:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220195adb90afd663f7b10506f5b07f672cbbdd097ab10fd326d55431f3be7247e664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT GAS 0xDB SWAP1 0xAF 0xD6 PUSH4 0xF7B10506 CREATE2 0xB0 PUSH32 0x672CBBDD097AB10FD326D55431F3BE7247E664736F6C634300081B0033000000 ","sourceMap":"221:813:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220195adb90afd663f7b10506f5b07f672cbbdd097ab10fd326d55431f3be7247e664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT GAS 0xDB SWAP1 0xAF 0xD6 PUSH4 0xF7B10506 CREATE2 0xB0 PUSH32 0x672CBBDD097AB10FD326D55431F3BE7247E664736F6C634300081B0033000000 ","sourceMap":"221:813:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220344dd0fbb4a5437f5619e59b443c75a87384f6d44579fe3852ee91a2c4cb7bd664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x4D 0xD0 0xFB 0xB4 0xA5 NUMBER PUSH32 0x5619E59B443C75A87384F6D44579FE3852EE91A2C4CB7BD664736F6C63430008 SHL STOP CALLER ","sourceMap":"1353:22982:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220344dd0fbb4a5437f5619e59b443c75a87384f6d44579fe3852ee91a2c4cb7bd664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x4D 0xD0 0xFB 0xB4 0xA5 NUMBER PUSH32 0x5619E59B443C75A87384F6D44579FE3852EE91A2C4CB7BD664736F6C63430008 SHL STOP CALLER ","sourceMap":"1353:22982:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045964c3323036b458d2cd7d327a9020c8d264023ab02397202e9ad562599c37964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP7 0x4C CALLER 0x23 SUB PUSH12 0x458D2CD7D327A9020C8D2640 0x23 0xAB MUL CODECOPY PUSH19 0x2E9AD562599C37964736F6C634300081B0033 ","sourceMap":"521:3181:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045964c3323036b458d2cd7d327a9020c8d264023ab02397202e9ad562599c37964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP7 0x4C CALLER 0x23 SUB PUSH12 0x458D2CD7D327A9020C8D2640 0x23 0xAB MUL CODECOPY PUSH19 0x2E9AD562599C37964736F6C634300081B0033 ","sourceMap":"521:3181:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9b729d0e4b7415694476ac1dd6b51b73e23ed609e32d344cf12a11202ac949e64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xB7 0x29 0xD0 0xE4 0xB7 COINBASE JUMP SWAP5 SELFBALANCE PUSH11 0xC1DD6B51B73E23ED609E32 0xD3 PREVRANDAO 0xCF SLT LOG1 SLT MUL 0xAC SWAP5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:28026:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9b729d0e4b7415694476ac1dd6b51b73e23ed609e32d344cf12a11202ac949e64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xB7 0x29 0xD0 0xE4 0xB7 COINBASE JUMP SWAP5 SELFBALANCE PUSH11 0xC1DD6B51B73E23ED609E32 0xD3 PREVRANDAO 0xCF SLT LOG1 SLT MUL 0xAC SWAP5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:28026:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f555b99f34b1c067f4d2ea441095768d54040c479b869b2116f2283c5ea029cc64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SSTORE 0xB9 SWAP16 CALLVALUE 0xB1 0xC0 PUSH8 0xF4D2EA441095768D SLOAD DIV 0xC SELFBALANCE SWAP12 DUP7 SWAP12 0x21 AND CALLCODE 0x28 EXTCODECOPY MCOPY LOG0 0x29 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f555b99f34b1c067f4d2ea441095768d54040c479b869b2116f2283c5ea029cc64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SSTORE 0xB9 SWAP16 CALLVALUE 0xB1 0xC0 PUSH8 0xF4D2EA441095768D SLOAD DIV 0xC SELFBALANCE SWAP12 DUP7 SWAP12 0x21 AND CALLCODE 0x28 EXTCODECOPY MCOPY LOG0 0x29 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2b69475893fef9566b51a6f4707efb246e99a221eea24472d422e54ab1462664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2B PUSH10 0x475893FEF9566B51A6F4 PUSH17 0x7EFB246E99A221EEA24472D422E54AB146 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"258:2354:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2b69475893fef9566b51a6f4707efb246e99a221eea24472d422e54ab1462664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2B PUSH10 0x475893FEF9566B51A6F4 PUSH17 0x7EFB246E99A221EEA24472D422E54AB146 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"258:2354:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"src/blockchain/evm/contracts/DirectMintNFTV2.sol":{"LaunchNFTV2":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint96","name":"_royaltyFee","type":"uint96"},{"internalType":"uint96","name":"_platformFee","type":"uint96"},{"internalType":"address","name":"_platformFeeRecipient","type":"address"},{"internalType":"address","name":"_backendSigner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[],"name":"ExceedsPhaseSupply","type":"error"},{"inputs":[],"name":"ExceedsWalletLimit","type":"error"},{"inputs":[],"name":"InsufficientPayment","type":"error"},{"inputs":[],"name":"InvalidMerkleProof","type":"error"},{"inputs":[],"name":"InvalidPhaseConfiguration","type":"error"},{"inputs":[],"name":"InvalidPhaseIndex","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"NoActivePhase","type":"error"},{"inputs":[],"name":"OverlappingPhases","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"PhaseNotActive","type":"error"},{"inputs":[],"name":"PriceMismatch","type":"error"},{"inputs":[],"name":"SignatureExpired","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"phaseIndex","type":"uint256"},{"indexed":false,"internalType":"enum LaunchNFTV2.PhaseType","name":"phaseType","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxSupply","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxMintPerPhase","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"PhaseAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"phaseIndex","type":"uint256"},{"indexed":false,"internalType":"enum LaunchNFTV2.PhaseType","name":"phaseType","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxSupply","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxMintPerPhase","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"PhaseUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint96","name":"newPercentage","type":"uint96"},{"indexed":false,"internalType":"address","name":"newRecipient","type":"address"}],"name":"PlatformFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"enum LaunchNFTV2.PhaseType","name":"phaseType","type":"uint8"}],"name":"TokenMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawCompleted","type":"event"},{"inputs":[{"internalType":"enum LaunchNFTV2.PhaseType","name":"_phaseType","type":"uint8"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"_maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"_maxMintPerPhase","type":"uint256"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"}],"name":"addPhase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"backendSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActivePhase","outputs":[{"internalType":"uint256","name":"phaseIndex","type":"uint256"},{"components":[{"internalType":"enum LaunchNFTV2.PhaseType","name":"phaseType","type":"uint8"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"maxMintPerPhase","type":"uint256"},{"internalType":"uint256","name":"mintedInPhase","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"internalType":"struct LaunchNFTV2.Phase","name":"phase","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum LaunchNFTV2.PhaseType","name":"phaseType","type":"uint8"}],"name":"getMintedInPhase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPhaseCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isActivePhasePresent","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"phases","outputs":[{"internalType":"enum LaunchNFTV2.PhaseType","name":"phaseType","type":"uint8"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"maxMintPerPhase","type":"uint256"},{"internalType":"uint256","name":"mintedInPhase","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeePercentage","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint96","name":"_feePercentage","type":"uint96"},{"internalType":"address","name":"_feeRecipient","type":"address"}],"name":"setPlatformFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_phaseIndex","type":"uint256"},{"internalType":"enum LaunchNFTV2.PhaseType","name":"_phaseType","type":"uint8"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"_maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"_maxMintPerPhase","type":"uint256"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"}],"name":"updatePhase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3557":{"entryPoint":null,"id":3557,"parameterSlots":2,"returnSlots":0},"@_431":{"entryPoint":null,"id":431,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8695":{"entryPoint":null,"id":8695,"parameterSlots":7,"returnSlots":0},"@_buildDomainSeparator_3604":{"entryPoint":1664,"id":3604,"parameterSlots":0,"returnSlots":1},"@_feeDenominator_2250":{"entryPoint":2293,"id":2250,"parameterSlots":0,"returnSlots":1},"@_setDefaultRoyalty_2296":{"entryPoint":1755,"id":2296,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":1386,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2769":{"entryPoint":2283,"id":2769,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2609":{"entryPoint":1584,"id":2609,"parameterSlots":2,"returnSlots":1},"@toShortString_2511":{"entryPoint":2179,"id":2511,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":2658,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":2724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96_fromMemory":{"entryPoint":2817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint96t_uint96t_addresst_address_fromMemory":{"entryPoint":2838,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4359,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0_to_t_string_memory_ptr_fromStack":{"entryPoint":4127,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a_to_t_string_memory_ptr_fromStack":{"entryPoint":4235,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6_to_t_string_memory_ptr_fromStack":{"entryPoint":3911,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack":{"entryPoint":4019,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4374,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":4506,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":4389,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4162,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4270,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3946,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4054,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4521,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":2540,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2303,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":2567,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":4664,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3163,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4653,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3056,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3853,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":3460,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2355,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4349,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2323,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3295,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":2770,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":3425,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":4701,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":3315,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":4472,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3601,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2616,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3184,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3114,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3573,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2491,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":3305,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":3543,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":4302,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3067,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2444,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":3349,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":4680,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2417,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2318,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2313,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2427,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":3200,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":3530,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":3401,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0":{"entryPoint":4086,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a":{"entryPoint":4194,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6":{"entryPoint":3870,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270":{"entryPoint":3978,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":3213,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":3359,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2373,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":2794,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":3396,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:18197:32","nodeType":"YulBlock","src":"0:18197:32","statements":[{"body":{"nativeSrc":"47:35:32","nodeType":"YulBlock","src":"47:35:32","statements":[{"nativeSrc":"57:19:32","nodeType":"YulAssignment","src":"57:19:32","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:32","nodeType":"YulLiteral","src":"73:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:32","nodeType":"YulIdentifier","src":"67:5:32"},"nativeSrc":"67:9:32","nodeType":"YulFunctionCall","src":"67:9:32"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:32","nodeType":"YulIdentifier","src":"57:6:32"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:32","nodeType":"YulTypedName","src":"40:6:32","type":""}],"src":"7:75:32"},{"body":{"nativeSrc":"177:28:32","nodeType":"YulBlock","src":"177:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:32","nodeType":"YulLiteral","src":"194:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:32","nodeType":"YulLiteral","src":"197:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:32","nodeType":"YulIdentifier","src":"187:6:32"},"nativeSrc":"187:12:32","nodeType":"YulFunctionCall","src":"187:12:32"},"nativeSrc":"187:12:32","nodeType":"YulExpressionStatement","src":"187:12:32"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:32","nodeType":"YulFunctionDefinition","src":"88:117:32"},{"body":{"nativeSrc":"300:28:32","nodeType":"YulBlock","src":"300:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:32","nodeType":"YulLiteral","src":"317:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:32","nodeType":"YulLiteral","src":"320:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:32","nodeType":"YulIdentifier","src":"310:6:32"},"nativeSrc":"310:12:32","nodeType":"YulFunctionCall","src":"310:12:32"},"nativeSrc":"310:12:32","nodeType":"YulExpressionStatement","src":"310:12:32"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:32","nodeType":"YulFunctionDefinition","src":"211:117:32"},{"body":{"nativeSrc":"379:81:32","nodeType":"YulBlock","src":"379:81:32","statements":[{"nativeSrc":"389:65:32","nodeType":"YulAssignment","src":"389:65:32","value":{"arguments":[{"name":"value","nativeSrc":"404:5:32","nodeType":"YulIdentifier","src":"404:5:32"},{"kind":"number","nativeSrc":"411:42:32","nodeType":"YulLiteral","src":"411:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:32","nodeType":"YulIdentifier","src":"400:3:32"},"nativeSrc":"400:54:32","nodeType":"YulFunctionCall","src":"400:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:32","nodeType":"YulIdentifier","src":"389:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:32","nodeType":"YulTypedName","src":"361:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:32","nodeType":"YulTypedName","src":"371:7:32","type":""}],"src":"334:126:32"},{"body":{"nativeSrc":"511:51:32","nodeType":"YulBlock","src":"511:51:32","statements":[{"nativeSrc":"521:35:32","nodeType":"YulAssignment","src":"521:35:32","value":{"arguments":[{"name":"value","nativeSrc":"550:5:32","nodeType":"YulIdentifier","src":"550:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:32","nodeType":"YulIdentifier","src":"532:17:32"},"nativeSrc":"532:24:32","nodeType":"YulFunctionCall","src":"532:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:32","nodeType":"YulIdentifier","src":"521:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:32","nodeType":"YulTypedName","src":"493:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:32","nodeType":"YulTypedName","src":"503:7:32","type":""}],"src":"466:96:32"},{"body":{"nativeSrc":"611:79:32","nodeType":"YulBlock","src":"611:79:32","statements":[{"body":{"nativeSrc":"668:16:32","nodeType":"YulBlock","src":"668:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:32","nodeType":"YulLiteral","src":"677:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:32","nodeType":"YulLiteral","src":"680:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:32","nodeType":"YulIdentifier","src":"670:6:32"},"nativeSrc":"670:12:32","nodeType":"YulFunctionCall","src":"670:12:32"},"nativeSrc":"670:12:32","nodeType":"YulExpressionStatement","src":"670:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:32","nodeType":"YulIdentifier","src":"634:5:32"},{"arguments":[{"name":"value","nativeSrc":"659:5:32","nodeType":"YulIdentifier","src":"659:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:32","nodeType":"YulIdentifier","src":"641:17:32"},"nativeSrc":"641:24:32","nodeType":"YulFunctionCall","src":"641:24:32"}],"functionName":{"name":"eq","nativeSrc":"631:2:32","nodeType":"YulIdentifier","src":"631:2:32"},"nativeSrc":"631:35:32","nodeType":"YulFunctionCall","src":"631:35:32"}],"functionName":{"name":"iszero","nativeSrc":"624:6:32","nodeType":"YulIdentifier","src":"624:6:32"},"nativeSrc":"624:43:32","nodeType":"YulFunctionCall","src":"624:43:32"},"nativeSrc":"621:63:32","nodeType":"YulIf","src":"621:63:32"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:32","nodeType":"YulTypedName","src":"604:5:32","type":""}],"src":"568:122:32"},{"body":{"nativeSrc":"759:80:32","nodeType":"YulBlock","src":"759:80:32","statements":[{"nativeSrc":"769:22:32","nodeType":"YulAssignment","src":"769:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:32","nodeType":"YulIdentifier","src":"784:6:32"}],"functionName":{"name":"mload","nativeSrc":"778:5:32","nodeType":"YulIdentifier","src":"778:5:32"},"nativeSrc":"778:13:32","nodeType":"YulFunctionCall","src":"778:13:32"},"variableNames":[{"name":"value","nativeSrc":"769:5:32","nodeType":"YulIdentifier","src":"769:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:32","nodeType":"YulIdentifier","src":"827:5:32"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:32","nodeType":"YulIdentifier","src":"800:26:32"},"nativeSrc":"800:33:32","nodeType":"YulFunctionCall","src":"800:33:32"},"nativeSrc":"800:33:32","nodeType":"YulExpressionStatement","src":"800:33:32"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:32","nodeType":"YulTypedName","src":"737:6:32","type":""},{"name":"end","nativeSrc":"745:3:32","nodeType":"YulTypedName","src":"745:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:32","nodeType":"YulTypedName","src":"753:5:32","type":""}],"src":"696:143:32"},{"body":{"nativeSrc":"934:28:32","nodeType":"YulBlock","src":"934:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"951:1:32","nodeType":"YulLiteral","src":"951:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"954:1:32","nodeType":"YulLiteral","src":"954:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"944:6:32","nodeType":"YulIdentifier","src":"944:6:32"},"nativeSrc":"944:12:32","nodeType":"YulFunctionCall","src":"944:12:32"},"nativeSrc":"944:12:32","nodeType":"YulExpressionStatement","src":"944:12:32"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"845:117:32","nodeType":"YulFunctionDefinition","src":"845:117:32"},{"body":{"nativeSrc":"1057:28:32","nodeType":"YulBlock","src":"1057:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1074:1:32","nodeType":"YulLiteral","src":"1074:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1077:1:32","nodeType":"YulLiteral","src":"1077:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1067:6:32","nodeType":"YulIdentifier","src":"1067:6:32"},"nativeSrc":"1067:12:32","nodeType":"YulFunctionCall","src":"1067:12:32"},"nativeSrc":"1067:12:32","nodeType":"YulExpressionStatement","src":"1067:12:32"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"968:117:32","nodeType":"YulFunctionDefinition","src":"968:117:32"},{"body":{"nativeSrc":"1139:54:32","nodeType":"YulBlock","src":"1139:54:32","statements":[{"nativeSrc":"1149:38:32","nodeType":"YulAssignment","src":"1149:38:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1167:5:32","nodeType":"YulIdentifier","src":"1167:5:32"},{"kind":"number","nativeSrc":"1174:2:32","nodeType":"YulLiteral","src":"1174:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1163:3:32","nodeType":"YulIdentifier","src":"1163:3:32"},"nativeSrc":"1163:14:32","nodeType":"YulFunctionCall","src":"1163:14:32"},{"arguments":[{"kind":"number","nativeSrc":"1183:2:32","nodeType":"YulLiteral","src":"1183:2:32","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1179:3:32","nodeType":"YulIdentifier","src":"1179:3:32"},"nativeSrc":"1179:7:32","nodeType":"YulFunctionCall","src":"1179:7:32"}],"functionName":{"name":"and","nativeSrc":"1159:3:32","nodeType":"YulIdentifier","src":"1159:3:32"},"nativeSrc":"1159:28:32","nodeType":"YulFunctionCall","src":"1159:28:32"},"variableNames":[{"name":"result","nativeSrc":"1149:6:32","nodeType":"YulIdentifier","src":"1149:6:32"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1091:102:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1122:5:32","nodeType":"YulTypedName","src":"1122:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1132:6:32","nodeType":"YulTypedName","src":"1132:6:32","type":""}],"src":"1091:102:32"},{"body":{"nativeSrc":"1227:152:32","nodeType":"YulBlock","src":"1227:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1244:1:32","nodeType":"YulLiteral","src":"1244:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1247:77:32","nodeType":"YulLiteral","src":"1247:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1237:6:32","nodeType":"YulIdentifier","src":"1237:6:32"},"nativeSrc":"1237:88:32","nodeType":"YulFunctionCall","src":"1237:88:32"},"nativeSrc":"1237:88:32","nodeType":"YulExpressionStatement","src":"1237:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1341:1:32","nodeType":"YulLiteral","src":"1341:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"1344:4:32","nodeType":"YulLiteral","src":"1344:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1334:6:32","nodeType":"YulIdentifier","src":"1334:6:32"},"nativeSrc":"1334:15:32","nodeType":"YulFunctionCall","src":"1334:15:32"},"nativeSrc":"1334:15:32","nodeType":"YulExpressionStatement","src":"1334:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1365:1:32","nodeType":"YulLiteral","src":"1365:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1368:4:32","nodeType":"YulLiteral","src":"1368:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1358:6:32","nodeType":"YulIdentifier","src":"1358:6:32"},"nativeSrc":"1358:15:32","nodeType":"YulFunctionCall","src":"1358:15:32"},"nativeSrc":"1358:15:32","nodeType":"YulExpressionStatement","src":"1358:15:32"}]},"name":"panic_error_0x41","nativeSrc":"1199:180:32","nodeType":"YulFunctionDefinition","src":"1199:180:32"},{"body":{"nativeSrc":"1428:238:32","nodeType":"YulBlock","src":"1428:238:32","statements":[{"nativeSrc":"1438:58:32","nodeType":"YulVariableDeclaration","src":"1438:58:32","value":{"arguments":[{"name":"memPtr","nativeSrc":"1460:6:32","nodeType":"YulIdentifier","src":"1460:6:32"},{"arguments":[{"name":"size","nativeSrc":"1490:4:32","nodeType":"YulIdentifier","src":"1490:4:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1468:21:32","nodeType":"YulIdentifier","src":"1468:21:32"},"nativeSrc":"1468:27:32","nodeType":"YulFunctionCall","src":"1468:27:32"}],"functionName":{"name":"add","nativeSrc":"1456:3:32","nodeType":"YulIdentifier","src":"1456:3:32"},"nativeSrc":"1456:40:32","nodeType":"YulFunctionCall","src":"1456:40:32"},"variables":[{"name":"newFreePtr","nativeSrc":"1442:10:32","nodeType":"YulTypedName","src":"1442:10:32","type":""}]},{"body":{"nativeSrc":"1607:22:32","nodeType":"YulBlock","src":"1607:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1609:16:32","nodeType":"YulIdentifier","src":"1609:16:32"},"nativeSrc":"1609:18:32","nodeType":"YulFunctionCall","src":"1609:18:32"},"nativeSrc":"1609:18:32","nodeType":"YulExpressionStatement","src":"1609:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1550:10:32","nodeType":"YulIdentifier","src":"1550:10:32"},{"kind":"number","nativeSrc":"1562:18:32","nodeType":"YulLiteral","src":"1562:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1547:2:32","nodeType":"YulIdentifier","src":"1547:2:32"},"nativeSrc":"1547:34:32","nodeType":"YulFunctionCall","src":"1547:34:32"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1586:10:32","nodeType":"YulIdentifier","src":"1586:10:32"},{"name":"memPtr","nativeSrc":"1598:6:32","nodeType":"YulIdentifier","src":"1598:6:32"}],"functionName":{"name":"lt","nativeSrc":"1583:2:32","nodeType":"YulIdentifier","src":"1583:2:32"},"nativeSrc":"1583:22:32","nodeType":"YulFunctionCall","src":"1583:22:32"}],"functionName":{"name":"or","nativeSrc":"1544:2:32","nodeType":"YulIdentifier","src":"1544:2:32"},"nativeSrc":"1544:62:32","nodeType":"YulFunctionCall","src":"1544:62:32"},"nativeSrc":"1541:88:32","nodeType":"YulIf","src":"1541:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1645:2:32","nodeType":"YulLiteral","src":"1645:2:32","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1649:10:32","nodeType":"YulIdentifier","src":"1649:10:32"}],"functionName":{"name":"mstore","nativeSrc":"1638:6:32","nodeType":"YulIdentifier","src":"1638:6:32"},"nativeSrc":"1638:22:32","nodeType":"YulFunctionCall","src":"1638:22:32"},"nativeSrc":"1638:22:32","nodeType":"YulExpressionStatement","src":"1638:22:32"}]},"name":"finalize_allocation","nativeSrc":"1385:281:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1414:6:32","nodeType":"YulTypedName","src":"1414:6:32","type":""},{"name":"size","nativeSrc":"1422:4:32","nodeType":"YulTypedName","src":"1422:4:32","type":""}],"src":"1385:281:32"},{"body":{"nativeSrc":"1713:88:32","nodeType":"YulBlock","src":"1713:88:32","statements":[{"nativeSrc":"1723:30:32","nodeType":"YulAssignment","src":"1723:30:32","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1733:18:32","nodeType":"YulIdentifier","src":"1733:18:32"},"nativeSrc":"1733:20:32","nodeType":"YulFunctionCall","src":"1733:20:32"},"variableNames":[{"name":"memPtr","nativeSrc":"1723:6:32","nodeType":"YulIdentifier","src":"1723:6:32"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1782:6:32","nodeType":"YulIdentifier","src":"1782:6:32"},{"name":"size","nativeSrc":"1790:4:32","nodeType":"YulIdentifier","src":"1790:4:32"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1762:19:32","nodeType":"YulIdentifier","src":"1762:19:32"},"nativeSrc":"1762:33:32","nodeType":"YulFunctionCall","src":"1762:33:32"},"nativeSrc":"1762:33:32","nodeType":"YulExpressionStatement","src":"1762:33:32"}]},"name":"allocate_memory","nativeSrc":"1672:129:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1697:4:32","nodeType":"YulTypedName","src":"1697:4:32","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1706:6:32","nodeType":"YulTypedName","src":"1706:6:32","type":""}],"src":"1672:129:32"},{"body":{"nativeSrc":"1874:241:32","nodeType":"YulBlock","src":"1874:241:32","statements":[{"body":{"nativeSrc":"1979:22:32","nodeType":"YulBlock","src":"1979:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1981:16:32","nodeType":"YulIdentifier","src":"1981:16:32"},"nativeSrc":"1981:18:32","nodeType":"YulFunctionCall","src":"1981:18:32"},"nativeSrc":"1981:18:32","nodeType":"YulExpressionStatement","src":"1981:18:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1951:6:32","nodeType":"YulIdentifier","src":"1951:6:32"},{"kind":"number","nativeSrc":"1959:18:32","nodeType":"YulLiteral","src":"1959:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1948:2:32","nodeType":"YulIdentifier","src":"1948:2:32"},"nativeSrc":"1948:30:32","nodeType":"YulFunctionCall","src":"1948:30:32"},"nativeSrc":"1945:56:32","nodeType":"YulIf","src":"1945:56:32"},{"nativeSrc":"2011:37:32","nodeType":"YulAssignment","src":"2011:37:32","value":{"arguments":[{"name":"length","nativeSrc":"2041:6:32","nodeType":"YulIdentifier","src":"2041:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2019:21:32","nodeType":"YulIdentifier","src":"2019:21:32"},"nativeSrc":"2019:29:32","nodeType":"YulFunctionCall","src":"2019:29:32"},"variableNames":[{"name":"size","nativeSrc":"2011:4:32","nodeType":"YulIdentifier","src":"2011:4:32"}]},{"nativeSrc":"2085:23:32","nodeType":"YulAssignment","src":"2085:23:32","value":{"arguments":[{"name":"size","nativeSrc":"2097:4:32","nodeType":"YulIdentifier","src":"2097:4:32"},{"kind":"number","nativeSrc":"2103:4:32","nodeType":"YulLiteral","src":"2103:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2093:3:32","nodeType":"YulIdentifier","src":"2093:3:32"},"nativeSrc":"2093:15:32","nodeType":"YulFunctionCall","src":"2093:15:32"},"variableNames":[{"name":"size","nativeSrc":"2085:4:32","nodeType":"YulIdentifier","src":"2085:4:32"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1807:308:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1858:6:32","nodeType":"YulTypedName","src":"1858:6:32","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1869:4:32","nodeType":"YulTypedName","src":"1869:4:32","type":""}],"src":"1807:308:32"},{"body":{"nativeSrc":"2183:186:32","nodeType":"YulBlock","src":"2183:186:32","statements":[{"nativeSrc":"2194:10:32","nodeType":"YulVariableDeclaration","src":"2194:10:32","value":{"kind":"number","nativeSrc":"2203:1:32","nodeType":"YulLiteral","src":"2203:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2198:1:32","nodeType":"YulTypedName","src":"2198:1:32","type":""}]},{"body":{"nativeSrc":"2263:63:32","nodeType":"YulBlock","src":"2263:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2288:3:32","nodeType":"YulIdentifier","src":"2288:3:32"},{"name":"i","nativeSrc":"2293:1:32","nodeType":"YulIdentifier","src":"2293:1:32"}],"functionName":{"name":"add","nativeSrc":"2284:3:32","nodeType":"YulIdentifier","src":"2284:3:32"},"nativeSrc":"2284:11:32","nodeType":"YulFunctionCall","src":"2284:11:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2307:3:32","nodeType":"YulIdentifier","src":"2307:3:32"},{"name":"i","nativeSrc":"2312:1:32","nodeType":"YulIdentifier","src":"2312:1:32"}],"functionName":{"name":"add","nativeSrc":"2303:3:32","nodeType":"YulIdentifier","src":"2303:3:32"},"nativeSrc":"2303:11:32","nodeType":"YulFunctionCall","src":"2303:11:32"}],"functionName":{"name":"mload","nativeSrc":"2297:5:32","nodeType":"YulIdentifier","src":"2297:5:32"},"nativeSrc":"2297:18:32","nodeType":"YulFunctionCall","src":"2297:18:32"}],"functionName":{"name":"mstore","nativeSrc":"2277:6:32","nodeType":"YulIdentifier","src":"2277:6:32"},"nativeSrc":"2277:39:32","nodeType":"YulFunctionCall","src":"2277:39:32"},"nativeSrc":"2277:39:32","nodeType":"YulExpressionStatement","src":"2277:39:32"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2224:1:32","nodeType":"YulIdentifier","src":"2224:1:32"},{"name":"length","nativeSrc":"2227:6:32","nodeType":"YulIdentifier","src":"2227:6:32"}],"functionName":{"name":"lt","nativeSrc":"2221:2:32","nodeType":"YulIdentifier","src":"2221:2:32"},"nativeSrc":"2221:13:32","nodeType":"YulFunctionCall","src":"2221:13:32"},"nativeSrc":"2213:113:32","nodeType":"YulForLoop","post":{"nativeSrc":"2235:19:32","nodeType":"YulBlock","src":"2235:19:32","statements":[{"nativeSrc":"2237:15:32","nodeType":"YulAssignment","src":"2237:15:32","value":{"arguments":[{"name":"i","nativeSrc":"2246:1:32","nodeType":"YulIdentifier","src":"2246:1:32"},{"kind":"number","nativeSrc":"2249:2:32","nodeType":"YulLiteral","src":"2249:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2242:3:32","nodeType":"YulIdentifier","src":"2242:3:32"},"nativeSrc":"2242:10:32","nodeType":"YulFunctionCall","src":"2242:10:32"},"variableNames":[{"name":"i","nativeSrc":"2237:1:32","nodeType":"YulIdentifier","src":"2237:1:32"}]}]},"pre":{"nativeSrc":"2217:3:32","nodeType":"YulBlock","src":"2217:3:32","statements":[]},"src":"2213:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2346:3:32","nodeType":"YulIdentifier","src":"2346:3:32"},{"name":"length","nativeSrc":"2351:6:32","nodeType":"YulIdentifier","src":"2351:6:32"}],"functionName":{"name":"add","nativeSrc":"2342:3:32","nodeType":"YulIdentifier","src":"2342:3:32"},"nativeSrc":"2342:16:32","nodeType":"YulFunctionCall","src":"2342:16:32"},{"kind":"number","nativeSrc":"2360:1:32","nodeType":"YulLiteral","src":"2360:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2335:6:32","nodeType":"YulIdentifier","src":"2335:6:32"},"nativeSrc":"2335:27:32","nodeType":"YulFunctionCall","src":"2335:27:32"},"nativeSrc":"2335:27:32","nodeType":"YulExpressionStatement","src":"2335:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2121:248:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2165:3:32","nodeType":"YulTypedName","src":"2165:3:32","type":""},{"name":"dst","nativeSrc":"2170:3:32","nodeType":"YulTypedName","src":"2170:3:32","type":""},{"name":"length","nativeSrc":"2175:6:32","nodeType":"YulTypedName","src":"2175:6:32","type":""}],"src":"2121:248:32"},{"body":{"nativeSrc":"2470:339:32","nodeType":"YulBlock","src":"2470:339:32","statements":[{"nativeSrc":"2480:75:32","nodeType":"YulAssignment","src":"2480:75:32","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2547:6:32","nodeType":"YulIdentifier","src":"2547:6:32"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2505:41:32","nodeType":"YulIdentifier","src":"2505:41:32"},"nativeSrc":"2505:49:32","nodeType":"YulFunctionCall","src":"2505:49:32"}],"functionName":{"name":"allocate_memory","nativeSrc":"2489:15:32","nodeType":"YulIdentifier","src":"2489:15:32"},"nativeSrc":"2489:66:32","nodeType":"YulFunctionCall","src":"2489:66:32"},"variableNames":[{"name":"array","nativeSrc":"2480:5:32","nodeType":"YulIdentifier","src":"2480:5:32"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2571:5:32","nodeType":"YulIdentifier","src":"2571:5:32"},{"name":"length","nativeSrc":"2578:6:32","nodeType":"YulIdentifier","src":"2578:6:32"}],"functionName":{"name":"mstore","nativeSrc":"2564:6:32","nodeType":"YulIdentifier","src":"2564:6:32"},"nativeSrc":"2564:21:32","nodeType":"YulFunctionCall","src":"2564:21:32"},"nativeSrc":"2564:21:32","nodeType":"YulExpressionStatement","src":"2564:21:32"},{"nativeSrc":"2594:27:32","nodeType":"YulVariableDeclaration","src":"2594:27:32","value":{"arguments":[{"name":"array","nativeSrc":"2609:5:32","nodeType":"YulIdentifier","src":"2609:5:32"},{"kind":"number","nativeSrc":"2616:4:32","nodeType":"YulLiteral","src":"2616:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2605:3:32","nodeType":"YulIdentifier","src":"2605:3:32"},"nativeSrc":"2605:16:32","nodeType":"YulFunctionCall","src":"2605:16:32"},"variables":[{"name":"dst","nativeSrc":"2598:3:32","nodeType":"YulTypedName","src":"2598:3:32","type":""}]},{"body":{"nativeSrc":"2659:83:32","nodeType":"YulBlock","src":"2659:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2661:77:32","nodeType":"YulIdentifier","src":"2661:77:32"},"nativeSrc":"2661:79:32","nodeType":"YulFunctionCall","src":"2661:79:32"},"nativeSrc":"2661:79:32","nodeType":"YulExpressionStatement","src":"2661:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2640:3:32","nodeType":"YulIdentifier","src":"2640:3:32"},{"name":"length","nativeSrc":"2645:6:32","nodeType":"YulIdentifier","src":"2645:6:32"}],"functionName":{"name":"add","nativeSrc":"2636:3:32","nodeType":"YulIdentifier","src":"2636:3:32"},"nativeSrc":"2636:16:32","nodeType":"YulFunctionCall","src":"2636:16:32"},{"name":"end","nativeSrc":"2654:3:32","nodeType":"YulIdentifier","src":"2654:3:32"}],"functionName":{"name":"gt","nativeSrc":"2633:2:32","nodeType":"YulIdentifier","src":"2633:2:32"},"nativeSrc":"2633:25:32","nodeType":"YulFunctionCall","src":"2633:25:32"},"nativeSrc":"2630:112:32","nodeType":"YulIf","src":"2630:112:32"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2786:3:32","nodeType":"YulIdentifier","src":"2786:3:32"},{"name":"dst","nativeSrc":"2791:3:32","nodeType":"YulIdentifier","src":"2791:3:32"},{"name":"length","nativeSrc":"2796:6:32","nodeType":"YulIdentifier","src":"2796:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2751:34:32","nodeType":"YulIdentifier","src":"2751:34:32"},"nativeSrc":"2751:52:32","nodeType":"YulFunctionCall","src":"2751:52:32"},"nativeSrc":"2751:52:32","nodeType":"YulExpressionStatement","src":"2751:52:32"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2375:434:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2443:3:32","nodeType":"YulTypedName","src":"2443:3:32","type":""},{"name":"length","nativeSrc":"2448:6:32","nodeType":"YulTypedName","src":"2448:6:32","type":""},{"name":"end","nativeSrc":"2456:3:32","nodeType":"YulTypedName","src":"2456:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2464:5:32","nodeType":"YulTypedName","src":"2464:5:32","type":""}],"src":"2375:434:32"},{"body":{"nativeSrc":"2902:282:32","nodeType":"YulBlock","src":"2902:282:32","statements":[{"body":{"nativeSrc":"2951:83:32","nodeType":"YulBlock","src":"2951:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2953:77:32","nodeType":"YulIdentifier","src":"2953:77:32"},"nativeSrc":"2953:79:32","nodeType":"YulFunctionCall","src":"2953:79:32"},"nativeSrc":"2953:79:32","nodeType":"YulExpressionStatement","src":"2953:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2930:6:32","nodeType":"YulIdentifier","src":"2930:6:32"},{"kind":"number","nativeSrc":"2938:4:32","nodeType":"YulLiteral","src":"2938:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2926:3:32","nodeType":"YulIdentifier","src":"2926:3:32"},"nativeSrc":"2926:17:32","nodeType":"YulFunctionCall","src":"2926:17:32"},{"name":"end","nativeSrc":"2945:3:32","nodeType":"YulIdentifier","src":"2945:3:32"}],"functionName":{"name":"slt","nativeSrc":"2922:3:32","nodeType":"YulIdentifier","src":"2922:3:32"},"nativeSrc":"2922:27:32","nodeType":"YulFunctionCall","src":"2922:27:32"}],"functionName":{"name":"iszero","nativeSrc":"2915:6:32","nodeType":"YulIdentifier","src":"2915:6:32"},"nativeSrc":"2915:35:32","nodeType":"YulFunctionCall","src":"2915:35:32"},"nativeSrc":"2912:122:32","nodeType":"YulIf","src":"2912:122:32"},{"nativeSrc":"3043:27:32","nodeType":"YulVariableDeclaration","src":"3043:27:32","value":{"arguments":[{"name":"offset","nativeSrc":"3063:6:32","nodeType":"YulIdentifier","src":"3063:6:32"}],"functionName":{"name":"mload","nativeSrc":"3057:5:32","nodeType":"YulIdentifier","src":"3057:5:32"},"nativeSrc":"3057:13:32","nodeType":"YulFunctionCall","src":"3057:13:32"},"variables":[{"name":"length","nativeSrc":"3047:6:32","nodeType":"YulTypedName","src":"3047:6:32","type":""}]},{"nativeSrc":"3079:99:32","nodeType":"YulAssignment","src":"3079:99:32","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3151:6:32","nodeType":"YulIdentifier","src":"3151:6:32"},{"kind":"number","nativeSrc":"3159:4:32","nodeType":"YulLiteral","src":"3159:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3147:3:32","nodeType":"YulIdentifier","src":"3147:3:32"},"nativeSrc":"3147:17:32","nodeType":"YulFunctionCall","src":"3147:17:32"},{"name":"length","nativeSrc":"3166:6:32","nodeType":"YulIdentifier","src":"3166:6:32"},{"name":"end","nativeSrc":"3174:3:32","nodeType":"YulIdentifier","src":"3174:3:32"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"3088:58:32","nodeType":"YulIdentifier","src":"3088:58:32"},"nativeSrc":"3088:90:32","nodeType":"YulFunctionCall","src":"3088:90:32"},"variableNames":[{"name":"array","nativeSrc":"3079:5:32","nodeType":"YulIdentifier","src":"3079:5:32"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2829:355:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2880:6:32","nodeType":"YulTypedName","src":"2880:6:32","type":""},{"name":"end","nativeSrc":"2888:3:32","nodeType":"YulTypedName","src":"2888:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2896:5:32","nodeType":"YulTypedName","src":"2896:5:32","type":""}],"src":"2829:355:32"},{"body":{"nativeSrc":"3234:65:32","nodeType":"YulBlock","src":"3234:65:32","statements":[{"nativeSrc":"3244:49:32","nodeType":"YulAssignment","src":"3244:49:32","value":{"arguments":[{"name":"value","nativeSrc":"3259:5:32","nodeType":"YulIdentifier","src":"3259:5:32"},{"kind":"number","nativeSrc":"3266:26:32","nodeType":"YulLiteral","src":"3266:26:32","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3255:3:32","nodeType":"YulIdentifier","src":"3255:3:32"},"nativeSrc":"3255:38:32","nodeType":"YulFunctionCall","src":"3255:38:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3244:7:32","nodeType":"YulIdentifier","src":"3244:7:32"}]}]},"name":"cleanup_t_uint96","nativeSrc":"3190:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3216:5:32","nodeType":"YulTypedName","src":"3216:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3226:7:32","nodeType":"YulTypedName","src":"3226:7:32","type":""}],"src":"3190:109:32"},{"body":{"nativeSrc":"3347:78:32","nodeType":"YulBlock","src":"3347:78:32","statements":[{"body":{"nativeSrc":"3403:16:32","nodeType":"YulBlock","src":"3403:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3412:1:32","nodeType":"YulLiteral","src":"3412:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"3415:1:32","nodeType":"YulLiteral","src":"3415:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3405:6:32","nodeType":"YulIdentifier","src":"3405:6:32"},"nativeSrc":"3405:12:32","nodeType":"YulFunctionCall","src":"3405:12:32"},"nativeSrc":"3405:12:32","nodeType":"YulExpressionStatement","src":"3405:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3370:5:32","nodeType":"YulIdentifier","src":"3370:5:32"},{"arguments":[{"name":"value","nativeSrc":"3394:5:32","nodeType":"YulIdentifier","src":"3394:5:32"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"3377:16:32","nodeType":"YulIdentifier","src":"3377:16:32"},"nativeSrc":"3377:23:32","nodeType":"YulFunctionCall","src":"3377:23:32"}],"functionName":{"name":"eq","nativeSrc":"3367:2:32","nodeType":"YulIdentifier","src":"3367:2:32"},"nativeSrc":"3367:34:32","nodeType":"YulFunctionCall","src":"3367:34:32"}],"functionName":{"name":"iszero","nativeSrc":"3360:6:32","nodeType":"YulIdentifier","src":"3360:6:32"},"nativeSrc":"3360:42:32","nodeType":"YulFunctionCall","src":"3360:42:32"},"nativeSrc":"3357:62:32","nodeType":"YulIf","src":"3357:62:32"}]},"name":"validator_revert_t_uint96","nativeSrc":"3305:120:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3340:5:32","nodeType":"YulTypedName","src":"3340:5:32","type":""}],"src":"3305:120:32"},{"body":{"nativeSrc":"3493:79:32","nodeType":"YulBlock","src":"3493:79:32","statements":[{"nativeSrc":"3503:22:32","nodeType":"YulAssignment","src":"3503:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"3518:6:32","nodeType":"YulIdentifier","src":"3518:6:32"}],"functionName":{"name":"mload","nativeSrc":"3512:5:32","nodeType":"YulIdentifier","src":"3512:5:32"},"nativeSrc":"3512:13:32","nodeType":"YulFunctionCall","src":"3512:13:32"},"variableNames":[{"name":"value","nativeSrc":"3503:5:32","nodeType":"YulIdentifier","src":"3503:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3560:5:32","nodeType":"YulIdentifier","src":"3560:5:32"}],"functionName":{"name":"validator_revert_t_uint96","nativeSrc":"3534:25:32","nodeType":"YulIdentifier","src":"3534:25:32"},"nativeSrc":"3534:32:32","nodeType":"YulFunctionCall","src":"3534:32:32"},"nativeSrc":"3534:32:32","nodeType":"YulExpressionStatement","src":"3534:32:32"}]},"name":"abi_decode_t_uint96_fromMemory","nativeSrc":"3431:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3471:6:32","nodeType":"YulTypedName","src":"3471:6:32","type":""},{"name":"end","nativeSrc":"3479:3:32","nodeType":"YulTypedName","src":"3479:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3487:5:32","nodeType":"YulTypedName","src":"3487:5:32","type":""}],"src":"3431:141:32"},{"body":{"nativeSrc":"3775:1436:32","nodeType":"YulBlock","src":"3775:1436:32","statements":[{"body":{"nativeSrc":"3822:83:32","nodeType":"YulBlock","src":"3822:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3824:77:32","nodeType":"YulIdentifier","src":"3824:77:32"},"nativeSrc":"3824:79:32","nodeType":"YulFunctionCall","src":"3824:79:32"},"nativeSrc":"3824:79:32","nodeType":"YulExpressionStatement","src":"3824:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3796:7:32","nodeType":"YulIdentifier","src":"3796:7:32"},{"name":"headStart","nativeSrc":"3805:9:32","nodeType":"YulIdentifier","src":"3805:9:32"}],"functionName":{"name":"sub","nativeSrc":"3792:3:32","nodeType":"YulIdentifier","src":"3792:3:32"},"nativeSrc":"3792:23:32","nodeType":"YulFunctionCall","src":"3792:23:32"},{"kind":"number","nativeSrc":"3817:3:32","nodeType":"YulLiteral","src":"3817:3:32","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"3788:3:32","nodeType":"YulIdentifier","src":"3788:3:32"},"nativeSrc":"3788:33:32","nodeType":"YulFunctionCall","src":"3788:33:32"},"nativeSrc":"3785:120:32","nodeType":"YulIf","src":"3785:120:32"},{"nativeSrc":"3915:128:32","nodeType":"YulBlock","src":"3915:128:32","statements":[{"nativeSrc":"3930:15:32","nodeType":"YulVariableDeclaration","src":"3930:15:32","value":{"kind":"number","nativeSrc":"3944:1:32","nodeType":"YulLiteral","src":"3944:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3934:6:32","nodeType":"YulTypedName","src":"3934:6:32","type":""}]},{"nativeSrc":"3959:74:32","nodeType":"YulAssignment","src":"3959:74:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4005:9:32","nodeType":"YulIdentifier","src":"4005:9:32"},{"name":"offset","nativeSrc":"4016:6:32","nodeType":"YulIdentifier","src":"4016:6:32"}],"functionName":{"name":"add","nativeSrc":"4001:3:32","nodeType":"YulIdentifier","src":"4001:3:32"},"nativeSrc":"4001:22:32","nodeType":"YulFunctionCall","src":"4001:22:32"},{"name":"dataEnd","nativeSrc":"4025:7:32","nodeType":"YulIdentifier","src":"4025:7:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"3969:31:32","nodeType":"YulIdentifier","src":"3969:31:32"},"nativeSrc":"3969:64:32","nodeType":"YulFunctionCall","src":"3969:64:32"},"variableNames":[{"name":"value0","nativeSrc":"3959:6:32","nodeType":"YulIdentifier","src":"3959:6:32"}]}]},{"nativeSrc":"4053:292:32","nodeType":"YulBlock","src":"4053:292:32","statements":[{"nativeSrc":"4068:39:32","nodeType":"YulVariableDeclaration","src":"4068:39:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4092:9:32","nodeType":"YulIdentifier","src":"4092:9:32"},{"kind":"number","nativeSrc":"4103:2:32","nodeType":"YulLiteral","src":"4103:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4088:3:32","nodeType":"YulIdentifier","src":"4088:3:32"},"nativeSrc":"4088:18:32","nodeType":"YulFunctionCall","src":"4088:18:32"}],"functionName":{"name":"mload","nativeSrc":"4082:5:32","nodeType":"YulIdentifier","src":"4082:5:32"},"nativeSrc":"4082:25:32","nodeType":"YulFunctionCall","src":"4082:25:32"},"variables":[{"name":"offset","nativeSrc":"4072:6:32","nodeType":"YulTypedName","src":"4072:6:32","type":""}]},{"body":{"nativeSrc":"4154:83:32","nodeType":"YulBlock","src":"4154:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4156:77:32","nodeType":"YulIdentifier","src":"4156:77:32"},"nativeSrc":"4156:79:32","nodeType":"YulFunctionCall","src":"4156:79:32"},"nativeSrc":"4156:79:32","nodeType":"YulExpressionStatement","src":"4156:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4126:6:32","nodeType":"YulIdentifier","src":"4126:6:32"},{"kind":"number","nativeSrc":"4134:18:32","nodeType":"YulLiteral","src":"4134:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4123:2:32","nodeType":"YulIdentifier","src":"4123:2:32"},"nativeSrc":"4123:30:32","nodeType":"YulFunctionCall","src":"4123:30:32"},"nativeSrc":"4120:117:32","nodeType":"YulIf","src":"4120:117:32"},{"nativeSrc":"4251:84:32","nodeType":"YulAssignment","src":"4251:84:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4307:9:32","nodeType":"YulIdentifier","src":"4307:9:32"},{"name":"offset","nativeSrc":"4318:6:32","nodeType":"YulIdentifier","src":"4318:6:32"}],"functionName":{"name":"add","nativeSrc":"4303:3:32","nodeType":"YulIdentifier","src":"4303:3:32"},"nativeSrc":"4303:22:32","nodeType":"YulFunctionCall","src":"4303:22:32"},{"name":"dataEnd","nativeSrc":"4327:7:32","nodeType":"YulIdentifier","src":"4327:7:32"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4261:41:32","nodeType":"YulIdentifier","src":"4261:41:32"},"nativeSrc":"4261:74:32","nodeType":"YulFunctionCall","src":"4261:74:32"},"variableNames":[{"name":"value1","nativeSrc":"4251:6:32","nodeType":"YulIdentifier","src":"4251:6:32"}]}]},{"nativeSrc":"4355:292:32","nodeType":"YulBlock","src":"4355:292:32","statements":[{"nativeSrc":"4370:39:32","nodeType":"YulVariableDeclaration","src":"4370:39:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4394:9:32","nodeType":"YulIdentifier","src":"4394:9:32"},{"kind":"number","nativeSrc":"4405:2:32","nodeType":"YulLiteral","src":"4405:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4390:3:32","nodeType":"YulIdentifier","src":"4390:3:32"},"nativeSrc":"4390:18:32","nodeType":"YulFunctionCall","src":"4390:18:32"}],"functionName":{"name":"mload","nativeSrc":"4384:5:32","nodeType":"YulIdentifier","src":"4384:5:32"},"nativeSrc":"4384:25:32","nodeType":"YulFunctionCall","src":"4384:25:32"},"variables":[{"name":"offset","nativeSrc":"4374:6:32","nodeType":"YulTypedName","src":"4374:6:32","type":""}]},{"body":{"nativeSrc":"4456:83:32","nodeType":"YulBlock","src":"4456:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4458:77:32","nodeType":"YulIdentifier","src":"4458:77:32"},"nativeSrc":"4458:79:32","nodeType":"YulFunctionCall","src":"4458:79:32"},"nativeSrc":"4458:79:32","nodeType":"YulExpressionStatement","src":"4458:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4428:6:32","nodeType":"YulIdentifier","src":"4428:6:32"},{"kind":"number","nativeSrc":"4436:18:32","nodeType":"YulLiteral","src":"4436:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4425:2:32","nodeType":"YulIdentifier","src":"4425:2:32"},"nativeSrc":"4425:30:32","nodeType":"YulFunctionCall","src":"4425:30:32"},"nativeSrc":"4422:117:32","nodeType":"YulIf","src":"4422:117:32"},{"nativeSrc":"4553:84:32","nodeType":"YulAssignment","src":"4553:84:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4609:9:32","nodeType":"YulIdentifier","src":"4609:9:32"},{"name":"offset","nativeSrc":"4620:6:32","nodeType":"YulIdentifier","src":"4620:6:32"}],"functionName":{"name":"add","nativeSrc":"4605:3:32","nodeType":"YulIdentifier","src":"4605:3:32"},"nativeSrc":"4605:22:32","nodeType":"YulFunctionCall","src":"4605:22:32"},{"name":"dataEnd","nativeSrc":"4629:7:32","nodeType":"YulIdentifier","src":"4629:7:32"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4563:41:32","nodeType":"YulIdentifier","src":"4563:41:32"},"nativeSrc":"4563:74:32","nodeType":"YulFunctionCall","src":"4563:74:32"},"variableNames":[{"name":"value2","nativeSrc":"4553:6:32","nodeType":"YulIdentifier","src":"4553:6:32"}]}]},{"nativeSrc":"4657:128:32","nodeType":"YulBlock","src":"4657:128:32","statements":[{"nativeSrc":"4672:16:32","nodeType":"YulVariableDeclaration","src":"4672:16:32","value":{"kind":"number","nativeSrc":"4686:2:32","nodeType":"YulLiteral","src":"4686:2:32","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"4676:6:32","nodeType":"YulTypedName","src":"4676:6:32","type":""}]},{"nativeSrc":"4702:73:32","nodeType":"YulAssignment","src":"4702:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4747:9:32","nodeType":"YulIdentifier","src":"4747:9:32"},{"name":"offset","nativeSrc":"4758:6:32","nodeType":"YulIdentifier","src":"4758:6:32"}],"functionName":{"name":"add","nativeSrc":"4743:3:32","nodeType":"YulIdentifier","src":"4743:3:32"},"nativeSrc":"4743:22:32","nodeType":"YulFunctionCall","src":"4743:22:32"},{"name":"dataEnd","nativeSrc":"4767:7:32","nodeType":"YulIdentifier","src":"4767:7:32"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nativeSrc":"4712:30:32","nodeType":"YulIdentifier","src":"4712:30:32"},"nativeSrc":"4712:63:32","nodeType":"YulFunctionCall","src":"4712:63:32"},"variableNames":[{"name":"value3","nativeSrc":"4702:6:32","nodeType":"YulIdentifier","src":"4702:6:32"}]}]},{"nativeSrc":"4795:129:32","nodeType":"YulBlock","src":"4795:129:32","statements":[{"nativeSrc":"4810:17:32","nodeType":"YulVariableDeclaration","src":"4810:17:32","value":{"kind":"number","nativeSrc":"4824:3:32","nodeType":"YulLiteral","src":"4824:3:32","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"4814:6:32","nodeType":"YulTypedName","src":"4814:6:32","type":""}]},{"nativeSrc":"4841:73:32","nodeType":"YulAssignment","src":"4841:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4886:9:32","nodeType":"YulIdentifier","src":"4886:9:32"},{"name":"offset","nativeSrc":"4897:6:32","nodeType":"YulIdentifier","src":"4897:6:32"}],"functionName":{"name":"add","nativeSrc":"4882:3:32","nodeType":"YulIdentifier","src":"4882:3:32"},"nativeSrc":"4882:22:32","nodeType":"YulFunctionCall","src":"4882:22:32"},{"name":"dataEnd","nativeSrc":"4906:7:32","nodeType":"YulIdentifier","src":"4906:7:32"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nativeSrc":"4851:30:32","nodeType":"YulIdentifier","src":"4851:30:32"},"nativeSrc":"4851:63:32","nodeType":"YulFunctionCall","src":"4851:63:32"},"variableNames":[{"name":"value4","nativeSrc":"4841:6:32","nodeType":"YulIdentifier","src":"4841:6:32"}]}]},{"nativeSrc":"4934:130:32","nodeType":"YulBlock","src":"4934:130:32","statements":[{"nativeSrc":"4949:17:32","nodeType":"YulVariableDeclaration","src":"4949:17:32","value":{"kind":"number","nativeSrc":"4963:3:32","nodeType":"YulLiteral","src":"4963:3:32","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"4953:6:32","nodeType":"YulTypedName","src":"4953:6:32","type":""}]},{"nativeSrc":"4980:74:32","nodeType":"YulAssignment","src":"4980:74:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5026:9:32","nodeType":"YulIdentifier","src":"5026:9:32"},{"name":"offset","nativeSrc":"5037:6:32","nodeType":"YulIdentifier","src":"5037:6:32"}],"functionName":{"name":"add","nativeSrc":"5022:3:32","nodeType":"YulIdentifier","src":"5022:3:32"},"nativeSrc":"5022:22:32","nodeType":"YulFunctionCall","src":"5022:22:32"},{"name":"dataEnd","nativeSrc":"5046:7:32","nodeType":"YulIdentifier","src":"5046:7:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"4990:31:32","nodeType":"YulIdentifier","src":"4990:31:32"},"nativeSrc":"4990:64:32","nodeType":"YulFunctionCall","src":"4990:64:32"},"variableNames":[{"name":"value5","nativeSrc":"4980:6:32","nodeType":"YulIdentifier","src":"4980:6:32"}]}]},{"nativeSrc":"5074:130:32","nodeType":"YulBlock","src":"5074:130:32","statements":[{"nativeSrc":"5089:17:32","nodeType":"YulVariableDeclaration","src":"5089:17:32","value":{"kind":"number","nativeSrc":"5103:3:32","nodeType":"YulLiteral","src":"5103:3:32","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"5093:6:32","nodeType":"YulTypedName","src":"5093:6:32","type":""}]},{"nativeSrc":"5120:74:32","nodeType":"YulAssignment","src":"5120:74:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5166:9:32","nodeType":"YulIdentifier","src":"5166:9:32"},{"name":"offset","nativeSrc":"5177:6:32","nodeType":"YulIdentifier","src":"5177:6:32"}],"functionName":{"name":"add","nativeSrc":"5162:3:32","nodeType":"YulIdentifier","src":"5162:3:32"},"nativeSrc":"5162:22:32","nodeType":"YulFunctionCall","src":"5162:22:32"},{"name":"dataEnd","nativeSrc":"5186:7:32","nodeType":"YulIdentifier","src":"5186:7:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"5130:31:32","nodeType":"YulIdentifier","src":"5130:31:32"},"nativeSrc":"5130:64:32","nodeType":"YulFunctionCall","src":"5130:64:32"},"variableNames":[{"name":"value6","nativeSrc":"5120:6:32","nodeType":"YulIdentifier","src":"5120:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint96t_uint96t_addresst_address_fromMemory","nativeSrc":"3578:1633:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3697:9:32","nodeType":"YulTypedName","src":"3697:9:32","type":""},{"name":"dataEnd","nativeSrc":"3708:7:32","nodeType":"YulTypedName","src":"3708:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3720:6:32","nodeType":"YulTypedName","src":"3720:6:32","type":""},{"name":"value1","nativeSrc":"3728:6:32","nodeType":"YulTypedName","src":"3728:6:32","type":""},{"name":"value2","nativeSrc":"3736:6:32","nodeType":"YulTypedName","src":"3736:6:32","type":""},{"name":"value3","nativeSrc":"3744:6:32","nodeType":"YulTypedName","src":"3744:6:32","type":""},{"name":"value4","nativeSrc":"3752:6:32","nodeType":"YulTypedName","src":"3752:6:32","type":""},{"name":"value5","nativeSrc":"3760:6:32","nodeType":"YulTypedName","src":"3760:6:32","type":""},{"name":"value6","nativeSrc":"3768:6:32","nodeType":"YulTypedName","src":"3768:6:32","type":""}],"src":"3578:1633:32"},{"body":{"nativeSrc":"5276:40:32","nodeType":"YulBlock","src":"5276:40:32","statements":[{"nativeSrc":"5287:22:32","nodeType":"YulAssignment","src":"5287:22:32","value":{"arguments":[{"name":"value","nativeSrc":"5303:5:32","nodeType":"YulIdentifier","src":"5303:5:32"}],"functionName":{"name":"mload","nativeSrc":"5297:5:32","nodeType":"YulIdentifier","src":"5297:5:32"},"nativeSrc":"5297:12:32","nodeType":"YulFunctionCall","src":"5297:12:32"},"variableNames":[{"name":"length","nativeSrc":"5287:6:32","nodeType":"YulIdentifier","src":"5287:6:32"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"5217:99:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5259:5:32","nodeType":"YulTypedName","src":"5259:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5269:6:32","nodeType":"YulTypedName","src":"5269:6:32","type":""}],"src":"5217:99:32"},{"body":{"nativeSrc":"5350:152:32","nodeType":"YulBlock","src":"5350:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5367:1:32","nodeType":"YulLiteral","src":"5367:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5370:77:32","nodeType":"YulLiteral","src":"5370:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5360:6:32","nodeType":"YulIdentifier","src":"5360:6:32"},"nativeSrc":"5360:88:32","nodeType":"YulFunctionCall","src":"5360:88:32"},"nativeSrc":"5360:88:32","nodeType":"YulExpressionStatement","src":"5360:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5464:1:32","nodeType":"YulLiteral","src":"5464:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"5467:4:32","nodeType":"YulLiteral","src":"5467:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5457:6:32","nodeType":"YulIdentifier","src":"5457:6:32"},"nativeSrc":"5457:15:32","nodeType":"YulFunctionCall","src":"5457:15:32"},"nativeSrc":"5457:15:32","nodeType":"YulExpressionStatement","src":"5457:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5488:1:32","nodeType":"YulLiteral","src":"5488:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5491:4:32","nodeType":"YulLiteral","src":"5491:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5481:6:32","nodeType":"YulIdentifier","src":"5481:6:32"},"nativeSrc":"5481:15:32","nodeType":"YulFunctionCall","src":"5481:15:32"},"nativeSrc":"5481:15:32","nodeType":"YulExpressionStatement","src":"5481:15:32"}]},"name":"panic_error_0x22","nativeSrc":"5322:180:32","nodeType":"YulFunctionDefinition","src":"5322:180:32"},{"body":{"nativeSrc":"5559:269:32","nodeType":"YulBlock","src":"5559:269:32","statements":[{"nativeSrc":"5569:22:32","nodeType":"YulAssignment","src":"5569:22:32","value":{"arguments":[{"name":"data","nativeSrc":"5583:4:32","nodeType":"YulIdentifier","src":"5583:4:32"},{"kind":"number","nativeSrc":"5589:1:32","nodeType":"YulLiteral","src":"5589:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5579:3:32","nodeType":"YulIdentifier","src":"5579:3:32"},"nativeSrc":"5579:12:32","nodeType":"YulFunctionCall","src":"5579:12:32"},"variableNames":[{"name":"length","nativeSrc":"5569:6:32","nodeType":"YulIdentifier","src":"5569:6:32"}]},{"nativeSrc":"5600:38:32","nodeType":"YulVariableDeclaration","src":"5600:38:32","value":{"arguments":[{"name":"data","nativeSrc":"5630:4:32","nodeType":"YulIdentifier","src":"5630:4:32"},{"kind":"number","nativeSrc":"5636:1:32","nodeType":"YulLiteral","src":"5636:1:32","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5626:3:32","nodeType":"YulIdentifier","src":"5626:3:32"},"nativeSrc":"5626:12:32","nodeType":"YulFunctionCall","src":"5626:12:32"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5604:18:32","nodeType":"YulTypedName","src":"5604:18:32","type":""}]},{"body":{"nativeSrc":"5677:51:32","nodeType":"YulBlock","src":"5677:51:32","statements":[{"nativeSrc":"5691:27:32","nodeType":"YulAssignment","src":"5691:27:32","value":{"arguments":[{"name":"length","nativeSrc":"5705:6:32","nodeType":"YulIdentifier","src":"5705:6:32"},{"kind":"number","nativeSrc":"5713:4:32","nodeType":"YulLiteral","src":"5713:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"5701:3:32","nodeType":"YulIdentifier","src":"5701:3:32"},"nativeSrc":"5701:17:32","nodeType":"YulFunctionCall","src":"5701:17:32"},"variableNames":[{"name":"length","nativeSrc":"5691:6:32","nodeType":"YulIdentifier","src":"5691:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5657:18:32","nodeType":"YulIdentifier","src":"5657:18:32"}],"functionName":{"name":"iszero","nativeSrc":"5650:6:32","nodeType":"YulIdentifier","src":"5650:6:32"},"nativeSrc":"5650:26:32","nodeType":"YulFunctionCall","src":"5650:26:32"},"nativeSrc":"5647:81:32","nodeType":"YulIf","src":"5647:81:32"},{"body":{"nativeSrc":"5780:42:32","nodeType":"YulBlock","src":"5780:42:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"5794:16:32","nodeType":"YulIdentifier","src":"5794:16:32"},"nativeSrc":"5794:18:32","nodeType":"YulFunctionCall","src":"5794:18:32"},"nativeSrc":"5794:18:32","nodeType":"YulExpressionStatement","src":"5794:18:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5744:18:32","nodeType":"YulIdentifier","src":"5744:18:32"},{"arguments":[{"name":"length","nativeSrc":"5767:6:32","nodeType":"YulIdentifier","src":"5767:6:32"},{"kind":"number","nativeSrc":"5775:2:32","nodeType":"YulLiteral","src":"5775:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5764:2:32","nodeType":"YulIdentifier","src":"5764:2:32"},"nativeSrc":"5764:14:32","nodeType":"YulFunctionCall","src":"5764:14:32"}],"functionName":{"name":"eq","nativeSrc":"5741:2:32","nodeType":"YulIdentifier","src":"5741:2:32"},"nativeSrc":"5741:38:32","nodeType":"YulFunctionCall","src":"5741:38:32"},"nativeSrc":"5738:84:32","nodeType":"YulIf","src":"5738:84:32"}]},"name":"extract_byte_array_length","nativeSrc":"5508:320:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5543:4:32","nodeType":"YulTypedName","src":"5543:4:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5552:6:32","nodeType":"YulTypedName","src":"5552:6:32","type":""}],"src":"5508:320:32"},{"body":{"nativeSrc":"5888:87:32","nodeType":"YulBlock","src":"5888:87:32","statements":[{"nativeSrc":"5898:11:32","nodeType":"YulAssignment","src":"5898:11:32","value":{"name":"ptr","nativeSrc":"5906:3:32","nodeType":"YulIdentifier","src":"5906:3:32"},"variableNames":[{"name":"data","nativeSrc":"5898:4:32","nodeType":"YulIdentifier","src":"5898:4:32"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5926:1:32","nodeType":"YulLiteral","src":"5926:1:32","type":"","value":"0"},{"name":"ptr","nativeSrc":"5929:3:32","nodeType":"YulIdentifier","src":"5929:3:32"}],"functionName":{"name":"mstore","nativeSrc":"5919:6:32","nodeType":"YulIdentifier","src":"5919:6:32"},"nativeSrc":"5919:14:32","nodeType":"YulFunctionCall","src":"5919:14:32"},"nativeSrc":"5919:14:32","nodeType":"YulExpressionStatement","src":"5919:14:32"},{"nativeSrc":"5942:26:32","nodeType":"YulAssignment","src":"5942:26:32","value":{"arguments":[{"kind":"number","nativeSrc":"5960:1:32","nodeType":"YulLiteral","src":"5960:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5963:4:32","nodeType":"YulLiteral","src":"5963:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"5950:9:32","nodeType":"YulIdentifier","src":"5950:9:32"},"nativeSrc":"5950:18:32","nodeType":"YulFunctionCall","src":"5950:18:32"},"variableNames":[{"name":"data","nativeSrc":"5942:4:32","nodeType":"YulIdentifier","src":"5942:4:32"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"5834:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"5875:3:32","nodeType":"YulTypedName","src":"5875:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"5883:4:32","nodeType":"YulTypedName","src":"5883:4:32","type":""}],"src":"5834:141:32"},{"body":{"nativeSrc":"6025:49:32","nodeType":"YulBlock","src":"6025:49:32","statements":[{"nativeSrc":"6035:33:32","nodeType":"YulAssignment","src":"6035:33:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6053:5:32","nodeType":"YulIdentifier","src":"6053:5:32"},{"kind":"number","nativeSrc":"6060:2:32","nodeType":"YulLiteral","src":"6060:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6049:3:32","nodeType":"YulIdentifier","src":"6049:3:32"},"nativeSrc":"6049:14:32","nodeType":"YulFunctionCall","src":"6049:14:32"},{"kind":"number","nativeSrc":"6065:2:32","nodeType":"YulLiteral","src":"6065:2:32","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"6045:3:32","nodeType":"YulIdentifier","src":"6045:3:32"},"nativeSrc":"6045:23:32","nodeType":"YulFunctionCall","src":"6045:23:32"},"variableNames":[{"name":"result","nativeSrc":"6035:6:32","nodeType":"YulIdentifier","src":"6035:6:32"}]}]},"name":"divide_by_32_ceil","nativeSrc":"5981:93:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6008:5:32","nodeType":"YulTypedName","src":"6008:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6018:6:32","nodeType":"YulTypedName","src":"6018:6:32","type":""}],"src":"5981:93:32"},{"body":{"nativeSrc":"6133:54:32","nodeType":"YulBlock","src":"6133:54:32","statements":[{"nativeSrc":"6143:37:32","nodeType":"YulAssignment","src":"6143:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"6168:4:32","nodeType":"YulIdentifier","src":"6168:4:32"},{"name":"value","nativeSrc":"6174:5:32","nodeType":"YulIdentifier","src":"6174:5:32"}],"functionName":{"name":"shl","nativeSrc":"6164:3:32","nodeType":"YulIdentifier","src":"6164:3:32"},"nativeSrc":"6164:16:32","nodeType":"YulFunctionCall","src":"6164:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"6143:8:32","nodeType":"YulIdentifier","src":"6143:8:32"}]}]},"name":"shift_left_dynamic","nativeSrc":"6080:107:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"6108:4:32","nodeType":"YulTypedName","src":"6108:4:32","type":""},{"name":"value","nativeSrc":"6114:5:32","nodeType":"YulTypedName","src":"6114:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"6124:8:32","nodeType":"YulTypedName","src":"6124:8:32","type":""}],"src":"6080:107:32"},{"body":{"nativeSrc":"6269:317:32","nodeType":"YulBlock","src":"6269:317:32","statements":[{"nativeSrc":"6279:35:32","nodeType":"YulVariableDeclaration","src":"6279:35:32","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"6300:10:32","nodeType":"YulIdentifier","src":"6300:10:32"},{"kind":"number","nativeSrc":"6312:1:32","nodeType":"YulLiteral","src":"6312:1:32","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"6296:3:32","nodeType":"YulIdentifier","src":"6296:3:32"},"nativeSrc":"6296:18:32","nodeType":"YulFunctionCall","src":"6296:18:32"},"variables":[{"name":"shiftBits","nativeSrc":"6283:9:32","nodeType":"YulTypedName","src":"6283:9:32","type":""}]},{"nativeSrc":"6323:109:32","nodeType":"YulVariableDeclaration","src":"6323:109:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"6354:9:32","nodeType":"YulIdentifier","src":"6354:9:32"},{"kind":"number","nativeSrc":"6365:66:32","nodeType":"YulLiteral","src":"6365:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"6335:18:32","nodeType":"YulIdentifier","src":"6335:18:32"},"nativeSrc":"6335:97:32","nodeType":"YulFunctionCall","src":"6335:97:32"},"variables":[{"name":"mask","nativeSrc":"6327:4:32","nodeType":"YulTypedName","src":"6327:4:32","type":""}]},{"nativeSrc":"6441:51:32","nodeType":"YulAssignment","src":"6441:51:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"6472:9:32","nodeType":"YulIdentifier","src":"6472:9:32"},{"name":"toInsert","nativeSrc":"6483:8:32","nodeType":"YulIdentifier","src":"6483:8:32"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"6453:18:32","nodeType":"YulIdentifier","src":"6453:18:32"},"nativeSrc":"6453:39:32","nodeType":"YulFunctionCall","src":"6453:39:32"},"variableNames":[{"name":"toInsert","nativeSrc":"6441:8:32","nodeType":"YulIdentifier","src":"6441:8:32"}]},{"nativeSrc":"6501:30:32","nodeType":"YulAssignment","src":"6501:30:32","value":{"arguments":[{"name":"value","nativeSrc":"6514:5:32","nodeType":"YulIdentifier","src":"6514:5:32"},{"arguments":[{"name":"mask","nativeSrc":"6525:4:32","nodeType":"YulIdentifier","src":"6525:4:32"}],"functionName":{"name":"not","nativeSrc":"6521:3:32","nodeType":"YulIdentifier","src":"6521:3:32"},"nativeSrc":"6521:9:32","nodeType":"YulFunctionCall","src":"6521:9:32"}],"functionName":{"name":"and","nativeSrc":"6510:3:32","nodeType":"YulIdentifier","src":"6510:3:32"},"nativeSrc":"6510:21:32","nodeType":"YulFunctionCall","src":"6510:21:32"},"variableNames":[{"name":"value","nativeSrc":"6501:5:32","nodeType":"YulIdentifier","src":"6501:5:32"}]},{"nativeSrc":"6540:40:32","nodeType":"YulAssignment","src":"6540:40:32","value":{"arguments":[{"name":"value","nativeSrc":"6553:5:32","nodeType":"YulIdentifier","src":"6553:5:32"},{"arguments":[{"name":"toInsert","nativeSrc":"6564:8:32","nodeType":"YulIdentifier","src":"6564:8:32"},{"name":"mask","nativeSrc":"6574:4:32","nodeType":"YulIdentifier","src":"6574:4:32"}],"functionName":{"name":"and","nativeSrc":"6560:3:32","nodeType":"YulIdentifier","src":"6560:3:32"},"nativeSrc":"6560:19:32","nodeType":"YulFunctionCall","src":"6560:19:32"}],"functionName":{"name":"or","nativeSrc":"6550:2:32","nodeType":"YulIdentifier","src":"6550:2:32"},"nativeSrc":"6550:30:32","nodeType":"YulFunctionCall","src":"6550:30:32"},"variableNames":[{"name":"result","nativeSrc":"6540:6:32","nodeType":"YulIdentifier","src":"6540:6:32"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"6193:393:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6230:5:32","nodeType":"YulTypedName","src":"6230:5:32","type":""},{"name":"shiftBytes","nativeSrc":"6237:10:32","nodeType":"YulTypedName","src":"6237:10:32","type":""},{"name":"toInsert","nativeSrc":"6249:8:32","nodeType":"YulTypedName","src":"6249:8:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6262:6:32","nodeType":"YulTypedName","src":"6262:6:32","type":""}],"src":"6193:393:32"},{"body":{"nativeSrc":"6637:32:32","nodeType":"YulBlock","src":"6637:32:32","statements":[{"nativeSrc":"6647:16:32","nodeType":"YulAssignment","src":"6647:16:32","value":{"name":"value","nativeSrc":"6658:5:32","nodeType":"YulIdentifier","src":"6658:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"6647:7:32","nodeType":"YulIdentifier","src":"6647:7:32"}]}]},"name":"cleanup_t_uint256","nativeSrc":"6592:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6619:5:32","nodeType":"YulTypedName","src":"6619:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6629:7:32","nodeType":"YulTypedName","src":"6629:7:32","type":""}],"src":"6592:77:32"},{"body":{"nativeSrc":"6707:28:32","nodeType":"YulBlock","src":"6707:28:32","statements":[{"nativeSrc":"6717:12:32","nodeType":"YulAssignment","src":"6717:12:32","value":{"name":"value","nativeSrc":"6724:5:32","nodeType":"YulIdentifier","src":"6724:5:32"},"variableNames":[{"name":"ret","nativeSrc":"6717:3:32","nodeType":"YulIdentifier","src":"6717:3:32"}]}]},"name":"identity","nativeSrc":"6675:60:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6693:5:32","nodeType":"YulTypedName","src":"6693:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6703:3:32","nodeType":"YulTypedName","src":"6703:3:32","type":""}],"src":"6675:60:32"},{"body":{"nativeSrc":"6801:82:32","nodeType":"YulBlock","src":"6801:82:32","statements":[{"nativeSrc":"6811:66:32","nodeType":"YulAssignment","src":"6811:66:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6869:5:32","nodeType":"YulIdentifier","src":"6869:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6851:17:32","nodeType":"YulIdentifier","src":"6851:17:32"},"nativeSrc":"6851:24:32","nodeType":"YulFunctionCall","src":"6851:24:32"}],"functionName":{"name":"identity","nativeSrc":"6842:8:32","nodeType":"YulIdentifier","src":"6842:8:32"},"nativeSrc":"6842:34:32","nodeType":"YulFunctionCall","src":"6842:34:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6824:17:32","nodeType":"YulIdentifier","src":"6824:17:32"},"nativeSrc":"6824:53:32","nodeType":"YulFunctionCall","src":"6824:53:32"},"variableNames":[{"name":"converted","nativeSrc":"6811:9:32","nodeType":"YulIdentifier","src":"6811:9:32"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"6741:142:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6781:5:32","nodeType":"YulTypedName","src":"6781:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"6791:9:32","nodeType":"YulTypedName","src":"6791:9:32","type":""}],"src":"6741:142:32"},{"body":{"nativeSrc":"6936:28:32","nodeType":"YulBlock","src":"6936:28:32","statements":[{"nativeSrc":"6946:12:32","nodeType":"YulAssignment","src":"6946:12:32","value":{"name":"value","nativeSrc":"6953:5:32","nodeType":"YulIdentifier","src":"6953:5:32"},"variableNames":[{"name":"ret","nativeSrc":"6946:3:32","nodeType":"YulIdentifier","src":"6946:3:32"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"6889:75:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6922:5:32","nodeType":"YulTypedName","src":"6922:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6932:3:32","nodeType":"YulTypedName","src":"6932:3:32","type":""}],"src":"6889:75:32"},{"body":{"nativeSrc":"7046:193:32","nodeType":"YulBlock","src":"7046:193:32","statements":[{"nativeSrc":"7056:63:32","nodeType":"YulVariableDeclaration","src":"7056:63:32","value":{"arguments":[{"name":"value_0","nativeSrc":"7111:7:32","nodeType":"YulIdentifier","src":"7111:7:32"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"7080:30:32","nodeType":"YulIdentifier","src":"7080:30:32"},"nativeSrc":"7080:39:32","nodeType":"YulFunctionCall","src":"7080:39:32"},"variables":[{"name":"convertedValue_0","nativeSrc":"7060:16:32","nodeType":"YulTypedName","src":"7060:16:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7135:4:32","nodeType":"YulIdentifier","src":"7135:4:32"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7175:4:32","nodeType":"YulIdentifier","src":"7175:4:32"}],"functionName":{"name":"sload","nativeSrc":"7169:5:32","nodeType":"YulIdentifier","src":"7169:5:32"},"nativeSrc":"7169:11:32","nodeType":"YulFunctionCall","src":"7169:11:32"},{"name":"offset","nativeSrc":"7182:6:32","nodeType":"YulIdentifier","src":"7182:6:32"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"7214:16:32","nodeType":"YulIdentifier","src":"7214:16:32"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"7190:23:32","nodeType":"YulIdentifier","src":"7190:23:32"},"nativeSrc":"7190:41:32","nodeType":"YulFunctionCall","src":"7190:41:32"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"7141:27:32","nodeType":"YulIdentifier","src":"7141:27:32"},"nativeSrc":"7141:91:32","nodeType":"YulFunctionCall","src":"7141:91:32"}],"functionName":{"name":"sstore","nativeSrc":"7128:6:32","nodeType":"YulIdentifier","src":"7128:6:32"},"nativeSrc":"7128:105:32","nodeType":"YulFunctionCall","src":"7128:105:32"},"nativeSrc":"7128:105:32","nodeType":"YulExpressionStatement","src":"7128:105:32"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6970:269:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7023:4:32","nodeType":"YulTypedName","src":"7023:4:32","type":""},{"name":"offset","nativeSrc":"7029:6:32","nodeType":"YulTypedName","src":"7029:6:32","type":""},{"name":"value_0","nativeSrc":"7037:7:32","nodeType":"YulTypedName","src":"7037:7:32","type":""}],"src":"6970:269:32"},{"body":{"nativeSrc":"7294:24:32","nodeType":"YulBlock","src":"7294:24:32","statements":[{"nativeSrc":"7304:8:32","nodeType":"YulAssignment","src":"7304:8:32","value":{"kind":"number","nativeSrc":"7311:1:32","nodeType":"YulLiteral","src":"7311:1:32","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"7304:3:32","nodeType":"YulIdentifier","src":"7304:3:32"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"7245:73:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"7290:3:32","nodeType":"YulTypedName","src":"7290:3:32","type":""}],"src":"7245:73:32"},{"body":{"nativeSrc":"7377:136:32","nodeType":"YulBlock","src":"7377:136:32","statements":[{"nativeSrc":"7387:46:32","nodeType":"YulVariableDeclaration","src":"7387:46:32","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"7401:30:32","nodeType":"YulIdentifier","src":"7401:30:32"},"nativeSrc":"7401:32:32","nodeType":"YulFunctionCall","src":"7401:32:32"},"variables":[{"name":"zero_0","nativeSrc":"7391:6:32","nodeType":"YulTypedName","src":"7391:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7486:4:32","nodeType":"YulIdentifier","src":"7486:4:32"},{"name":"offset","nativeSrc":"7492:6:32","nodeType":"YulIdentifier","src":"7492:6:32"},{"name":"zero_0","nativeSrc":"7500:6:32","nodeType":"YulIdentifier","src":"7500:6:32"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"7442:43:32","nodeType":"YulIdentifier","src":"7442:43:32"},"nativeSrc":"7442:65:32","nodeType":"YulFunctionCall","src":"7442:65:32"},"nativeSrc":"7442:65:32","nodeType":"YulExpressionStatement","src":"7442:65:32"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"7324:189:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7363:4:32","nodeType":"YulTypedName","src":"7363:4:32","type":""},{"name":"offset","nativeSrc":"7369:6:32","nodeType":"YulTypedName","src":"7369:6:32","type":""}],"src":"7324:189:32"},{"body":{"nativeSrc":"7569:136:32","nodeType":"YulBlock","src":"7569:136:32","statements":[{"body":{"nativeSrc":"7636:63:32","nodeType":"YulBlock","src":"7636:63:32","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"7680:5:32","nodeType":"YulIdentifier","src":"7680:5:32"},{"kind":"number","nativeSrc":"7687:1:32","nodeType":"YulLiteral","src":"7687:1:32","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"7650:29:32","nodeType":"YulIdentifier","src":"7650:29:32"},"nativeSrc":"7650:39:32","nodeType":"YulFunctionCall","src":"7650:39:32"},"nativeSrc":"7650:39:32","nodeType":"YulExpressionStatement","src":"7650:39:32"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"7589:5:32","nodeType":"YulIdentifier","src":"7589:5:32"},{"name":"end","nativeSrc":"7596:3:32","nodeType":"YulIdentifier","src":"7596:3:32"}],"functionName":{"name":"lt","nativeSrc":"7586:2:32","nodeType":"YulIdentifier","src":"7586:2:32"},"nativeSrc":"7586:14:32","nodeType":"YulFunctionCall","src":"7586:14:32"},"nativeSrc":"7579:120:32","nodeType":"YulForLoop","post":{"nativeSrc":"7601:26:32","nodeType":"YulBlock","src":"7601:26:32","statements":[{"nativeSrc":"7603:22:32","nodeType":"YulAssignment","src":"7603:22:32","value":{"arguments":[{"name":"start","nativeSrc":"7616:5:32","nodeType":"YulIdentifier","src":"7616:5:32"},{"kind":"number","nativeSrc":"7623:1:32","nodeType":"YulLiteral","src":"7623:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7612:3:32","nodeType":"YulIdentifier","src":"7612:3:32"},"nativeSrc":"7612:13:32","nodeType":"YulFunctionCall","src":"7612:13:32"},"variableNames":[{"name":"start","nativeSrc":"7603:5:32","nodeType":"YulIdentifier","src":"7603:5:32"}]}]},"pre":{"nativeSrc":"7583:2:32","nodeType":"YulBlock","src":"7583:2:32","statements":[]},"src":"7579:120:32"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"7519:186:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"7557:5:32","nodeType":"YulTypedName","src":"7557:5:32","type":""},{"name":"end","nativeSrc":"7564:3:32","nodeType":"YulTypedName","src":"7564:3:32","type":""}],"src":"7519:186:32"},{"body":{"nativeSrc":"7790:464:32","nodeType":"YulBlock","src":"7790:464:32","statements":[{"body":{"nativeSrc":"7816:431:32","nodeType":"YulBlock","src":"7816:431:32","statements":[{"nativeSrc":"7830:54:32","nodeType":"YulVariableDeclaration","src":"7830:54:32","value":{"arguments":[{"name":"array","nativeSrc":"7878:5:32","nodeType":"YulIdentifier","src":"7878:5:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"7846:31:32","nodeType":"YulIdentifier","src":"7846:31:32"},"nativeSrc":"7846:38:32","nodeType":"YulFunctionCall","src":"7846:38:32"},"variables":[{"name":"dataArea","nativeSrc":"7834:8:32","nodeType":"YulTypedName","src":"7834:8:32","type":""}]},{"nativeSrc":"7897:63:32","nodeType":"YulVariableDeclaration","src":"7897:63:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"7920:8:32","nodeType":"YulIdentifier","src":"7920:8:32"},{"arguments":[{"name":"startIndex","nativeSrc":"7948:10:32","nodeType":"YulIdentifier","src":"7948:10:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7930:17:32","nodeType":"YulIdentifier","src":"7930:17:32"},"nativeSrc":"7930:29:32","nodeType":"YulFunctionCall","src":"7930:29:32"}],"functionName":{"name":"add","nativeSrc":"7916:3:32","nodeType":"YulIdentifier","src":"7916:3:32"},"nativeSrc":"7916:44:32","nodeType":"YulFunctionCall","src":"7916:44:32"},"variables":[{"name":"deleteStart","nativeSrc":"7901:11:32","nodeType":"YulTypedName","src":"7901:11:32","type":""}]},{"body":{"nativeSrc":"8117:27:32","nodeType":"YulBlock","src":"8117:27:32","statements":[{"nativeSrc":"8119:23:32","nodeType":"YulAssignment","src":"8119:23:32","value":{"name":"dataArea","nativeSrc":"8134:8:32","nodeType":"YulIdentifier","src":"8134:8:32"},"variableNames":[{"name":"deleteStart","nativeSrc":"8119:11:32","nodeType":"YulIdentifier","src":"8119:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"8101:10:32","nodeType":"YulIdentifier","src":"8101:10:32"},{"kind":"number","nativeSrc":"8113:2:32","nodeType":"YulLiteral","src":"8113:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8098:2:32","nodeType":"YulIdentifier","src":"8098:2:32"},"nativeSrc":"8098:18:32","nodeType":"YulFunctionCall","src":"8098:18:32"},"nativeSrc":"8095:49:32","nodeType":"YulIf","src":"8095:49:32"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"8186:11:32","nodeType":"YulIdentifier","src":"8186:11:32"},{"arguments":[{"name":"dataArea","nativeSrc":"8203:8:32","nodeType":"YulIdentifier","src":"8203:8:32"},{"arguments":[{"name":"len","nativeSrc":"8231:3:32","nodeType":"YulIdentifier","src":"8231:3:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"8213:17:32","nodeType":"YulIdentifier","src":"8213:17:32"},"nativeSrc":"8213:22:32","nodeType":"YulFunctionCall","src":"8213:22:32"}],"functionName":{"name":"add","nativeSrc":"8199:3:32","nodeType":"YulIdentifier","src":"8199:3:32"},"nativeSrc":"8199:37:32","nodeType":"YulFunctionCall","src":"8199:37:32"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"8157:28:32","nodeType":"YulIdentifier","src":"8157:28:32"},"nativeSrc":"8157:80:32","nodeType":"YulFunctionCall","src":"8157:80:32"},"nativeSrc":"8157:80:32","nodeType":"YulExpressionStatement","src":"8157:80:32"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7807:3:32","nodeType":"YulIdentifier","src":"7807:3:32"},{"kind":"number","nativeSrc":"7812:2:32","nodeType":"YulLiteral","src":"7812:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7804:2:32","nodeType":"YulIdentifier","src":"7804:2:32"},"nativeSrc":"7804:11:32","nodeType":"YulFunctionCall","src":"7804:11:32"},"nativeSrc":"7801:446:32","nodeType":"YulIf","src":"7801:446:32"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7711:543:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7766:5:32","nodeType":"YulTypedName","src":"7766:5:32","type":""},{"name":"len","nativeSrc":"7773:3:32","nodeType":"YulTypedName","src":"7773:3:32","type":""},{"name":"startIndex","nativeSrc":"7778:10:32","nodeType":"YulTypedName","src":"7778:10:32","type":""}],"src":"7711:543:32"},{"body":{"nativeSrc":"8323:54:32","nodeType":"YulBlock","src":"8323:54:32","statements":[{"nativeSrc":"8333:37:32","nodeType":"YulAssignment","src":"8333:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"8358:4:32","nodeType":"YulIdentifier","src":"8358:4:32"},{"name":"value","nativeSrc":"8364:5:32","nodeType":"YulIdentifier","src":"8364:5:32"}],"functionName":{"name":"shr","nativeSrc":"8354:3:32","nodeType":"YulIdentifier","src":"8354:3:32"},"nativeSrc":"8354:16:32","nodeType":"YulFunctionCall","src":"8354:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"8333:8:32","nodeType":"YulIdentifier","src":"8333:8:32"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"8260:117:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"8298:4:32","nodeType":"YulTypedName","src":"8298:4:32","type":""},{"name":"value","nativeSrc":"8304:5:32","nodeType":"YulTypedName","src":"8304:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"8314:8:32","nodeType":"YulTypedName","src":"8314:8:32","type":""}],"src":"8260:117:32"},{"body":{"nativeSrc":"8434:118:32","nodeType":"YulBlock","src":"8434:118:32","statements":[{"nativeSrc":"8444:68:32","nodeType":"YulVariableDeclaration","src":"8444:68:32","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8493:1:32","nodeType":"YulLiteral","src":"8493:1:32","type":"","value":"8"},{"name":"bytes","nativeSrc":"8496:5:32","nodeType":"YulIdentifier","src":"8496:5:32"}],"functionName":{"name":"mul","nativeSrc":"8489:3:32","nodeType":"YulIdentifier","src":"8489:3:32"},"nativeSrc":"8489:13:32","nodeType":"YulFunctionCall","src":"8489:13:32"},{"arguments":[{"kind":"number","nativeSrc":"8508:1:32","nodeType":"YulLiteral","src":"8508:1:32","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8504:3:32","nodeType":"YulIdentifier","src":"8504:3:32"},"nativeSrc":"8504:6:32","nodeType":"YulFunctionCall","src":"8504:6:32"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"8460:28:32","nodeType":"YulIdentifier","src":"8460:28:32"},"nativeSrc":"8460:51:32","nodeType":"YulFunctionCall","src":"8460:51:32"}],"functionName":{"name":"not","nativeSrc":"8456:3:32","nodeType":"YulIdentifier","src":"8456:3:32"},"nativeSrc":"8456:56:32","nodeType":"YulFunctionCall","src":"8456:56:32"},"variables":[{"name":"mask","nativeSrc":"8448:4:32","nodeType":"YulTypedName","src":"8448:4:32","type":""}]},{"nativeSrc":"8521:25:32","nodeType":"YulAssignment","src":"8521:25:32","value":{"arguments":[{"name":"data","nativeSrc":"8535:4:32","nodeType":"YulIdentifier","src":"8535:4:32"},{"name":"mask","nativeSrc":"8541:4:32","nodeType":"YulIdentifier","src":"8541:4:32"}],"functionName":{"name":"and","nativeSrc":"8531:3:32","nodeType":"YulIdentifier","src":"8531:3:32"},"nativeSrc":"8531:15:32","nodeType":"YulFunctionCall","src":"8531:15:32"},"variableNames":[{"name":"result","nativeSrc":"8521:6:32","nodeType":"YulIdentifier","src":"8521:6:32"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"8383:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8411:4:32","nodeType":"YulTypedName","src":"8411:4:32","type":""},{"name":"bytes","nativeSrc":"8417:5:32","nodeType":"YulTypedName","src":"8417:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"8427:6:32","nodeType":"YulTypedName","src":"8427:6:32","type":""}],"src":"8383:169:32"},{"body":{"nativeSrc":"8638:214:32","nodeType":"YulBlock","src":"8638:214:32","statements":[{"nativeSrc":"8771:37:32","nodeType":"YulAssignment","src":"8771:37:32","value":{"arguments":[{"name":"data","nativeSrc":"8798:4:32","nodeType":"YulIdentifier","src":"8798:4:32"},{"name":"len","nativeSrc":"8804:3:32","nodeType":"YulIdentifier","src":"8804:3:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8779:18:32","nodeType":"YulIdentifier","src":"8779:18:32"},"nativeSrc":"8779:29:32","nodeType":"YulFunctionCall","src":"8779:29:32"},"variableNames":[{"name":"data","nativeSrc":"8771:4:32","nodeType":"YulIdentifier","src":"8771:4:32"}]},{"nativeSrc":"8817:29:32","nodeType":"YulAssignment","src":"8817:29:32","value":{"arguments":[{"name":"data","nativeSrc":"8828:4:32","nodeType":"YulIdentifier","src":"8828:4:32"},{"arguments":[{"kind":"number","nativeSrc":"8838:1:32","nodeType":"YulLiteral","src":"8838:1:32","type":"","value":"2"},{"name":"len","nativeSrc":"8841:3:32","nodeType":"YulIdentifier","src":"8841:3:32"}],"functionName":{"name":"mul","nativeSrc":"8834:3:32","nodeType":"YulIdentifier","src":"8834:3:32"},"nativeSrc":"8834:11:32","nodeType":"YulFunctionCall","src":"8834:11:32"}],"functionName":{"name":"or","nativeSrc":"8825:2:32","nodeType":"YulIdentifier","src":"8825:2:32"},"nativeSrc":"8825:21:32","nodeType":"YulFunctionCall","src":"8825:21:32"},"variableNames":[{"name":"used","nativeSrc":"8817:4:32","nodeType":"YulIdentifier","src":"8817:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8557:295:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8619:4:32","nodeType":"YulTypedName","src":"8619:4:32","type":""},{"name":"len","nativeSrc":"8625:3:32","nodeType":"YulTypedName","src":"8625:3:32","type":""}],"returnVariables":[{"name":"used","nativeSrc":"8633:4:32","nodeType":"YulTypedName","src":"8633:4:32","type":""}],"src":"8557:295:32"},{"body":{"nativeSrc":"8949:1303:32","nodeType":"YulBlock","src":"8949:1303:32","statements":[{"nativeSrc":"8960:51:32","nodeType":"YulVariableDeclaration","src":"8960:51:32","value":{"arguments":[{"name":"src","nativeSrc":"9007:3:32","nodeType":"YulIdentifier","src":"9007:3:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"8974:32:32","nodeType":"YulIdentifier","src":"8974:32:32"},"nativeSrc":"8974:37:32","nodeType":"YulFunctionCall","src":"8974:37:32"},"variables":[{"name":"newLen","nativeSrc":"8964:6:32","nodeType":"YulTypedName","src":"8964:6:32","type":""}]},{"body":{"nativeSrc":"9096:22:32","nodeType":"YulBlock","src":"9096:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9098:16:32","nodeType":"YulIdentifier","src":"9098:16:32"},"nativeSrc":"9098:18:32","nodeType":"YulFunctionCall","src":"9098:18:32"},"nativeSrc":"9098:18:32","nodeType":"YulExpressionStatement","src":"9098:18:32"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"9068:6:32","nodeType":"YulIdentifier","src":"9068:6:32"},{"kind":"number","nativeSrc":"9076:18:32","nodeType":"YulLiteral","src":"9076:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9065:2:32","nodeType":"YulIdentifier","src":"9065:2:32"},"nativeSrc":"9065:30:32","nodeType":"YulFunctionCall","src":"9065:30:32"},"nativeSrc":"9062:56:32","nodeType":"YulIf","src":"9062:56:32"},{"nativeSrc":"9128:52:32","nodeType":"YulVariableDeclaration","src":"9128:52:32","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"9174:4:32","nodeType":"YulIdentifier","src":"9174:4:32"}],"functionName":{"name":"sload","nativeSrc":"9168:5:32","nodeType":"YulIdentifier","src":"9168:5:32"},"nativeSrc":"9168:11:32","nodeType":"YulFunctionCall","src":"9168:11:32"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"9142:25:32","nodeType":"YulIdentifier","src":"9142:25:32"},"nativeSrc":"9142:38:32","nodeType":"YulFunctionCall","src":"9142:38:32"},"variables":[{"name":"oldLen","nativeSrc":"9132:6:32","nodeType":"YulTypedName","src":"9132:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9273:4:32","nodeType":"YulIdentifier","src":"9273:4:32"},{"name":"oldLen","nativeSrc":"9279:6:32","nodeType":"YulIdentifier","src":"9279:6:32"},{"name":"newLen","nativeSrc":"9287:6:32","nodeType":"YulIdentifier","src":"9287:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"9227:45:32","nodeType":"YulIdentifier","src":"9227:45:32"},"nativeSrc":"9227:67:32","nodeType":"YulFunctionCall","src":"9227:67:32"},"nativeSrc":"9227:67:32","nodeType":"YulExpressionStatement","src":"9227:67:32"},{"nativeSrc":"9304:18:32","nodeType":"YulVariableDeclaration","src":"9304:18:32","value":{"kind":"number","nativeSrc":"9321:1:32","nodeType":"YulLiteral","src":"9321:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"9308:9:32","nodeType":"YulTypedName","src":"9308:9:32","type":""}]},{"nativeSrc":"9332:17:32","nodeType":"YulAssignment","src":"9332:17:32","value":{"kind":"number","nativeSrc":"9345:4:32","nodeType":"YulLiteral","src":"9345:4:32","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"9332:9:32","nodeType":"YulIdentifier","src":"9332:9:32"}]},{"cases":[{"body":{"nativeSrc":"9396:611:32","nodeType":"YulBlock","src":"9396:611:32","statements":[{"nativeSrc":"9410:37:32","nodeType":"YulVariableDeclaration","src":"9410:37:32","value":{"arguments":[{"name":"newLen","nativeSrc":"9429:6:32","nodeType":"YulIdentifier","src":"9429:6:32"},{"arguments":[{"kind":"number","nativeSrc":"9441:4:32","nodeType":"YulLiteral","src":"9441:4:32","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"9437:3:32","nodeType":"YulIdentifier","src":"9437:3:32"},"nativeSrc":"9437:9:32","nodeType":"YulFunctionCall","src":"9437:9:32"}],"functionName":{"name":"and","nativeSrc":"9425:3:32","nodeType":"YulIdentifier","src":"9425:3:32"},"nativeSrc":"9425:22:32","nodeType":"YulFunctionCall","src":"9425:22:32"},"variables":[{"name":"loopEnd","nativeSrc":"9414:7:32","nodeType":"YulTypedName","src":"9414:7:32","type":""}]},{"nativeSrc":"9461:51:32","nodeType":"YulVariableDeclaration","src":"9461:51:32","value":{"arguments":[{"name":"slot","nativeSrc":"9507:4:32","nodeType":"YulIdentifier","src":"9507:4:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"9475:31:32","nodeType":"YulIdentifier","src":"9475:31:32"},"nativeSrc":"9475:37:32","nodeType":"YulFunctionCall","src":"9475:37:32"},"variables":[{"name":"dstPtr","nativeSrc":"9465:6:32","nodeType":"YulTypedName","src":"9465:6:32","type":""}]},{"nativeSrc":"9525:10:32","nodeType":"YulVariableDeclaration","src":"9525:10:32","value":{"kind":"number","nativeSrc":"9534:1:32","nodeType":"YulLiteral","src":"9534:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9529:1:32","nodeType":"YulTypedName","src":"9529:1:32","type":""}]},{"body":{"nativeSrc":"9593:163:32","nodeType":"YulBlock","src":"9593:163:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9618:6:32","nodeType":"YulIdentifier","src":"9618:6:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9636:3:32","nodeType":"YulIdentifier","src":"9636:3:32"},{"name":"srcOffset","nativeSrc":"9641:9:32","nodeType":"YulIdentifier","src":"9641:9:32"}],"functionName":{"name":"add","nativeSrc":"9632:3:32","nodeType":"YulIdentifier","src":"9632:3:32"},"nativeSrc":"9632:19:32","nodeType":"YulFunctionCall","src":"9632:19:32"}],"functionName":{"name":"mload","nativeSrc":"9626:5:32","nodeType":"YulIdentifier","src":"9626:5:32"},"nativeSrc":"9626:26:32","nodeType":"YulFunctionCall","src":"9626:26:32"}],"functionName":{"name":"sstore","nativeSrc":"9611:6:32","nodeType":"YulIdentifier","src":"9611:6:32"},"nativeSrc":"9611:42:32","nodeType":"YulFunctionCall","src":"9611:42:32"},"nativeSrc":"9611:42:32","nodeType":"YulExpressionStatement","src":"9611:42:32"},{"nativeSrc":"9670:24:32","nodeType":"YulAssignment","src":"9670:24:32","value":{"arguments":[{"name":"dstPtr","nativeSrc":"9684:6:32","nodeType":"YulIdentifier","src":"9684:6:32"},{"kind":"number","nativeSrc":"9692:1:32","nodeType":"YulLiteral","src":"9692:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9680:3:32","nodeType":"YulIdentifier","src":"9680:3:32"},"nativeSrc":"9680:14:32","nodeType":"YulFunctionCall","src":"9680:14:32"},"variableNames":[{"name":"dstPtr","nativeSrc":"9670:6:32","nodeType":"YulIdentifier","src":"9670:6:32"}]},{"nativeSrc":"9711:31:32","nodeType":"YulAssignment","src":"9711:31:32","value":{"arguments":[{"name":"srcOffset","nativeSrc":"9728:9:32","nodeType":"YulIdentifier","src":"9728:9:32"},{"kind":"number","nativeSrc":"9739:2:32","nodeType":"YulLiteral","src":"9739:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9724:3:32","nodeType":"YulIdentifier","src":"9724:3:32"},"nativeSrc":"9724:18:32","nodeType":"YulFunctionCall","src":"9724:18:32"},"variableNames":[{"name":"srcOffset","nativeSrc":"9711:9:32","nodeType":"YulIdentifier","src":"9711:9:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9559:1:32","nodeType":"YulIdentifier","src":"9559:1:32"},{"name":"loopEnd","nativeSrc":"9562:7:32","nodeType":"YulIdentifier","src":"9562:7:32"}],"functionName":{"name":"lt","nativeSrc":"9556:2:32","nodeType":"YulIdentifier","src":"9556:2:32"},"nativeSrc":"9556:14:32","nodeType":"YulFunctionCall","src":"9556:14:32"},"nativeSrc":"9548:208:32","nodeType":"YulForLoop","post":{"nativeSrc":"9571:21:32","nodeType":"YulBlock","src":"9571:21:32","statements":[{"nativeSrc":"9573:17:32","nodeType":"YulAssignment","src":"9573:17:32","value":{"arguments":[{"name":"i","nativeSrc":"9582:1:32","nodeType":"YulIdentifier","src":"9582:1:32"},{"kind":"number","nativeSrc":"9585:4:32","nodeType":"YulLiteral","src":"9585:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9578:3:32","nodeType":"YulIdentifier","src":"9578:3:32"},"nativeSrc":"9578:12:32","nodeType":"YulFunctionCall","src":"9578:12:32"},"variableNames":[{"name":"i","nativeSrc":"9573:1:32","nodeType":"YulIdentifier","src":"9573:1:32"}]}]},"pre":{"nativeSrc":"9552:3:32","nodeType":"YulBlock","src":"9552:3:32","statements":[]},"src":"9548:208:32"},{"body":{"nativeSrc":"9792:156:32","nodeType":"YulBlock","src":"9792:156:32","statements":[{"nativeSrc":"9810:43:32","nodeType":"YulVariableDeclaration","src":"9810:43:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9837:3:32","nodeType":"YulIdentifier","src":"9837:3:32"},{"name":"srcOffset","nativeSrc":"9842:9:32","nodeType":"YulIdentifier","src":"9842:9:32"}],"functionName":{"name":"add","nativeSrc":"9833:3:32","nodeType":"YulIdentifier","src":"9833:3:32"},"nativeSrc":"9833:19:32","nodeType":"YulFunctionCall","src":"9833:19:32"}],"functionName":{"name":"mload","nativeSrc":"9827:5:32","nodeType":"YulIdentifier","src":"9827:5:32"},"nativeSrc":"9827:26:32","nodeType":"YulFunctionCall","src":"9827:26:32"},"variables":[{"name":"lastValue","nativeSrc":"9814:9:32","nodeType":"YulTypedName","src":"9814:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9877:6:32","nodeType":"YulIdentifier","src":"9877:6:32"},{"arguments":[{"name":"lastValue","nativeSrc":"9904:9:32","nodeType":"YulIdentifier","src":"9904:9:32"},{"arguments":[{"name":"newLen","nativeSrc":"9919:6:32","nodeType":"YulIdentifier","src":"9919:6:32"},{"kind":"number","nativeSrc":"9927:4:32","nodeType":"YulLiteral","src":"9927:4:32","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"9915:3:32","nodeType":"YulIdentifier","src":"9915:3:32"},"nativeSrc":"9915:17:32","nodeType":"YulFunctionCall","src":"9915:17:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"9885:18:32","nodeType":"YulIdentifier","src":"9885:18:32"},"nativeSrc":"9885:48:32","nodeType":"YulFunctionCall","src":"9885:48:32"}],"functionName":{"name":"sstore","nativeSrc":"9870:6:32","nodeType":"YulIdentifier","src":"9870:6:32"},"nativeSrc":"9870:64:32","nodeType":"YulFunctionCall","src":"9870:64:32"},"nativeSrc":"9870:64:32","nodeType":"YulExpressionStatement","src":"9870:64:32"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"9775:7:32","nodeType":"YulIdentifier","src":"9775:7:32"},{"name":"newLen","nativeSrc":"9784:6:32","nodeType":"YulIdentifier","src":"9784:6:32"}],"functionName":{"name":"lt","nativeSrc":"9772:2:32","nodeType":"YulIdentifier","src":"9772:2:32"},"nativeSrc":"9772:19:32","nodeType":"YulFunctionCall","src":"9772:19:32"},"nativeSrc":"9769:179:32","nodeType":"YulIf","src":"9769:179:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9968:4:32","nodeType":"YulIdentifier","src":"9968:4:32"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"9982:6:32","nodeType":"YulIdentifier","src":"9982:6:32"},{"kind":"number","nativeSrc":"9990:1:32","nodeType":"YulLiteral","src":"9990:1:32","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"9978:3:32","nodeType":"YulIdentifier","src":"9978:3:32"},"nativeSrc":"9978:14:32","nodeType":"YulFunctionCall","src":"9978:14:32"},{"kind":"number","nativeSrc":"9994:1:32","nodeType":"YulLiteral","src":"9994:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9974:3:32","nodeType":"YulIdentifier","src":"9974:3:32"},"nativeSrc":"9974:22:32","nodeType":"YulFunctionCall","src":"9974:22:32"}],"functionName":{"name":"sstore","nativeSrc":"9961:6:32","nodeType":"YulIdentifier","src":"9961:6:32"},"nativeSrc":"9961:36:32","nodeType":"YulFunctionCall","src":"9961:36:32"},"nativeSrc":"9961:36:32","nodeType":"YulExpressionStatement","src":"9961:36:32"}]},"nativeSrc":"9389:618:32","nodeType":"YulCase","src":"9389:618:32","value":{"kind":"number","nativeSrc":"9394:1:32","nodeType":"YulLiteral","src":"9394:1:32","type":"","value":"1"}},{"body":{"nativeSrc":"10024:222:32","nodeType":"YulBlock","src":"10024:222:32","statements":[{"nativeSrc":"10038:14:32","nodeType":"YulVariableDeclaration","src":"10038:14:32","value":{"kind":"number","nativeSrc":"10051:1:32","nodeType":"YulLiteral","src":"10051:1:32","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"10042:5:32","nodeType":"YulTypedName","src":"10042:5:32","type":""}]},{"body":{"nativeSrc":"10075:67:32","nodeType":"YulBlock","src":"10075:67:32","statements":[{"nativeSrc":"10093:35:32","nodeType":"YulAssignment","src":"10093:35:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10112:3:32","nodeType":"YulIdentifier","src":"10112:3:32"},{"name":"srcOffset","nativeSrc":"10117:9:32","nodeType":"YulIdentifier","src":"10117:9:32"}],"functionName":{"name":"add","nativeSrc":"10108:3:32","nodeType":"YulIdentifier","src":"10108:3:32"},"nativeSrc":"10108:19:32","nodeType":"YulFunctionCall","src":"10108:19:32"}],"functionName":{"name":"mload","nativeSrc":"10102:5:32","nodeType":"YulIdentifier","src":"10102:5:32"},"nativeSrc":"10102:26:32","nodeType":"YulFunctionCall","src":"10102:26:32"},"variableNames":[{"name":"value","nativeSrc":"10093:5:32","nodeType":"YulIdentifier","src":"10093:5:32"}]}]},"condition":{"name":"newLen","nativeSrc":"10068:6:32","nodeType":"YulIdentifier","src":"10068:6:32"},"nativeSrc":"10065:77:32","nodeType":"YulIf","src":"10065:77:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"10162:4:32","nodeType":"YulIdentifier","src":"10162:4:32"},{"arguments":[{"name":"value","nativeSrc":"10221:5:32","nodeType":"YulIdentifier","src":"10221:5:32"},{"name":"newLen","nativeSrc":"10228:6:32","nodeType":"YulIdentifier","src":"10228:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"10168:52:32","nodeType":"YulIdentifier","src":"10168:52:32"},"nativeSrc":"10168:67:32","nodeType":"YulFunctionCall","src":"10168:67:32"}],"functionName":{"name":"sstore","nativeSrc":"10155:6:32","nodeType":"YulIdentifier","src":"10155:6:32"},"nativeSrc":"10155:81:32","nodeType":"YulFunctionCall","src":"10155:81:32"},"nativeSrc":"10155:81:32","nodeType":"YulExpressionStatement","src":"10155:81:32"}]},"nativeSrc":"10016:230:32","nodeType":"YulCase","src":"10016:230:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"9369:6:32","nodeType":"YulIdentifier","src":"9369:6:32"},{"kind":"number","nativeSrc":"9377:2:32","nodeType":"YulLiteral","src":"9377:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"9366:2:32","nodeType":"YulIdentifier","src":"9366:2:32"},"nativeSrc":"9366:14:32","nodeType":"YulFunctionCall","src":"9366:14:32"},"nativeSrc":"9359:887:32","nodeType":"YulSwitch","src":"9359:887:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"8857:1395:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"8938:4:32","nodeType":"YulTypedName","src":"8938:4:32","type":""},{"name":"src","nativeSrc":"8944:3:32","nodeType":"YulTypedName","src":"8944:3:32","type":""}],"src":"8857:1395:32"},{"body":{"nativeSrc":"10323:53:32","nodeType":"YulBlock","src":"10323:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10340:3:32","nodeType":"YulIdentifier","src":"10340:3:32"},{"arguments":[{"name":"value","nativeSrc":"10363:5:32","nodeType":"YulIdentifier","src":"10363:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"10345:17:32","nodeType":"YulIdentifier","src":"10345:17:32"},"nativeSrc":"10345:24:32","nodeType":"YulFunctionCall","src":"10345:24:32"}],"functionName":{"name":"mstore","nativeSrc":"10333:6:32","nodeType":"YulIdentifier","src":"10333:6:32"},"nativeSrc":"10333:37:32","nodeType":"YulFunctionCall","src":"10333:37:32"},"nativeSrc":"10333:37:32","nodeType":"YulExpressionStatement","src":"10333:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10258:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10311:5:32","nodeType":"YulTypedName","src":"10311:5:32","type":""},{"name":"pos","nativeSrc":"10318:3:32","nodeType":"YulTypedName","src":"10318:3:32","type":""}],"src":"10258:118:32"},{"body":{"nativeSrc":"10480:124:32","nodeType":"YulBlock","src":"10480:124:32","statements":[{"nativeSrc":"10490:26:32","nodeType":"YulAssignment","src":"10490:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"10502:9:32","nodeType":"YulIdentifier","src":"10502:9:32"},{"kind":"number","nativeSrc":"10513:2:32","nodeType":"YulLiteral","src":"10513:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10498:3:32","nodeType":"YulIdentifier","src":"10498:3:32"},"nativeSrc":"10498:18:32","nodeType":"YulFunctionCall","src":"10498:18:32"},"variableNames":[{"name":"tail","nativeSrc":"10490:4:32","nodeType":"YulIdentifier","src":"10490:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10570:6:32","nodeType":"YulIdentifier","src":"10570:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"10583:9:32","nodeType":"YulIdentifier","src":"10583:9:32"},{"kind":"number","nativeSrc":"10594:1:32","nodeType":"YulLiteral","src":"10594:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10579:3:32","nodeType":"YulIdentifier","src":"10579:3:32"},"nativeSrc":"10579:17:32","nodeType":"YulFunctionCall","src":"10579:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10526:43:32","nodeType":"YulIdentifier","src":"10526:43:32"},"nativeSrc":"10526:71:32","nodeType":"YulFunctionCall","src":"10526:71:32"},"nativeSrc":"10526:71:32","nodeType":"YulExpressionStatement","src":"10526:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"10382:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10452:9:32","nodeType":"YulTypedName","src":"10452:9:32","type":""},{"name":"value0","nativeSrc":"10464:6:32","nodeType":"YulTypedName","src":"10464:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10475:4:32","nodeType":"YulTypedName","src":"10475:4:32","type":""}],"src":"10382:222:32"},{"body":{"nativeSrc":"10706:73:32","nodeType":"YulBlock","src":"10706:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10723:3:32","nodeType":"YulIdentifier","src":"10723:3:32"},{"name":"length","nativeSrc":"10728:6:32","nodeType":"YulIdentifier","src":"10728:6:32"}],"functionName":{"name":"mstore","nativeSrc":"10716:6:32","nodeType":"YulIdentifier","src":"10716:6:32"},"nativeSrc":"10716:19:32","nodeType":"YulFunctionCall","src":"10716:19:32"},"nativeSrc":"10716:19:32","nodeType":"YulExpressionStatement","src":"10716:19:32"},{"nativeSrc":"10744:29:32","nodeType":"YulAssignment","src":"10744:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"10763:3:32","nodeType":"YulIdentifier","src":"10763:3:32"},{"kind":"number","nativeSrc":"10768:4:32","nodeType":"YulLiteral","src":"10768:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10759:3:32","nodeType":"YulIdentifier","src":"10759:3:32"},"nativeSrc":"10759:14:32","nodeType":"YulFunctionCall","src":"10759:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"10744:11:32","nodeType":"YulIdentifier","src":"10744:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10610:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10678:3:32","nodeType":"YulTypedName","src":"10678:3:32","type":""},{"name":"length","nativeSrc":"10683:6:32","nodeType":"YulTypedName","src":"10683:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10694:11:32","nodeType":"YulTypedName","src":"10694:11:32","type":""}],"src":"10610:169:32"},{"body":{"nativeSrc":"10891:73:32","nodeType":"YulBlock","src":"10891:73:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10913:6:32","nodeType":"YulIdentifier","src":"10913:6:32"},{"kind":"number","nativeSrc":"10921:1:32","nodeType":"YulLiteral","src":"10921:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10909:3:32","nodeType":"YulIdentifier","src":"10909:3:32"},"nativeSrc":"10909:14:32","nodeType":"YulFunctionCall","src":"10909:14:32"},{"hexValue":"526f79616c7479206665652063616e6e6f742065786365656420313025","kind":"string","nativeSrc":"10925:31:32","nodeType":"YulLiteral","src":"10925:31:32","type":"","value":"Royalty fee cannot exceed 10%"}],"functionName":{"name":"mstore","nativeSrc":"10902:6:32","nodeType":"YulIdentifier","src":"10902:6:32"},"nativeSrc":"10902:55:32","nodeType":"YulFunctionCall","src":"10902:55:32"},"nativeSrc":"10902:55:32","nodeType":"YulExpressionStatement","src":"10902:55:32"}]},"name":"store_literal_in_memory_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6","nativeSrc":"10785:179:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10883:6:32","nodeType":"YulTypedName","src":"10883:6:32","type":""}],"src":"10785:179:32"},{"body":{"nativeSrc":"11116:220:32","nodeType":"YulBlock","src":"11116:220:32","statements":[{"nativeSrc":"11126:74:32","nodeType":"YulAssignment","src":"11126:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"11192:3:32","nodeType":"YulIdentifier","src":"11192:3:32"},{"kind":"number","nativeSrc":"11197:2:32","nodeType":"YulLiteral","src":"11197:2:32","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11133:58:32","nodeType":"YulIdentifier","src":"11133:58:32"},"nativeSrc":"11133:67:32","nodeType":"YulFunctionCall","src":"11133:67:32"},"variableNames":[{"name":"pos","nativeSrc":"11126:3:32","nodeType":"YulIdentifier","src":"11126:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11298:3:32","nodeType":"YulIdentifier","src":"11298:3:32"}],"functionName":{"name":"store_literal_in_memory_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6","nativeSrc":"11209:88:32","nodeType":"YulIdentifier","src":"11209:88:32"},"nativeSrc":"11209:93:32","nodeType":"YulFunctionCall","src":"11209:93:32"},"nativeSrc":"11209:93:32","nodeType":"YulExpressionStatement","src":"11209:93:32"},{"nativeSrc":"11311:19:32","nodeType":"YulAssignment","src":"11311:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"11322:3:32","nodeType":"YulIdentifier","src":"11322:3:32"},{"kind":"number","nativeSrc":"11327:2:32","nodeType":"YulLiteral","src":"11327:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11318:3:32","nodeType":"YulIdentifier","src":"11318:3:32"},"nativeSrc":"11318:12:32","nodeType":"YulFunctionCall","src":"11318:12:32"},"variableNames":[{"name":"end","nativeSrc":"11311:3:32","nodeType":"YulIdentifier","src":"11311:3:32"}]}]},"name":"abi_encode_t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6_to_t_string_memory_ptr_fromStack","nativeSrc":"10970:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11104:3:32","nodeType":"YulTypedName","src":"11104:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11112:3:32","nodeType":"YulTypedName","src":"11112:3:32","type":""}],"src":"10970:366:32"},{"body":{"nativeSrc":"11513:248:32","nodeType":"YulBlock","src":"11513:248:32","statements":[{"nativeSrc":"11523:26:32","nodeType":"YulAssignment","src":"11523:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"11535:9:32","nodeType":"YulIdentifier","src":"11535:9:32"},{"kind":"number","nativeSrc":"11546:2:32","nodeType":"YulLiteral","src":"11546:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11531:3:32","nodeType":"YulIdentifier","src":"11531:3:32"},"nativeSrc":"11531:18:32","nodeType":"YulFunctionCall","src":"11531:18:32"},"variableNames":[{"name":"tail","nativeSrc":"11523:4:32","nodeType":"YulIdentifier","src":"11523:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11570:9:32","nodeType":"YulIdentifier","src":"11570:9:32"},{"kind":"number","nativeSrc":"11581:1:32","nodeType":"YulLiteral","src":"11581:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11566:3:32","nodeType":"YulIdentifier","src":"11566:3:32"},"nativeSrc":"11566:17:32","nodeType":"YulFunctionCall","src":"11566:17:32"},{"arguments":[{"name":"tail","nativeSrc":"11589:4:32","nodeType":"YulIdentifier","src":"11589:4:32"},{"name":"headStart","nativeSrc":"11595:9:32","nodeType":"YulIdentifier","src":"11595:9:32"}],"functionName":{"name":"sub","nativeSrc":"11585:3:32","nodeType":"YulIdentifier","src":"11585:3:32"},"nativeSrc":"11585:20:32","nodeType":"YulFunctionCall","src":"11585:20:32"}],"functionName":{"name":"mstore","nativeSrc":"11559:6:32","nodeType":"YulIdentifier","src":"11559:6:32"},"nativeSrc":"11559:47:32","nodeType":"YulFunctionCall","src":"11559:47:32"},"nativeSrc":"11559:47:32","nodeType":"YulExpressionStatement","src":"11559:47:32"},{"nativeSrc":"11615:139:32","nodeType":"YulAssignment","src":"11615:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"11749:4:32","nodeType":"YulIdentifier","src":"11749:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6_to_t_string_memory_ptr_fromStack","nativeSrc":"11623:124:32","nodeType":"YulIdentifier","src":"11623:124:32"},"nativeSrc":"11623:131:32","nodeType":"YulFunctionCall","src":"11623:131:32"},"variableNames":[{"name":"tail","nativeSrc":"11615:4:32","nodeType":"YulIdentifier","src":"11615:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11342:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11493:9:32","nodeType":"YulTypedName","src":"11493:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11508:4:32","nodeType":"YulTypedName","src":"11508:4:32","type":""}],"src":"11342:419:32"},{"body":{"nativeSrc":"11873:74:32","nodeType":"YulBlock","src":"11873:74:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11895:6:32","nodeType":"YulIdentifier","src":"11895:6:32"},{"kind":"number","nativeSrc":"11903:1:32","nodeType":"YulLiteral","src":"11903:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11891:3:32","nodeType":"YulIdentifier","src":"11891:3:32"},"nativeSrc":"11891:14:32","nodeType":"YulFunctionCall","src":"11891:14:32"},{"hexValue":"506c6174666f726d206665652063616e6e6f742065786365656420313025","kind":"string","nativeSrc":"11907:32:32","nodeType":"YulLiteral","src":"11907:32:32","type":"","value":"Platform fee cannot exceed 10%"}],"functionName":{"name":"mstore","nativeSrc":"11884:6:32","nodeType":"YulIdentifier","src":"11884:6:32"},"nativeSrc":"11884:56:32","nodeType":"YulFunctionCall","src":"11884:56:32"},"nativeSrc":"11884:56:32","nodeType":"YulExpressionStatement","src":"11884:56:32"}]},"name":"store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270","nativeSrc":"11767:180:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11865:6:32","nodeType":"YulTypedName","src":"11865:6:32","type":""}],"src":"11767:180:32"},{"body":{"nativeSrc":"12099:220:32","nodeType":"YulBlock","src":"12099:220:32","statements":[{"nativeSrc":"12109:74:32","nodeType":"YulAssignment","src":"12109:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"12175:3:32","nodeType":"YulIdentifier","src":"12175:3:32"},{"kind":"number","nativeSrc":"12180:2:32","nodeType":"YulLiteral","src":"12180:2:32","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12116:58:32","nodeType":"YulIdentifier","src":"12116:58:32"},"nativeSrc":"12116:67:32","nodeType":"YulFunctionCall","src":"12116:67:32"},"variableNames":[{"name":"pos","nativeSrc":"12109:3:32","nodeType":"YulIdentifier","src":"12109:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12281:3:32","nodeType":"YulIdentifier","src":"12281:3:32"}],"functionName":{"name":"store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270","nativeSrc":"12192:88:32","nodeType":"YulIdentifier","src":"12192:88:32"},"nativeSrc":"12192:93:32","nodeType":"YulFunctionCall","src":"12192:93:32"},"nativeSrc":"12192:93:32","nodeType":"YulExpressionStatement","src":"12192:93:32"},{"nativeSrc":"12294:19:32","nodeType":"YulAssignment","src":"12294:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"12305:3:32","nodeType":"YulIdentifier","src":"12305:3:32"},{"kind":"number","nativeSrc":"12310:2:32","nodeType":"YulLiteral","src":"12310:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12301:3:32","nodeType":"YulIdentifier","src":"12301:3:32"},"nativeSrc":"12301:12:32","nodeType":"YulFunctionCall","src":"12301:12:32"},"variableNames":[{"name":"end","nativeSrc":"12294:3:32","nodeType":"YulIdentifier","src":"12294:3:32"}]}]},"name":"abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack","nativeSrc":"11953:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12087:3:32","nodeType":"YulTypedName","src":"12087:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12095:3:32","nodeType":"YulTypedName","src":"12095:3:32","type":""}],"src":"11953:366:32"},{"body":{"nativeSrc":"12496:248:32","nodeType":"YulBlock","src":"12496:248:32","statements":[{"nativeSrc":"12506:26:32","nodeType":"YulAssignment","src":"12506:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"12518:9:32","nodeType":"YulIdentifier","src":"12518:9:32"},{"kind":"number","nativeSrc":"12529:2:32","nodeType":"YulLiteral","src":"12529:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12514:3:32","nodeType":"YulIdentifier","src":"12514:3:32"},"nativeSrc":"12514:18:32","nodeType":"YulFunctionCall","src":"12514:18:32"},"variableNames":[{"name":"tail","nativeSrc":"12506:4:32","nodeType":"YulIdentifier","src":"12506:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12553:9:32","nodeType":"YulIdentifier","src":"12553:9:32"},{"kind":"number","nativeSrc":"12564:1:32","nodeType":"YulLiteral","src":"12564:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12549:3:32","nodeType":"YulIdentifier","src":"12549:3:32"},"nativeSrc":"12549:17:32","nodeType":"YulFunctionCall","src":"12549:17:32"},{"arguments":[{"name":"tail","nativeSrc":"12572:4:32","nodeType":"YulIdentifier","src":"12572:4:32"},{"name":"headStart","nativeSrc":"12578:9:32","nodeType":"YulIdentifier","src":"12578:9:32"}],"functionName":{"name":"sub","nativeSrc":"12568:3:32","nodeType":"YulIdentifier","src":"12568:3:32"},"nativeSrc":"12568:20:32","nodeType":"YulFunctionCall","src":"12568:20:32"}],"functionName":{"name":"mstore","nativeSrc":"12542:6:32","nodeType":"YulIdentifier","src":"12542:6:32"},"nativeSrc":"12542:47:32","nodeType":"YulFunctionCall","src":"12542:47:32"},"nativeSrc":"12542:47:32","nodeType":"YulExpressionStatement","src":"12542:47:32"},{"nativeSrc":"12598:139:32","nodeType":"YulAssignment","src":"12598:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"12732:4:32","nodeType":"YulIdentifier","src":"12732:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack","nativeSrc":"12606:124:32","nodeType":"YulIdentifier","src":"12606:124:32"},"nativeSrc":"12606:131:32","nodeType":"YulFunctionCall","src":"12606:131:32"},"variableNames":[{"name":"tail","nativeSrc":"12598:4:32","nodeType":"YulIdentifier","src":"12598:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12325:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12476:9:32","nodeType":"YulTypedName","src":"12476:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12491:4:32","nodeType":"YulTypedName","src":"12491:4:32","type":""}],"src":"12325:419:32"},{"body":{"nativeSrc":"12856:74:32","nodeType":"YulBlock","src":"12856:74:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12878:6:32","nodeType":"YulIdentifier","src":"12878:6:32"},{"kind":"number","nativeSrc":"12886:1:32","nodeType":"YulLiteral","src":"12886:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12874:3:32","nodeType":"YulIdentifier","src":"12874:3:32"},"nativeSrc":"12874:14:32","nodeType":"YulFunctionCall","src":"12874:14:32"},{"hexValue":"496e76616c696420706c6174666f726d2066656520726563697069656e74","kind":"string","nativeSrc":"12890:32:32","nodeType":"YulLiteral","src":"12890:32:32","type":"","value":"Invalid platform fee recipient"}],"functionName":{"name":"mstore","nativeSrc":"12867:6:32","nodeType":"YulIdentifier","src":"12867:6:32"},"nativeSrc":"12867:56:32","nodeType":"YulFunctionCall","src":"12867:56:32"},"nativeSrc":"12867:56:32","nodeType":"YulExpressionStatement","src":"12867:56:32"}]},"name":"store_literal_in_memory_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0","nativeSrc":"12750:180:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12848:6:32","nodeType":"YulTypedName","src":"12848:6:32","type":""}],"src":"12750:180:32"},{"body":{"nativeSrc":"13082:220:32","nodeType":"YulBlock","src":"13082:220:32","statements":[{"nativeSrc":"13092:74:32","nodeType":"YulAssignment","src":"13092:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"13158:3:32","nodeType":"YulIdentifier","src":"13158:3:32"},{"kind":"number","nativeSrc":"13163:2:32","nodeType":"YulLiteral","src":"13163:2:32","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13099:58:32","nodeType":"YulIdentifier","src":"13099:58:32"},"nativeSrc":"13099:67:32","nodeType":"YulFunctionCall","src":"13099:67:32"},"variableNames":[{"name":"pos","nativeSrc":"13092:3:32","nodeType":"YulIdentifier","src":"13092:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13264:3:32","nodeType":"YulIdentifier","src":"13264:3:32"}],"functionName":{"name":"store_literal_in_memory_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0","nativeSrc":"13175:88:32","nodeType":"YulIdentifier","src":"13175:88:32"},"nativeSrc":"13175:93:32","nodeType":"YulFunctionCall","src":"13175:93:32"},"nativeSrc":"13175:93:32","nodeType":"YulExpressionStatement","src":"13175:93:32"},{"nativeSrc":"13277:19:32","nodeType":"YulAssignment","src":"13277:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"13288:3:32","nodeType":"YulIdentifier","src":"13288:3:32"},{"kind":"number","nativeSrc":"13293:2:32","nodeType":"YulLiteral","src":"13293:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13284:3:32","nodeType":"YulIdentifier","src":"13284:3:32"},"nativeSrc":"13284:12:32","nodeType":"YulFunctionCall","src":"13284:12:32"},"variableNames":[{"name":"end","nativeSrc":"13277:3:32","nodeType":"YulIdentifier","src":"13277:3:32"}]}]},"name":"abi_encode_t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0_to_t_string_memory_ptr_fromStack","nativeSrc":"12936:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13070:3:32","nodeType":"YulTypedName","src":"13070:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13078:3:32","nodeType":"YulTypedName","src":"13078:3:32","type":""}],"src":"12936:366:32"},{"body":{"nativeSrc":"13479:248:32","nodeType":"YulBlock","src":"13479:248:32","statements":[{"nativeSrc":"13489:26:32","nodeType":"YulAssignment","src":"13489:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"13501:9:32","nodeType":"YulIdentifier","src":"13501:9:32"},{"kind":"number","nativeSrc":"13512:2:32","nodeType":"YulLiteral","src":"13512:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13497:3:32","nodeType":"YulIdentifier","src":"13497:3:32"},"nativeSrc":"13497:18:32","nodeType":"YulFunctionCall","src":"13497:18:32"},"variableNames":[{"name":"tail","nativeSrc":"13489:4:32","nodeType":"YulIdentifier","src":"13489:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13536:9:32","nodeType":"YulIdentifier","src":"13536:9:32"},{"kind":"number","nativeSrc":"13547:1:32","nodeType":"YulLiteral","src":"13547:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13532:3:32","nodeType":"YulIdentifier","src":"13532:3:32"},"nativeSrc":"13532:17:32","nodeType":"YulFunctionCall","src":"13532:17:32"},{"arguments":[{"name":"tail","nativeSrc":"13555:4:32","nodeType":"YulIdentifier","src":"13555:4:32"},{"name":"headStart","nativeSrc":"13561:9:32","nodeType":"YulIdentifier","src":"13561:9:32"}],"functionName":{"name":"sub","nativeSrc":"13551:3:32","nodeType":"YulIdentifier","src":"13551:3:32"},"nativeSrc":"13551:20:32","nodeType":"YulFunctionCall","src":"13551:20:32"}],"functionName":{"name":"mstore","nativeSrc":"13525:6:32","nodeType":"YulIdentifier","src":"13525:6:32"},"nativeSrc":"13525:47:32","nodeType":"YulFunctionCall","src":"13525:47:32"},"nativeSrc":"13525:47:32","nodeType":"YulExpressionStatement","src":"13525:47:32"},{"nativeSrc":"13581:139:32","nodeType":"YulAssignment","src":"13581:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"13715:4:32","nodeType":"YulIdentifier","src":"13715:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0_to_t_string_memory_ptr_fromStack","nativeSrc":"13589:124:32","nodeType":"YulIdentifier","src":"13589:124:32"},"nativeSrc":"13589:131:32","nodeType":"YulFunctionCall","src":"13589:131:32"},"variableNames":[{"name":"tail","nativeSrc":"13581:4:32","nodeType":"YulIdentifier","src":"13581:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13308:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13459:9:32","nodeType":"YulTypedName","src":"13459:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13474:4:32","nodeType":"YulTypedName","src":"13474:4:32","type":""}],"src":"13308:419:32"},{"body":{"nativeSrc":"13839:66:32","nodeType":"YulBlock","src":"13839:66:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13861:6:32","nodeType":"YulIdentifier","src":"13861:6:32"},{"kind":"number","nativeSrc":"13869:1:32","nodeType":"YulLiteral","src":"13869:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13857:3:32","nodeType":"YulIdentifier","src":"13857:3:32"},"nativeSrc":"13857:14:32","nodeType":"YulFunctionCall","src":"13857:14:32"},{"hexValue":"496e76616c6964206261636b656e64207369676e6572","kind":"string","nativeSrc":"13873:24:32","nodeType":"YulLiteral","src":"13873:24:32","type":"","value":"Invalid backend signer"}],"functionName":{"name":"mstore","nativeSrc":"13850:6:32","nodeType":"YulIdentifier","src":"13850:6:32"},"nativeSrc":"13850:48:32","nodeType":"YulFunctionCall","src":"13850:48:32"},"nativeSrc":"13850:48:32","nodeType":"YulExpressionStatement","src":"13850:48:32"}]},"name":"store_literal_in_memory_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a","nativeSrc":"13733:172:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13831:6:32","nodeType":"YulTypedName","src":"13831:6:32","type":""}],"src":"13733:172:32"},{"body":{"nativeSrc":"14057:220:32","nodeType":"YulBlock","src":"14057:220:32","statements":[{"nativeSrc":"14067:74:32","nodeType":"YulAssignment","src":"14067:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"14133:3:32","nodeType":"YulIdentifier","src":"14133:3:32"},{"kind":"number","nativeSrc":"14138:2:32","nodeType":"YulLiteral","src":"14138:2:32","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14074:58:32","nodeType":"YulIdentifier","src":"14074:58:32"},"nativeSrc":"14074:67:32","nodeType":"YulFunctionCall","src":"14074:67:32"},"variableNames":[{"name":"pos","nativeSrc":"14067:3:32","nodeType":"YulIdentifier","src":"14067:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14239:3:32","nodeType":"YulIdentifier","src":"14239:3:32"}],"functionName":{"name":"store_literal_in_memory_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a","nativeSrc":"14150:88:32","nodeType":"YulIdentifier","src":"14150:88:32"},"nativeSrc":"14150:93:32","nodeType":"YulFunctionCall","src":"14150:93:32"},"nativeSrc":"14150:93:32","nodeType":"YulExpressionStatement","src":"14150:93:32"},{"nativeSrc":"14252:19:32","nodeType":"YulAssignment","src":"14252:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"14263:3:32","nodeType":"YulIdentifier","src":"14263:3:32"},{"kind":"number","nativeSrc":"14268:2:32","nodeType":"YulLiteral","src":"14268:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14259:3:32","nodeType":"YulIdentifier","src":"14259:3:32"},"nativeSrc":"14259:12:32","nodeType":"YulFunctionCall","src":"14259:12:32"},"variableNames":[{"name":"end","nativeSrc":"14252:3:32","nodeType":"YulIdentifier","src":"14252:3:32"}]}]},"name":"abi_encode_t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a_to_t_string_memory_ptr_fromStack","nativeSrc":"13911:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14045:3:32","nodeType":"YulTypedName","src":"14045:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14053:3:32","nodeType":"YulTypedName","src":"14053:3:32","type":""}],"src":"13911:366:32"},{"body":{"nativeSrc":"14454:248:32","nodeType":"YulBlock","src":"14454:248:32","statements":[{"nativeSrc":"14464:26:32","nodeType":"YulAssignment","src":"14464:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"14476:9:32","nodeType":"YulIdentifier","src":"14476:9:32"},{"kind":"number","nativeSrc":"14487:2:32","nodeType":"YulLiteral","src":"14487:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14472:3:32","nodeType":"YulIdentifier","src":"14472:3:32"},"nativeSrc":"14472:18:32","nodeType":"YulFunctionCall","src":"14472:18:32"},"variableNames":[{"name":"tail","nativeSrc":"14464:4:32","nodeType":"YulIdentifier","src":"14464:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14511:9:32","nodeType":"YulIdentifier","src":"14511:9:32"},{"kind":"number","nativeSrc":"14522:1:32","nodeType":"YulLiteral","src":"14522:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14507:3:32","nodeType":"YulIdentifier","src":"14507:3:32"},"nativeSrc":"14507:17:32","nodeType":"YulFunctionCall","src":"14507:17:32"},{"arguments":[{"name":"tail","nativeSrc":"14530:4:32","nodeType":"YulIdentifier","src":"14530:4:32"},{"name":"headStart","nativeSrc":"14536:9:32","nodeType":"YulIdentifier","src":"14536:9:32"}],"functionName":{"name":"sub","nativeSrc":"14526:3:32","nodeType":"YulIdentifier","src":"14526:3:32"},"nativeSrc":"14526:20:32","nodeType":"YulFunctionCall","src":"14526:20:32"}],"functionName":{"name":"mstore","nativeSrc":"14500:6:32","nodeType":"YulIdentifier","src":"14500:6:32"},"nativeSrc":"14500:47:32","nodeType":"YulFunctionCall","src":"14500:47:32"},"nativeSrc":"14500:47:32","nodeType":"YulExpressionStatement","src":"14500:47:32"},{"nativeSrc":"14556:139:32","nodeType":"YulAssignment","src":"14556:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"14690:4:32","nodeType":"YulIdentifier","src":"14690:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a_to_t_string_memory_ptr_fromStack","nativeSrc":"14564:124:32","nodeType":"YulIdentifier","src":"14564:124:32"},"nativeSrc":"14564:131:32","nodeType":"YulFunctionCall","src":"14564:131:32"},"variableNames":[{"name":"tail","nativeSrc":"14556:4:32","nodeType":"YulIdentifier","src":"14556:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14283:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14434:9:32","nodeType":"YulTypedName","src":"14434:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14449:4:32","nodeType":"YulTypedName","src":"14449:4:32","type":""}],"src":"14283:419:32"},{"body":{"nativeSrc":"14736:152:32","nodeType":"YulBlock","src":"14736:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14753:1:32","nodeType":"YulLiteral","src":"14753:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"14756:77:32","nodeType":"YulLiteral","src":"14756:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14746:6:32","nodeType":"YulIdentifier","src":"14746:6:32"},"nativeSrc":"14746:88:32","nodeType":"YulFunctionCall","src":"14746:88:32"},"nativeSrc":"14746:88:32","nodeType":"YulExpressionStatement","src":"14746:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14850:1:32","nodeType":"YulLiteral","src":"14850:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"14853:4:32","nodeType":"YulLiteral","src":"14853:4:32","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"14843:6:32","nodeType":"YulIdentifier","src":"14843:6:32"},"nativeSrc":"14843:15:32","nodeType":"YulFunctionCall","src":"14843:15:32"},"nativeSrc":"14843:15:32","nodeType":"YulExpressionStatement","src":"14843:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14874:1:32","nodeType":"YulLiteral","src":"14874:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"14877:4:32","nodeType":"YulLiteral","src":"14877:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14867:6:32","nodeType":"YulIdentifier","src":"14867:6:32"},"nativeSrc":"14867:15:32","nodeType":"YulFunctionCall","src":"14867:15:32"},"nativeSrc":"14867:15:32","nodeType":"YulExpressionStatement","src":"14867:15:32"}]},"name":"panic_error_0x21","nativeSrc":"14708:180:32","nodeType":"YulFunctionDefinition","src":"14708:180:32"},{"body":{"nativeSrc":"14939:32:32","nodeType":"YulBlock","src":"14939:32:32","statements":[{"nativeSrc":"14949:16:32","nodeType":"YulAssignment","src":"14949:16:32","value":{"name":"value","nativeSrc":"14960:5:32","nodeType":"YulIdentifier","src":"14960:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"14949:7:32","nodeType":"YulIdentifier","src":"14949:7:32"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"14894:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14921:5:32","nodeType":"YulTypedName","src":"14921:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14931:7:32","nodeType":"YulTypedName","src":"14931:7:32","type":""}],"src":"14894:77:32"},{"body":{"nativeSrc":"15042:53:32","nodeType":"YulBlock","src":"15042:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15059:3:32","nodeType":"YulIdentifier","src":"15059:3:32"},{"arguments":[{"name":"value","nativeSrc":"15082:5:32","nodeType":"YulIdentifier","src":"15082:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"15064:17:32","nodeType":"YulIdentifier","src":"15064:17:32"},"nativeSrc":"15064:24:32","nodeType":"YulFunctionCall","src":"15064:24:32"}],"functionName":{"name":"mstore","nativeSrc":"15052:6:32","nodeType":"YulIdentifier","src":"15052:6:32"},"nativeSrc":"15052:37:32","nodeType":"YulFunctionCall","src":"15052:37:32"},"nativeSrc":"15052:37:32","nodeType":"YulExpressionStatement","src":"15052:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14977:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15030:5:32","nodeType":"YulTypedName","src":"15030:5:32","type":""},{"name":"pos","nativeSrc":"15037:3:32","nodeType":"YulTypedName","src":"15037:3:32","type":""}],"src":"14977:118:32"},{"body":{"nativeSrc":"15166:53:32","nodeType":"YulBlock","src":"15166:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15183:3:32","nodeType":"YulIdentifier","src":"15183:3:32"},{"arguments":[{"name":"value","nativeSrc":"15206:5:32","nodeType":"YulIdentifier","src":"15206:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15188:17:32","nodeType":"YulIdentifier","src":"15188:17:32"},"nativeSrc":"15188:24:32","nodeType":"YulFunctionCall","src":"15188:24:32"}],"functionName":{"name":"mstore","nativeSrc":"15176:6:32","nodeType":"YulIdentifier","src":"15176:6:32"},"nativeSrc":"15176:37:32","nodeType":"YulFunctionCall","src":"15176:37:32"},"nativeSrc":"15176:37:32","nodeType":"YulExpressionStatement","src":"15176:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15101:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15154:5:32","nodeType":"YulTypedName","src":"15154:5:32","type":""},{"name":"pos","nativeSrc":"15161:3:32","nodeType":"YulTypedName","src":"15161:3:32","type":""}],"src":"15101:118:32"},{"body":{"nativeSrc":"15435:454:32","nodeType":"YulBlock","src":"15435:454:32","statements":[{"nativeSrc":"15445:27:32","nodeType":"YulAssignment","src":"15445:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"15457:9:32","nodeType":"YulIdentifier","src":"15457:9:32"},{"kind":"number","nativeSrc":"15468:3:32","nodeType":"YulLiteral","src":"15468:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"15453:3:32","nodeType":"YulIdentifier","src":"15453:3:32"},"nativeSrc":"15453:19:32","nodeType":"YulFunctionCall","src":"15453:19:32"},"variableNames":[{"name":"tail","nativeSrc":"15445:4:32","nodeType":"YulIdentifier","src":"15445:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15526:6:32","nodeType":"YulIdentifier","src":"15526:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15539:9:32","nodeType":"YulIdentifier","src":"15539:9:32"},{"kind":"number","nativeSrc":"15550:1:32","nodeType":"YulLiteral","src":"15550:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15535:3:32","nodeType":"YulIdentifier","src":"15535:3:32"},"nativeSrc":"15535:17:32","nodeType":"YulFunctionCall","src":"15535:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15482:43:32","nodeType":"YulIdentifier","src":"15482:43:32"},"nativeSrc":"15482:71:32","nodeType":"YulFunctionCall","src":"15482:71:32"},"nativeSrc":"15482:71:32","nodeType":"YulExpressionStatement","src":"15482:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15607:6:32","nodeType":"YulIdentifier","src":"15607:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15620:9:32","nodeType":"YulIdentifier","src":"15620:9:32"},{"kind":"number","nativeSrc":"15631:2:32","nodeType":"YulLiteral","src":"15631:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15616:3:32","nodeType":"YulIdentifier","src":"15616:3:32"},"nativeSrc":"15616:18:32","nodeType":"YulFunctionCall","src":"15616:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15563:43:32","nodeType":"YulIdentifier","src":"15563:43:32"},"nativeSrc":"15563:72:32","nodeType":"YulFunctionCall","src":"15563:72:32"},"nativeSrc":"15563:72:32","nodeType":"YulExpressionStatement","src":"15563:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15689:6:32","nodeType":"YulIdentifier","src":"15689:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15702:9:32","nodeType":"YulIdentifier","src":"15702:9:32"},{"kind":"number","nativeSrc":"15713:2:32","nodeType":"YulLiteral","src":"15713:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15698:3:32","nodeType":"YulIdentifier","src":"15698:3:32"},"nativeSrc":"15698:18:32","nodeType":"YulFunctionCall","src":"15698:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15645:43:32","nodeType":"YulIdentifier","src":"15645:43:32"},"nativeSrc":"15645:72:32","nodeType":"YulFunctionCall","src":"15645:72:32"},"nativeSrc":"15645:72:32","nodeType":"YulExpressionStatement","src":"15645:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15771:6:32","nodeType":"YulIdentifier","src":"15771:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15784:9:32","nodeType":"YulIdentifier","src":"15784:9:32"},{"kind":"number","nativeSrc":"15795:2:32","nodeType":"YulLiteral","src":"15795:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15780:3:32","nodeType":"YulIdentifier","src":"15780:3:32"},"nativeSrc":"15780:18:32","nodeType":"YulFunctionCall","src":"15780:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15727:43:32","nodeType":"YulIdentifier","src":"15727:43:32"},"nativeSrc":"15727:72:32","nodeType":"YulFunctionCall","src":"15727:72:32"},"nativeSrc":"15727:72:32","nodeType":"YulExpressionStatement","src":"15727:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"15853:6:32","nodeType":"YulIdentifier","src":"15853:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15866:9:32","nodeType":"YulIdentifier","src":"15866:9:32"},{"kind":"number","nativeSrc":"15877:3:32","nodeType":"YulLiteral","src":"15877:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15862:3:32","nodeType":"YulIdentifier","src":"15862:3:32"},"nativeSrc":"15862:19:32","nodeType":"YulFunctionCall","src":"15862:19:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15809:43:32","nodeType":"YulIdentifier","src":"15809:43:32"},"nativeSrc":"15809:73:32","nodeType":"YulFunctionCall","src":"15809:73:32"},"nativeSrc":"15809:73:32","nodeType":"YulExpressionStatement","src":"15809:73:32"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"15225:664:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15375:9:32","nodeType":"YulTypedName","src":"15375:9:32","type":""},{"name":"value4","nativeSrc":"15387:6:32","nodeType":"YulTypedName","src":"15387:6:32","type":""},{"name":"value3","nativeSrc":"15395:6:32","nodeType":"YulTypedName","src":"15395:6:32","type":""},{"name":"value2","nativeSrc":"15403:6:32","nodeType":"YulTypedName","src":"15403:6:32","type":""},{"name":"value1","nativeSrc":"15411:6:32","nodeType":"YulTypedName","src":"15411:6:32","type":""},{"name":"value0","nativeSrc":"15419:6:32","nodeType":"YulTypedName","src":"15419:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15430:4:32","nodeType":"YulTypedName","src":"15430:4:32","type":""}],"src":"15225:664:32"},{"body":{"nativeSrc":"15954:81:32","nodeType":"YulBlock","src":"15954:81:32","statements":[{"nativeSrc":"15964:65:32","nodeType":"YulAssignment","src":"15964:65:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16021:5:32","nodeType":"YulIdentifier","src":"16021:5:32"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"16004:16:32","nodeType":"YulIdentifier","src":"16004:16:32"},"nativeSrc":"16004:23:32","nodeType":"YulFunctionCall","src":"16004:23:32"}],"functionName":{"name":"identity","nativeSrc":"15995:8:32","nodeType":"YulIdentifier","src":"15995:8:32"},"nativeSrc":"15995:33:32","nodeType":"YulFunctionCall","src":"15995:33:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15977:17:32","nodeType":"YulIdentifier","src":"15977:17:32"},"nativeSrc":"15977:52:32","nodeType":"YulFunctionCall","src":"15977:52:32"},"variableNames":[{"name":"converted","nativeSrc":"15964:9:32","nodeType":"YulIdentifier","src":"15964:9:32"}]}]},"name":"convert_t_uint96_to_t_uint256","nativeSrc":"15895:140:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15934:5:32","nodeType":"YulTypedName","src":"15934:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"15944:9:32","nodeType":"YulTypedName","src":"15944:9:32","type":""}],"src":"15895:140:32"},{"body":{"nativeSrc":"16105:65:32","nodeType":"YulBlock","src":"16105:65:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16122:3:32","nodeType":"YulIdentifier","src":"16122:3:32"},{"arguments":[{"name":"value","nativeSrc":"16157:5:32","nodeType":"YulIdentifier","src":"16157:5:32"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nativeSrc":"16127:29:32","nodeType":"YulIdentifier","src":"16127:29:32"},"nativeSrc":"16127:36:32","nodeType":"YulFunctionCall","src":"16127:36:32"}],"functionName":{"name":"mstore","nativeSrc":"16115:6:32","nodeType":"YulIdentifier","src":"16115:6:32"},"nativeSrc":"16115:49:32","nodeType":"YulFunctionCall","src":"16115:49:32"},"nativeSrc":"16115:49:32","nodeType":"YulExpressionStatement","src":"16115:49:32"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nativeSrc":"16041:129:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16093:5:32","nodeType":"YulTypedName","src":"16093:5:32","type":""},{"name":"pos","nativeSrc":"16100:3:32","nodeType":"YulTypedName","src":"16100:3:32","type":""}],"src":"16041:129:32"},{"body":{"nativeSrc":"16301:205:32","nodeType":"YulBlock","src":"16301:205:32","statements":[{"nativeSrc":"16311:26:32","nodeType":"YulAssignment","src":"16311:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"16323:9:32","nodeType":"YulIdentifier","src":"16323:9:32"},{"kind":"number","nativeSrc":"16334:2:32","nodeType":"YulLiteral","src":"16334:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16319:3:32","nodeType":"YulIdentifier","src":"16319:3:32"},"nativeSrc":"16319:18:32","nodeType":"YulFunctionCall","src":"16319:18:32"},"variableNames":[{"name":"tail","nativeSrc":"16311:4:32","nodeType":"YulIdentifier","src":"16311:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16390:6:32","nodeType":"YulIdentifier","src":"16390:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"16403:9:32","nodeType":"YulIdentifier","src":"16403:9:32"},{"kind":"number","nativeSrc":"16414:1:32","nodeType":"YulLiteral","src":"16414:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16399:3:32","nodeType":"YulIdentifier","src":"16399:3:32"},"nativeSrc":"16399:17:32","nodeType":"YulFunctionCall","src":"16399:17:32"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nativeSrc":"16347:42:32","nodeType":"YulIdentifier","src":"16347:42:32"},"nativeSrc":"16347:70:32","nodeType":"YulFunctionCall","src":"16347:70:32"},"nativeSrc":"16347:70:32","nodeType":"YulExpressionStatement","src":"16347:70:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16471:6:32","nodeType":"YulIdentifier","src":"16471:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"16484:9:32","nodeType":"YulIdentifier","src":"16484:9:32"},{"kind":"number","nativeSrc":"16495:2:32","nodeType":"YulLiteral","src":"16495:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16480:3:32","nodeType":"YulIdentifier","src":"16480:3:32"},"nativeSrc":"16480:18:32","nodeType":"YulFunctionCall","src":"16480:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16427:43:32","nodeType":"YulIdentifier","src":"16427:43:32"},"nativeSrc":"16427:72:32","nodeType":"YulFunctionCall","src":"16427:72:32"},"nativeSrc":"16427:72:32","nodeType":"YulExpressionStatement","src":"16427:72:32"}]},"name":"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"16176:330:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16265:9:32","nodeType":"YulTypedName","src":"16265:9:32","type":""},{"name":"value1","nativeSrc":"16277:6:32","nodeType":"YulTypedName","src":"16277:6:32","type":""},{"name":"value0","nativeSrc":"16285:6:32","nodeType":"YulTypedName","src":"16285:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16296:4:32","nodeType":"YulTypedName","src":"16296:4:32","type":""}],"src":"16176:330:32"},{"body":{"nativeSrc":"16604:285:32","nodeType":"YulBlock","src":"16604:285:32","statements":[{"nativeSrc":"16614:53:32","nodeType":"YulVariableDeclaration","src":"16614:53:32","value":{"arguments":[{"name":"value","nativeSrc":"16661:5:32","nodeType":"YulIdentifier","src":"16661:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"16628:32:32","nodeType":"YulIdentifier","src":"16628:32:32"},"nativeSrc":"16628:39:32","nodeType":"YulFunctionCall","src":"16628:39:32"},"variables":[{"name":"length","nativeSrc":"16618:6:32","nodeType":"YulTypedName","src":"16618:6:32","type":""}]},{"nativeSrc":"16676:78:32","nodeType":"YulAssignment","src":"16676:78:32","value":{"arguments":[{"name":"pos","nativeSrc":"16742:3:32","nodeType":"YulIdentifier","src":"16742:3:32"},{"name":"length","nativeSrc":"16747:6:32","nodeType":"YulIdentifier","src":"16747:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16683:58:32","nodeType":"YulIdentifier","src":"16683:58:32"},"nativeSrc":"16683:71:32","nodeType":"YulFunctionCall","src":"16683:71:32"},"variableNames":[{"name":"pos","nativeSrc":"16676:3:32","nodeType":"YulIdentifier","src":"16676:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16802:5:32","nodeType":"YulIdentifier","src":"16802:5:32"},{"kind":"number","nativeSrc":"16809:4:32","nodeType":"YulLiteral","src":"16809:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16798:3:32","nodeType":"YulIdentifier","src":"16798:3:32"},"nativeSrc":"16798:16:32","nodeType":"YulFunctionCall","src":"16798:16:32"},{"name":"pos","nativeSrc":"16816:3:32","nodeType":"YulIdentifier","src":"16816:3:32"},{"name":"length","nativeSrc":"16821:6:32","nodeType":"YulIdentifier","src":"16821:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"16763:34:32","nodeType":"YulIdentifier","src":"16763:34:32"},"nativeSrc":"16763:65:32","nodeType":"YulFunctionCall","src":"16763:65:32"},"nativeSrc":"16763:65:32","nodeType":"YulExpressionStatement","src":"16763:65:32"},{"nativeSrc":"16837:46:32","nodeType":"YulAssignment","src":"16837:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"16848:3:32","nodeType":"YulIdentifier","src":"16848:3:32"},{"arguments":[{"name":"length","nativeSrc":"16875:6:32","nodeType":"YulIdentifier","src":"16875:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"16853:21:32","nodeType":"YulIdentifier","src":"16853:21:32"},"nativeSrc":"16853:29:32","nodeType":"YulFunctionCall","src":"16853:29:32"}],"functionName":{"name":"add","nativeSrc":"16844:3:32","nodeType":"YulIdentifier","src":"16844:3:32"},"nativeSrc":"16844:39:32","nodeType":"YulFunctionCall","src":"16844:39:32"},"variableNames":[{"name":"end","nativeSrc":"16837:3:32","nodeType":"YulIdentifier","src":"16837:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"16512:377:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16585:5:32","nodeType":"YulTypedName","src":"16585:5:32","type":""},{"name":"pos","nativeSrc":"16592:3:32","nodeType":"YulTypedName","src":"16592:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16600:3:32","nodeType":"YulTypedName","src":"16600:3:32","type":""}],"src":"16512:377:32"},{"body":{"nativeSrc":"17013:195:32","nodeType":"YulBlock","src":"17013:195:32","statements":[{"nativeSrc":"17023:26:32","nodeType":"YulAssignment","src":"17023:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"17035:9:32","nodeType":"YulIdentifier","src":"17035:9:32"},{"kind":"number","nativeSrc":"17046:2:32","nodeType":"YulLiteral","src":"17046:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17031:3:32","nodeType":"YulIdentifier","src":"17031:3:32"},"nativeSrc":"17031:18:32","nodeType":"YulFunctionCall","src":"17031:18:32"},"variableNames":[{"name":"tail","nativeSrc":"17023:4:32","nodeType":"YulIdentifier","src":"17023:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17070:9:32","nodeType":"YulIdentifier","src":"17070:9:32"},{"kind":"number","nativeSrc":"17081:1:32","nodeType":"YulLiteral","src":"17081:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17066:3:32","nodeType":"YulIdentifier","src":"17066:3:32"},"nativeSrc":"17066:17:32","nodeType":"YulFunctionCall","src":"17066:17:32"},{"arguments":[{"name":"tail","nativeSrc":"17089:4:32","nodeType":"YulIdentifier","src":"17089:4:32"},{"name":"headStart","nativeSrc":"17095:9:32","nodeType":"YulIdentifier","src":"17095:9:32"}],"functionName":{"name":"sub","nativeSrc":"17085:3:32","nodeType":"YulIdentifier","src":"17085:3:32"},"nativeSrc":"17085:20:32","nodeType":"YulFunctionCall","src":"17085:20:32"}],"functionName":{"name":"mstore","nativeSrc":"17059:6:32","nodeType":"YulIdentifier","src":"17059:6:32"},"nativeSrc":"17059:47:32","nodeType":"YulFunctionCall","src":"17059:47:32"},"nativeSrc":"17059:47:32","nodeType":"YulExpressionStatement","src":"17059:47:32"},{"nativeSrc":"17115:86:32","nodeType":"YulAssignment","src":"17115:86:32","value":{"arguments":[{"name":"value0","nativeSrc":"17187:6:32","nodeType":"YulIdentifier","src":"17187:6:32"},{"name":"tail","nativeSrc":"17196:4:32","nodeType":"YulIdentifier","src":"17196:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"17123:63:32","nodeType":"YulIdentifier","src":"17123:63:32"},"nativeSrc":"17123:78:32","nodeType":"YulFunctionCall","src":"17123:78:32"},"variableNames":[{"name":"tail","nativeSrc":"17115:4:32","nodeType":"YulIdentifier","src":"17115:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16895:313:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16985:9:32","nodeType":"YulTypedName","src":"16985:9:32","type":""},{"name":"value0","nativeSrc":"16997:6:32","nodeType":"YulTypedName","src":"16997:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17008:4:32","nodeType":"YulTypedName","src":"17008:4:32","type":""}],"src":"16895:313:32"},{"body":{"nativeSrc":"17272:40:32","nodeType":"YulBlock","src":"17272:40:32","statements":[{"nativeSrc":"17283:22:32","nodeType":"YulAssignment","src":"17283:22:32","value":{"arguments":[{"name":"value","nativeSrc":"17299:5:32","nodeType":"YulIdentifier","src":"17299:5:32"}],"functionName":{"name":"mload","nativeSrc":"17293:5:32","nodeType":"YulIdentifier","src":"17293:5:32"},"nativeSrc":"17293:12:32","nodeType":"YulFunctionCall","src":"17293:12:32"},"variableNames":[{"name":"length","nativeSrc":"17283:6:32","nodeType":"YulIdentifier","src":"17283:6:32"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"17214:98:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17255:5:32","nodeType":"YulTypedName","src":"17255:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"17265:6:32","nodeType":"YulTypedName","src":"17265:6:32","type":""}],"src":"17214:98:32"},{"body":{"nativeSrc":"17374:60:32","nodeType":"YulBlock","src":"17374:60:32","statements":[{"nativeSrc":"17384:11:32","nodeType":"YulAssignment","src":"17384:11:32","value":{"name":"ptr","nativeSrc":"17392:3:32","nodeType":"YulIdentifier","src":"17392:3:32"},"variableNames":[{"name":"data","nativeSrc":"17384:4:32","nodeType":"YulIdentifier","src":"17384:4:32"}]},{"nativeSrc":"17405:22:32","nodeType":"YulAssignment","src":"17405:22:32","value":{"arguments":[{"name":"ptr","nativeSrc":"17417:3:32","nodeType":"YulIdentifier","src":"17417:3:32"},{"kind":"number","nativeSrc":"17422:4:32","nodeType":"YulLiteral","src":"17422:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17413:3:32","nodeType":"YulIdentifier","src":"17413:3:32"},"nativeSrc":"17413:14:32","nodeType":"YulFunctionCall","src":"17413:14:32"},"variableNames":[{"name":"data","nativeSrc":"17405:4:32","nodeType":"YulIdentifier","src":"17405:4:32"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"17318:116:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"17361:3:32","nodeType":"YulTypedName","src":"17361:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"17369:4:32","nodeType":"YulTypedName","src":"17369:4:32","type":""}],"src":"17318:116:32"},{"body":{"nativeSrc":"17495:99:32","nodeType":"YulBlock","src":"17495:99:32","statements":[{"nativeSrc":"17506:42:32","nodeType":"YulVariableDeclaration","src":"17506:42:32","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"17543:3:32","nodeType":"YulIdentifier","src":"17543:3:32"}],"functionName":{"name":"mload","nativeSrc":"17537:5:32","nodeType":"YulIdentifier","src":"17537:5:32"},"nativeSrc":"17537:10:32","nodeType":"YulFunctionCall","src":"17537:10:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"17519:17:32","nodeType":"YulIdentifier","src":"17519:17:32"},"nativeSrc":"17519:29:32","nodeType":"YulFunctionCall","src":"17519:29:32"},"variables":[{"name":"value","nativeSrc":"17510:5:32","nodeType":"YulTypedName","src":"17510:5:32","type":""}]},{"nativeSrc":"17558:29:32","nodeType":"YulAssignment","src":"17558:29:32","value":{"name":"value","nativeSrc":"17582:5:32","nodeType":"YulIdentifier","src":"17582:5:32"},"variableNames":[{"name":"returnValue","nativeSrc":"17558:11:32","nodeType":"YulIdentifier","src":"17558:11:32"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"17440:154:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"17475:3:32","nodeType":"YulTypedName","src":"17475:3:32","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"17483:11:32","nodeType":"YulTypedName","src":"17483:11:32","type":""}],"src":"17440:154:32"},{"body":{"nativeSrc":"17690:504:32","nodeType":"YulBlock","src":"17690:504:32","statements":[{"nativeSrc":"17701:52:32","nodeType":"YulVariableDeclaration","src":"17701:52:32","value":{"arguments":[{"name":"array","nativeSrc":"17747:5:32","nodeType":"YulIdentifier","src":"17747:5:32"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"17715:31:32","nodeType":"YulIdentifier","src":"17715:31:32"},"nativeSrc":"17715:38:32","nodeType":"YulFunctionCall","src":"17715:38:32"},"variables":[{"name":"length","nativeSrc":"17705:6:32","nodeType":"YulTypedName","src":"17705:6:32","type":""}]},{"nativeSrc":"17762:21:32","nodeType":"YulVariableDeclaration","src":"17762:21:32","value":{"name":"array","nativeSrc":"17778:5:32","nodeType":"YulIdentifier","src":"17778:5:32"},"variables":[{"name":"dataArea","nativeSrc":"17766:8:32","nodeType":"YulTypedName","src":"17766:8:32","type":""}]},{"nativeSrc":"17793:52:32","nodeType":"YulAssignment","src":"17793:52:32","value":{"arguments":[{"name":"array","nativeSrc":"17839:5:32","nodeType":"YulIdentifier","src":"17839:5:32"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"17805:33:32","nodeType":"YulIdentifier","src":"17805:33:32"},"nativeSrc":"17805:40:32","nodeType":"YulFunctionCall","src":"17805:40:32"},"variableNames":[{"name":"dataArea","nativeSrc":"17793:8:32","nodeType":"YulIdentifier","src":"17793:8:32"}]},{"nativeSrc":"17855:44:32","nodeType":"YulAssignment","src":"17855:44:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"17890:8:32","nodeType":"YulIdentifier","src":"17890:8:32"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"17864:25:32","nodeType":"YulIdentifier","src":"17864:25:32"},"nativeSrc":"17864:35:32","nodeType":"YulFunctionCall","src":"17864:35:32"},"variableNames":[{"name":"value","nativeSrc":"17855:5:32","nodeType":"YulIdentifier","src":"17855:5:32"}]},{"body":{"nativeSrc":"17927:260:32","nodeType":"YulBlock","src":"17927:260:32","statements":[{"nativeSrc":"17941:236:32","nodeType":"YulAssignment","src":"17941:236:32","value":{"arguments":[{"name":"value","nativeSrc":"17971:5:32","nodeType":"YulIdentifier","src":"17971:5:32"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"18038:1:32","nodeType":"YulLiteral","src":"18038:1:32","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"18045:2:32","nodeType":"YulLiteral","src":"18045:2:32","type":"","value":"32"},{"name":"length","nativeSrc":"18049:6:32","nodeType":"YulIdentifier","src":"18049:6:32"}],"functionName":{"name":"sub","nativeSrc":"18041:3:32","nodeType":"YulIdentifier","src":"18041:3:32"},"nativeSrc":"18041:15:32","nodeType":"YulFunctionCall","src":"18041:15:32"}],"functionName":{"name":"mul","nativeSrc":"18034:3:32","nodeType":"YulIdentifier","src":"18034:3:32"},"nativeSrc":"18034:23:32","nodeType":"YulFunctionCall","src":"18034:23:32"},{"kind":"number","nativeSrc":"18079:66:32","nodeType":"YulLiteral","src":"18079:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"17994:18:32","nodeType":"YulIdentifier","src":"17994:18:32"},"nativeSrc":"17994:169:32","nodeType":"YulFunctionCall","src":"17994:169:32"}],"functionName":{"name":"and","nativeSrc":"17950:3:32","nodeType":"YulIdentifier","src":"17950:3:32"},"nativeSrc":"17950:227:32","nodeType":"YulFunctionCall","src":"17950:227:32"},"variableNames":[{"name":"value","nativeSrc":"17941:5:32","nodeType":"YulIdentifier","src":"17941:5:32"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"17915:6:32","nodeType":"YulIdentifier","src":"17915:6:32"},{"kind":"number","nativeSrc":"17923:2:32","nodeType":"YulLiteral","src":"17923:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"17912:2:32","nodeType":"YulIdentifier","src":"17912:2:32"},"nativeSrc":"17912:14:32","nodeType":"YulFunctionCall","src":"17912:14:32"},"nativeSrc":"17909:278:32","nodeType":"YulIf","src":"17909:278:32"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"17600:594:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"17674:5:32","nodeType":"YulTypedName","src":"17674:5:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17684:5:32","nodeType":"YulTypedName","src":"17684:5:32","type":""}],"src":"17600:594:32"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint96t_uint96t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Royalty fee cannot exceed 10%\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd56f52683acf27e26f4eb25998e2a7009777a3c2a46206c21d48177f93cfcd6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270(memPtr) {\n\n        mstore(add(memPtr, 0), \"Platform fee cannot exceed 10%\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid platform fee recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19b28ab609826f558ba8c550f7bfdf83003f50fd6c90f9e419b218005600a3b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid backend signer\")\n\n    }\n\n    function abi_encode_t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c55c43dad1ced7c15695af8abf6f1ffa89d7c8266fabb9c850686cfcccc7e41a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x1A0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x74C4 CODESIZE SUB DUP1 PUSH2 0x74C4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x33 SWAP2 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E69666965644E465400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP9 DUP9 DUP9 DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0xE11 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0xE11 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x145 DUP2 PUSH2 0x56A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15A PUSH1 0xE DUP4 PUSH2 0x630 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x176 PUSH1 0xF DUP3 PUSH2 0x630 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x1B3 PUSH2 0x680 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x3E8 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x243 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23A SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FC SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x180 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x13 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x13 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x453 DUP8 PUSH2 0x180 MLOAD PUSH2 0x6DB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x11 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x475 JUMPI PUSH2 0x474 PUSH2 0x10CE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x506 JUMPI PUSH2 0x505 PUSH2 0x10CE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE POP POP POP POP POP POP POP POP POP PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x652 JUMPI PUSH2 0x64B DUP4 PUSH2 0x883 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x67A JUMP JUMPDEST DUP3 PUSH2 0x662 DUP4 PUSH2 0x8EB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x671 SWAP2 SWAP1 PUSH2 0xE11 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EB PUSH2 0x8F5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x750 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x6F483D0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x747 SWAP3 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xB6D9900A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x8D0 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x8DC SWAP1 PUSH2 0x125D JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93E DUP3 PUSH2 0x913 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94E DUP2 PUSH2 0x933 JUMP JUMPDEST DUP2 EQ PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x96B DUP2 PUSH2 0x945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9C4 DUP3 PUSH2 0x97B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9E3 JUMPI PUSH2 0x9E2 PUSH2 0x98C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F6 PUSH2 0x8FF JUMP JUMPDEST SWAP1 POP PUSH2 0xA02 DUP3 DUP3 PUSH2 0x9BB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA22 JUMPI PUSH2 0xA21 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH2 0xA2B DUP3 PUSH2 0x97B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA56 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0xA70 DUP5 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0x976 JUMP JUMPDEST JUMPDEST PUSH2 0xA9C DUP5 DUP3 DUP6 PUSH2 0xA38 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAB9 JUMPI PUSH2 0xAB8 PUSH2 0x971 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xAC9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF3 DUP2 PUSH2 0xAD2 JUMP JUMPDEST DUP2 EQ PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB10 DUP2 PUSH2 0xAEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xB35 JUMPI PUSH2 0xB34 PUSH2 0x909 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB43 DUP11 DUP3 DUP12 ADD PUSH2 0x95C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB64 JUMPI PUSH2 0xB63 PUSH2 0x90E JUMP JUMPDEST JUMPDEST PUSH2 0xB70 DUP11 DUP3 DUP12 ADD PUSH2 0xAA4 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB91 JUMPI PUSH2 0xB90 PUSH2 0x90E JUMP JUMPDEST JUMPDEST PUSH2 0xB9D DUP11 DUP3 DUP12 ADD PUSH2 0xAA4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xBAE DUP11 DUP3 DUP12 ADD PUSH2 0xB01 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xBBF DUP11 DUP3 DUP12 ADD PUSH2 0xB01 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xBD0 DUP11 DUP3 DUP12 ADD PUSH2 0x95C JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xBE1 DUP11 DUP3 DUP12 ADD PUSH2 0x95C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xCBD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0xCC7 DUP7 DUP4 PUSH2 0xC80 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0E PUSH2 0xD09 PUSH2 0xD04 DUP5 PUSH2 0xCDF JUMP JUMPDEST PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD28 DUP4 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0xD3C PUSH2 0xD34 DUP3 PUSH2 0xD15 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xC8D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xD51 PUSH2 0xD44 JUMP JUMPDEST PUSH2 0xD5C DUP2 DUP5 DUP5 PUSH2 0xD1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD80 JUMPI PUSH2 0xD75 PUSH1 0x0 DUP3 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD62 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDC5 JUMPI PUSH2 0xD96 DUP2 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xD9F DUP5 PUSH2 0xC70 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xDAE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xDC2 PUSH2 0xDBA DUP6 PUSH2 0xC70 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xD61 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE8 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xDCA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE01 DUP4 DUP4 PUSH2 0xDD7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1A DUP3 PUSH2 0xBF0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE33 JUMPI PUSH2 0xE32 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH2 0xE3D DUP3 SLOAD PUSH2 0xC2A JUMP JUMPDEST PUSH2 0xE48 DUP3 DUP3 DUP6 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xE7B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xE69 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xE73 DUP6 DUP3 PUSH2 0xDF5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xE89 DUP7 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEB1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE8C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xECE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xECA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xDD7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0x933 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526F79616C7479206665652063616E6E6F742065786365656420313025000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF54 PUSH1 0x1D DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0xF5F DUP3 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF83 DUP2 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6174666F726D206665652063616E6E6F7420657863656564203130250000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC0 PUSH1 0x1E DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0xFCB DUP3 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFEF DUP2 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420706C6174666F726D2066656520726563697069656E740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102C PUSH1 0x1E DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1037 DUP3 PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x105B DUP2 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206261636B656E64207369676E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1098 PUSH1 0x16 DUP4 PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP PUSH2 0x10A3 DUP3 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10C7 DUP2 PUSH2 0x108B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1110 DUP2 PUSH2 0x10FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x111F DUP2 PUSH2 0xCDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x113A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x1147 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x1154 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x1161 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x116E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1193 PUSH2 0x118E PUSH2 0x1189 DUP5 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A3 DUP2 PUSH2 0x1178 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11BE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x11CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1116 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DD DUP3 PUSH2 0xBF0 JUMP JUMPDEST PUSH2 0x11E7 DUP2 DUP6 PUSH2 0xF0D JUMP JUMPDEST SWAP4 POP PUSH2 0x11F7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x1200 DUP2 PUSH2 0x97B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1225 DUP2 DUP5 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1254 DUP3 MLOAD PUSH2 0x10FD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1268 DUP3 PUSH2 0x122D JUMP JUMPDEST DUP3 PUSH2 0x1272 DUP5 PUSH2 0x1238 JUMP JUMPDEST SWAP1 POP PUSH2 0x127D DUP2 PUSH2 0x1248 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x12BD JUMPI PUSH2 0x12B8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0xC80 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x618C PUSH2 0x1338 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x0 DUP2 DUP2 PUSH2 0x10DC ADD MSTORE PUSH2 0x1FAA ADD MSTORE PUSH1 0x0 PUSH2 0x2B7C ADD MSTORE PUSH1 0x0 PUSH2 0x2B41 ADD MSTORE PUSH1 0x0 PUSH2 0x367E ADD MSTORE PUSH1 0x0 PUSH2 0x365D ADD MSTORE PUSH1 0x0 PUSH2 0x2FE5 ADD MSTORE PUSH1 0x0 PUSH2 0x303B ADD MSTORE PUSH1 0x0 PUSH2 0x3064 ADD MSTORE PUSH2 0x618C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xCDD78CFC GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEB13554F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEB13554F EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0xEE5F4F13 EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x859 JUMPI DUP1 PUSH4 0xF7330C2D EQ PUSH2 0x882 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xCDD78CFC EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0xDB5E0063 EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0xDECC4A6A EQ PUSH2 0x781 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7AA JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xA4836C11 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6EE JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x7A989281 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61D JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2D0335AB GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x65D65E86 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x56F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x2E37EEF6 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x48A JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x1CE97FD1 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x38D JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x72A1319 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x4700 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x47F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP3 SWAP2 SWAP1 PUSH2 0x4AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x4AEA JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x4B3D JUMP JUMPDEST PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP3 SWAP2 SWAP1 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x4BA6 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x444 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F PUSH2 0xEDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x4AEA JUMP JUMPDEST PUSH2 0x1032 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x559 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x4BA6 JUMP JUMPDEST PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C1 PUSH2 0x11B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x4CCF JUMP JUMPDEST PUSH2 0x11CC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x614 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65D PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x47F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0x4F1F JUMP JUMPDEST PUSH2 0x1738 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x4F5F JUMP JUMPDEST PUSH2 0x174E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x515E JUMP JUMPDEST PUSH2 0x1AF7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x715 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x47F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x740 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76B PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x778 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x524F JUMP JUMPDEST PUSH2 0x1B59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x528F JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FC PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x827 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x834 SWAP2 SWAP1 PUSH2 0x52CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x857 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x53F6 JUMP JUMPDEST PUSH2 0x1D9B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x880 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x4BA6 JUMP JUMPDEST PUSH2 0x2621 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x54D2 JUMP JUMPDEST PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8CA DUP3 PUSH2 0x2726 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x8E0 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x90C SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x959 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x92E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x959 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x93C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x98D JUMPI PUSH2 0x98C PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9A1 JUMPI PUSH2 0x9A0 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D2 JUMPI PUSH2 0x9D1 PUSH2 0x496A JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI POP PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9EF JUMPI PUSH2 0x9EE PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA36 JUMPI POP PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA20 JUMPI PUSH2 0xA1F PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0xA46 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xA5A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x96C JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA68 DUP3 PUSH2 0x27A0 JUMP JUMPDEST POP PUSH2 0xA72 DUP3 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8B DUP3 DUP3 PUSH2 0xA86 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x286D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0xAAE PUSH2 0x287F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAE0 JUMPI PUSH2 0xADF PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xAF1 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBD6 DUP4 DUP4 PUSH2 0xBD1 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC4C JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x55A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD33 JUMPI PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xD3D PUSH2 0x29E1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x5678 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP4 PUSH2 0x10FE JUMP JUMPDEST DUP3 LT PUSH2 0xE86 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP3 SWAP2 SWAP1 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE7 PUSH2 0x29EB JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xF2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP1 PUSH2 0x56F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF39 PUSH2 0x167C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xF5C SWAP1 PUSH2 0x5746 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFE1 PUSH2 0x167C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x60188009B974C2FA66EE3B916D93F64D6534EA2204E0C466F9784ACE689E8E49 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1026 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x104D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C PUSH2 0xA8F JUMP JUMPDEST DUP3 LT PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1099 SWAP3 SWAP2 SWAP1 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B6 JUMPI PUSH2 0x10B5 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 DUP3 PUSH2 0x27A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1171 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C0 PUSH2 0x29EB JUMP JUMPDEST PUSH2 0x11CA PUSH1 0x0 PUSH2 0x2A72 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11D4 PUSH2 0x29EB JUMP JUMPDEST DUP5 DUP7 LT PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120D SWAP1 PUSH2 0x57A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1229 JUMPI PUSH2 0x1228 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x123C JUMPI PUSH2 0x123B PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x130E JUMPI PUSH1 0x0 DUP4 GT PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127C SWAP1 PUSH2 0x5839 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BF SWAP1 PUSH2 0x58CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1304 SWAP1 PUSH2 0x595D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x146F JUMPI PUSH1 0x0 PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1373 JUMPI PUSH2 0x1372 PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13EF JUMPI PUSH2 0x13EE PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1406 JUMPI PUSH2 0x1405 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1411 JUMPI POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP9 GT ISZERO DUP1 ISZERO PUSH2 0x1429 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP8 LT ISZERO JUMPDEST ISZERO PUSH2 0x1460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x27FDFACF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1311 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1491 JUMPI PUSH2 0x1490 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x11 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x11 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x496A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE POP POP DUP1 PUSH32 0xC1E64363396EF448152A5ABCCF24231295B872B93E1B6A53908FF34C8390A78 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x15BE SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x597D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x15E6 PUSH2 0x2B38 JUMP JUMPDEST PUSH2 0x15EE PUSH2 0x2B73 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160F JUMPI PUSH2 0x160E PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x163D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x16B5 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16E1 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x172E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1703 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x172E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1711 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x174A PUSH2 0x1743 PUSH2 0x2865 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2BAE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1756 PUSH2 0x29EB JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP10 LT PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3D911D5700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP7 LT PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x514C71C200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x17DF PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17F3 JUMPI PUSH2 0x17F2 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x18AA JUMPI PUSH1 0x0 DUP4 SUB PUSH2 0x1833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x514C71C200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD PUSH32 0x514C71C200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x18A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x514C71C200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1A13 JUMPI DUP10 DUP2 SUB ISZERO PUSH2 0x1A06 JUMPI PUSH1 0x0 PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18D8 JUMPI PUSH2 0x18D7 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1917 JUMPI PUSH2 0x1916 PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1929 JUMPI PUSH2 0x1928 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1993 JUMPI PUSH2 0x1992 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x19B5 JUMPI POP PUSH2 0x1A06 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP9 GT ISZERO DUP1 ISZERO PUSH2 0x19CD JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP8 LT ISZERO JUMPDEST ISZERO PUSH2 0x1A04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x27FDFACF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x18AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x11 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP9 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A61 JUMPI PUSH2 0x1A60 PUSH2 0x496A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP DUP10 PUSH32 0x83C587334C090F25E5A6AEC0675C11D1310C8B758FE5A28308A6CF7FF9DB4E53 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1AE3 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x597D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B02 DUP5 DUP5 DUP5 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x1B16 PUSH2 0x1B0D PUSH2 0x2865 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2D1D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B27 DUP3 PUSH2 0x2ECE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B61 PUSH2 0x29EB JUMP JUMPDEST PUSH2 0x3E8 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1BB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAB SWAP1 PUSH2 0x5A47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1A SWAP1 PUSH2 0x5AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x13 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x13 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBAD9436335DDABDD6FC56EA571323EB7DCFC0E82E9DBAF786BBB2A2AD6DE573C DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CC6 SWAP3 SWAP2 SWAP1 PUSH2 0x5AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D96 PUSH2 0x2FE1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DA6 PUSH2 0x287F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DBE JUMPI PUSH2 0x1DBD PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DE2 JUMPI PUSH2 0x1DE1 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1E9A JUMPI PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DFA SWAP2 SWAP1 PUSH2 0x5B44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1E62 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP4 PUSH1 0x8 ADD SLOAD DUP4 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x1E98 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB05E92FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST TIMESTAMP DUP8 LT ISZERO PUSH2 0x1ED4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x819BDCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x280749F6B9AC9E1A05F80919C2E8F043F5E409A99355AE2C6E1AB8664F17CB8D CALLER DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1F09 SWAP3 SWAP2 SWAP1 PUSH2 0x5B84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F67 SWAP1 PUSH2 0x5B9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F83 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1FA6 DUP3 PUSH2 0x30AF JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2036 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP4 PUSH2 0x30C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2083 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD CALLVALUE EQ PUSH2 0x20C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x43A8B01000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x4 ADD SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x20DD JUMPI POP DUP3 PUSH1 0x4 ADD SLOAD DUP4 PUSH1 0x7 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x2114 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3E3F7E0D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x214B JUMPI PUSH2 0x214A PUSH2 0x496A JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x215C JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x5 ADD SLOAD EQ JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x21F2 JUMPI POP DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x12 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x21CE JUMPI PUSH2 0x21CD PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x21E0 JUMPI PUSH2 0x21DF PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x2229 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5107DBE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x223C JUMPI PUSH2 0x223B PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x496A JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x2271 JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x6 ADD SLOAD EQ JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x2286 JUMPI POP DUP3 PUSH1 0x6 ADD SLOAD DUP4 PUSH1 0x7 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x22BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3E3F7E0D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x13 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH2 0x22F6 SWAP2 SWAP1 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x2300 SWAP2 SWAP1 PUSH2 0x5678 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x23D2 JUMPI PUSH1 0x0 PUSH1 0x13 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2353 SWAP1 PUSH2 0x5746 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2390 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x23D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP2 CALLVALUE PUSH2 0x23E0 SWAP2 SWAP1 PUSH2 0x5C63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2497 JUMPI PUSH1 0x0 PUSH2 0x23F5 PUSH2 0x167C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2418 SWAP1 PUSH2 0x5746 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2455 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x245A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP5 PUSH1 0x7 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x24AC SWAP1 PUSH2 0x5B9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x12 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2528 JUMPI PUSH2 0x2527 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2547 SWAP1 PUSH2 0x5B9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x2556 CALLER DUP16 PUSH2 0x30F5 JUMP JUMPDEST PUSH1 0x0 DUP14 DUP14 SWAP1 POP GT ISZERO PUSH2 0x25B1 JUMPI PUSH2 0x25B0 DUP15 DUP15 DUP15 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x3113 JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP15 PUSH32 0x99F38CF3FEAAD38E0A2E22EF51BDD4FABA32B432520A951248D77057596A425A DUP8 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x2609 SWAP2 SWAP1 PUSH2 0x5C97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2629 PUSH2 0x29EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x269B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2692 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26A4 DUP2 PUSH2 0x2A72 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26FD JUMPI PUSH2 0x26FC PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x270F JUMPI PUSH2 0x270E PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2799 JUMPI POP PUSH2 0x2798 DUP3 PUSH2 0x316F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x27AC DUP4 PUSH2 0x31E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x281F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2816 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x287A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3226 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2994 JUMPI PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28AB JUMPI PUSH2 0x28AA PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28BF JUMPI PUSH2 0x28BE PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28F0 JUMPI PUSH2 0x28EF PUSH2 0x496A JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2923 JUMPI POP PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2954 JUMPI POP PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x293E JUMPI PUSH2 0x293D PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0x2987 JUMPI DUP1 PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x296E JUMPI PUSH2 0x296D PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP4 POP SWAP4 POP POP POP PUSH2 0x29C7 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x288A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xA9477E0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D8 DUP5 DUP5 DUP5 PUSH2 0x33EB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x29F3 PUSH2 0x2865 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A11 PUSH2 0x167C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A70 JUMPI PUSH2 0x2A34 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A67 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B6E PUSH1 0xE PUSH32 0x0 PUSH2 0x3508 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2BA9 PUSH1 0xF PUSH32 0x0 PUSH2 0x3508 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C1F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C16 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2D10 SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2EC7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5D07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2DB8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DB5 SWAP2 SWAP1 PUSH2 0x5D68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2E3C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2DE8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2DED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2E34 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2B SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2EC5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EBC SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2ED9 DUP3 PUSH2 0x27A0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x2EFA SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F26 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F73 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F48 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F73 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F56 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2F84 PUSH2 0x35B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2F99 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2FCE JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FB6 SWAP3 SWAP2 SWAP1 PUSH2 0x5DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x2FD7 DUP5 PUSH2 0x35CF JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x305D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x308A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x3095 JUMP JUMPDEST PUSH2 0x3092 PUSH2 0x3638 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x30A5 DUP6 DUP5 PUSH2 0x36CE JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C2 PUSH2 0x30BC PUSH2 0x2FE1 JUMP JUMPDEST DUP4 PUSH2 0x371E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x30D9 DUP7 DUP7 PUSH2 0x375F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x30E9 DUP3 DUP3 PUSH2 0x37BB JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x310F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x391F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x3133 SWAP2 SWAP1 PUSH2 0x5FA1 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3163 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x31E2 JUMPI POP PUSH2 0x31E1 DUP3 PUSH2 0x3943 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x325F JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3393 JUMPI PUSH1 0x0 PUSH2 0x326F DUP5 PUSH2 0x27A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x32DA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x32ED JUMPI POP PUSH2 0x32EB DUP2 DUP5 PUSH2 0x1CD2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x332F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3326 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3391 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33F9 DUP6 DUP6 DUP6 PUSH2 0x39A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x343D JUMPI PUSH2 0x3438 DUP5 PUSH2 0x3BBE JUMP JUMPDEST PUSH2 0x347C JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x347B JUMPI PUSH2 0x347A DUP2 DUP6 PUSH2 0x3C07 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34BE JUMPI PUSH2 0x34B9 DUP5 PUSH2 0x3CF2 JUMP JUMPDEST PUSH2 0x34FD JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x34FC JUMPI PUSH2 0x34FB DUP6 DUP6 PUSH2 0x3DC3 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x3525 JUMPI PUSH2 0x351E DUP4 PUSH2 0x3E4E JUMP JUMPDEST SWAP1 POP PUSH2 0x35B2 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x3531 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x355D SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x357F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x358D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35DA DUP3 PUSH2 0x27A0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x35E5 PUSH2 0x35B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3605 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3630 JUMP JUMPDEST DUP1 PUSH2 0x360F DUP5 PUSH2 0x3EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3620 SWAP3 SWAP2 SWAP1 PUSH2 0x5DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36B3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6073 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3713 JUMPI PUSH2 0x3704 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x36F7 JUMPI PUSH2 0x36F6 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3F90 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x36D7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x37A4 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x3796 DUP9 DUP3 DUP6 DUP6 PUSH2 0x3FBB JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x37CF JUMPI PUSH2 0x37CE PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x37E2 JUMPI PUSH2 0x37E1 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x391B JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x37FC JUMPI PUSH2 0x37FB PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x380F JUMPI PUSH2 0x380E PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3846 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x385A JUMPI PUSH2 0x3859 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x386D JUMPI PUSH2 0x386C PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x38B2 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A9 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x38C5 JUMPI PUSH2 0x38C4 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x38D8 JUMPI PUSH2 0x38D7 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x391A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3911 SWAP2 SWAP1 PUSH2 0x52CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3929 DUP4 DUP4 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x393E PUSH2 0x3934 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2D1D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x399D JUMPI POP PUSH2 0x399C DUP3 PUSH2 0x41A8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39B0 DUP5 PUSH2 0x31E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39F2 JUMPI PUSH2 0x39F1 DUP2 DUP5 DUP7 PUSH2 0x428A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A83 JUMPI PUSH2 0x3A34 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x3226 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3B06 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xC DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C12 DUP4 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP3 EQ PUSH2 0x3CBE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xC DUP1 SLOAD SWAP1 POP PUSH2 0x3D06 SWAP2 SWAP1 PUSH2 0x5C63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3D36 JUMPI PUSH2 0x3D35 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3D58 JUMPI PUSH2 0x3D57 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD DUP1 PUSH2 0x3DA7 JUMPI PUSH2 0x3DA6 PUSH2 0x60C6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3DD0 DUP5 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x3DDA SWAP2 SWAP1 PUSH2 0x5C63 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3E5B DUP4 PUSH2 0x434E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7A JUMPI PUSH2 0x3E79 PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3EAC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x3ED1 DUP5 PUSH2 0x439E JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EF0 JUMPI PUSH2 0x3EEF PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3F22 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3F85 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x3F79 JUMPI PUSH2 0x3F78 PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3F30 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x3FA8 JUMPI PUSH2 0x3FA3 DUP3 DUP5 PUSH2 0x44F1 JUMP JUMPDEST PUSH2 0x3FB3 JUMP JUMPDEST PUSH2 0x3FB2 DUP4 DUP4 PUSH2 0x44F1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3FFB JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x40A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x4020 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4042 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4096 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x40A5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4121 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4118 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x412F DUP4 DUP4 PUSH1 0x0 PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x41A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x419A SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4273 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4283 JUMPI POP PUSH2 0x4282 DUP3 PUSH2 0x4508 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4295 DUP4 DUP4 DUP4 PUSH2 0x4572 JUMP JUMPDEST PUSH2 0x4349 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x430A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4301 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4340 SWAP3 SWAP2 SWAP1 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x4395 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x43FC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x43F2 JUMPI PUSH2 0x43F1 PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x4439 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x442F JUMPI PUSH2 0x442E PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x4468 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x445E JUMPI PUSH2 0x445D PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x4491 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x4487 JUMPI PUSH2 0x4486 PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x44B6 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x44AC JUMPI PUSH2 0x44AB PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x44D9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x44CF JUMPI PUSH2 0x44CE PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x44E8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x462A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45EB JUMPI POP PUSH2 0x45EA DUP5 DUP5 PUSH2 0x1CD2 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x4629 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4611 DUP4 PUSH2 0x2828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4653 JUMPI PUSH2 0x4652 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46DD DUP2 PUSH2 0x46A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x46E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46FA DUP2 PUSH2 0x46D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4716 JUMPI PUSH2 0x4715 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4724 DUP5 DUP3 DUP6 ADD PUSH2 0x46EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4742 DUP2 PUSH2 0x472D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x475D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4739 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x479D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4782 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C5 DUP3 PUSH2 0x4763 JUMP JUMPDEST PUSH2 0x47CF DUP2 DUP6 PUSH2 0x476E JUMP JUMPDEST SWAP4 POP PUSH2 0x47DF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x477F JUMP JUMPDEST PUSH2 0x47E8 DUP2 PUSH2 0x47A9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x480D DUP2 DUP5 PUSH2 0x47BA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4828 DUP2 PUSH2 0x4815 JUMP JUMPDEST DUP2 EQ PUSH2 0x4833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4845 DUP2 PUSH2 0x481F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4861 JUMPI PUSH2 0x4860 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x486F DUP5 DUP3 DUP6 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A3 DUP3 PUSH2 0x4878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48B3 DUP2 PUSH2 0x4898 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x48AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48DD DUP2 PUSH2 0x4898 JUMP JUMPDEST DUP2 EQ PUSH2 0x48E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48FA DUP2 PUSH2 0x48D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4917 JUMPI PUSH2 0x4916 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4925 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4936 DUP6 DUP3 DUP7 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4949 DUP2 PUSH2 0x4815 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4964 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4940 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x49AA JUMPI PUSH2 0x49A9 PUSH2 0x496A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x49BB DUP3 PUSH2 0x4999 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49CB DUP3 PUSH2 0x49AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49DB DUP2 PUSH2 0x49C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x49EA DUP2 PUSH2 0x4815 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A03 DUP2 PUSH2 0x49F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4A20 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x49D2 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4A33 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4A46 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4A59 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4A6C PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x4A7F PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x4A92 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4AA5 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4ABA PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x49FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x4AD6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4AE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A09 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4B03 JUMPI PUSH2 0x4B02 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B11 DUP7 DUP3 DUP8 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4B22 DUP7 DUP3 DUP8 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4B33 DUP7 DUP3 DUP8 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B54 JUMPI PUSH2 0x4B53 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B62 DUP6 DUP3 DUP7 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4B73 DUP6 DUP3 DUP7 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4B92 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x4B9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4940 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BBC JUMPI PUSH2 0x4BBB PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BCA DUP5 DUP3 DUP6 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BDC DUP2 PUSH2 0x49C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4BEB DUP2 PUSH2 0x49F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x4C07 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x4BD3 JUMP JUMPDEST PUSH2 0x4C14 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C21 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C2E PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C3B PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C48 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C55 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C62 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C70 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x4BE2 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x4C8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4C9D DUP2 PUSH2 0x4C7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CAC DUP2 PUSH2 0x49F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4CC9 DUP2 PUSH2 0x4CA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4CF0 JUMPI PUSH2 0x4CEF PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CFE DUP12 DUP3 DUP13 ADD PUSH2 0x4C8E JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x4D0F DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x4D20 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x4D31 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x4D42 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x4D53 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x4D64 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x4D75 DUP12 DUP3 DUP13 ADD PUSH2 0x4CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DBA DUP2 PUSH2 0x4D85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF8 DUP4 DUP4 PUSH2 0x49E1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1C DUP3 PUSH2 0x4DC0 JUMP JUMPDEST PUSH2 0x4E26 DUP2 DUP6 PUSH2 0x4DCB JUMP JUMPDEST SWAP4 POP PUSH2 0x4E31 DUP4 PUSH2 0x4DDC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E62 JUMPI DUP2 MLOAD PUSH2 0x4E49 DUP9 DUP3 PUSH2 0x4DEC JUMP JUMPDEST SWAP8 POP PUSH2 0x4E54 DUP4 PUSH2 0x4E04 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4E35 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x4E84 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x4DB1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4E96 DUP2 DUP10 PUSH2 0x47BA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4EAA DUP2 DUP9 PUSH2 0x47BA JUMP JUMPDEST SWAP1 POP PUSH2 0x4EB9 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4EC6 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x4ED3 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x4BE2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4EE5 DUP2 DUP5 PUSH2 0x4E11 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4EFC DUP2 PUSH2 0x472D JUMP JUMPDEST DUP2 EQ PUSH2 0x4F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4F19 DUP2 PUSH2 0x4EF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F36 JUMPI PUSH2 0x4F35 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F44 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4F55 DUP6 DUP3 DUP7 ADD PUSH2 0x4F0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4F82 JUMPI PUSH2 0x4F81 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F90 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x4FA1 DUP13 DUP3 DUP14 ADD PUSH2 0x4C8E JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x4FB2 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x4FC3 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x4FD4 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x4FE5 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x4FF6 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH2 0x5007 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0x5019 DUP13 DUP3 DUP14 ADD PUSH2 0x4CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x506B DUP3 PUSH2 0x47A9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x508A JUMPI PUSH2 0x5089 PUSH2 0x5033 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x509D PUSH2 0x4694 JUMP JUMPDEST SWAP1 POP PUSH2 0x50A9 DUP3 DUP3 PUSH2 0x5062 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x50C9 JUMPI PUSH2 0x50C8 PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH2 0x50D2 DUP3 PUSH2 0x47A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5101 PUSH2 0x50FC DUP5 PUSH2 0x50AE JUMP JUMPDEST PUSH2 0x5093 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x511D JUMPI PUSH2 0x511C PUSH2 0x502E JUMP JUMPDEST JUMPDEST PUSH2 0x5128 DUP5 DUP3 DUP6 PUSH2 0x50DF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5145 JUMPI PUSH2 0x5144 PUSH2 0x5029 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5155 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x50EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5178 JUMPI PUSH2 0x5177 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5186 DUP8 DUP3 DUP9 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x5197 DUP8 DUP3 DUP9 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x51A8 DUP8 DUP3 DUP9 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51C9 JUMPI PUSH2 0x51C8 PUSH2 0x46A3 JUMP JUMPDEST JUMPDEST PUSH2 0x51D5 DUP8 DUP3 DUP9 ADD PUSH2 0x5130 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5202 DUP2 PUSH2 0x51E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x521D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x522C DUP2 PUSH2 0x51E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x5237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5249 DUP2 PUSH2 0x5223 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5266 JUMPI PUSH2 0x5265 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5274 DUP6 DUP3 DUP7 ADD PUSH2 0x523A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5285 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x52A6 JUMPI PUSH2 0x52A5 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x52B4 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x52C5 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x52E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x530A JUMPI PUSH2 0x5309 PUSH2 0x5029 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5327 JUMPI PUSH2 0x5326 PUSH2 0x52EA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x5343 JUMPI PUSH2 0x5342 PUSH2 0x52EF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x5360 JUMPI PUSH2 0x535F PUSH2 0x5029 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x537D JUMPI PUSH2 0x537C PUSH2 0x52EA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x5399 JUMPI PUSH2 0x5398 PUSH2 0x52EF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x53B6 JUMPI PUSH2 0x53B5 PUSH2 0x5029 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53D3 JUMPI PUSH2 0x53D2 PUSH2 0x52EA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x53EF JUMPI PUSH2 0x53EE PUSH2 0x52EF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x5416 JUMPI PUSH2 0x5415 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5424 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5445 JUMPI PUSH2 0x5444 PUSH2 0x46A3 JUMP JUMPDEST JUMPDEST PUSH2 0x5451 DUP12 DUP3 DUP13 ADD PUSH2 0x52F4 JUMP JUMPDEST SWAP8 POP SWAP8 POP POP PUSH1 0x40 PUSH2 0x5464 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5485 JUMPI PUSH2 0x5484 PUSH2 0x46A3 JUMP JUMPDEST JUMPDEST PUSH2 0x5491 DUP12 DUP3 DUP13 ADD PUSH2 0x534A JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x54B4 JUMPI PUSH2 0x54B3 PUSH2 0x46A3 JUMP JUMPDEST JUMPDEST PUSH2 0x54C0 DUP12 DUP3 DUP13 ADD PUSH2 0x53A0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x54E9 JUMPI PUSH2 0x54E8 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x54F7 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5508 DUP6 DUP3 DUP7 ADD PUSH2 0x4C8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5559 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x556C JUMPI PUSH2 0x556B PUSH2 0x5512 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x55B6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x55C3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x55D0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x48AA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5612 DUP3 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP PUSH2 0x561D DUP4 PUSH2 0x4815 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x562B DUP2 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x5642 JUMPI PUSH2 0x5641 PUSH2 0x55D8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5683 DUP3 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP PUSH2 0x568E DUP4 PUSH2 0x4815 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x569E JUMPI PUSH2 0x569D PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2062616C616E636520746F20776974686472617700000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56DF PUSH1 0x16 DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x56EA DUP3 PUSH2 0x56A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x570E DUP2 PUSH2 0x56D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5730 PUSH1 0x0 DUP4 PUSH2 0x5715 JUMP JUMPDEST SWAP2 POP PUSH2 0x573B DUP3 PUSH2 0x5720 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5751 DUP3 PUSH2 0x5723 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642074696D652072616E67650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5791 PUSH1 0x12 DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x579C DUP3 PUSH2 0x575B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57C0 DUP2 PUSH2 0x5784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D6178207065722077616C6C657420666F72206E6F6E2D70 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x75626C6963207068617365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5823 PUSH1 0x2B DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x582E DUP3 PUSH2 0x57C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5852 DUP2 PUSH2 0x5816 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D6178206D696E742070657220706861736520666F72206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E2D7075626C69632070686173650000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B5 PUSH1 0x2F DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x58C0 DUP3 PUSH2 0x5859 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x58E4 DUP2 PUSH2 0x58A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D65726B6C6520726F6F7420726571756972656420666F722077686974656C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374207068617365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5947 PUSH1 0x28 DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x5952 DUP3 PUSH2 0x58EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5976 DUP2 PUSH2 0x593A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x5993 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4BD3 JUMP JUMPDEST PUSH2 0x59A0 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59AD PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59BA PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59C7 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59D4 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59E1 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59EE PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4BE2 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x506C6174666F726D206665652063616E6E6F7420657863656564203130250000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A31 PUSH1 0x1E DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x5A3C DUP3 PUSH2 0x59FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A60 DUP2 PUSH2 0x5A24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642066656520726563697069656E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9D PUSH1 0x15 DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x5AA8 DUP3 PUSH2 0x5A67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5ACC DUP2 PUSH2 0x5A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5AE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x51F9 JUMP JUMPDEST PUSH2 0x5AF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x48AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B14 DUP3 PUSH2 0x5AFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B26 DUP3 PUSH2 0x5B09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B3E PUSH2 0x5B39 DUP3 PUSH2 0x4898 JUMP JUMPDEST PUSH2 0x5B1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B50 DUP3 DUP5 PUSH2 0x5B2D JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B6B DUP4 DUP6 PUSH2 0x5715 JUMP JUMPDEST SWAP4 POP PUSH2 0x5B78 DUP4 DUP6 DUP5 PUSH2 0x50DF JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B91 DUP3 DUP5 DUP7 PUSH2 0x5B5F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA8 DUP3 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x5BDA JUMPI PUSH2 0x5BD9 PUSH2 0x55D8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x5BFB PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x5C08 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x5C15 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x5C22 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x5C2F PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x5C3C PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x5C49 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x5C56 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4940 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C6E DUP3 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C79 DUP4 PUSH2 0x4815 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5C91 JUMPI PUSH2 0x5C90 PUSH2 0x55D8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5CAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CD9 DUP3 PUSH2 0x5CB2 JUMP JUMPDEST PUSH2 0x5CE3 DUP2 DUP6 PUSH2 0x5CBD JUMP JUMPDEST SWAP4 POP PUSH2 0x5CF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x477F JUMP JUMPDEST PUSH2 0x5CFC DUP2 PUSH2 0x47A9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5D1C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x5D29 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x5D36 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5D48 DUP2 DUP5 PUSH2 0x5CCE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5D62 DUP2 PUSH2 0x46D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D7E JUMPI PUSH2 0x5D7D PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5D8C DUP5 DUP3 DUP6 ADD PUSH2 0x5D53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DAB DUP3 PUSH2 0x4763 JUMP JUMPDEST PUSH2 0x5DB5 DUP2 DUP6 PUSH2 0x5D95 JUMP JUMPDEST SWAP4 POP PUSH2 0x5DC5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x477F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DDD DUP3 DUP6 PUSH2 0x5DA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x5DE9 DUP3 DUP5 PUSH2 0x5DA0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5E57 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5E1A JUMP JUMPDEST PUSH2 0x5E61 DUP7 DUP4 PUSH2 0x5E1A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E9E PUSH2 0x5E99 PUSH2 0x5E94 DUP5 PUSH2 0x4815 JUMP JUMPDEST PUSH2 0x5E79 JUMP JUMPDEST PUSH2 0x4815 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EB8 DUP4 PUSH2 0x5E83 JUMP JUMPDEST PUSH2 0x5ECC PUSH2 0x5EC4 DUP3 PUSH2 0x5EA5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5E27 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5EE1 PUSH2 0x5ED4 JUMP JUMPDEST PUSH2 0x5EEC DUP2 DUP5 DUP5 PUSH2 0x5EAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F10 JUMPI PUSH2 0x5F05 PUSH1 0x0 DUP3 PUSH2 0x5ED9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5EF2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5F55 JUMPI PUSH2 0x5F26 DUP2 PUSH2 0x5DF5 JUMP JUMPDEST PUSH2 0x5F2F DUP5 PUSH2 0x5E0A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5F3E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5F52 PUSH2 0x5F4A DUP6 PUSH2 0x5E0A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5EF1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F78 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5F5A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F91 DUP4 DUP4 PUSH2 0x5F67 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FAA DUP3 PUSH2 0x4763 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5FC3 JUMPI PUSH2 0x5FC2 PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH2 0x5FCD DUP3 SLOAD PUSH2 0x5541 JUMP JUMPDEST PUSH2 0x5FD8 DUP3 DUP3 DUP6 PUSH2 0x5F14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x600B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5FF9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x6003 DUP6 DUP3 PUSH2 0x5F85 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x606B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x6019 DUP7 PUSH2 0x5DF5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6041 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x601C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x605E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x605A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5F67 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x6088 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x6095 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x60A2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x60AF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x60BC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x48AA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610B DUP2 PUSH2 0x60F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6126 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x6133 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6102 JUMP JUMPDEST PUSH2 0x6140 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x614D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4BE2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 SHL JUMPI PUSH24 0xDE253254A9CB4B1C39E0CBF63C54FBE3BFDC7F5251E9D815 0xBD TLOAD SLOAD 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"622:13275:31:-:0;;;2997:1138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3230:12:31;3208:4;3214:6;1454:5:7;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:22;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;3299:4:31::3;3284:11;:19;;;;3276:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3367:4;3351:12;:20;;;;3343:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3460:1;3427:35;;:21;:35;;::::0;3412:96:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;3548:1;3522:28;;:14;:28;;::::0;3514:63:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;3600:14;3584:30;;;;;;;;::::0;::::3;3643:11;3620:34;;;;;;;;::::0;::::3;3684:12;3660:21;;:36;;;;;;;;;;;;;;;;;;3725:21;3702:20;;:44;;;;;;;;;;;;;;;;;;3753:54;3772:12;3786:20;;3753:18;;;:54;;:::i;:::-;3855:6;3874:250;;;;;;;;3901:21;3874:250;;;;;;;;:::i;:::-;;;;;;3939:1;3874:250;;;;3961:1;3874:250;;;;3981:1;3874:250;;;;4003:1;3874:250;;;;4028:1;3874:250;;;;4056:1;3874:250;;;;4082:1;3874:250;;;;4113:1;4105:10:::0;::::3;3874:250;;::::0;3855:275:::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2997:1138:::0;;;;;;;622:13275;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2887:340:18:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4113:179:22:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3667:507:15:-;3761:19;3783:17;:15;;;:17;;:::i;:::-;3761:39;;;;3829:11;3814:12;:26;;;3810:173;;;3946:12;3960:11;3917:55;;;;;;;;;;;;:::i;:::-;;;;;;;;3810:173;4016:1;3996:22;;:8;:22;;;3992:108;;4086:1;4041:48;;;;;;;;;;;:::i;:::-;;;;;;;;3992:108;4132:35;;;;;;;;4144:8;4132:35;;;;;;4154:12;4132:35;;;;;4110:19;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3751:423;3667:507;;:::o;1708:286:18:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:19:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;3311:95:15:-;3369:6;3394:5;3387:12;;3311:95;:::o;7:75:32:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:248::-;2203:1;2213:113;2227:6;2224:1;2221:13;2213:113;;;2312:1;2307:3;2303:11;2297:18;2293:1;2288:3;2284:11;2277:39;2249:2;2246:1;2242:10;2237:15;;2213:113;;;2360:1;2351:6;2346:3;2342:16;2335:27;2183:186;2121:248;;;:::o;2375:434::-;2464:5;2489:66;2505:49;2547:6;2505:49;:::i;:::-;2489:66;:::i;:::-;2480:75;;2578:6;2571:5;2564:21;2616:4;2609:5;2605:16;2654:3;2645:6;2640:3;2636:16;2633:25;2630:112;;;2661:79;;:::i;:::-;2630:112;2751:52;2796:6;2791:3;2786;2751:52;:::i;:::-;2470:339;2375:434;;;;;:::o;2829:355::-;2896:5;2945:3;2938:4;2930:6;2926:17;2922:27;2912:122;;2953:79;;:::i;:::-;2912:122;3063:6;3057:13;3088:90;3174:3;3166:6;3159:4;3151:6;3147:17;3088:90;:::i;:::-;3079:99;;2902:282;2829:355;;;;:::o;3190:109::-;3226:7;3266:26;3259:5;3255:38;3244:49;;3190:109;;;:::o;3305:120::-;3377:23;3394:5;3377:23;:::i;:::-;3370:5;3367:34;3357:62;;3415:1;3412;3405:12;3357:62;3305:120;:::o;3431:141::-;3487:5;3518:6;3512:13;3503:22;;3534:32;3560:5;3534:32;:::i;:::-;3431:141;;;;:::o;3578:1633::-;3720:6;3728;3736;3744;3752;3760;3768;3817:3;3805:9;3796:7;3792:23;3788:33;3785:120;;;3824:79;;:::i;:::-;3785:120;3944:1;3969:64;4025:7;4016:6;4005:9;4001:22;3969:64;:::i;:::-;3959:74;;3915:128;4103:2;4092:9;4088:18;4082:25;4134:18;4126:6;4123:30;4120:117;;;4156:79;;:::i;:::-;4120:117;4261:74;4327:7;4318:6;4307:9;4303:22;4261:74;:::i;:::-;4251:84;;4053:292;4405:2;4394:9;4390:18;4384:25;4436:18;4428:6;4425:30;4422:117;;;4458:79;;:::i;:::-;4422:117;4563:74;4629:7;4620:6;4609:9;4605:22;4563:74;:::i;:::-;4553:84;;4355:292;4686:2;4712:63;4767:7;4758:6;4747:9;4743:22;4712:63;:::i;:::-;4702:73;;4657:128;4824:3;4851:63;4906:7;4897:6;4886:9;4882:22;4851:63;:::i;:::-;4841:73;;4795:129;4963:3;4990:64;5046:7;5037:6;5026:9;5022:22;4990:64;:::i;:::-;4980:74;;4934:130;5103:3;5130:64;5186:7;5177:6;5166:9;5162:22;5130:64;:::i;:::-;5120:74;;5074:130;3578:1633;;;;;;;;;;:::o;5217:99::-;5269:6;5303:5;5297:12;5287:22;;5217:99;;;:::o;5322:180::-;5370:77;5367:1;5360:88;5467:4;5464:1;5457:15;5491:4;5488:1;5481:15;5508:320;5552:6;5589:1;5583:4;5579:12;5569:22;;5636:1;5630:4;5626:12;5657:18;5647:81;;5713:4;5705:6;5701:17;5691:27;;5647:81;5775:2;5767:6;5764:14;5744:18;5741:38;5738:84;;5794:18;;:::i;:::-;5738:84;5559:269;5508:320;;;:::o;5834:141::-;5883:4;5906:3;5898:11;;5929:3;5926:1;5919:14;5963:4;5960:1;5950:18;5942:26;;5834:141;;;:::o;5981:93::-;6018:6;6065:2;6060;6053:5;6049:14;6045:23;6035:33;;5981:93;;;:::o;6080:107::-;6124:8;6174:5;6168:4;6164:16;6143:37;;6080:107;;;;:::o;6193:393::-;6262:6;6312:1;6300:10;6296:18;6335:97;6365:66;6354:9;6335:97;:::i;:::-;6453:39;6483:8;6472:9;6453:39;:::i;:::-;6441:51;;6525:4;6521:9;6514:5;6510:21;6501:30;;6574:4;6564:8;6560:19;6553:5;6550:30;6540:40;;6269:317;;6193:393;;;;;:::o;6592:77::-;6629:7;6658:5;6647:16;;6592:77;;;:::o;6675:60::-;6703:3;6724:5;6717:12;;6675:60;;;:::o;6741:142::-;6791:9;6824:53;6842:34;6851:24;6869:5;6851:24;:::i;:::-;6842:34;:::i;:::-;6824:53;:::i;:::-;6811:66;;6741:142;;;:::o;6889:75::-;6932:3;6953:5;6946:12;;6889:75;;;:::o;6970:269::-;7080:39;7111:7;7080:39;:::i;:::-;7141:91;7190:41;7214:16;7190:41;:::i;:::-;7182:6;7175:4;7169:11;7141:91;:::i;:::-;7135:4;7128:105;7046:193;6970:269;;;:::o;7245:73::-;7290:3;7245:73;:::o;7324:189::-;7401:32;;:::i;:::-;7442:65;7500:6;7492;7486:4;7442:65;:::i;:::-;7377:136;7324:189;;:::o;7519:186::-;7579:120;7596:3;7589:5;7586:14;7579:120;;;7650:39;7687:1;7680:5;7650:39;:::i;:::-;7623:1;7616:5;7612:13;7603:22;;7579:120;;;7519:186;;:::o;7711:543::-;7812:2;7807:3;7804:11;7801:446;;;7846:38;7878:5;7846:38;:::i;:::-;7930:29;7948:10;7930:29;:::i;:::-;7920:8;7916:44;8113:2;8101:10;8098:18;8095:49;;;8134:8;8119:23;;8095:49;8157:80;8213:22;8231:3;8213:22;:::i;:::-;8203:8;8199:37;8186:11;8157:80;:::i;:::-;7816:431;;7801:446;7711:543;;;:::o;8260:117::-;8314:8;8364:5;8358:4;8354:16;8333:37;;8260:117;;;;:::o;8383:169::-;8427:6;8460:51;8508:1;8504:6;8496:5;8493:1;8489:13;8460:51;:::i;:::-;8456:56;8541:4;8535;8531:15;8521:25;;8434:118;8383:169;;;;:::o;8557:295::-;8633:4;8779:29;8804:3;8798:4;8779:29;:::i;:::-;8771:37;;8841:3;8838:1;8834:11;8828:4;8825:21;8817:29;;8557:295;;;;:::o;8857:1395::-;8974:37;9007:3;8974:37;:::i;:::-;9076:18;9068:6;9065:30;9062:56;;;9098:18;;:::i;:::-;9062:56;9142:38;9174:4;9168:11;9142:38;:::i;:::-;9227:67;9287:6;9279;9273:4;9227:67;:::i;:::-;9321:1;9345:4;9332:17;;9377:2;9369:6;9366:14;9394:1;9389:618;;;;10051:1;10068:6;10065:77;;;10117:9;10112:3;10108:19;10102:26;10093:35;;10065:77;10168:67;10228:6;10221:5;10168:67;:::i;:::-;10162:4;10155:81;10024:222;9359:887;;9389:618;9441:4;9437:9;9429:6;9425:22;9475:37;9507:4;9475:37;:::i;:::-;9534:1;9548:208;9562:7;9559:1;9556:14;9548:208;;;9641:9;9636:3;9632:19;9626:26;9618:6;9611:42;9692:1;9684:6;9680:14;9670:24;;9739:2;9728:9;9724:18;9711:31;;9585:4;9582:1;9578:12;9573:17;;9548:208;;;9784:6;9775:7;9772:19;9769:179;;;9842:9;9837:3;9833:19;9827:26;9885:48;9927:4;9919:6;9915:17;9904:9;9885:48;:::i;:::-;9877:6;9870:64;9792:156;9769:179;9994:1;9990;9982:6;9978:14;9974:22;9968:4;9961:36;9396:611;;;9359:887;;8949:1303;;;8857:1395;;:::o;10258:118::-;10345:24;10363:5;10345:24;:::i;:::-;10340:3;10333:37;10258:118;;:::o;10382:222::-;10475:4;10513:2;10502:9;10498:18;10490:26;;10526:71;10594:1;10583:9;10579:17;10570:6;10526:71;:::i;:::-;10382:222;;;;:::o;10610:169::-;10694:11;10728:6;10723:3;10716:19;10768:4;10763:3;10759:14;10744:29;;10610:169;;;;:::o;10785:179::-;10925:31;10921:1;10913:6;10909:14;10902:55;10785:179;:::o;10970:366::-;11112:3;11133:67;11197:2;11192:3;11133:67;:::i;:::-;11126:74;;11209:93;11298:3;11209:93;:::i;:::-;11327:2;11322:3;11318:12;11311:19;;10970:366;;;:::o;11342:419::-;11508:4;11546:2;11535:9;11531:18;11523:26;;11595:9;11589:4;11585:20;11581:1;11570:9;11566:17;11559:47;11623:131;11749:4;11623:131;:::i;:::-;11615:139;;11342:419;;;:::o;11767:180::-;11907:32;11903:1;11895:6;11891:14;11884:56;11767:180;:::o;11953:366::-;12095:3;12116:67;12180:2;12175:3;12116:67;:::i;:::-;12109:74;;12192:93;12281:3;12192:93;:::i;:::-;12310:2;12305:3;12301:12;12294:19;;11953:366;;;:::o;12325:419::-;12491:4;12529:2;12518:9;12514:18;12506:26;;12578:9;12572:4;12568:20;12564:1;12553:9;12549:17;12542:47;12606:131;12732:4;12606:131;:::i;:::-;12598:139;;12325:419;;;:::o;12750:180::-;12890:32;12886:1;12878:6;12874:14;12867:56;12750:180;:::o;12936:366::-;13078:3;13099:67;13163:2;13158:3;13099:67;:::i;:::-;13092:74;;13175:93;13264:3;13175:93;:::i;:::-;13293:2;13288:3;13284:12;13277:19;;12936:366;;;:::o;13308:419::-;13474:4;13512:2;13501:9;13497:18;13489:26;;13561:9;13555:4;13551:20;13547:1;13536:9;13532:17;13525:47;13589:131;13715:4;13589:131;:::i;:::-;13581:139;;13308:419;;;:::o;13733:172::-;13873:24;13869:1;13861:6;13857:14;13850:48;13733:172;:::o;13911:366::-;14053:3;14074:67;14138:2;14133:3;14074:67;:::i;:::-;14067:74;;14150:93;14239:3;14150:93;:::i;:::-;14268:2;14263:3;14259:12;14252:19;;13911:366;;;:::o;14283:419::-;14449:4;14487:2;14476:9;14472:18;14464:26;;14536:9;14530:4;14526:20;14522:1;14511:9;14507:17;14500:47;14564:131;14690:4;14564:131;:::i;:::-;14556:139;;14283:419;;;:::o;14708:180::-;14756:77;14753:1;14746:88;14853:4;14850:1;14843:15;14877:4;14874:1;14867:15;14894:77;14931:7;14960:5;14949:16;;14894:77;;;:::o;14977:118::-;15064:24;15082:5;15064:24;:::i;:::-;15059:3;15052:37;14977:118;;:::o;15101:::-;15188:24;15206:5;15188:24;:::i;:::-;15183:3;15176:37;15101:118;;:::o;15225:664::-;15430:4;15468:3;15457:9;15453:19;15445:27;;15482:71;15550:1;15539:9;15535:17;15526:6;15482:71;:::i;:::-;15563:72;15631:2;15620:9;15616:18;15607:6;15563:72;:::i;:::-;15645;15713:2;15702:9;15698:18;15689:6;15645:72;:::i;:::-;15727;15795:2;15784:9;15780:18;15771:6;15727:72;:::i;:::-;15809:73;15877:3;15866:9;15862:19;15853:6;15809:73;:::i;:::-;15225:664;;;;;;;;:::o;15895:140::-;15944:9;15977:52;15995:33;16004:23;16021:5;16004:23;:::i;:::-;15995:33;:::i;:::-;15977:52;:::i;:::-;15964:65;;15895:140;;;:::o;16041:129::-;16127:36;16157:5;16127:36;:::i;:::-;16122:3;16115:49;16041:129;;:::o;16176:330::-;16296:4;16334:2;16323:9;16319:18;16311:26;;16347:70;16414:1;16403:9;16399:17;16390:6;16347:70;:::i;:::-;16427:72;16495:2;16484:9;16480:18;16471:6;16427:72;:::i;:::-;16176:330;;;;;:::o;16512:377::-;16600:3;16628:39;16661:5;16628:39;:::i;:::-;16683:71;16747:6;16742:3;16683:71;:::i;:::-;16676:78;;16763:65;16821:6;16816:3;16809:4;16802:5;16798:16;16763:65;:::i;:::-;16853:29;16875:6;16853:29;:::i;:::-;16848:3;16844:39;16837:46;;16604:285;16512:377;;;;:::o;16895:313::-;17008:4;17046:2;17035:9;17031:18;17023:26;;17095:9;17089:4;17085:20;17081:1;17070:9;17066:17;17059:47;17123:78;17196:4;17187:6;17123:78;:::i;:::-;17115:86;;16895:313;;;;:::o;17214:98::-;17265:6;17299:5;17293:12;17283:22;;17214:98;;;:::o;17318:116::-;17369:4;17392:3;17384:11;;17422:4;17417:3;17413:14;17405:22;;17318:116;;;:::o;17440:154::-;17483:11;17519:29;17543:3;17537:10;17519:29;:::i;:::-;17582:5;17558:29;;17495:99;17440:154;;;:::o;17600:594::-;17684:5;17715:38;17747:5;17715:38;:::i;:::-;17778:5;17805:40;17839:5;17805:40;:::i;:::-;17793:52;;17864:35;17890:8;17864:35;:::i;:::-;17855:44;;17923:2;17915:6;17912:14;17909:278;;;17994:169;18079:66;18049:6;18045:2;18041:15;18038:1;18034:23;17994:169;:::i;:::-;17971:5;17950:227;17941:236;;17909:278;17690:504;;17600:594;;;:::o;622:13275:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_EIP712Name_3674":{"entryPoint":11064,"id":3674,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3686":{"entryPoint":11123,"id":3686,"parameterSlots":0,"returnSlots":1},"@_addTokenToAllTokensEnumeration_1703":{"entryPoint":15294,"id":1703,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_1683":{"entryPoint":15811,"id":1683,"parameterSlots":2,"returnSlots":0},"@_approve_1185":{"entryPoint":10349,"id":1185,"parameterSlots":3,"returnSlots":0},"@_approve_1251":{"entryPoint":12838,"id":1251,"parameterSlots":4,"returnSlots":0},"@_baseURI_566":{"entryPoint":13752,"id":566,"parameterSlots":0,"returnSlots":1},"@_buildDomainSeparator_3604":{"entryPoint":13880,"id":3604,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_825":{"entryPoint":17034,"id":825,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":10731,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3583":{"entryPoint":12257,"id":3583,"parameterSlots":0,"returnSlots":1},"@_efficientKeccak256_3726":{"entryPoint":17649,"id":3726,"parameterSlots":2,"returnSlots":1},"@_feeDenominator_2250":{"entryPoint":10721,"id":2250,"parameterSlots":0,"returnSlots":1},"@_getActivePhase_9033":{"entryPoint":10367,"id":9033,"parameterSlots":0,"returnSlots":2},"@_getApproved_752":{"entryPoint":10280,"id":752,"parameterSlots":1,"returnSlots":1},"@_hashTypedDataV4_3620":{"entryPoint":12463,"id":3620,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_788":{"entryPoint":17778,"id":788,"parameterSlots":3,"returnSlots":1},"@_mint_981":{"entryPoint":16559,"id":981,"parameterSlots":2,"returnSlots":0},"@_msgSender_2381":{"entryPoint":10341,"id":2381,"parameterSlots":0,"returnSlots":1},"@_ownerOf_739":{"entryPoint":12777,"id":739,"parameterSlots":1,"returnSlots":1},"@_removeTokenFromAllTokensEnumeration_1813":{"entryPoint":15602,"id":1813,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_1765":{"entryPoint":15367,"id":1765,"parameterSlots":2,"returnSlots":0},"@_requireOwned_1317":{"entryPoint":10144,"id":1317,"parameterSlots":1,"returnSlots":1},"@_safeMint_1026":{"entryPoint":14623,"id":1026,"parameterSlots":3,"returnSlots":0},"@_safeMint_996":{"entryPoint":12533,"id":996,"parameterSlots":2,"returnSlots":0},"@_setApprovalForAll_1288":{"entryPoint":11182,"id":1288,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1964":{"entryPoint":12563,"id":1964,"parameterSlots":2,"returnSlots":0},"@_throwError_3459":{"entryPoint":14267,"id":3459,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":10866,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1652":{"entryPoint":13291,"id":1652,"parameterSlots":3,"returnSlots":1},"@_update_931":{"entryPoint":14756,"id":931,"parameterSlots":3,"returnSlots":1},"@_update_9510":{"entryPoint":10699,"id":9510,"parameterSlots":3,"returnSlots":1},"@addPhase_9186":{"entryPoint":4556,"id":9186,"parameterSlots":8,"returnSlots":0},"@approve_582":{"entryPoint":2681,"id":582,"parameterSlots":2,"returnSlots":0},"@backendSigner_8476":{"entryPoint":4314,"id":8476,"parameterSlots":0,"returnSlots":0},"@balanceOf_490":{"entryPoint":4350,"id":490,"parameterSlots":1,"returnSlots":1},"@byteLength_2569":{"entryPoint":17230,"id":2569,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2101":{"entryPoint":11549,"id":2101,"parameterSlots":5,"returnSlots":0},"@commutativeKeccak256_3714":{"entryPoint":16272,"id":3714,"parameterSlots":2,"returnSlots":1},"@eip712Domain_3662":{"entryPoint":5586,"id":3662,"parameterSlots":0,"returnSlots":7},"@getActivePhase_9045":{"entryPoint":2716,"id":9045,"parameterSlots":0,"returnSlots":2},"@getApproved_599":{"entryPoint":2653,"id":599,"parameterSlots":1,"returnSlots":1},"@getDomainSeparator_9537":{"entryPoint":7564,"id":9537,"parameterSlots":0,"returnSlots":1},"@getMintedInPhase_9566":{"entryPoint":9895,"id":9566,"parameterSlots":2,"returnSlots":1},"@getNonce_9549":{"entryPoint":3458,"id":9549,"parameterSlots":1,"returnSlots":1},"@getPhaseCount_9575":{"entryPoint":6988,"id":9575,"parameterSlots":0,"returnSlots":1},"@isActivePhasePresent_9626":{"entryPoint":2403,"id":9626,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_632":{"entryPoint":7378,"id":632,"parameterSlots":2,"returnSlots":1},"@log10_6288":{"entryPoint":17310,"id":6288,"parameterSlots":1,"returnSlots":1},"@mint_8974":{"entryPoint":7579,"id":8974,"parameterSlots":8,"returnSlots":0},"@name_512":{"entryPoint":2257,"id":512,"parameterSlots":0,"returnSlots":1},"@ownerOf_503":{"entryPoint":4296,"id":503,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":5756,"id":67,"parameterSlots":0,"returnSlots":1},"@phases_8489":{"entryPoint":3531,"id":8489,"parameterSlots":0,"returnSlots":0},"@platformFeePercentage_8500":{"entryPoint":6958,"id":8500,"parameterSlots":0,"returnSlots":0},"@platformFeeRecipient_8502":{"entryPoint":7526,"id":8502,"parameterSlots":0,"returnSlots":0},"@processProof_3797":{"entryPoint":14030,"id":3797,"parameterSlots":2,"returnSlots":1},"@recover_3216":{"entryPoint":12489,"id":3216,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":4536,"id":98,"parameterSlots":0,"returnSlots":0},"@royaltyInfo_2241":{"entryPoint":3154,"id":2241,"parameterSlots":2,"returnSlots":2},"@safeTransferFrom_696":{"entryPoint":4146,"id":696,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_726":{"entryPoint":6903,"id":726,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_615":{"entryPoint":5944,"id":615,"parameterSlots":2,"returnSlots":0},"@setPlatformFee_9411":{"entryPoint":7001,"id":9411,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1517":{"entryPoint":10022,"id":1517,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1888":{"entryPoint":14659,"id":1888,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2179":{"entryPoint":12655,"id":2179,"parameterSlots":1,"returnSlots":1},"@supportsInterface_462":{"entryPoint":16808,"id":462,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4897":{"entryPoint":17672,"id":4897,"parameterSlots":1,"returnSlots":1},"@supportsInterface_9472":{"entryPoint":2239,"id":9472,"parameterSlots":1,"returnSlots":1},"@symbol_521":{"entryPoint":5798,"id":521,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2636":{"entryPoint":13576,"id":2636,"parameterSlots":2,"returnSlots":1},"@toString_2537":{"entryPoint":15950,"id":2537,"parameterSlots":1,"returnSlots":1},"@toString_2860":{"entryPoint":16066,"id":2860,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4873":{"entryPoint":14110,"id":4873,"parameterSlots":2,"returnSlots":1},"@tokenByIndex_1583":{"entryPoint":4178,"id":1583,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_1546":{"entryPoint":3638,"id":1546,"parameterSlots":2,"returnSlots":1},"@tokenURI_1945":{"entryPoint":11982,"id":1945,"parameterSlots":1,"returnSlots":1},"@tokenURI_557":{"entryPoint":13775,"id":557,"parameterSlots":1,"returnSlots":1},"@tokenURI_9488":{"entryPoint":6940,"id":9488,"parameterSlots":1,"returnSlots":1},"@totalSupply_1556":{"entryPoint":2703,"id":1556,"parameterSlots":0,"returnSlots":1},"@transferFrom_678":{"entryPoint":2896,"id":678,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":9761,"id":126,"parameterSlots":1,"returnSlots":0},"@tryRecover_3186":{"entryPoint":14175,"id":3186,"parameterSlots":2,"returnSlots":3},"@tryRecover_3374":{"entryPoint":16315,"id":3374,"parameterSlots":4,"returnSlots":3},"@updatePhase_9371":{"entryPoint":5966,"id":9371,"parameterSlots":9,"returnSlots":0},"@verify_3756":{"entryPoint":12440,"id":3756,"parameterSlots":3,"returnSlots":1},"@withdraw_9454":{"entryPoint":3807,"id":9454,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":20718,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":18667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":21408,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool":{"entryPoint":20234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":19642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":18155,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":23891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":21322,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":20784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_PhaseType_$8454":{"entryPoint":19598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":21236,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":18486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":21050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":19366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":21135,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":19178,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":20830,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":20255,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_enum$_PhaseType_$8454":{"entryPoint":21714,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":18688,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":18176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":23912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_PhaseType_$8454t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bytes32":{"entryPoint":19663,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint256":{"entryPoint":18507,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_enum$_PhaseType_$8454t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bytes32":{"entryPoint":20319,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_uint256t_string_calldata_ptrt_uint256t_bytes_calldata_ptrt_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":21494,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":19261,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint96t_address":{"entryPoint":21071,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":19948,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":18602,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":23341,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":19985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":18233,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":19889,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":18938,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":19426,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23391,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":23758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_PhaseType_$8454_to_t_uint8":{"entryPoint":18898,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_PhaseType_$8454_to_t_uint8_fromStack":{"entryPoint":19411,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":18362,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack":{"entryPoint":22404,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack":{"entryPoint":22226,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":22307,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack":{"entryPoint":22550,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c_to_t_string_memory_ptr_fromStack":{"entryPoint":22696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack":{"entryPoint":22842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack":{"entryPoint":23184,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack":{"entryPoint":23076,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Phase_$8474_memory_ptr_to_t_struct$_Phase_$8474_memory_ptr_fromStack":{"entryPoint":18953,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":18913,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":18752,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":24834,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":20985,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":23364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":23428,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":24017,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":22342,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":18617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":23815,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":19325,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":21921,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":18248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":20079,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":21199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":23525,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":24691,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":24849,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_enum$_PhaseType_$8454__to_t_uint8__fromStack_reversed":{"entryPoint":23703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_PhaseType_$8454_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":22909,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_enum$_PhaseType_$8454_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":19441,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18419,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22439,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22585,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23219,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23111,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":18767,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_struct$_Phase_$8474_memory_ptr__to_t_uint256_t_struct$_Phase_$8474_memory_ptr__fromStack_reversed":{"entryPoint":19136,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":21000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_address__to_t_uint96_t_address__fromStack_reversed":{"entryPoint":23251,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":20627,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":18068,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":20654,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19932,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":24053,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19904,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":23730,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":18275,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19972,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":19915,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":23741,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":22293,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":18286,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23957,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":22136,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":22023,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":23651,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":24340,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":18584,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":18221,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":19845,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":18928,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":18088,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_PhaseType_$8454":{"entryPoint":18861,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":18552,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":18453,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":24821,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":20961,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":24305,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_enum$_PhaseType_$8454_to_t_uint8":{"entryPoint":18880,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":24195,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":24481,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":20703,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":18303,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":24074,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":21825,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":24453,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":20578,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":24185,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":23453,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":23323,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":23305,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":24423,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":21976,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":22089,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":18794,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":21778,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":24774,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":21874,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":20531,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":24229,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":21226,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":20521,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":21231,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":20526,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":18083,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":18078,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":18345,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":23292,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":24090,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":24410,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":24281,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc":{"entryPoint":22363,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5":{"entryPoint":22185,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":22304,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3":{"entryPoint":22471,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c":{"entryPoint":22617,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef":{"entryPoint":22763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361":{"entryPoint":23143,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270":{"entryPoint":23035,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":24103,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":24239,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_PhaseType_$8454":{"entryPoint":18841,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":18644,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":20211,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":19619,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":18132,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_PhaseType_$8454":{"entryPoint":19582,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":18463,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":21027,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":24276,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:51410:32","nodeType":"YulBlock","src":"0:51410:32","statements":[{"body":{"nativeSrc":"47:35:32","nodeType":"YulBlock","src":"47:35:32","statements":[{"nativeSrc":"57:19:32","nodeType":"YulAssignment","src":"57:19:32","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:32","nodeType":"YulLiteral","src":"73:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:32","nodeType":"YulIdentifier","src":"67:5:32"},"nativeSrc":"67:9:32","nodeType":"YulFunctionCall","src":"67:9:32"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:32","nodeType":"YulIdentifier","src":"57:6:32"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:32","nodeType":"YulTypedName","src":"40:6:32","type":""}],"src":"7:75:32"},{"body":{"nativeSrc":"177:28:32","nodeType":"YulBlock","src":"177:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:32","nodeType":"YulLiteral","src":"194:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:32","nodeType":"YulLiteral","src":"197:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:32","nodeType":"YulIdentifier","src":"187:6:32"},"nativeSrc":"187:12:32","nodeType":"YulFunctionCall","src":"187:12:32"},"nativeSrc":"187:12:32","nodeType":"YulExpressionStatement","src":"187:12:32"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:32","nodeType":"YulFunctionDefinition","src":"88:117:32"},{"body":{"nativeSrc":"300:28:32","nodeType":"YulBlock","src":"300:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:32","nodeType":"YulLiteral","src":"317:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:32","nodeType":"YulLiteral","src":"320:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:32","nodeType":"YulIdentifier","src":"310:6:32"},"nativeSrc":"310:12:32","nodeType":"YulFunctionCall","src":"310:12:32"},"nativeSrc":"310:12:32","nodeType":"YulExpressionStatement","src":"310:12:32"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:32","nodeType":"YulFunctionDefinition","src":"211:117:32"},{"body":{"nativeSrc":"378:105:32","nodeType":"YulBlock","src":"378:105:32","statements":[{"nativeSrc":"388:89:32","nodeType":"YulAssignment","src":"388:89:32","value":{"arguments":[{"name":"value","nativeSrc":"403:5:32","nodeType":"YulIdentifier","src":"403:5:32"},{"kind":"number","nativeSrc":"410:66:32","nodeType":"YulLiteral","src":"410:66:32","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:32","nodeType":"YulIdentifier","src":"399:3:32"},"nativeSrc":"399:78:32","nodeType":"YulFunctionCall","src":"399:78:32"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:32","nodeType":"YulIdentifier","src":"388:7:32"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:32","nodeType":"YulTypedName","src":"360:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:32","nodeType":"YulTypedName","src":"370:7:32","type":""}],"src":"334:149:32"},{"body":{"nativeSrc":"531:78:32","nodeType":"YulBlock","src":"531:78:32","statements":[{"body":{"nativeSrc":"587:16:32","nodeType":"YulBlock","src":"587:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:32","nodeType":"YulLiteral","src":"596:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:32","nodeType":"YulLiteral","src":"599:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:32","nodeType":"YulIdentifier","src":"589:6:32"},"nativeSrc":"589:12:32","nodeType":"YulFunctionCall","src":"589:12:32"},"nativeSrc":"589:12:32","nodeType":"YulExpressionStatement","src":"589:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:32","nodeType":"YulIdentifier","src":"554:5:32"},{"arguments":[{"name":"value","nativeSrc":"578:5:32","nodeType":"YulIdentifier","src":"578:5:32"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:32","nodeType":"YulIdentifier","src":"561:16:32"},"nativeSrc":"561:23:32","nodeType":"YulFunctionCall","src":"561:23:32"}],"functionName":{"name":"eq","nativeSrc":"551:2:32","nodeType":"YulIdentifier","src":"551:2:32"},"nativeSrc":"551:34:32","nodeType":"YulFunctionCall","src":"551:34:32"}],"functionName":{"name":"iszero","nativeSrc":"544:6:32","nodeType":"YulIdentifier","src":"544:6:32"},"nativeSrc":"544:42:32","nodeType":"YulFunctionCall","src":"544:42:32"},"nativeSrc":"541:62:32","nodeType":"YulIf","src":"541:62:32"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:32","nodeType":"YulTypedName","src":"524:5:32","type":""}],"src":"489:120:32"},{"body":{"nativeSrc":"666:86:32","nodeType":"YulBlock","src":"666:86:32","statements":[{"nativeSrc":"676:29:32","nodeType":"YulAssignment","src":"676:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:32","nodeType":"YulIdentifier","src":"698:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:32","nodeType":"YulIdentifier","src":"685:12:32"},"nativeSrc":"685:20:32","nodeType":"YulFunctionCall","src":"685:20:32"},"variableNames":[{"name":"value","nativeSrc":"676:5:32","nodeType":"YulIdentifier","src":"676:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:32","nodeType":"YulIdentifier","src":"740:5:32"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:32","nodeType":"YulIdentifier","src":"714:25:32"},"nativeSrc":"714:32:32","nodeType":"YulFunctionCall","src":"714:32:32"},"nativeSrc":"714:32:32","nodeType":"YulExpressionStatement","src":"714:32:32"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:32","nodeType":"YulTypedName","src":"644:6:32","type":""},{"name":"end","nativeSrc":"652:3:32","nodeType":"YulTypedName","src":"652:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:32","nodeType":"YulTypedName","src":"660:5:32","type":""}],"src":"615:137:32"},{"body":{"nativeSrc":"823:262:32","nodeType":"YulBlock","src":"823:262:32","statements":[{"body":{"nativeSrc":"869:83:32","nodeType":"YulBlock","src":"869:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:32","nodeType":"YulIdentifier","src":"871:77:32"},"nativeSrc":"871:79:32","nodeType":"YulFunctionCall","src":"871:79:32"},"nativeSrc":"871:79:32","nodeType":"YulExpressionStatement","src":"871:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:32","nodeType":"YulIdentifier","src":"844:7:32"},{"name":"headStart","nativeSrc":"853:9:32","nodeType":"YulIdentifier","src":"853:9:32"}],"functionName":{"name":"sub","nativeSrc":"840:3:32","nodeType":"YulIdentifier","src":"840:3:32"},"nativeSrc":"840:23:32","nodeType":"YulFunctionCall","src":"840:23:32"},{"kind":"number","nativeSrc":"865:2:32","nodeType":"YulLiteral","src":"865:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:32","nodeType":"YulIdentifier","src":"836:3:32"},"nativeSrc":"836:32:32","nodeType":"YulFunctionCall","src":"836:32:32"},"nativeSrc":"833:119:32","nodeType":"YulIf","src":"833:119:32"},{"nativeSrc":"962:116:32","nodeType":"YulBlock","src":"962:116:32","statements":[{"nativeSrc":"977:15:32","nodeType":"YulVariableDeclaration","src":"977:15:32","value":{"kind":"number","nativeSrc":"991:1:32","nodeType":"YulLiteral","src":"991:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:32","nodeType":"YulTypedName","src":"981:6:32","type":""}]},{"nativeSrc":"1006:62:32","nodeType":"YulAssignment","src":"1006:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:32","nodeType":"YulIdentifier","src":"1040:9:32"},{"name":"offset","nativeSrc":"1051:6:32","nodeType":"YulIdentifier","src":"1051:6:32"}],"functionName":{"name":"add","nativeSrc":"1036:3:32","nodeType":"YulIdentifier","src":"1036:3:32"},"nativeSrc":"1036:22:32","nodeType":"YulFunctionCall","src":"1036:22:32"},{"name":"dataEnd","nativeSrc":"1060:7:32","nodeType":"YulIdentifier","src":"1060:7:32"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:32","nodeType":"YulIdentifier","src":"1016:19:32"},"nativeSrc":"1016:52:32","nodeType":"YulFunctionCall","src":"1016:52:32"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:32","nodeType":"YulIdentifier","src":"1006:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:32","nodeType":"YulTypedName","src":"793:9:32","type":""},{"name":"dataEnd","nativeSrc":"804:7:32","nodeType":"YulTypedName","src":"804:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:32","nodeType":"YulTypedName","src":"816:6:32","type":""}],"src":"758:327:32"},{"body":{"nativeSrc":"1133:48:32","nodeType":"YulBlock","src":"1133:48:32","statements":[{"nativeSrc":"1143:32:32","nodeType":"YulAssignment","src":"1143:32:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:32","nodeType":"YulIdentifier","src":"1168:5:32"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:32","nodeType":"YulIdentifier","src":"1161:6:32"},"nativeSrc":"1161:13:32","nodeType":"YulFunctionCall","src":"1161:13:32"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:32","nodeType":"YulIdentifier","src":"1154:6:32"},"nativeSrc":"1154:21:32","nodeType":"YulFunctionCall","src":"1154:21:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:32","nodeType":"YulIdentifier","src":"1143:7:32"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:32","nodeType":"YulTypedName","src":"1115:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:32","nodeType":"YulTypedName","src":"1125:7:32","type":""}],"src":"1091:90:32"},{"body":{"nativeSrc":"1246:50:32","nodeType":"YulBlock","src":"1246:50:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:32","nodeType":"YulIdentifier","src":"1263:3:32"},{"arguments":[{"name":"value","nativeSrc":"1283:5:32","nodeType":"YulIdentifier","src":"1283:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:32","nodeType":"YulIdentifier","src":"1268:14:32"},"nativeSrc":"1268:21:32","nodeType":"YulFunctionCall","src":"1268:21:32"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:32","nodeType":"YulIdentifier","src":"1256:6:32"},"nativeSrc":"1256:34:32","nodeType":"YulFunctionCall","src":"1256:34:32"},"nativeSrc":"1256:34:32","nodeType":"YulExpressionStatement","src":"1256:34:32"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:32","nodeType":"YulTypedName","src":"1234:5:32","type":""},{"name":"pos","nativeSrc":"1241:3:32","nodeType":"YulTypedName","src":"1241:3:32","type":""}],"src":"1187:109:32"},{"body":{"nativeSrc":"1394:118:32","nodeType":"YulBlock","src":"1394:118:32","statements":[{"nativeSrc":"1404:26:32","nodeType":"YulAssignment","src":"1404:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:32","nodeType":"YulIdentifier","src":"1416:9:32"},{"kind":"number","nativeSrc":"1427:2:32","nodeType":"YulLiteral","src":"1427:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:32","nodeType":"YulIdentifier","src":"1412:3:32"},"nativeSrc":"1412:18:32","nodeType":"YulFunctionCall","src":"1412:18:32"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:32","nodeType":"YulIdentifier","src":"1404:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:32","nodeType":"YulIdentifier","src":"1478:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:32","nodeType":"YulIdentifier","src":"1491:9:32"},{"kind":"number","nativeSrc":"1502:1:32","nodeType":"YulLiteral","src":"1502:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:32","nodeType":"YulIdentifier","src":"1487:3:32"},"nativeSrc":"1487:17:32","nodeType":"YulFunctionCall","src":"1487:17:32"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:32","nodeType":"YulIdentifier","src":"1440:37:32"},"nativeSrc":"1440:65:32","nodeType":"YulFunctionCall","src":"1440:65:32"},"nativeSrc":"1440:65:32","nodeType":"YulExpressionStatement","src":"1440:65:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:32","nodeType":"YulTypedName","src":"1366:9:32","type":""},{"name":"value0","nativeSrc":"1378:6:32","nodeType":"YulTypedName","src":"1378:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:32","nodeType":"YulTypedName","src":"1389:4:32","type":""}],"src":"1302:210:32"},{"body":{"nativeSrc":"1577:40:32","nodeType":"YulBlock","src":"1577:40:32","statements":[{"nativeSrc":"1588:22:32","nodeType":"YulAssignment","src":"1588:22:32","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:32","nodeType":"YulIdentifier","src":"1604:5:32"}],"functionName":{"name":"mload","nativeSrc":"1598:5:32","nodeType":"YulIdentifier","src":"1598:5:32"},"nativeSrc":"1598:12:32","nodeType":"YulFunctionCall","src":"1598:12:32"},"variableNames":[{"name":"length","nativeSrc":"1588:6:32","nodeType":"YulIdentifier","src":"1588:6:32"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:32","nodeType":"YulTypedName","src":"1560:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:32","nodeType":"YulTypedName","src":"1570:6:32","type":""}],"src":"1518:99:32"},{"body":{"nativeSrc":"1719:73:32","nodeType":"YulBlock","src":"1719:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:32","nodeType":"YulIdentifier","src":"1736:3:32"},{"name":"length","nativeSrc":"1741:6:32","nodeType":"YulIdentifier","src":"1741:6:32"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:32","nodeType":"YulIdentifier","src":"1729:6:32"},"nativeSrc":"1729:19:32","nodeType":"YulFunctionCall","src":"1729:19:32"},"nativeSrc":"1729:19:32","nodeType":"YulExpressionStatement","src":"1729:19:32"},{"nativeSrc":"1757:29:32","nodeType":"YulAssignment","src":"1757:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:32","nodeType":"YulIdentifier","src":"1776:3:32"},{"kind":"number","nativeSrc":"1781:4:32","nodeType":"YulLiteral","src":"1781:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:32","nodeType":"YulIdentifier","src":"1772:3:32"},"nativeSrc":"1772:14:32","nodeType":"YulFunctionCall","src":"1772:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:32","nodeType":"YulIdentifier","src":"1757:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:32","nodeType":"YulTypedName","src":"1691:3:32","type":""},{"name":"length","nativeSrc":"1696:6:32","nodeType":"YulTypedName","src":"1696:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:32","nodeType":"YulTypedName","src":"1707:11:32","type":""}],"src":"1623:169:32"},{"body":{"nativeSrc":"1860:186:32","nodeType":"YulBlock","src":"1860:186:32","statements":[{"nativeSrc":"1871:10:32","nodeType":"YulVariableDeclaration","src":"1871:10:32","value":{"kind":"number","nativeSrc":"1880:1:32","nodeType":"YulLiteral","src":"1880:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:32","nodeType":"YulTypedName","src":"1875:1:32","type":""}]},{"body":{"nativeSrc":"1940:63:32","nodeType":"YulBlock","src":"1940:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:32","nodeType":"YulIdentifier","src":"1965:3:32"},{"name":"i","nativeSrc":"1970:1:32","nodeType":"YulIdentifier","src":"1970:1:32"}],"functionName":{"name":"add","nativeSrc":"1961:3:32","nodeType":"YulIdentifier","src":"1961:3:32"},"nativeSrc":"1961:11:32","nodeType":"YulFunctionCall","src":"1961:11:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:32","nodeType":"YulIdentifier","src":"1984:3:32"},{"name":"i","nativeSrc":"1989:1:32","nodeType":"YulIdentifier","src":"1989:1:32"}],"functionName":{"name":"add","nativeSrc":"1980:3:32","nodeType":"YulIdentifier","src":"1980:3:32"},"nativeSrc":"1980:11:32","nodeType":"YulFunctionCall","src":"1980:11:32"}],"functionName":{"name":"mload","nativeSrc":"1974:5:32","nodeType":"YulIdentifier","src":"1974:5:32"},"nativeSrc":"1974:18:32","nodeType":"YulFunctionCall","src":"1974:18:32"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:32","nodeType":"YulIdentifier","src":"1954:6:32"},"nativeSrc":"1954:39:32","nodeType":"YulFunctionCall","src":"1954:39:32"},"nativeSrc":"1954:39:32","nodeType":"YulExpressionStatement","src":"1954:39:32"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:32","nodeType":"YulIdentifier","src":"1901:1:32"},{"name":"length","nativeSrc":"1904:6:32","nodeType":"YulIdentifier","src":"1904:6:32"}],"functionName":{"name":"lt","nativeSrc":"1898:2:32","nodeType":"YulIdentifier","src":"1898:2:32"},"nativeSrc":"1898:13:32","nodeType":"YulFunctionCall","src":"1898:13:32"},"nativeSrc":"1890:113:32","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:32","nodeType":"YulBlock","src":"1912:19:32","statements":[{"nativeSrc":"1914:15:32","nodeType":"YulAssignment","src":"1914:15:32","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:32","nodeType":"YulIdentifier","src":"1923:1:32"},{"kind":"number","nativeSrc":"1926:2:32","nodeType":"YulLiteral","src":"1926:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:32","nodeType":"YulIdentifier","src":"1919:3:32"},"nativeSrc":"1919:10:32","nodeType":"YulFunctionCall","src":"1919:10:32"},"variableNames":[{"name":"i","nativeSrc":"1914:1:32","nodeType":"YulIdentifier","src":"1914:1:32"}]}]},"pre":{"nativeSrc":"1894:3:32","nodeType":"YulBlock","src":"1894:3:32","statements":[]},"src":"1890:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:32","nodeType":"YulIdentifier","src":"2023:3:32"},{"name":"length","nativeSrc":"2028:6:32","nodeType":"YulIdentifier","src":"2028:6:32"}],"functionName":{"name":"add","nativeSrc":"2019:3:32","nodeType":"YulIdentifier","src":"2019:3:32"},"nativeSrc":"2019:16:32","nodeType":"YulFunctionCall","src":"2019:16:32"},{"kind":"number","nativeSrc":"2037:1:32","nodeType":"YulLiteral","src":"2037:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:32","nodeType":"YulIdentifier","src":"2012:6:32"},"nativeSrc":"2012:27:32","nodeType":"YulFunctionCall","src":"2012:27:32"},"nativeSrc":"2012:27:32","nodeType":"YulExpressionStatement","src":"2012:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:32","nodeType":"YulTypedName","src":"1842:3:32","type":""},{"name":"dst","nativeSrc":"1847:3:32","nodeType":"YulTypedName","src":"1847:3:32","type":""},{"name":"length","nativeSrc":"1852:6:32","nodeType":"YulTypedName","src":"1852:6:32","type":""}],"src":"1798:248:32"},{"body":{"nativeSrc":"2100:54:32","nodeType":"YulBlock","src":"2100:54:32","statements":[{"nativeSrc":"2110:38:32","nodeType":"YulAssignment","src":"2110:38:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:32","nodeType":"YulIdentifier","src":"2128:5:32"},{"kind":"number","nativeSrc":"2135:2:32","nodeType":"YulLiteral","src":"2135:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:32","nodeType":"YulIdentifier","src":"2124:3:32"},"nativeSrc":"2124:14:32","nodeType":"YulFunctionCall","src":"2124:14:32"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:32","nodeType":"YulLiteral","src":"2144:2:32","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:32","nodeType":"YulIdentifier","src":"2140:3:32"},"nativeSrc":"2140:7:32","nodeType":"YulFunctionCall","src":"2140:7:32"}],"functionName":{"name":"and","nativeSrc":"2120:3:32","nodeType":"YulIdentifier","src":"2120:3:32"},"nativeSrc":"2120:28:32","nodeType":"YulFunctionCall","src":"2120:28:32"},"variableNames":[{"name":"result","nativeSrc":"2110:6:32","nodeType":"YulIdentifier","src":"2110:6:32"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:32","nodeType":"YulTypedName","src":"2083:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:32","nodeType":"YulTypedName","src":"2093:6:32","type":""}],"src":"2052:102:32"},{"body":{"nativeSrc":"2252:285:32","nodeType":"YulBlock","src":"2252:285:32","statements":[{"nativeSrc":"2262:53:32","nodeType":"YulVariableDeclaration","src":"2262:53:32","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:32","nodeType":"YulIdentifier","src":"2309:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:32","nodeType":"YulIdentifier","src":"2276:32:32"},"nativeSrc":"2276:39:32","nodeType":"YulFunctionCall","src":"2276:39:32"},"variables":[{"name":"length","nativeSrc":"2266:6:32","nodeType":"YulTypedName","src":"2266:6:32","type":""}]},{"nativeSrc":"2324:78:32","nodeType":"YulAssignment","src":"2324:78:32","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:32","nodeType":"YulIdentifier","src":"2390:3:32"},{"name":"length","nativeSrc":"2395:6:32","nodeType":"YulIdentifier","src":"2395:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:32","nodeType":"YulIdentifier","src":"2331:58:32"},"nativeSrc":"2331:71:32","nodeType":"YulFunctionCall","src":"2331:71:32"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:32","nodeType":"YulIdentifier","src":"2324:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:32","nodeType":"YulIdentifier","src":"2450:5:32"},{"kind":"number","nativeSrc":"2457:4:32","nodeType":"YulLiteral","src":"2457:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:32","nodeType":"YulIdentifier","src":"2446:3:32"},"nativeSrc":"2446:16:32","nodeType":"YulFunctionCall","src":"2446:16:32"},{"name":"pos","nativeSrc":"2464:3:32","nodeType":"YulIdentifier","src":"2464:3:32"},{"name":"length","nativeSrc":"2469:6:32","nodeType":"YulIdentifier","src":"2469:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:32","nodeType":"YulIdentifier","src":"2411:34:32"},"nativeSrc":"2411:65:32","nodeType":"YulFunctionCall","src":"2411:65:32"},"nativeSrc":"2411:65:32","nodeType":"YulExpressionStatement","src":"2411:65:32"},{"nativeSrc":"2485:46:32","nodeType":"YulAssignment","src":"2485:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:32","nodeType":"YulIdentifier","src":"2496:3:32"},{"arguments":[{"name":"length","nativeSrc":"2523:6:32","nodeType":"YulIdentifier","src":"2523:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:32","nodeType":"YulIdentifier","src":"2501:21:32"},"nativeSrc":"2501:29:32","nodeType":"YulFunctionCall","src":"2501:29:32"}],"functionName":{"name":"add","nativeSrc":"2492:3:32","nodeType":"YulIdentifier","src":"2492:3:32"},"nativeSrc":"2492:39:32","nodeType":"YulFunctionCall","src":"2492:39:32"},"variableNames":[{"name":"end","nativeSrc":"2485:3:32","nodeType":"YulIdentifier","src":"2485:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:32","nodeType":"YulTypedName","src":"2233:5:32","type":""},{"name":"pos","nativeSrc":"2240:3:32","nodeType":"YulTypedName","src":"2240:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:32","nodeType":"YulTypedName","src":"2248:3:32","type":""}],"src":"2160:377:32"},{"body":{"nativeSrc":"2661:195:32","nodeType":"YulBlock","src":"2661:195:32","statements":[{"nativeSrc":"2671:26:32","nodeType":"YulAssignment","src":"2671:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:32","nodeType":"YulIdentifier","src":"2683:9:32"},{"kind":"number","nativeSrc":"2694:2:32","nodeType":"YulLiteral","src":"2694:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:32","nodeType":"YulIdentifier","src":"2679:3:32"},"nativeSrc":"2679:18:32","nodeType":"YulFunctionCall","src":"2679:18:32"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:32","nodeType":"YulIdentifier","src":"2671:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:32","nodeType":"YulIdentifier","src":"2718:9:32"},{"kind":"number","nativeSrc":"2729:1:32","nodeType":"YulLiteral","src":"2729:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:32","nodeType":"YulIdentifier","src":"2714:3:32"},"nativeSrc":"2714:17:32","nodeType":"YulFunctionCall","src":"2714:17:32"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:32","nodeType":"YulIdentifier","src":"2737:4:32"},{"name":"headStart","nativeSrc":"2743:9:32","nodeType":"YulIdentifier","src":"2743:9:32"}],"functionName":{"name":"sub","nativeSrc":"2733:3:32","nodeType":"YulIdentifier","src":"2733:3:32"},"nativeSrc":"2733:20:32","nodeType":"YulFunctionCall","src":"2733:20:32"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:32","nodeType":"YulIdentifier","src":"2707:6:32"},"nativeSrc":"2707:47:32","nodeType":"YulFunctionCall","src":"2707:47:32"},"nativeSrc":"2707:47:32","nodeType":"YulExpressionStatement","src":"2707:47:32"},{"nativeSrc":"2763:86:32","nodeType":"YulAssignment","src":"2763:86:32","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:32","nodeType":"YulIdentifier","src":"2835:6:32"},{"name":"tail","nativeSrc":"2844:4:32","nodeType":"YulIdentifier","src":"2844:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:32","nodeType":"YulIdentifier","src":"2771:63:32"},"nativeSrc":"2771:78:32","nodeType":"YulFunctionCall","src":"2771:78:32"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:32","nodeType":"YulIdentifier","src":"2763:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:32","nodeType":"YulTypedName","src":"2633:9:32","type":""},{"name":"value0","nativeSrc":"2645:6:32","nodeType":"YulTypedName","src":"2645:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:32","nodeType":"YulTypedName","src":"2656:4:32","type":""}],"src":"2543:313:32"},{"body":{"nativeSrc":"2907:32:32","nodeType":"YulBlock","src":"2907:32:32","statements":[{"nativeSrc":"2917:16:32","nodeType":"YulAssignment","src":"2917:16:32","value":{"name":"value","nativeSrc":"2928:5:32","nodeType":"YulIdentifier","src":"2928:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:32","nodeType":"YulIdentifier","src":"2917:7:32"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:32","nodeType":"YulTypedName","src":"2889:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:32","nodeType":"YulTypedName","src":"2899:7:32","type":""}],"src":"2862:77:32"},{"body":{"nativeSrc":"2988:79:32","nodeType":"YulBlock","src":"2988:79:32","statements":[{"body":{"nativeSrc":"3045:16:32","nodeType":"YulBlock","src":"3045:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:32","nodeType":"YulLiteral","src":"3054:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:32","nodeType":"YulLiteral","src":"3057:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:32","nodeType":"YulIdentifier","src":"3047:6:32"},"nativeSrc":"3047:12:32","nodeType":"YulFunctionCall","src":"3047:12:32"},"nativeSrc":"3047:12:32","nodeType":"YulExpressionStatement","src":"3047:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:32","nodeType":"YulIdentifier","src":"3011:5:32"},{"arguments":[{"name":"value","nativeSrc":"3036:5:32","nodeType":"YulIdentifier","src":"3036:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:32","nodeType":"YulIdentifier","src":"3018:17:32"},"nativeSrc":"3018:24:32","nodeType":"YulFunctionCall","src":"3018:24:32"}],"functionName":{"name":"eq","nativeSrc":"3008:2:32","nodeType":"YulIdentifier","src":"3008:2:32"},"nativeSrc":"3008:35:32","nodeType":"YulFunctionCall","src":"3008:35:32"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:32","nodeType":"YulIdentifier","src":"3001:6:32"},"nativeSrc":"3001:43:32","nodeType":"YulFunctionCall","src":"3001:43:32"},"nativeSrc":"2998:63:32","nodeType":"YulIf","src":"2998:63:32"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:32","nodeType":"YulTypedName","src":"2981:5:32","type":""}],"src":"2945:122:32"},{"body":{"nativeSrc":"3125:87:32","nodeType":"YulBlock","src":"3125:87:32","statements":[{"nativeSrc":"3135:29:32","nodeType":"YulAssignment","src":"3135:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:32","nodeType":"YulIdentifier","src":"3157:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:32","nodeType":"YulIdentifier","src":"3144:12:32"},"nativeSrc":"3144:20:32","nodeType":"YulFunctionCall","src":"3144:20:32"},"variableNames":[{"name":"value","nativeSrc":"3135:5:32","nodeType":"YulIdentifier","src":"3135:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:32","nodeType":"YulIdentifier","src":"3200:5:32"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:32","nodeType":"YulIdentifier","src":"3173:26:32"},"nativeSrc":"3173:33:32","nodeType":"YulFunctionCall","src":"3173:33:32"},"nativeSrc":"3173:33:32","nodeType":"YulExpressionStatement","src":"3173:33:32"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:32","nodeType":"YulTypedName","src":"3103:6:32","type":""},{"name":"end","nativeSrc":"3111:3:32","nodeType":"YulTypedName","src":"3111:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:32","nodeType":"YulTypedName","src":"3119:5:32","type":""}],"src":"3073:139:32"},{"body":{"nativeSrc":"3284:263:32","nodeType":"YulBlock","src":"3284:263:32","statements":[{"body":{"nativeSrc":"3330:83:32","nodeType":"YulBlock","src":"3330:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:32","nodeType":"YulIdentifier","src":"3332:77:32"},"nativeSrc":"3332:79:32","nodeType":"YulFunctionCall","src":"3332:79:32"},"nativeSrc":"3332:79:32","nodeType":"YulExpressionStatement","src":"3332:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:32","nodeType":"YulIdentifier","src":"3305:7:32"},{"name":"headStart","nativeSrc":"3314:9:32","nodeType":"YulIdentifier","src":"3314:9:32"}],"functionName":{"name":"sub","nativeSrc":"3301:3:32","nodeType":"YulIdentifier","src":"3301:3:32"},"nativeSrc":"3301:23:32","nodeType":"YulFunctionCall","src":"3301:23:32"},{"kind":"number","nativeSrc":"3326:2:32","nodeType":"YulLiteral","src":"3326:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:32","nodeType":"YulIdentifier","src":"3297:3:32"},"nativeSrc":"3297:32:32","nodeType":"YulFunctionCall","src":"3297:32:32"},"nativeSrc":"3294:119:32","nodeType":"YulIf","src":"3294:119:32"},{"nativeSrc":"3423:117:32","nodeType":"YulBlock","src":"3423:117:32","statements":[{"nativeSrc":"3438:15:32","nodeType":"YulVariableDeclaration","src":"3438:15:32","value":{"kind":"number","nativeSrc":"3452:1:32","nodeType":"YulLiteral","src":"3452:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:32","nodeType":"YulTypedName","src":"3442:6:32","type":""}]},{"nativeSrc":"3467:63:32","nodeType":"YulAssignment","src":"3467:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:32","nodeType":"YulIdentifier","src":"3502:9:32"},{"name":"offset","nativeSrc":"3513:6:32","nodeType":"YulIdentifier","src":"3513:6:32"}],"functionName":{"name":"add","nativeSrc":"3498:3:32","nodeType":"YulIdentifier","src":"3498:3:32"},"nativeSrc":"3498:22:32","nodeType":"YulFunctionCall","src":"3498:22:32"},{"name":"dataEnd","nativeSrc":"3522:7:32","nodeType":"YulIdentifier","src":"3522:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:32","nodeType":"YulIdentifier","src":"3477:20:32"},"nativeSrc":"3477:53:32","nodeType":"YulFunctionCall","src":"3477:53:32"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:32","nodeType":"YulIdentifier","src":"3467:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:32","nodeType":"YulTypedName","src":"3254:9:32","type":""},{"name":"dataEnd","nativeSrc":"3265:7:32","nodeType":"YulTypedName","src":"3265:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:32","nodeType":"YulTypedName","src":"3277:6:32","type":""}],"src":"3218:329:32"},{"body":{"nativeSrc":"3598:81:32","nodeType":"YulBlock","src":"3598:81:32","statements":[{"nativeSrc":"3608:65:32","nodeType":"YulAssignment","src":"3608:65:32","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:32","nodeType":"YulIdentifier","src":"3623:5:32"},{"kind":"number","nativeSrc":"3630:42:32","nodeType":"YulLiteral","src":"3630:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:32","nodeType":"YulIdentifier","src":"3619:3:32"},"nativeSrc":"3619:54:32","nodeType":"YulFunctionCall","src":"3619:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:32","nodeType":"YulIdentifier","src":"3608:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:32","nodeType":"YulTypedName","src":"3580:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:32","nodeType":"YulTypedName","src":"3590:7:32","type":""}],"src":"3553:126:32"},{"body":{"nativeSrc":"3730:51:32","nodeType":"YulBlock","src":"3730:51:32","statements":[{"nativeSrc":"3740:35:32","nodeType":"YulAssignment","src":"3740:35:32","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:32","nodeType":"YulIdentifier","src":"3769:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:32","nodeType":"YulIdentifier","src":"3751:17:32"},"nativeSrc":"3751:24:32","nodeType":"YulFunctionCall","src":"3751:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:32","nodeType":"YulIdentifier","src":"3740:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:32","nodeType":"YulTypedName","src":"3712:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:32","nodeType":"YulTypedName","src":"3722:7:32","type":""}],"src":"3685:96:32"},{"body":{"nativeSrc":"3852:53:32","nodeType":"YulBlock","src":"3852:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3869:3:32","nodeType":"YulIdentifier","src":"3869:3:32"},{"arguments":[{"name":"value","nativeSrc":"3892:5:32","nodeType":"YulIdentifier","src":"3892:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3874:17:32","nodeType":"YulIdentifier","src":"3874:17:32"},"nativeSrc":"3874:24:32","nodeType":"YulFunctionCall","src":"3874:24:32"}],"functionName":{"name":"mstore","nativeSrc":"3862:6:32","nodeType":"YulIdentifier","src":"3862:6:32"},"nativeSrc":"3862:37:32","nodeType":"YulFunctionCall","src":"3862:37:32"},"nativeSrc":"3862:37:32","nodeType":"YulExpressionStatement","src":"3862:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3787:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3840:5:32","nodeType":"YulTypedName","src":"3840:5:32","type":""},{"name":"pos","nativeSrc":"3847:3:32","nodeType":"YulTypedName","src":"3847:3:32","type":""}],"src":"3787:118:32"},{"body":{"nativeSrc":"4009:124:32","nodeType":"YulBlock","src":"4009:124:32","statements":[{"nativeSrc":"4019:26:32","nodeType":"YulAssignment","src":"4019:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:32","nodeType":"YulIdentifier","src":"4031:9:32"},{"kind":"number","nativeSrc":"4042:2:32","nodeType":"YulLiteral","src":"4042:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:32","nodeType":"YulIdentifier","src":"4027:3:32"},"nativeSrc":"4027:18:32","nodeType":"YulFunctionCall","src":"4027:18:32"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:32","nodeType":"YulIdentifier","src":"4019:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4099:6:32","nodeType":"YulIdentifier","src":"4099:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"4112:9:32","nodeType":"YulIdentifier","src":"4112:9:32"},{"kind":"number","nativeSrc":"4123:1:32","nodeType":"YulLiteral","src":"4123:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4108:3:32","nodeType":"YulIdentifier","src":"4108:3:32"},"nativeSrc":"4108:17:32","nodeType":"YulFunctionCall","src":"4108:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4055:43:32","nodeType":"YulIdentifier","src":"4055:43:32"},"nativeSrc":"4055:71:32","nodeType":"YulFunctionCall","src":"4055:71:32"},"nativeSrc":"4055:71:32","nodeType":"YulExpressionStatement","src":"4055:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3911:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:32","nodeType":"YulTypedName","src":"3981:9:32","type":""},{"name":"value0","nativeSrc":"3993:6:32","nodeType":"YulTypedName","src":"3993:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:32","nodeType":"YulTypedName","src":"4004:4:32","type":""}],"src":"3911:222:32"},{"body":{"nativeSrc":"4182:79:32","nodeType":"YulBlock","src":"4182:79:32","statements":[{"body":{"nativeSrc":"4239:16:32","nodeType":"YulBlock","src":"4239:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:32","nodeType":"YulLiteral","src":"4248:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:32","nodeType":"YulLiteral","src":"4251:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:32","nodeType":"YulIdentifier","src":"4241:6:32"},"nativeSrc":"4241:12:32","nodeType":"YulFunctionCall","src":"4241:12:32"},"nativeSrc":"4241:12:32","nodeType":"YulExpressionStatement","src":"4241:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4205:5:32","nodeType":"YulIdentifier","src":"4205:5:32"},{"arguments":[{"name":"value","nativeSrc":"4230:5:32","nodeType":"YulIdentifier","src":"4230:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4212:17:32","nodeType":"YulIdentifier","src":"4212:17:32"},"nativeSrc":"4212:24:32","nodeType":"YulFunctionCall","src":"4212:24:32"}],"functionName":{"name":"eq","nativeSrc":"4202:2:32","nodeType":"YulIdentifier","src":"4202:2:32"},"nativeSrc":"4202:35:32","nodeType":"YulFunctionCall","src":"4202:35:32"}],"functionName":{"name":"iszero","nativeSrc":"4195:6:32","nodeType":"YulIdentifier","src":"4195:6:32"},"nativeSrc":"4195:43:32","nodeType":"YulFunctionCall","src":"4195:43:32"},"nativeSrc":"4192:63:32","nodeType":"YulIf","src":"4192:63:32"}]},"name":"validator_revert_t_address","nativeSrc":"4139:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:32","nodeType":"YulTypedName","src":"4175:5:32","type":""}],"src":"4139:122:32"},{"body":{"nativeSrc":"4319:87:32","nodeType":"YulBlock","src":"4319:87:32","statements":[{"nativeSrc":"4329:29:32","nodeType":"YulAssignment","src":"4329:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"4351:6:32","nodeType":"YulIdentifier","src":"4351:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"4338:12:32","nodeType":"YulIdentifier","src":"4338:12:32"},"nativeSrc":"4338:20:32","nodeType":"YulFunctionCall","src":"4338:20:32"},"variableNames":[{"name":"value","nativeSrc":"4329:5:32","nodeType":"YulIdentifier","src":"4329:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4394:5:32","nodeType":"YulIdentifier","src":"4394:5:32"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4367:26:32","nodeType":"YulIdentifier","src":"4367:26:32"},"nativeSrc":"4367:33:32","nodeType":"YulFunctionCall","src":"4367:33:32"},"nativeSrc":"4367:33:32","nodeType":"YulExpressionStatement","src":"4367:33:32"}]},"name":"abi_decode_t_address","nativeSrc":"4267:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4297:6:32","nodeType":"YulTypedName","src":"4297:6:32","type":""},{"name":"end","nativeSrc":"4305:3:32","nodeType":"YulTypedName","src":"4305:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4313:5:32","nodeType":"YulTypedName","src":"4313:5:32","type":""}],"src":"4267:139:32"},{"body":{"nativeSrc":"4495:391:32","nodeType":"YulBlock","src":"4495:391:32","statements":[{"body":{"nativeSrc":"4541:83:32","nodeType":"YulBlock","src":"4541:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4543:77:32","nodeType":"YulIdentifier","src":"4543:77:32"},"nativeSrc":"4543:79:32","nodeType":"YulFunctionCall","src":"4543:79:32"},"nativeSrc":"4543:79:32","nodeType":"YulExpressionStatement","src":"4543:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4516:7:32","nodeType":"YulIdentifier","src":"4516:7:32"},{"name":"headStart","nativeSrc":"4525:9:32","nodeType":"YulIdentifier","src":"4525:9:32"}],"functionName":{"name":"sub","nativeSrc":"4512:3:32","nodeType":"YulIdentifier","src":"4512:3:32"},"nativeSrc":"4512:23:32","nodeType":"YulFunctionCall","src":"4512:23:32"},{"kind":"number","nativeSrc":"4537:2:32","nodeType":"YulLiteral","src":"4537:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4508:3:32","nodeType":"YulIdentifier","src":"4508:3:32"},"nativeSrc":"4508:32:32","nodeType":"YulFunctionCall","src":"4508:32:32"},"nativeSrc":"4505:119:32","nodeType":"YulIf","src":"4505:119:32"},{"nativeSrc":"4634:117:32","nodeType":"YulBlock","src":"4634:117:32","statements":[{"nativeSrc":"4649:15:32","nodeType":"YulVariableDeclaration","src":"4649:15:32","value":{"kind":"number","nativeSrc":"4663:1:32","nodeType":"YulLiteral","src":"4663:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4653:6:32","nodeType":"YulTypedName","src":"4653:6:32","type":""}]},{"nativeSrc":"4678:63:32","nodeType":"YulAssignment","src":"4678:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4713:9:32","nodeType":"YulIdentifier","src":"4713:9:32"},{"name":"offset","nativeSrc":"4724:6:32","nodeType":"YulIdentifier","src":"4724:6:32"}],"functionName":{"name":"add","nativeSrc":"4709:3:32","nodeType":"YulIdentifier","src":"4709:3:32"},"nativeSrc":"4709:22:32","nodeType":"YulFunctionCall","src":"4709:22:32"},{"name":"dataEnd","nativeSrc":"4733:7:32","nodeType":"YulIdentifier","src":"4733:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4688:20:32","nodeType":"YulIdentifier","src":"4688:20:32"},"nativeSrc":"4688:53:32","nodeType":"YulFunctionCall","src":"4688:53:32"},"variableNames":[{"name":"value0","nativeSrc":"4678:6:32","nodeType":"YulIdentifier","src":"4678:6:32"}]}]},{"nativeSrc":"4761:118:32","nodeType":"YulBlock","src":"4761:118:32","statements":[{"nativeSrc":"4776:16:32","nodeType":"YulVariableDeclaration","src":"4776:16:32","value":{"kind":"number","nativeSrc":"4790:2:32","nodeType":"YulLiteral","src":"4790:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4780:6:32","nodeType":"YulTypedName","src":"4780:6:32","type":""}]},{"nativeSrc":"4806:63:32","nodeType":"YulAssignment","src":"4806:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:32","nodeType":"YulIdentifier","src":"4841:9:32"},{"name":"offset","nativeSrc":"4852:6:32","nodeType":"YulIdentifier","src":"4852:6:32"}],"functionName":{"name":"add","nativeSrc":"4837:3:32","nodeType":"YulIdentifier","src":"4837:3:32"},"nativeSrc":"4837:22:32","nodeType":"YulFunctionCall","src":"4837:22:32"},{"name":"dataEnd","nativeSrc":"4861:7:32","nodeType":"YulIdentifier","src":"4861:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4816:20:32","nodeType":"YulIdentifier","src":"4816:20:32"},"nativeSrc":"4816:53:32","nodeType":"YulFunctionCall","src":"4816:53:32"},"variableNames":[{"name":"value1","nativeSrc":"4806:6:32","nodeType":"YulIdentifier","src":"4806:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4412:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:32","nodeType":"YulTypedName","src":"4457:9:32","type":""},{"name":"dataEnd","nativeSrc":"4468:7:32","nodeType":"YulTypedName","src":"4468:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4480:6:32","nodeType":"YulTypedName","src":"4480:6:32","type":""},{"name":"value1","nativeSrc":"4488:6:32","nodeType":"YulTypedName","src":"4488:6:32","type":""}],"src":"4412:474:32"},{"body":{"nativeSrc":"4957:53:32","nodeType":"YulBlock","src":"4957:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4974:3:32","nodeType":"YulIdentifier","src":"4974:3:32"},{"arguments":[{"name":"value","nativeSrc":"4997:5:32","nodeType":"YulIdentifier","src":"4997:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4979:17:32","nodeType":"YulIdentifier","src":"4979:17:32"},"nativeSrc":"4979:24:32","nodeType":"YulFunctionCall","src":"4979:24:32"}],"functionName":{"name":"mstore","nativeSrc":"4967:6:32","nodeType":"YulIdentifier","src":"4967:6:32"},"nativeSrc":"4967:37:32","nodeType":"YulFunctionCall","src":"4967:37:32"},"nativeSrc":"4967:37:32","nodeType":"YulExpressionStatement","src":"4967:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4892:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4945:5:32","nodeType":"YulTypedName","src":"4945:5:32","type":""},{"name":"pos","nativeSrc":"4952:3:32","nodeType":"YulTypedName","src":"4952:3:32","type":""}],"src":"4892:118:32"},{"body":{"nativeSrc":"5114:124:32","nodeType":"YulBlock","src":"5114:124:32","statements":[{"nativeSrc":"5124:26:32","nodeType":"YulAssignment","src":"5124:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"5136:9:32","nodeType":"YulIdentifier","src":"5136:9:32"},{"kind":"number","nativeSrc":"5147:2:32","nodeType":"YulLiteral","src":"5147:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5132:3:32","nodeType":"YulIdentifier","src":"5132:3:32"},"nativeSrc":"5132:18:32","nodeType":"YulFunctionCall","src":"5132:18:32"},"variableNames":[{"name":"tail","nativeSrc":"5124:4:32","nodeType":"YulIdentifier","src":"5124:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5204:6:32","nodeType":"YulIdentifier","src":"5204:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"5217:9:32","nodeType":"YulIdentifier","src":"5217:9:32"},{"kind":"number","nativeSrc":"5228:1:32","nodeType":"YulLiteral","src":"5228:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5213:3:32","nodeType":"YulIdentifier","src":"5213:3:32"},"nativeSrc":"5213:17:32","nodeType":"YulFunctionCall","src":"5213:17:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5160:43:32","nodeType":"YulIdentifier","src":"5160:43:32"},"nativeSrc":"5160:71:32","nodeType":"YulFunctionCall","src":"5160:71:32"},"nativeSrc":"5160:71:32","nodeType":"YulExpressionStatement","src":"5160:71:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5016:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5086:9:32","nodeType":"YulTypedName","src":"5086:9:32","type":""},{"name":"value0","nativeSrc":"5098:6:32","nodeType":"YulTypedName","src":"5098:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5109:4:32","nodeType":"YulTypedName","src":"5109:4:32","type":""}],"src":"5016:222:32"},{"body":{"nativeSrc":"5272:152:32","nodeType":"YulBlock","src":"5272:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5289:1:32","nodeType":"YulLiteral","src":"5289:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5292:77:32","nodeType":"YulLiteral","src":"5292:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5282:6:32","nodeType":"YulIdentifier","src":"5282:6:32"},"nativeSrc":"5282:88:32","nodeType":"YulFunctionCall","src":"5282:88:32"},"nativeSrc":"5282:88:32","nodeType":"YulExpressionStatement","src":"5282:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5386:1:32","nodeType":"YulLiteral","src":"5386:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"5389:4:32","nodeType":"YulLiteral","src":"5389:4:32","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"5379:6:32","nodeType":"YulIdentifier","src":"5379:6:32"},"nativeSrc":"5379:15:32","nodeType":"YulFunctionCall","src":"5379:15:32"},"nativeSrc":"5379:15:32","nodeType":"YulExpressionStatement","src":"5379:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5410:1:32","nodeType":"YulLiteral","src":"5410:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5413:4:32","nodeType":"YulLiteral","src":"5413:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5403:6:32","nodeType":"YulIdentifier","src":"5403:6:32"},"nativeSrc":"5403:15:32","nodeType":"YulFunctionCall","src":"5403:15:32"},"nativeSrc":"5403:15:32","nodeType":"YulExpressionStatement","src":"5403:15:32"}]},"name":"panic_error_0x21","nativeSrc":"5244:180:32","nodeType":"YulFunctionDefinition","src":"5244:180:32"},{"body":{"nativeSrc":"5487:62:32","nodeType":"YulBlock","src":"5487:62:32","statements":[{"body":{"nativeSrc":"5521:22:32","nodeType":"YulBlock","src":"5521:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nativeSrc":"5523:16:32","nodeType":"YulIdentifier","src":"5523:16:32"},"nativeSrc":"5523:18:32","nodeType":"YulFunctionCall","src":"5523:18:32"},"nativeSrc":"5523:18:32","nodeType":"YulExpressionStatement","src":"5523:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5510:5:32","nodeType":"YulIdentifier","src":"5510:5:32"},{"kind":"number","nativeSrc":"5517:1:32","nodeType":"YulLiteral","src":"5517:1:32","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"5507:2:32","nodeType":"YulIdentifier","src":"5507:2:32"},"nativeSrc":"5507:12:32","nodeType":"YulFunctionCall","src":"5507:12:32"}],"functionName":{"name":"iszero","nativeSrc":"5500:6:32","nodeType":"YulIdentifier","src":"5500:6:32"},"nativeSrc":"5500:20:32","nodeType":"YulFunctionCall","src":"5500:20:32"},"nativeSrc":"5497:46:32","nodeType":"YulIf","src":"5497:46:32"}]},"name":"validator_assert_t_enum$_PhaseType_$8454","nativeSrc":"5430:119:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5480:5:32","nodeType":"YulTypedName","src":"5480:5:32","type":""}],"src":"5430:119:32"},{"body":{"nativeSrc":"5614:80:32","nodeType":"YulBlock","src":"5614:80:32","statements":[{"nativeSrc":"5624:16:32","nodeType":"YulAssignment","src":"5624:16:32","value":{"name":"value","nativeSrc":"5635:5:32","nodeType":"YulIdentifier","src":"5635:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"5624:7:32","nodeType":"YulIdentifier","src":"5624:7:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5682:5:32","nodeType":"YulIdentifier","src":"5682:5:32"}],"functionName":{"name":"validator_assert_t_enum$_PhaseType_$8454","nativeSrc":"5641:40:32","nodeType":"YulIdentifier","src":"5641:40:32"},"nativeSrc":"5641:47:32","nodeType":"YulFunctionCall","src":"5641:47:32"},"nativeSrc":"5641:47:32","nodeType":"YulExpressionStatement","src":"5641:47:32"}]},"name":"cleanup_t_enum$_PhaseType_$8454","nativeSrc":"5555:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5596:5:32","nodeType":"YulTypedName","src":"5596:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5606:7:32","nodeType":"YulTypedName","src":"5606:7:32","type":""}],"src":"5555:139:32"},{"body":{"nativeSrc":"5772:67:32","nodeType":"YulBlock","src":"5772:67:32","statements":[{"nativeSrc":"5782:51:32","nodeType":"YulAssignment","src":"5782:51:32","value":{"arguments":[{"name":"value","nativeSrc":"5827:5:32","nodeType":"YulIdentifier","src":"5827:5:32"}],"functionName":{"name":"cleanup_t_enum$_PhaseType_$8454","nativeSrc":"5795:31:32","nodeType":"YulIdentifier","src":"5795:31:32"},"nativeSrc":"5795:38:32","nodeType":"YulFunctionCall","src":"5795:38:32"},"variableNames":[{"name":"converted","nativeSrc":"5782:9:32","nodeType":"YulIdentifier","src":"5782:9:32"}]}]},"name":"convert_t_enum$_PhaseType_$8454_to_t_uint8","nativeSrc":"5700:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5752:5:32","nodeType":"YulTypedName","src":"5752:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5762:9:32","nodeType":"YulTypedName","src":"5762:9:32","type":""}],"src":"5700:139:32"},{"body":{"nativeSrc":"5912:78:32","nodeType":"YulBlock","src":"5912:78:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5929:3:32","nodeType":"YulIdentifier","src":"5929:3:32"},{"arguments":[{"name":"value","nativeSrc":"5977:5:32","nodeType":"YulIdentifier","src":"5977:5:32"}],"functionName":{"name":"convert_t_enum$_PhaseType_$8454_to_t_uint8","nativeSrc":"5934:42:32","nodeType":"YulIdentifier","src":"5934:42:32"},"nativeSrc":"5934:49:32","nodeType":"YulFunctionCall","src":"5934:49:32"}],"functionName":{"name":"mstore","nativeSrc":"5922:6:32","nodeType":"YulIdentifier","src":"5922:6:32"},"nativeSrc":"5922:62:32","nodeType":"YulFunctionCall","src":"5922:62:32"},"nativeSrc":"5922:62:32","nodeType":"YulExpressionStatement","src":"5922:62:32"}]},"name":"abi_encode_t_enum$_PhaseType_$8454_to_t_uint8","nativeSrc":"5845:145:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5900:5:32","nodeType":"YulTypedName","src":"5900:5:32","type":""},{"name":"pos","nativeSrc":"5907:3:32","nodeType":"YulTypedName","src":"5907:3:32","type":""}],"src":"5845:145:32"},{"body":{"nativeSrc":"6051:53:32","nodeType":"YulBlock","src":"6051:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6068:3:32","nodeType":"YulIdentifier","src":"6068:3:32"},{"arguments":[{"name":"value","nativeSrc":"6091:5:32","nodeType":"YulIdentifier","src":"6091:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6073:17:32","nodeType":"YulIdentifier","src":"6073:17:32"},"nativeSrc":"6073:24:32","nodeType":"YulFunctionCall","src":"6073:24:32"}],"functionName":{"name":"mstore","nativeSrc":"6061:6:32","nodeType":"YulIdentifier","src":"6061:6:32"},"nativeSrc":"6061:37:32","nodeType":"YulFunctionCall","src":"6061:37:32"},"nativeSrc":"6061:37:32","nodeType":"YulExpressionStatement","src":"6061:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"5996:108:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6039:5:32","nodeType":"YulTypedName","src":"6039:5:32","type":""},{"name":"pos","nativeSrc":"6046:3:32","nodeType":"YulTypedName","src":"6046:3:32","type":""}],"src":"5996:108:32"},{"body":{"nativeSrc":"6155:32:32","nodeType":"YulBlock","src":"6155:32:32","statements":[{"nativeSrc":"6165:16:32","nodeType":"YulAssignment","src":"6165:16:32","value":{"name":"value","nativeSrc":"6176:5:32","nodeType":"YulIdentifier","src":"6176:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"6165:7:32","nodeType":"YulIdentifier","src":"6165:7:32"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"6110:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6137:5:32","nodeType":"YulTypedName","src":"6137:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6147:7:32","nodeType":"YulTypedName","src":"6147:7:32","type":""}],"src":"6110:77:32"},{"body":{"nativeSrc":"6248:53:32","nodeType":"YulBlock","src":"6248:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6265:3:32","nodeType":"YulIdentifier","src":"6265:3:32"},{"arguments":[{"name":"value","nativeSrc":"6288:5:32","nodeType":"YulIdentifier","src":"6288:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"6270:17:32","nodeType":"YulIdentifier","src":"6270:17:32"},"nativeSrc":"6270:24:32","nodeType":"YulFunctionCall","src":"6270:24:32"}],"functionName":{"name":"mstore","nativeSrc":"6258:6:32","nodeType":"YulIdentifier","src":"6258:6:32"},"nativeSrc":"6258:37:32","nodeType":"YulFunctionCall","src":"6258:37:32"},"nativeSrc":"6258:37:32","nodeType":"YulExpressionStatement","src":"6258:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nativeSrc":"6193:108:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6236:5:32","nodeType":"YulTypedName","src":"6236:5:32","type":""},{"name":"pos","nativeSrc":"6243:3:32","nodeType":"YulTypedName","src":"6243:3:32","type":""}],"src":"6193:108:32"},{"body":{"nativeSrc":"6479:1680:32","nodeType":"YulBlock","src":"6479:1680:32","statements":[{"nativeSrc":"6489:28:32","nodeType":"YulVariableDeclaration","src":"6489:28:32","value":{"arguments":[{"name":"pos","nativeSrc":"6505:3:32","nodeType":"YulIdentifier","src":"6505:3:32"},{"kind":"number","nativeSrc":"6510:6:32","nodeType":"YulLiteral","src":"6510:6:32","type":"","value":"0x0120"}],"functionName":{"name":"add","nativeSrc":"6501:3:32","nodeType":"YulIdentifier","src":"6501:3:32"},"nativeSrc":"6501:16:32","nodeType":"YulFunctionCall","src":"6501:16:32"},"variables":[{"name":"tail","nativeSrc":"6493:4:32","nodeType":"YulTypedName","src":"6493:4:32","type":""}]},{"nativeSrc":"6527:181:32","nodeType":"YulBlock","src":"6527:181:32","statements":[{"nativeSrc":"6567:43:32","nodeType":"YulVariableDeclaration","src":"6567:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6597:5:32","nodeType":"YulIdentifier","src":"6597:5:32"},{"kind":"number","nativeSrc":"6604:4:32","nodeType":"YulLiteral","src":"6604:4:32","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"6593:3:32","nodeType":"YulIdentifier","src":"6593:3:32"},"nativeSrc":"6593:16:32","nodeType":"YulFunctionCall","src":"6593:16:32"}],"functionName":{"name":"mload","nativeSrc":"6587:5:32","nodeType":"YulIdentifier","src":"6587:5:32"},"nativeSrc":"6587:23:32","nodeType":"YulFunctionCall","src":"6587:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"6571:12:32","nodeType":"YulTypedName","src":"6571:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"6669:12:32","nodeType":"YulIdentifier","src":"6669:12:32"},{"arguments":[{"name":"pos","nativeSrc":"6687:3:32","nodeType":"YulIdentifier","src":"6687:3:32"},{"kind":"number","nativeSrc":"6692:4:32","nodeType":"YulLiteral","src":"6692:4:32","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"6683:3:32","nodeType":"YulIdentifier","src":"6683:3:32"},"nativeSrc":"6683:14:32","nodeType":"YulFunctionCall","src":"6683:14:32"}],"functionName":{"name":"abi_encode_t_enum$_PhaseType_$8454_to_t_uint8","nativeSrc":"6623:45:32","nodeType":"YulIdentifier","src":"6623:45:32"},"nativeSrc":"6623:75:32","nodeType":"YulFunctionCall","src":"6623:75:32"},"nativeSrc":"6623:75:32","nodeType":"YulExpressionStatement","src":"6623:75:32"}]},{"nativeSrc":"6718:165:32","nodeType":"YulBlock","src":"6718:165:32","statements":[{"nativeSrc":"6754:43:32","nodeType":"YulVariableDeclaration","src":"6754:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6784:5:32","nodeType":"YulIdentifier","src":"6784:5:32"},{"kind":"number","nativeSrc":"6791:4:32","nodeType":"YulLiteral","src":"6791:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6780:3:32","nodeType":"YulIdentifier","src":"6780:3:32"},"nativeSrc":"6780:16:32","nodeType":"YulFunctionCall","src":"6780:16:32"}],"functionName":{"name":"mload","nativeSrc":"6774:5:32","nodeType":"YulIdentifier","src":"6774:5:32"},"nativeSrc":"6774:23:32","nodeType":"YulFunctionCall","src":"6774:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"6758:12:32","nodeType":"YulTypedName","src":"6758:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"6844:12:32","nodeType":"YulIdentifier","src":"6844:12:32"},{"arguments":[{"name":"pos","nativeSrc":"6862:3:32","nodeType":"YulIdentifier","src":"6862:3:32"},{"kind":"number","nativeSrc":"6867:4:32","nodeType":"YulLiteral","src":"6867:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6858:3:32","nodeType":"YulIdentifier","src":"6858:3:32"},"nativeSrc":"6858:14:32","nodeType":"YulFunctionCall","src":"6858:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6810:33:32","nodeType":"YulIdentifier","src":"6810:33:32"},"nativeSrc":"6810:63:32","nodeType":"YulFunctionCall","src":"6810:63:32"},"nativeSrc":"6810:63:32","nodeType":"YulExpressionStatement","src":"6810:63:32"}]},{"nativeSrc":"6893:169:32","nodeType":"YulBlock","src":"6893:169:32","statements":[{"nativeSrc":"6933:43:32","nodeType":"YulVariableDeclaration","src":"6933:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6963:5:32","nodeType":"YulIdentifier","src":"6963:5:32"},{"kind":"number","nativeSrc":"6970:4:32","nodeType":"YulLiteral","src":"6970:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"6959:3:32","nodeType":"YulIdentifier","src":"6959:3:32"},"nativeSrc":"6959:16:32","nodeType":"YulFunctionCall","src":"6959:16:32"}],"functionName":{"name":"mload","nativeSrc":"6953:5:32","nodeType":"YulIdentifier","src":"6953:5:32"},"nativeSrc":"6953:23:32","nodeType":"YulFunctionCall","src":"6953:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"6937:12:32","nodeType":"YulTypedName","src":"6937:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7023:12:32","nodeType":"YulIdentifier","src":"7023:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7041:3:32","nodeType":"YulIdentifier","src":"7041:3:32"},{"kind":"number","nativeSrc":"7046:4:32","nodeType":"YulLiteral","src":"7046:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"7037:3:32","nodeType":"YulIdentifier","src":"7037:3:32"},"nativeSrc":"7037:14:32","nodeType":"YulFunctionCall","src":"7037:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6989:33:32","nodeType":"YulIdentifier","src":"6989:33:32"},"nativeSrc":"6989:63:32","nodeType":"YulFunctionCall","src":"6989:63:32"},"nativeSrc":"6989:63:32","nodeType":"YulExpressionStatement","src":"6989:63:32"}]},{"nativeSrc":"7072:167:32","nodeType":"YulBlock","src":"7072:167:32","statements":[{"nativeSrc":"7110:43:32","nodeType":"YulVariableDeclaration","src":"7110:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7140:5:32","nodeType":"YulIdentifier","src":"7140:5:32"},{"kind":"number","nativeSrc":"7147:4:32","nodeType":"YulLiteral","src":"7147:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"7136:3:32","nodeType":"YulIdentifier","src":"7136:3:32"},"nativeSrc":"7136:16:32","nodeType":"YulFunctionCall","src":"7136:16:32"}],"functionName":{"name":"mload","nativeSrc":"7130:5:32","nodeType":"YulIdentifier","src":"7130:5:32"},"nativeSrc":"7130:23:32","nodeType":"YulFunctionCall","src":"7130:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7114:12:32","nodeType":"YulTypedName","src":"7114:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7200:12:32","nodeType":"YulIdentifier","src":"7200:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7218:3:32","nodeType":"YulIdentifier","src":"7218:3:32"},{"kind":"number","nativeSrc":"7223:4:32","nodeType":"YulLiteral","src":"7223:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"7214:3:32","nodeType":"YulIdentifier","src":"7214:3:32"},"nativeSrc":"7214:14:32","nodeType":"YulFunctionCall","src":"7214:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7166:33:32","nodeType":"YulIdentifier","src":"7166:33:32"},"nativeSrc":"7166:63:32","nodeType":"YulFunctionCall","src":"7166:63:32"},"nativeSrc":"7166:63:32","nodeType":"YulExpressionStatement","src":"7166:63:32"}]},{"nativeSrc":"7249:169:32","nodeType":"YulBlock","src":"7249:169:32","statements":[{"nativeSrc":"7289:43:32","nodeType":"YulVariableDeclaration","src":"7289:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7319:5:32","nodeType":"YulIdentifier","src":"7319:5:32"},{"kind":"number","nativeSrc":"7326:4:32","nodeType":"YulLiteral","src":"7326:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"7315:3:32","nodeType":"YulIdentifier","src":"7315:3:32"},"nativeSrc":"7315:16:32","nodeType":"YulFunctionCall","src":"7315:16:32"}],"functionName":{"name":"mload","nativeSrc":"7309:5:32","nodeType":"YulIdentifier","src":"7309:5:32"},"nativeSrc":"7309:23:32","nodeType":"YulFunctionCall","src":"7309:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7293:12:32","nodeType":"YulTypedName","src":"7293:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7379:12:32","nodeType":"YulIdentifier","src":"7379:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7397:3:32","nodeType":"YulIdentifier","src":"7397:3:32"},{"kind":"number","nativeSrc":"7402:4:32","nodeType":"YulLiteral","src":"7402:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"7393:3:32","nodeType":"YulIdentifier","src":"7393:3:32"},"nativeSrc":"7393:14:32","nodeType":"YulFunctionCall","src":"7393:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7345:33:32","nodeType":"YulIdentifier","src":"7345:33:32"},"nativeSrc":"7345:63:32","nodeType":"YulFunctionCall","src":"7345:63:32"},"nativeSrc":"7345:63:32","nodeType":"YulExpressionStatement","src":"7345:63:32"}]},{"nativeSrc":"7428:172:32","nodeType":"YulBlock","src":"7428:172:32","statements":[{"nativeSrc":"7471:43:32","nodeType":"YulVariableDeclaration","src":"7471:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7501:5:32","nodeType":"YulIdentifier","src":"7501:5:32"},{"kind":"number","nativeSrc":"7508:4:32","nodeType":"YulLiteral","src":"7508:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"7497:3:32","nodeType":"YulIdentifier","src":"7497:3:32"},"nativeSrc":"7497:16:32","nodeType":"YulFunctionCall","src":"7497:16:32"}],"functionName":{"name":"mload","nativeSrc":"7491:5:32","nodeType":"YulIdentifier","src":"7491:5:32"},"nativeSrc":"7491:23:32","nodeType":"YulFunctionCall","src":"7491:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7475:12:32","nodeType":"YulTypedName","src":"7475:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7561:12:32","nodeType":"YulIdentifier","src":"7561:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7579:3:32","nodeType":"YulIdentifier","src":"7579:3:32"},{"kind":"number","nativeSrc":"7584:4:32","nodeType":"YulLiteral","src":"7584:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"7575:3:32","nodeType":"YulIdentifier","src":"7575:3:32"},"nativeSrc":"7575:14:32","nodeType":"YulFunctionCall","src":"7575:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7527:33:32","nodeType":"YulIdentifier","src":"7527:33:32"},"nativeSrc":"7527:63:32","nodeType":"YulFunctionCall","src":"7527:63:32"},"nativeSrc":"7527:63:32","nodeType":"YulExpressionStatement","src":"7527:63:32"}]},{"nativeSrc":"7610:175:32","nodeType":"YulBlock","src":"7610:175:32","statements":[{"nativeSrc":"7656:43:32","nodeType":"YulVariableDeclaration","src":"7656:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7686:5:32","nodeType":"YulIdentifier","src":"7686:5:32"},{"kind":"number","nativeSrc":"7693:4:32","nodeType":"YulLiteral","src":"7693:4:32","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"7682:3:32","nodeType":"YulIdentifier","src":"7682:3:32"},"nativeSrc":"7682:16:32","nodeType":"YulFunctionCall","src":"7682:16:32"}],"functionName":{"name":"mload","nativeSrc":"7676:5:32","nodeType":"YulIdentifier","src":"7676:5:32"},"nativeSrc":"7676:23:32","nodeType":"YulFunctionCall","src":"7676:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7660:12:32","nodeType":"YulTypedName","src":"7660:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7746:12:32","nodeType":"YulIdentifier","src":"7746:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7764:3:32","nodeType":"YulIdentifier","src":"7764:3:32"},{"kind":"number","nativeSrc":"7769:4:32","nodeType":"YulLiteral","src":"7769:4:32","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"7760:3:32","nodeType":"YulIdentifier","src":"7760:3:32"},"nativeSrc":"7760:14:32","nodeType":"YulFunctionCall","src":"7760:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7712:33:32","nodeType":"YulIdentifier","src":"7712:33:32"},"nativeSrc":"7712:63:32","nodeType":"YulFunctionCall","src":"7712:63:32"},"nativeSrc":"7712:63:32","nodeType":"YulExpressionStatement","src":"7712:63:32"}]},{"nativeSrc":"7795:173:32","nodeType":"YulBlock","src":"7795:173:32","statements":[{"nativeSrc":"7839:43:32","nodeType":"YulVariableDeclaration","src":"7839:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7869:5:32","nodeType":"YulIdentifier","src":"7869:5:32"},{"kind":"number","nativeSrc":"7876:4:32","nodeType":"YulLiteral","src":"7876:4:32","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"7865:3:32","nodeType":"YulIdentifier","src":"7865:3:32"},"nativeSrc":"7865:16:32","nodeType":"YulFunctionCall","src":"7865:16:32"}],"functionName":{"name":"mload","nativeSrc":"7859:5:32","nodeType":"YulIdentifier","src":"7859:5:32"},"nativeSrc":"7859:23:32","nodeType":"YulFunctionCall","src":"7859:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7843:12:32","nodeType":"YulTypedName","src":"7843:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7929:12:32","nodeType":"YulIdentifier","src":"7929:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7947:3:32","nodeType":"YulIdentifier","src":"7947:3:32"},{"kind":"number","nativeSrc":"7952:4:32","nodeType":"YulLiteral","src":"7952:4:32","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"7943:3:32","nodeType":"YulIdentifier","src":"7943:3:32"},"nativeSrc":"7943:14:32","nodeType":"YulFunctionCall","src":"7943:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7895:33:32","nodeType":"YulIdentifier","src":"7895:33:32"},"nativeSrc":"7895:63:32","nodeType":"YulFunctionCall","src":"7895:63:32"},"nativeSrc":"7895:63:32","nodeType":"YulExpressionStatement","src":"7895:63:32"}]},{"nativeSrc":"7978:174:32","nodeType":"YulBlock","src":"7978:174:32","statements":[{"nativeSrc":"8019:45:32","nodeType":"YulVariableDeclaration","src":"8019:45:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8049:5:32","nodeType":"YulIdentifier","src":"8049:5:32"},{"kind":"number","nativeSrc":"8056:6:32","nodeType":"YulLiteral","src":"8056:6:32","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"8045:3:32","nodeType":"YulIdentifier","src":"8045:3:32"},"nativeSrc":"8045:18:32","nodeType":"YulFunctionCall","src":"8045:18:32"}],"functionName":{"name":"mload","nativeSrc":"8039:5:32","nodeType":"YulIdentifier","src":"8039:5:32"},"nativeSrc":"8039:25:32","nodeType":"YulFunctionCall","src":"8039:25:32"},"variables":[{"name":"memberValue0","nativeSrc":"8023:12:32","nodeType":"YulTypedName","src":"8023:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"8111:12:32","nodeType":"YulIdentifier","src":"8111:12:32"},{"arguments":[{"name":"pos","nativeSrc":"8129:3:32","nodeType":"YulIdentifier","src":"8129:3:32"},{"kind":"number","nativeSrc":"8134:6:32","nodeType":"YulLiteral","src":"8134:6:32","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"8125:3:32","nodeType":"YulIdentifier","src":"8125:3:32"},"nativeSrc":"8125:16:32","nodeType":"YulFunctionCall","src":"8125:16:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nativeSrc":"8077:33:32","nodeType":"YulIdentifier","src":"8077:33:32"},"nativeSrc":"8077:65:32","nodeType":"YulFunctionCall","src":"8077:65:32"},"nativeSrc":"8077:65:32","nodeType":"YulExpressionStatement","src":"8077:65:32"}]}]},"name":"abi_encode_t_struct$_Phase_$8474_memory_ptr_to_t_struct$_Phase_$8474_memory_ptr_fromStack","nativeSrc":"6367:1792:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6466:5:32","nodeType":"YulTypedName","src":"6466:5:32","type":""},{"name":"pos","nativeSrc":"6473:3:32","nodeType":"YulTypedName","src":"6473:3:32","type":""}],"src":"6367:1792:32"},{"body":{"nativeSrc":"8337:253:32","nodeType":"YulBlock","src":"8337:253:32","statements":[{"nativeSrc":"8347:27:32","nodeType":"YulAssignment","src":"8347:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"8359:9:32","nodeType":"YulIdentifier","src":"8359:9:32"},{"kind":"number","nativeSrc":"8370:3:32","nodeType":"YulLiteral","src":"8370:3:32","type":"","value":"320"}],"functionName":{"name":"add","nativeSrc":"8355:3:32","nodeType":"YulIdentifier","src":"8355:3:32"},"nativeSrc":"8355:19:32","nodeType":"YulFunctionCall","src":"8355:19:32"},"variableNames":[{"name":"tail","nativeSrc":"8347:4:32","nodeType":"YulIdentifier","src":"8347:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8428:6:32","nodeType":"YulIdentifier","src":"8428:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"8441:9:32","nodeType":"YulIdentifier","src":"8441:9:32"},{"kind":"number","nativeSrc":"8452:1:32","nodeType":"YulLiteral","src":"8452:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8437:3:32","nodeType":"YulIdentifier","src":"8437:3:32"},"nativeSrc":"8437:17:32","nodeType":"YulFunctionCall","src":"8437:17:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8384:43:32","nodeType":"YulIdentifier","src":"8384:43:32"},"nativeSrc":"8384:71:32","nodeType":"YulFunctionCall","src":"8384:71:32"},"nativeSrc":"8384:71:32","nodeType":"YulExpressionStatement","src":"8384:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8555:6:32","nodeType":"YulIdentifier","src":"8555:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"8568:9:32","nodeType":"YulIdentifier","src":"8568:9:32"},{"kind":"number","nativeSrc":"8579:2:32","nodeType":"YulLiteral","src":"8579:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8564:3:32","nodeType":"YulIdentifier","src":"8564:3:32"},"nativeSrc":"8564:18:32","nodeType":"YulFunctionCall","src":"8564:18:32"}],"functionName":{"name":"abi_encode_t_struct$_Phase_$8474_memory_ptr_to_t_struct$_Phase_$8474_memory_ptr_fromStack","nativeSrc":"8465:89:32","nodeType":"YulIdentifier","src":"8465:89:32"},"nativeSrc":"8465:118:32","nodeType":"YulFunctionCall","src":"8465:118:32"},"nativeSrc":"8465:118:32","nodeType":"YulExpressionStatement","src":"8465:118:32"}]},"name":"abi_encode_tuple_t_uint256_t_struct$_Phase_$8474_memory_ptr__to_t_uint256_t_struct$_Phase_$8474_memory_ptr__fromStack_reversed","nativeSrc":"8165:425:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8301:9:32","nodeType":"YulTypedName","src":"8301:9:32","type":""},{"name":"value1","nativeSrc":"8313:6:32","nodeType":"YulTypedName","src":"8313:6:32","type":""},{"name":"value0","nativeSrc":"8321:6:32","nodeType":"YulTypedName","src":"8321:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8332:4:32","nodeType":"YulTypedName","src":"8332:4:32","type":""}],"src":"8165:425:32"},{"body":{"nativeSrc":"8696:519:32","nodeType":"YulBlock","src":"8696:519:32","statements":[{"body":{"nativeSrc":"8742:83:32","nodeType":"YulBlock","src":"8742:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8744:77:32","nodeType":"YulIdentifier","src":"8744:77:32"},"nativeSrc":"8744:79:32","nodeType":"YulFunctionCall","src":"8744:79:32"},"nativeSrc":"8744:79:32","nodeType":"YulExpressionStatement","src":"8744:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8717:7:32","nodeType":"YulIdentifier","src":"8717:7:32"},{"name":"headStart","nativeSrc":"8726:9:32","nodeType":"YulIdentifier","src":"8726:9:32"}],"functionName":{"name":"sub","nativeSrc":"8713:3:32","nodeType":"YulIdentifier","src":"8713:3:32"},"nativeSrc":"8713:23:32","nodeType":"YulFunctionCall","src":"8713:23:32"},{"kind":"number","nativeSrc":"8738:2:32","nodeType":"YulLiteral","src":"8738:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"8709:3:32","nodeType":"YulIdentifier","src":"8709:3:32"},"nativeSrc":"8709:32:32","nodeType":"YulFunctionCall","src":"8709:32:32"},"nativeSrc":"8706:119:32","nodeType":"YulIf","src":"8706:119:32"},{"nativeSrc":"8835:117:32","nodeType":"YulBlock","src":"8835:117:32","statements":[{"nativeSrc":"8850:15:32","nodeType":"YulVariableDeclaration","src":"8850:15:32","value":{"kind":"number","nativeSrc":"8864:1:32","nodeType":"YulLiteral","src":"8864:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8854:6:32","nodeType":"YulTypedName","src":"8854:6:32","type":""}]},{"nativeSrc":"8879:63:32","nodeType":"YulAssignment","src":"8879:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8914:9:32","nodeType":"YulIdentifier","src":"8914:9:32"},{"name":"offset","nativeSrc":"8925:6:32","nodeType":"YulIdentifier","src":"8925:6:32"}],"functionName":{"name":"add","nativeSrc":"8910:3:32","nodeType":"YulIdentifier","src":"8910:3:32"},"nativeSrc":"8910:22:32","nodeType":"YulFunctionCall","src":"8910:22:32"},{"name":"dataEnd","nativeSrc":"8934:7:32","nodeType":"YulIdentifier","src":"8934:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8889:20:32","nodeType":"YulIdentifier","src":"8889:20:32"},"nativeSrc":"8889:53:32","nodeType":"YulFunctionCall","src":"8889:53:32"},"variableNames":[{"name":"value0","nativeSrc":"8879:6:32","nodeType":"YulIdentifier","src":"8879:6:32"}]}]},{"nativeSrc":"8962:118:32","nodeType":"YulBlock","src":"8962:118:32","statements":[{"nativeSrc":"8977:16:32","nodeType":"YulVariableDeclaration","src":"8977:16:32","value":{"kind":"number","nativeSrc":"8991:2:32","nodeType":"YulLiteral","src":"8991:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8981:6:32","nodeType":"YulTypedName","src":"8981:6:32","type":""}]},{"nativeSrc":"9007:63:32","nodeType":"YulAssignment","src":"9007:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9042:9:32","nodeType":"YulIdentifier","src":"9042:9:32"},{"name":"offset","nativeSrc":"9053:6:32","nodeType":"YulIdentifier","src":"9053:6:32"}],"functionName":{"name":"add","nativeSrc":"9038:3:32","nodeType":"YulIdentifier","src":"9038:3:32"},"nativeSrc":"9038:22:32","nodeType":"YulFunctionCall","src":"9038:22:32"},{"name":"dataEnd","nativeSrc":"9062:7:32","nodeType":"YulIdentifier","src":"9062:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9017:20:32","nodeType":"YulIdentifier","src":"9017:20:32"},"nativeSrc":"9017:53:32","nodeType":"YulFunctionCall","src":"9017:53:32"},"variableNames":[{"name":"value1","nativeSrc":"9007:6:32","nodeType":"YulIdentifier","src":"9007:6:32"}]}]},{"nativeSrc":"9090:118:32","nodeType":"YulBlock","src":"9090:118:32","statements":[{"nativeSrc":"9105:16:32","nodeType":"YulVariableDeclaration","src":"9105:16:32","value":{"kind":"number","nativeSrc":"9119:2:32","nodeType":"YulLiteral","src":"9119:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9109:6:32","nodeType":"YulTypedName","src":"9109:6:32","type":""}]},{"nativeSrc":"9135:63:32","nodeType":"YulAssignment","src":"9135:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9170:9:32","nodeType":"YulIdentifier","src":"9170:9:32"},{"name":"offset","nativeSrc":"9181:6:32","nodeType":"YulIdentifier","src":"9181:6:32"}],"functionName":{"name":"add","nativeSrc":"9166:3:32","nodeType":"YulIdentifier","src":"9166:3:32"},"nativeSrc":"9166:22:32","nodeType":"YulFunctionCall","src":"9166:22:32"},{"name":"dataEnd","nativeSrc":"9190:7:32","nodeType":"YulIdentifier","src":"9190:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9145:20:32","nodeType":"YulIdentifier","src":"9145:20:32"},"nativeSrc":"9145:53:32","nodeType":"YulFunctionCall","src":"9145:53:32"},"variableNames":[{"name":"value2","nativeSrc":"9135:6:32","nodeType":"YulIdentifier","src":"9135:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"8596:619:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8650:9:32","nodeType":"YulTypedName","src":"8650:9:32","type":""},{"name":"dataEnd","nativeSrc":"8661:7:32","nodeType":"YulTypedName","src":"8661:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8673:6:32","nodeType":"YulTypedName","src":"8673:6:32","type":""},{"name":"value1","nativeSrc":"8681:6:32","nodeType":"YulTypedName","src":"8681:6:32","type":""},{"name":"value2","nativeSrc":"8689:6:32","nodeType":"YulTypedName","src":"8689:6:32","type":""}],"src":"8596:619:32"},{"body":{"nativeSrc":"9304:391:32","nodeType":"YulBlock","src":"9304:391:32","statements":[{"body":{"nativeSrc":"9350:83:32","nodeType":"YulBlock","src":"9350:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9352:77:32","nodeType":"YulIdentifier","src":"9352:77:32"},"nativeSrc":"9352:79:32","nodeType":"YulFunctionCall","src":"9352:79:32"},"nativeSrc":"9352:79:32","nodeType":"YulExpressionStatement","src":"9352:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9325:7:32","nodeType":"YulIdentifier","src":"9325:7:32"},{"name":"headStart","nativeSrc":"9334:9:32","nodeType":"YulIdentifier","src":"9334:9:32"}],"functionName":{"name":"sub","nativeSrc":"9321:3:32","nodeType":"YulIdentifier","src":"9321:3:32"},"nativeSrc":"9321:23:32","nodeType":"YulFunctionCall","src":"9321:23:32"},{"kind":"number","nativeSrc":"9346:2:32","nodeType":"YulLiteral","src":"9346:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9317:3:32","nodeType":"YulIdentifier","src":"9317:3:32"},"nativeSrc":"9317:32:32","nodeType":"YulFunctionCall","src":"9317:32:32"},"nativeSrc":"9314:119:32","nodeType":"YulIf","src":"9314:119:32"},{"nativeSrc":"9443:117:32","nodeType":"YulBlock","src":"9443:117:32","statements":[{"nativeSrc":"9458:15:32","nodeType":"YulVariableDeclaration","src":"9458:15:32","value":{"kind":"number","nativeSrc":"9472:1:32","nodeType":"YulLiteral","src":"9472:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9462:6:32","nodeType":"YulTypedName","src":"9462:6:32","type":""}]},{"nativeSrc":"9487:63:32","nodeType":"YulAssignment","src":"9487:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9522:9:32","nodeType":"YulIdentifier","src":"9522:9:32"},{"name":"offset","nativeSrc":"9533:6:32","nodeType":"YulIdentifier","src":"9533:6:32"}],"functionName":{"name":"add","nativeSrc":"9518:3:32","nodeType":"YulIdentifier","src":"9518:3:32"},"nativeSrc":"9518:22:32","nodeType":"YulFunctionCall","src":"9518:22:32"},{"name":"dataEnd","nativeSrc":"9542:7:32","nodeType":"YulIdentifier","src":"9542:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9497:20:32","nodeType":"YulIdentifier","src":"9497:20:32"},"nativeSrc":"9497:53:32","nodeType":"YulFunctionCall","src":"9497:53:32"},"variableNames":[{"name":"value0","nativeSrc":"9487:6:32","nodeType":"YulIdentifier","src":"9487:6:32"}]}]},{"nativeSrc":"9570:118:32","nodeType":"YulBlock","src":"9570:118:32","statements":[{"nativeSrc":"9585:16:32","nodeType":"YulVariableDeclaration","src":"9585:16:32","value":{"kind":"number","nativeSrc":"9599:2:32","nodeType":"YulLiteral","src":"9599:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9589:6:32","nodeType":"YulTypedName","src":"9589:6:32","type":""}]},{"nativeSrc":"9615:63:32","nodeType":"YulAssignment","src":"9615:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9650:9:32","nodeType":"YulIdentifier","src":"9650:9:32"},{"name":"offset","nativeSrc":"9661:6:32","nodeType":"YulIdentifier","src":"9661:6:32"}],"functionName":{"name":"add","nativeSrc":"9646:3:32","nodeType":"YulIdentifier","src":"9646:3:32"},"nativeSrc":"9646:22:32","nodeType":"YulFunctionCall","src":"9646:22:32"},{"name":"dataEnd","nativeSrc":"9670:7:32","nodeType":"YulIdentifier","src":"9670:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9625:20:32","nodeType":"YulIdentifier","src":"9625:20:32"},"nativeSrc":"9625:53:32","nodeType":"YulFunctionCall","src":"9625:53:32"},"variableNames":[{"name":"value1","nativeSrc":"9615:6:32","nodeType":"YulIdentifier","src":"9615:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"9221:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9266:9:32","nodeType":"YulTypedName","src":"9266:9:32","type":""},{"name":"dataEnd","nativeSrc":"9277:7:32","nodeType":"YulTypedName","src":"9277:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9289:6:32","nodeType":"YulTypedName","src":"9289:6:32","type":""},{"name":"value1","nativeSrc":"9297:6:32","nodeType":"YulTypedName","src":"9297:6:32","type":""}],"src":"9221:474:32"},{"body":{"nativeSrc":"9827:206:32","nodeType":"YulBlock","src":"9827:206:32","statements":[{"nativeSrc":"9837:26:32","nodeType":"YulAssignment","src":"9837:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"9849:9:32","nodeType":"YulIdentifier","src":"9849:9:32"},{"kind":"number","nativeSrc":"9860:2:32","nodeType":"YulLiteral","src":"9860:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9845:3:32","nodeType":"YulIdentifier","src":"9845:3:32"},"nativeSrc":"9845:18:32","nodeType":"YulFunctionCall","src":"9845:18:32"},"variableNames":[{"name":"tail","nativeSrc":"9837:4:32","nodeType":"YulIdentifier","src":"9837:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9917:6:32","nodeType":"YulIdentifier","src":"9917:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"9930:9:32","nodeType":"YulIdentifier","src":"9930:9:32"},{"kind":"number","nativeSrc":"9941:1:32","nodeType":"YulLiteral","src":"9941:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9926:3:32","nodeType":"YulIdentifier","src":"9926:3:32"},"nativeSrc":"9926:17:32","nodeType":"YulFunctionCall","src":"9926:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9873:43:32","nodeType":"YulIdentifier","src":"9873:43:32"},"nativeSrc":"9873:71:32","nodeType":"YulFunctionCall","src":"9873:71:32"},"nativeSrc":"9873:71:32","nodeType":"YulExpressionStatement","src":"9873:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9998:6:32","nodeType":"YulIdentifier","src":"9998:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"10011:9:32","nodeType":"YulIdentifier","src":"10011:9:32"},{"kind":"number","nativeSrc":"10022:2:32","nodeType":"YulLiteral","src":"10022:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10007:3:32","nodeType":"YulIdentifier","src":"10007:3:32"},"nativeSrc":"10007:18:32","nodeType":"YulFunctionCall","src":"10007:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9954:43:32","nodeType":"YulIdentifier","src":"9954:43:32"},"nativeSrc":"9954:72:32","nodeType":"YulFunctionCall","src":"9954:72:32"},"nativeSrc":"9954:72:32","nodeType":"YulExpressionStatement","src":"9954:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9701:332:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9791:9:32","nodeType":"YulTypedName","src":"9791:9:32","type":""},{"name":"value1","nativeSrc":"9803:6:32","nodeType":"YulTypedName","src":"9803:6:32","type":""},{"name":"value0","nativeSrc":"9811:6:32","nodeType":"YulTypedName","src":"9811:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9822:4:32","nodeType":"YulTypedName","src":"9822:4:32","type":""}],"src":"9701:332:32"},{"body":{"nativeSrc":"10105:263:32","nodeType":"YulBlock","src":"10105:263:32","statements":[{"body":{"nativeSrc":"10151:83:32","nodeType":"YulBlock","src":"10151:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10153:77:32","nodeType":"YulIdentifier","src":"10153:77:32"},"nativeSrc":"10153:79:32","nodeType":"YulFunctionCall","src":"10153:79:32"},"nativeSrc":"10153:79:32","nodeType":"YulExpressionStatement","src":"10153:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10126:7:32","nodeType":"YulIdentifier","src":"10126:7:32"},{"name":"headStart","nativeSrc":"10135:9:32","nodeType":"YulIdentifier","src":"10135:9:32"}],"functionName":{"name":"sub","nativeSrc":"10122:3:32","nodeType":"YulIdentifier","src":"10122:3:32"},"nativeSrc":"10122:23:32","nodeType":"YulFunctionCall","src":"10122:23:32"},{"kind":"number","nativeSrc":"10147:2:32","nodeType":"YulLiteral","src":"10147:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10118:3:32","nodeType":"YulIdentifier","src":"10118:3:32"},"nativeSrc":"10118:32:32","nodeType":"YulFunctionCall","src":"10118:32:32"},"nativeSrc":"10115:119:32","nodeType":"YulIf","src":"10115:119:32"},{"nativeSrc":"10244:117:32","nodeType":"YulBlock","src":"10244:117:32","statements":[{"nativeSrc":"10259:15:32","nodeType":"YulVariableDeclaration","src":"10259:15:32","value":{"kind":"number","nativeSrc":"10273:1:32","nodeType":"YulLiteral","src":"10273:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10263:6:32","nodeType":"YulTypedName","src":"10263:6:32","type":""}]},{"nativeSrc":"10288:63:32","nodeType":"YulAssignment","src":"10288:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10323:9:32","nodeType":"YulIdentifier","src":"10323:9:32"},{"name":"offset","nativeSrc":"10334:6:32","nodeType":"YulIdentifier","src":"10334:6:32"}],"functionName":{"name":"add","nativeSrc":"10319:3:32","nodeType":"YulIdentifier","src":"10319:3:32"},"nativeSrc":"10319:22:32","nodeType":"YulFunctionCall","src":"10319:22:32"},{"name":"dataEnd","nativeSrc":"10343:7:32","nodeType":"YulIdentifier","src":"10343:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10298:20:32","nodeType":"YulIdentifier","src":"10298:20:32"},"nativeSrc":"10298:53:32","nodeType":"YulFunctionCall","src":"10298:53:32"},"variableNames":[{"name":"value0","nativeSrc":"10288:6:32","nodeType":"YulIdentifier","src":"10288:6:32"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"10039:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10075:9:32","nodeType":"YulTypedName","src":"10075:9:32","type":""},{"name":"dataEnd","nativeSrc":"10086:7:32","nodeType":"YulTypedName","src":"10086:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10098:6:32","nodeType":"YulTypedName","src":"10098:6:32","type":""}],"src":"10039:329:32"},{"body":{"nativeSrc":"10451:78:32","nodeType":"YulBlock","src":"10451:78:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10468:3:32","nodeType":"YulIdentifier","src":"10468:3:32"},{"arguments":[{"name":"value","nativeSrc":"10516:5:32","nodeType":"YulIdentifier","src":"10516:5:32"}],"functionName":{"name":"convert_t_enum$_PhaseType_$8454_to_t_uint8","nativeSrc":"10473:42:32","nodeType":"YulIdentifier","src":"10473:42:32"},"nativeSrc":"10473:49:32","nodeType":"YulFunctionCall","src":"10473:49:32"}],"functionName":{"name":"mstore","nativeSrc":"10461:6:32","nodeType":"YulIdentifier","src":"10461:6:32"},"nativeSrc":"10461:62:32","nodeType":"YulFunctionCall","src":"10461:62:32"},"nativeSrc":"10461:62:32","nodeType":"YulExpressionStatement","src":"10461:62:32"}]},"name":"abi_encode_t_enum$_PhaseType_$8454_to_t_uint8_fromStack","nativeSrc":"10374:155:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10439:5:32","nodeType":"YulTypedName","src":"10439:5:32","type":""},{"name":"pos","nativeSrc":"10446:3:32","nodeType":"YulTypedName","src":"10446:3:32","type":""}],"src":"10374:155:32"},{"body":{"nativeSrc":"10600:53:32","nodeType":"YulBlock","src":"10600:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10617:3:32","nodeType":"YulIdentifier","src":"10617:3:32"},{"arguments":[{"name":"value","nativeSrc":"10640:5:32","nodeType":"YulIdentifier","src":"10640:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10622:17:32","nodeType":"YulIdentifier","src":"10622:17:32"},"nativeSrc":"10622:24:32","nodeType":"YulFunctionCall","src":"10622:24:32"}],"functionName":{"name":"mstore","nativeSrc":"10610:6:32","nodeType":"YulIdentifier","src":"10610:6:32"},"nativeSrc":"10610:37:32","nodeType":"YulFunctionCall","src":"10610:37:32"},"nativeSrc":"10610:37:32","nodeType":"YulExpressionStatement","src":"10610:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10535:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10588:5:32","nodeType":"YulTypedName","src":"10588:5:32","type":""},{"name":"pos","nativeSrc":"10595:3:32","nodeType":"YulTypedName","src":"10595:3:32","type":""}],"src":"10535:118:32"},{"body":{"nativeSrc":"10993:798:32","nodeType":"YulBlock","src":"10993:798:32","statements":[{"nativeSrc":"11003:27:32","nodeType":"YulAssignment","src":"11003:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"11015:9:32","nodeType":"YulIdentifier","src":"11015:9:32"},{"kind":"number","nativeSrc":"11026:3:32","nodeType":"YulLiteral","src":"11026:3:32","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"11011:3:32","nodeType":"YulIdentifier","src":"11011:3:32"},"nativeSrc":"11011:19:32","nodeType":"YulFunctionCall","src":"11011:19:32"},"variableNames":[{"name":"tail","nativeSrc":"11003:4:32","nodeType":"YulIdentifier","src":"11003:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11096:6:32","nodeType":"YulIdentifier","src":"11096:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11109:9:32","nodeType":"YulIdentifier","src":"11109:9:32"},{"kind":"number","nativeSrc":"11120:1:32","nodeType":"YulLiteral","src":"11120:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11105:3:32","nodeType":"YulIdentifier","src":"11105:3:32"},"nativeSrc":"11105:17:32","nodeType":"YulFunctionCall","src":"11105:17:32"}],"functionName":{"name":"abi_encode_t_enum$_PhaseType_$8454_to_t_uint8_fromStack","nativeSrc":"11040:55:32","nodeType":"YulIdentifier","src":"11040:55:32"},"nativeSrc":"11040:83:32","nodeType":"YulFunctionCall","src":"11040:83:32"},"nativeSrc":"11040:83:32","nodeType":"YulExpressionStatement","src":"11040:83:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11177:6:32","nodeType":"YulIdentifier","src":"11177:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11190:9:32","nodeType":"YulIdentifier","src":"11190:9:32"},{"kind":"number","nativeSrc":"11201:2:32","nodeType":"YulLiteral","src":"11201:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11186:3:32","nodeType":"YulIdentifier","src":"11186:3:32"},"nativeSrc":"11186:18:32","nodeType":"YulFunctionCall","src":"11186:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11133:43:32","nodeType":"YulIdentifier","src":"11133:43:32"},"nativeSrc":"11133:72:32","nodeType":"YulFunctionCall","src":"11133:72:32"},"nativeSrc":"11133:72:32","nodeType":"YulExpressionStatement","src":"11133:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11259:6:32","nodeType":"YulIdentifier","src":"11259:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11272:9:32","nodeType":"YulIdentifier","src":"11272:9:32"},{"kind":"number","nativeSrc":"11283:2:32","nodeType":"YulLiteral","src":"11283:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11268:3:32","nodeType":"YulIdentifier","src":"11268:3:32"},"nativeSrc":"11268:18:32","nodeType":"YulFunctionCall","src":"11268:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11215:43:32","nodeType":"YulIdentifier","src":"11215:43:32"},"nativeSrc":"11215:72:32","nodeType":"YulFunctionCall","src":"11215:72:32"},"nativeSrc":"11215:72:32","nodeType":"YulExpressionStatement","src":"11215:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"11341:6:32","nodeType":"YulIdentifier","src":"11341:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11354:9:32","nodeType":"YulIdentifier","src":"11354:9:32"},{"kind":"number","nativeSrc":"11365:2:32","nodeType":"YulLiteral","src":"11365:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11350:3:32","nodeType":"YulIdentifier","src":"11350:3:32"},"nativeSrc":"11350:18:32","nodeType":"YulFunctionCall","src":"11350:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11297:43:32","nodeType":"YulIdentifier","src":"11297:43:32"},"nativeSrc":"11297:72:32","nodeType":"YulFunctionCall","src":"11297:72:32"},"nativeSrc":"11297:72:32","nodeType":"YulExpressionStatement","src":"11297:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"11423:6:32","nodeType":"YulIdentifier","src":"11423:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11436:9:32","nodeType":"YulIdentifier","src":"11436:9:32"},{"kind":"number","nativeSrc":"11447:3:32","nodeType":"YulLiteral","src":"11447:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11432:3:32","nodeType":"YulIdentifier","src":"11432:3:32"},"nativeSrc":"11432:19:32","nodeType":"YulFunctionCall","src":"11432:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11379:43:32","nodeType":"YulIdentifier","src":"11379:43:32"},"nativeSrc":"11379:73:32","nodeType":"YulFunctionCall","src":"11379:73:32"},"nativeSrc":"11379:73:32","nodeType":"YulExpressionStatement","src":"11379:73:32"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"11506:6:32","nodeType":"YulIdentifier","src":"11506:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11519:9:32","nodeType":"YulIdentifier","src":"11519:9:32"},{"kind":"number","nativeSrc":"11530:3:32","nodeType":"YulLiteral","src":"11530:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"11515:3:32","nodeType":"YulIdentifier","src":"11515:3:32"},"nativeSrc":"11515:19:32","nodeType":"YulFunctionCall","src":"11515:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11462:43:32","nodeType":"YulIdentifier","src":"11462:43:32"},"nativeSrc":"11462:73:32","nodeType":"YulFunctionCall","src":"11462:73:32"},"nativeSrc":"11462:73:32","nodeType":"YulExpressionStatement","src":"11462:73:32"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"11589:6:32","nodeType":"YulIdentifier","src":"11589:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11602:9:32","nodeType":"YulIdentifier","src":"11602:9:32"},{"kind":"number","nativeSrc":"11613:3:32","nodeType":"YulLiteral","src":"11613:3:32","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"11598:3:32","nodeType":"YulIdentifier","src":"11598:3:32"},"nativeSrc":"11598:19:32","nodeType":"YulFunctionCall","src":"11598:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11545:43:32","nodeType":"YulIdentifier","src":"11545:43:32"},"nativeSrc":"11545:73:32","nodeType":"YulFunctionCall","src":"11545:73:32"},"nativeSrc":"11545:73:32","nodeType":"YulExpressionStatement","src":"11545:73:32"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"11672:6:32","nodeType":"YulIdentifier","src":"11672:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11685:9:32","nodeType":"YulIdentifier","src":"11685:9:32"},{"kind":"number","nativeSrc":"11696:3:32","nodeType":"YulLiteral","src":"11696:3:32","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"11681:3:32","nodeType":"YulIdentifier","src":"11681:3:32"},"nativeSrc":"11681:19:32","nodeType":"YulFunctionCall","src":"11681:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11628:43:32","nodeType":"YulIdentifier","src":"11628:43:32"},"nativeSrc":"11628:73:32","nodeType":"YulFunctionCall","src":"11628:73:32"},"nativeSrc":"11628:73:32","nodeType":"YulExpressionStatement","src":"11628:73:32"},{"expression":{"arguments":[{"name":"value8","nativeSrc":"11755:6:32","nodeType":"YulIdentifier","src":"11755:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11768:9:32","nodeType":"YulIdentifier","src":"11768:9:32"},{"kind":"number","nativeSrc":"11779:3:32","nodeType":"YulLiteral","src":"11779:3:32","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"11764:3:32","nodeType":"YulIdentifier","src":"11764:3:32"},"nativeSrc":"11764:19:32","nodeType":"YulFunctionCall","src":"11764:19:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"11711:43:32","nodeType":"YulIdentifier","src":"11711:43:32"},"nativeSrc":"11711:73:32","nodeType":"YulFunctionCall","src":"11711:73:32"},"nativeSrc":"11711:73:32","nodeType":"YulExpressionStatement","src":"11711:73:32"}]},"name":"abi_encode_tuple_t_enum$_PhaseType_$8454_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nativeSrc":"10659:1132:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10901:9:32","nodeType":"YulTypedName","src":"10901:9:32","type":""},{"name":"value8","nativeSrc":"10913:6:32","nodeType":"YulTypedName","src":"10913:6:32","type":""},{"name":"value7","nativeSrc":"10921:6:32","nodeType":"YulTypedName","src":"10921:6:32","type":""},{"name":"value6","nativeSrc":"10929:6:32","nodeType":"YulTypedName","src":"10929:6:32","type":""},{"name":"value5","nativeSrc":"10937:6:32","nodeType":"YulTypedName","src":"10937:6:32","type":""},{"name":"value4","nativeSrc":"10945:6:32","nodeType":"YulTypedName","src":"10945:6:32","type":""},{"name":"value3","nativeSrc":"10953:6:32","nodeType":"YulTypedName","src":"10953:6:32","type":""},{"name":"value2","nativeSrc":"10961:6:32","nodeType":"YulTypedName","src":"10961:6:32","type":""},{"name":"value1","nativeSrc":"10969:6:32","nodeType":"YulTypedName","src":"10969:6:32","type":""},{"name":"value0","nativeSrc":"10977:6:32","nodeType":"YulTypedName","src":"10977:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10988:4:32","nodeType":"YulTypedName","src":"10988:4:32","type":""}],"src":"10659:1132:32"},{"body":{"nativeSrc":"11854:56:32","nodeType":"YulBlock","src":"11854:56:32","statements":[{"body":{"nativeSrc":"11888:16:32","nodeType":"YulBlock","src":"11888:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11897:1:32","nodeType":"YulLiteral","src":"11897:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"11900:1:32","nodeType":"YulLiteral","src":"11900:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11890:6:32","nodeType":"YulIdentifier","src":"11890:6:32"},"nativeSrc":"11890:12:32","nodeType":"YulFunctionCall","src":"11890:12:32"},"nativeSrc":"11890:12:32","nodeType":"YulExpressionStatement","src":"11890:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11877:5:32","nodeType":"YulIdentifier","src":"11877:5:32"},{"kind":"number","nativeSrc":"11884:1:32","nodeType":"YulLiteral","src":"11884:1:32","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"11874:2:32","nodeType":"YulIdentifier","src":"11874:2:32"},"nativeSrc":"11874:12:32","nodeType":"YulFunctionCall","src":"11874:12:32"}],"functionName":{"name":"iszero","nativeSrc":"11867:6:32","nodeType":"YulIdentifier","src":"11867:6:32"},"nativeSrc":"11867:20:32","nodeType":"YulFunctionCall","src":"11867:20:32"},"nativeSrc":"11864:40:32","nodeType":"YulIf","src":"11864:40:32"}]},"name":"validator_revert_t_enum$_PhaseType_$8454","nativeSrc":"11797:113:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11847:5:32","nodeType":"YulTypedName","src":"11847:5:32","type":""}],"src":"11797:113:32"},{"body":{"nativeSrc":"11982:101:32","nodeType":"YulBlock","src":"11982:101:32","statements":[{"nativeSrc":"11992:29:32","nodeType":"YulAssignment","src":"11992:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"12014:6:32","nodeType":"YulIdentifier","src":"12014:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"12001:12:32","nodeType":"YulIdentifier","src":"12001:12:32"},"nativeSrc":"12001:20:32","nodeType":"YulFunctionCall","src":"12001:20:32"},"variableNames":[{"name":"value","nativeSrc":"11992:5:32","nodeType":"YulIdentifier","src":"11992:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12071:5:32","nodeType":"YulIdentifier","src":"12071:5:32"}],"functionName":{"name":"validator_revert_t_enum$_PhaseType_$8454","nativeSrc":"12030:40:32","nodeType":"YulIdentifier","src":"12030:40:32"},"nativeSrc":"12030:47:32","nodeType":"YulFunctionCall","src":"12030:47:32"},"nativeSrc":"12030:47:32","nodeType":"YulExpressionStatement","src":"12030:47:32"}]},"name":"abi_decode_t_enum$_PhaseType_$8454","nativeSrc":"11916:167:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11960:6:32","nodeType":"YulTypedName","src":"11960:6:32","type":""},{"name":"end","nativeSrc":"11968:3:32","nodeType":"YulTypedName","src":"11968:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11976:5:32","nodeType":"YulTypedName","src":"11976:5:32","type":""}],"src":"11916:167:32"},{"body":{"nativeSrc":"12132:79:32","nodeType":"YulBlock","src":"12132:79:32","statements":[{"body":{"nativeSrc":"12189:16:32","nodeType":"YulBlock","src":"12189:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12198:1:32","nodeType":"YulLiteral","src":"12198:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"12201:1:32","nodeType":"YulLiteral","src":"12201:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12191:6:32","nodeType":"YulIdentifier","src":"12191:6:32"},"nativeSrc":"12191:12:32","nodeType":"YulFunctionCall","src":"12191:12:32"},"nativeSrc":"12191:12:32","nodeType":"YulExpressionStatement","src":"12191:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12155:5:32","nodeType":"YulIdentifier","src":"12155:5:32"},{"arguments":[{"name":"value","nativeSrc":"12180:5:32","nodeType":"YulIdentifier","src":"12180:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12162:17:32","nodeType":"YulIdentifier","src":"12162:17:32"},"nativeSrc":"12162:24:32","nodeType":"YulFunctionCall","src":"12162:24:32"}],"functionName":{"name":"eq","nativeSrc":"12152:2:32","nodeType":"YulIdentifier","src":"12152:2:32"},"nativeSrc":"12152:35:32","nodeType":"YulFunctionCall","src":"12152:35:32"}],"functionName":{"name":"iszero","nativeSrc":"12145:6:32","nodeType":"YulIdentifier","src":"12145:6:32"},"nativeSrc":"12145:43:32","nodeType":"YulFunctionCall","src":"12145:43:32"},"nativeSrc":"12142:63:32","nodeType":"YulIf","src":"12142:63:32"}]},"name":"validator_revert_t_bytes32","nativeSrc":"12089:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12125:5:32","nodeType":"YulTypedName","src":"12125:5:32","type":""}],"src":"12089:122:32"},{"body":{"nativeSrc":"12269:87:32","nodeType":"YulBlock","src":"12269:87:32","statements":[{"nativeSrc":"12279:29:32","nodeType":"YulAssignment","src":"12279:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"12301:6:32","nodeType":"YulIdentifier","src":"12301:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"12288:12:32","nodeType":"YulIdentifier","src":"12288:12:32"},"nativeSrc":"12288:20:32","nodeType":"YulFunctionCall","src":"12288:20:32"},"variableNames":[{"name":"value","nativeSrc":"12279:5:32","nodeType":"YulIdentifier","src":"12279:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12344:5:32","nodeType":"YulIdentifier","src":"12344:5:32"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"12317:26:32","nodeType":"YulIdentifier","src":"12317:26:32"},"nativeSrc":"12317:33:32","nodeType":"YulFunctionCall","src":"12317:33:32"},"nativeSrc":"12317:33:32","nodeType":"YulExpressionStatement","src":"12317:33:32"}]},"name":"abi_decode_t_bytes32","nativeSrc":"12217:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12247:6:32","nodeType":"YulTypedName","src":"12247:6:32","type":""},{"name":"end","nativeSrc":"12255:3:32","nodeType":"YulTypedName","src":"12255:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12263:5:32","nodeType":"YulTypedName","src":"12263:5:32","type":""}],"src":"12217:139:32"},{"body":{"nativeSrc":"12561:1178:32","nodeType":"YulBlock","src":"12561:1178:32","statements":[{"body":{"nativeSrc":"12608:83:32","nodeType":"YulBlock","src":"12608:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12610:77:32","nodeType":"YulIdentifier","src":"12610:77:32"},"nativeSrc":"12610:79:32","nodeType":"YulFunctionCall","src":"12610:79:32"},"nativeSrc":"12610:79:32","nodeType":"YulExpressionStatement","src":"12610:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12582:7:32","nodeType":"YulIdentifier","src":"12582:7:32"},{"name":"headStart","nativeSrc":"12591:9:32","nodeType":"YulIdentifier","src":"12591:9:32"}],"functionName":{"name":"sub","nativeSrc":"12578:3:32","nodeType":"YulIdentifier","src":"12578:3:32"},"nativeSrc":"12578:23:32","nodeType":"YulFunctionCall","src":"12578:23:32"},{"kind":"number","nativeSrc":"12603:3:32","nodeType":"YulLiteral","src":"12603:3:32","type":"","value":"256"}],"functionName":{"name":"slt","nativeSrc":"12574:3:32","nodeType":"YulIdentifier","src":"12574:3:32"},"nativeSrc":"12574:33:32","nodeType":"YulFunctionCall","src":"12574:33:32"},"nativeSrc":"12571:120:32","nodeType":"YulIf","src":"12571:120:32"},{"nativeSrc":"12701:131:32","nodeType":"YulBlock","src":"12701:131:32","statements":[{"nativeSrc":"12716:15:32","nodeType":"YulVariableDeclaration","src":"12716:15:32","value":{"kind":"number","nativeSrc":"12730:1:32","nodeType":"YulLiteral","src":"12730:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12720:6:32","nodeType":"YulTypedName","src":"12720:6:32","type":""}]},{"nativeSrc":"12745:77:32","nodeType":"YulAssignment","src":"12745:77:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12794:9:32","nodeType":"YulIdentifier","src":"12794:9:32"},{"name":"offset","nativeSrc":"12805:6:32","nodeType":"YulIdentifier","src":"12805:6:32"}],"functionName":{"name":"add","nativeSrc":"12790:3:32","nodeType":"YulIdentifier","src":"12790:3:32"},"nativeSrc":"12790:22:32","nodeType":"YulFunctionCall","src":"12790:22:32"},{"name":"dataEnd","nativeSrc":"12814:7:32","nodeType":"YulIdentifier","src":"12814:7:32"}],"functionName":{"name":"abi_decode_t_enum$_PhaseType_$8454","nativeSrc":"12755:34:32","nodeType":"YulIdentifier","src":"12755:34:32"},"nativeSrc":"12755:67:32","nodeType":"YulFunctionCall","src":"12755:67:32"},"variableNames":[{"name":"value0","nativeSrc":"12745:6:32","nodeType":"YulIdentifier","src":"12745:6:32"}]}]},{"nativeSrc":"12842:118:32","nodeType":"YulBlock","src":"12842:118:32","statements":[{"nativeSrc":"12857:16:32","nodeType":"YulVariableDeclaration","src":"12857:16:32","value":{"kind":"number","nativeSrc":"12871:2:32","nodeType":"YulLiteral","src":"12871:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12861:6:32","nodeType":"YulTypedName","src":"12861:6:32","type":""}]},{"nativeSrc":"12887:63:32","nodeType":"YulAssignment","src":"12887:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12922:9:32","nodeType":"YulIdentifier","src":"12922:9:32"},{"name":"offset","nativeSrc":"12933:6:32","nodeType":"YulIdentifier","src":"12933:6:32"}],"functionName":{"name":"add","nativeSrc":"12918:3:32","nodeType":"YulIdentifier","src":"12918:3:32"},"nativeSrc":"12918:22:32","nodeType":"YulFunctionCall","src":"12918:22:32"},{"name":"dataEnd","nativeSrc":"12942:7:32","nodeType":"YulIdentifier","src":"12942:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12897:20:32","nodeType":"YulIdentifier","src":"12897:20:32"},"nativeSrc":"12897:53:32","nodeType":"YulFunctionCall","src":"12897:53:32"},"variableNames":[{"name":"value1","nativeSrc":"12887:6:32","nodeType":"YulIdentifier","src":"12887:6:32"}]}]},{"nativeSrc":"12970:118:32","nodeType":"YulBlock","src":"12970:118:32","statements":[{"nativeSrc":"12985:16:32","nodeType":"YulVariableDeclaration","src":"12985:16:32","value":{"kind":"number","nativeSrc":"12999:2:32","nodeType":"YulLiteral","src":"12999:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"12989:6:32","nodeType":"YulTypedName","src":"12989:6:32","type":""}]},{"nativeSrc":"13015:63:32","nodeType":"YulAssignment","src":"13015:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13050:9:32","nodeType":"YulIdentifier","src":"13050:9:32"},{"name":"offset","nativeSrc":"13061:6:32","nodeType":"YulIdentifier","src":"13061:6:32"}],"functionName":{"name":"add","nativeSrc":"13046:3:32","nodeType":"YulIdentifier","src":"13046:3:32"},"nativeSrc":"13046:22:32","nodeType":"YulFunctionCall","src":"13046:22:32"},{"name":"dataEnd","nativeSrc":"13070:7:32","nodeType":"YulIdentifier","src":"13070:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13025:20:32","nodeType":"YulIdentifier","src":"13025:20:32"},"nativeSrc":"13025:53:32","nodeType":"YulFunctionCall","src":"13025:53:32"},"variableNames":[{"name":"value2","nativeSrc":"13015:6:32","nodeType":"YulIdentifier","src":"13015:6:32"}]}]},{"nativeSrc":"13098:118:32","nodeType":"YulBlock","src":"13098:118:32","statements":[{"nativeSrc":"13113:16:32","nodeType":"YulVariableDeclaration","src":"13113:16:32","value":{"kind":"number","nativeSrc":"13127:2:32","nodeType":"YulLiteral","src":"13127:2:32","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"13117:6:32","nodeType":"YulTypedName","src":"13117:6:32","type":""}]},{"nativeSrc":"13143:63:32","nodeType":"YulAssignment","src":"13143:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13178:9:32","nodeType":"YulIdentifier","src":"13178:9:32"},{"name":"offset","nativeSrc":"13189:6:32","nodeType":"YulIdentifier","src":"13189:6:32"}],"functionName":{"name":"add","nativeSrc":"13174:3:32","nodeType":"YulIdentifier","src":"13174:3:32"},"nativeSrc":"13174:22:32","nodeType":"YulFunctionCall","src":"13174:22:32"},{"name":"dataEnd","nativeSrc":"13198:7:32","nodeType":"YulIdentifier","src":"13198:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13153:20:32","nodeType":"YulIdentifier","src":"13153:20:32"},"nativeSrc":"13153:53:32","nodeType":"YulFunctionCall","src":"13153:53:32"},"variableNames":[{"name":"value3","nativeSrc":"13143:6:32","nodeType":"YulIdentifier","src":"13143:6:32"}]}]},{"nativeSrc":"13226:119:32","nodeType":"YulBlock","src":"13226:119:32","statements":[{"nativeSrc":"13241:17:32","nodeType":"YulVariableDeclaration","src":"13241:17:32","value":{"kind":"number","nativeSrc":"13255:3:32","nodeType":"YulLiteral","src":"13255:3:32","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"13245:6:32","nodeType":"YulTypedName","src":"13245:6:32","type":""}]},{"nativeSrc":"13272:63:32","nodeType":"YulAssignment","src":"13272:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13307:9:32","nodeType":"YulIdentifier","src":"13307:9:32"},{"name":"offset","nativeSrc":"13318:6:32","nodeType":"YulIdentifier","src":"13318:6:32"}],"functionName":{"name":"add","nativeSrc":"13303:3:32","nodeType":"YulIdentifier","src":"13303:3:32"},"nativeSrc":"13303:22:32","nodeType":"YulFunctionCall","src":"13303:22:32"},{"name":"dataEnd","nativeSrc":"13327:7:32","nodeType":"YulIdentifier","src":"13327:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13282:20:32","nodeType":"YulIdentifier","src":"13282:20:32"},"nativeSrc":"13282:53:32","nodeType":"YulFunctionCall","src":"13282:53:32"},"variableNames":[{"name":"value4","nativeSrc":"13272:6:32","nodeType":"YulIdentifier","src":"13272:6:32"}]}]},{"nativeSrc":"13355:119:32","nodeType":"YulBlock","src":"13355:119:32","statements":[{"nativeSrc":"13370:17:32","nodeType":"YulVariableDeclaration","src":"13370:17:32","value":{"kind":"number","nativeSrc":"13384:3:32","nodeType":"YulLiteral","src":"13384:3:32","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"13374:6:32","nodeType":"YulTypedName","src":"13374:6:32","type":""}]},{"nativeSrc":"13401:63:32","nodeType":"YulAssignment","src":"13401:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13436:9:32","nodeType":"YulIdentifier","src":"13436:9:32"},{"name":"offset","nativeSrc":"13447:6:32","nodeType":"YulIdentifier","src":"13447:6:32"}],"functionName":{"name":"add","nativeSrc":"13432:3:32","nodeType":"YulIdentifier","src":"13432:3:32"},"nativeSrc":"13432:22:32","nodeType":"YulFunctionCall","src":"13432:22:32"},{"name":"dataEnd","nativeSrc":"13456:7:32","nodeType":"YulIdentifier","src":"13456:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13411:20:32","nodeType":"YulIdentifier","src":"13411:20:32"},"nativeSrc":"13411:53:32","nodeType":"YulFunctionCall","src":"13411:53:32"},"variableNames":[{"name":"value5","nativeSrc":"13401:6:32","nodeType":"YulIdentifier","src":"13401:6:32"}]}]},{"nativeSrc":"13484:119:32","nodeType":"YulBlock","src":"13484:119:32","statements":[{"nativeSrc":"13499:17:32","nodeType":"YulVariableDeclaration","src":"13499:17:32","value":{"kind":"number","nativeSrc":"13513:3:32","nodeType":"YulLiteral","src":"13513:3:32","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"13503:6:32","nodeType":"YulTypedName","src":"13503:6:32","type":""}]},{"nativeSrc":"13530:63:32","nodeType":"YulAssignment","src":"13530:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13565:9:32","nodeType":"YulIdentifier","src":"13565:9:32"},{"name":"offset","nativeSrc":"13576:6:32","nodeType":"YulIdentifier","src":"13576:6:32"}],"functionName":{"name":"add","nativeSrc":"13561:3:32","nodeType":"YulIdentifier","src":"13561:3:32"},"nativeSrc":"13561:22:32","nodeType":"YulFunctionCall","src":"13561:22:32"},{"name":"dataEnd","nativeSrc":"13585:7:32","nodeType":"YulIdentifier","src":"13585:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13540:20:32","nodeType":"YulIdentifier","src":"13540:20:32"},"nativeSrc":"13540:53:32","nodeType":"YulFunctionCall","src":"13540:53:32"},"variableNames":[{"name":"value6","nativeSrc":"13530:6:32","nodeType":"YulIdentifier","src":"13530:6:32"}]}]},{"nativeSrc":"13613:119:32","nodeType":"YulBlock","src":"13613:119:32","statements":[{"nativeSrc":"13628:17:32","nodeType":"YulVariableDeclaration","src":"13628:17:32","value":{"kind":"number","nativeSrc":"13642:3:32","nodeType":"YulLiteral","src":"13642:3:32","type":"","value":"224"},"variables":[{"name":"offset","nativeSrc":"13632:6:32","nodeType":"YulTypedName","src":"13632:6:32","type":""}]},{"nativeSrc":"13659:63:32","nodeType":"YulAssignment","src":"13659:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13694:9:32","nodeType":"YulIdentifier","src":"13694:9:32"},{"name":"offset","nativeSrc":"13705:6:32","nodeType":"YulIdentifier","src":"13705:6:32"}],"functionName":{"name":"add","nativeSrc":"13690:3:32","nodeType":"YulIdentifier","src":"13690:3:32"},"nativeSrc":"13690:22:32","nodeType":"YulFunctionCall","src":"13690:22:32"},{"name":"dataEnd","nativeSrc":"13714:7:32","nodeType":"YulIdentifier","src":"13714:7:32"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"13669:20:32","nodeType":"YulIdentifier","src":"13669:20:32"},"nativeSrc":"13669:53:32","nodeType":"YulFunctionCall","src":"13669:53:32"},"variableNames":[{"name":"value7","nativeSrc":"13659:6:32","nodeType":"YulIdentifier","src":"13659:6:32"}]}]}]},"name":"abi_decode_tuple_t_enum$_PhaseType_$8454t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bytes32","nativeSrc":"12362:1377:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12475:9:32","nodeType":"YulTypedName","src":"12475:9:32","type":""},{"name":"dataEnd","nativeSrc":"12486:7:32","nodeType":"YulTypedName","src":"12486:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12498:6:32","nodeType":"YulTypedName","src":"12498:6:32","type":""},{"name":"value1","nativeSrc":"12506:6:32","nodeType":"YulTypedName","src":"12506:6:32","type":""},{"name":"value2","nativeSrc":"12514:6:32","nodeType":"YulTypedName","src":"12514:6:32","type":""},{"name":"value3","nativeSrc":"12522:6:32","nodeType":"YulTypedName","src":"12522:6:32","type":""},{"name":"value4","nativeSrc":"12530:6:32","nodeType":"YulTypedName","src":"12530:6:32","type":""},{"name":"value5","nativeSrc":"12538:6:32","nodeType":"YulTypedName","src":"12538:6:32","type":""},{"name":"value6","nativeSrc":"12546:6:32","nodeType":"YulTypedName","src":"12546:6:32","type":""},{"name":"value7","nativeSrc":"12554:6:32","nodeType":"YulTypedName","src":"12554:6:32","type":""}],"src":"12362:1377:32"},{"body":{"nativeSrc":"13789:105:32","nodeType":"YulBlock","src":"13789:105:32","statements":[{"nativeSrc":"13799:89:32","nodeType":"YulAssignment","src":"13799:89:32","value":{"arguments":[{"name":"value","nativeSrc":"13814:5:32","nodeType":"YulIdentifier","src":"13814:5:32"},{"kind":"number","nativeSrc":"13821:66:32","nodeType":"YulLiteral","src":"13821:66:32","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"13810:3:32","nodeType":"YulIdentifier","src":"13810:3:32"},"nativeSrc":"13810:78:32","nodeType":"YulFunctionCall","src":"13810:78:32"},"variableNames":[{"name":"cleaned","nativeSrc":"13799:7:32","nodeType":"YulIdentifier","src":"13799:7:32"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"13745:149:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13771:5:32","nodeType":"YulTypedName","src":"13771:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"13781:7:32","nodeType":"YulTypedName","src":"13781:7:32","type":""}],"src":"13745:149:32"},{"body":{"nativeSrc":"13963:52:32","nodeType":"YulBlock","src":"13963:52:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13980:3:32","nodeType":"YulIdentifier","src":"13980:3:32"},{"arguments":[{"name":"value","nativeSrc":"14002:5:32","nodeType":"YulIdentifier","src":"14002:5:32"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"13985:16:32","nodeType":"YulIdentifier","src":"13985:16:32"},"nativeSrc":"13985:23:32","nodeType":"YulFunctionCall","src":"13985:23:32"}],"functionName":{"name":"mstore","nativeSrc":"13973:6:32","nodeType":"YulIdentifier","src":"13973:6:32"},"nativeSrc":"13973:36:32","nodeType":"YulFunctionCall","src":"13973:36:32"},"nativeSrc":"13973:36:32","nodeType":"YulExpressionStatement","src":"13973:36:32"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"13900:115:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13951:5:32","nodeType":"YulTypedName","src":"13951:5:32","type":""},{"name":"pos","nativeSrc":"13958:3:32","nodeType":"YulTypedName","src":"13958:3:32","type":""}],"src":"13900:115:32"},{"body":{"nativeSrc":"14095:40:32","nodeType":"YulBlock","src":"14095:40:32","statements":[{"nativeSrc":"14106:22:32","nodeType":"YulAssignment","src":"14106:22:32","value":{"arguments":[{"name":"value","nativeSrc":"14122:5:32","nodeType":"YulIdentifier","src":"14122:5:32"}],"functionName":{"name":"mload","nativeSrc":"14116:5:32","nodeType":"YulIdentifier","src":"14116:5:32"},"nativeSrc":"14116:12:32","nodeType":"YulFunctionCall","src":"14116:12:32"},"variableNames":[{"name":"length","nativeSrc":"14106:6:32","nodeType":"YulIdentifier","src":"14106:6:32"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14021:114:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14078:5:32","nodeType":"YulTypedName","src":"14078:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"14088:6:32","nodeType":"YulTypedName","src":"14088:6:32","type":""}],"src":"14021:114:32"},{"body":{"nativeSrc":"14252:73:32","nodeType":"YulBlock","src":"14252:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14269:3:32","nodeType":"YulIdentifier","src":"14269:3:32"},{"name":"length","nativeSrc":"14274:6:32","nodeType":"YulIdentifier","src":"14274:6:32"}],"functionName":{"name":"mstore","nativeSrc":"14262:6:32","nodeType":"YulIdentifier","src":"14262:6:32"},"nativeSrc":"14262:19:32","nodeType":"YulFunctionCall","src":"14262:19:32"},"nativeSrc":"14262:19:32","nodeType":"YulExpressionStatement","src":"14262:19:32"},{"nativeSrc":"14290:29:32","nodeType":"YulAssignment","src":"14290:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"14309:3:32","nodeType":"YulIdentifier","src":"14309:3:32"},{"kind":"number","nativeSrc":"14314:4:32","nodeType":"YulLiteral","src":"14314:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14305:3:32","nodeType":"YulIdentifier","src":"14305:3:32"},"nativeSrc":"14305:14:32","nodeType":"YulFunctionCall","src":"14305:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"14290:11:32","nodeType":"YulIdentifier","src":"14290:11:32"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"14141:184:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14224:3:32","nodeType":"YulTypedName","src":"14224:3:32","type":""},{"name":"length","nativeSrc":"14229:6:32","nodeType":"YulTypedName","src":"14229:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14240:11:32","nodeType":"YulTypedName","src":"14240:11:32","type":""}],"src":"14141:184:32"},{"body":{"nativeSrc":"14403:60:32","nodeType":"YulBlock","src":"14403:60:32","statements":[{"nativeSrc":"14413:11:32","nodeType":"YulAssignment","src":"14413:11:32","value":{"name":"ptr","nativeSrc":"14421:3:32","nodeType":"YulIdentifier","src":"14421:3:32"},"variableNames":[{"name":"data","nativeSrc":"14413:4:32","nodeType":"YulIdentifier","src":"14413:4:32"}]},{"nativeSrc":"14434:22:32","nodeType":"YulAssignment","src":"14434:22:32","value":{"arguments":[{"name":"ptr","nativeSrc":"14446:3:32","nodeType":"YulIdentifier","src":"14446:3:32"},{"kind":"number","nativeSrc":"14451:4:32","nodeType":"YulLiteral","src":"14451:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14442:3:32","nodeType":"YulIdentifier","src":"14442:3:32"},"nativeSrc":"14442:14:32","nodeType":"YulFunctionCall","src":"14442:14:32"},"variableNames":[{"name":"data","nativeSrc":"14434:4:32","nodeType":"YulIdentifier","src":"14434:4:32"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14331:132:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14390:3:32","nodeType":"YulTypedName","src":"14390:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"14398:4:32","nodeType":"YulTypedName","src":"14398:4:32","type":""}],"src":"14331:132:32"},{"body":{"nativeSrc":"14549:99:32","nodeType":"YulBlock","src":"14549:99:32","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"14593:6:32","nodeType":"YulIdentifier","src":"14593:6:32"},{"name":"pos","nativeSrc":"14601:3:32","nodeType":"YulIdentifier","src":"14601:3:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"14559:33:32","nodeType":"YulIdentifier","src":"14559:33:32"},"nativeSrc":"14559:46:32","nodeType":"YulFunctionCall","src":"14559:46:32"},"nativeSrc":"14559:46:32","nodeType":"YulExpressionStatement","src":"14559:46:32"},{"nativeSrc":"14614:28:32","nodeType":"YulAssignment","src":"14614:28:32","value":{"arguments":[{"name":"pos","nativeSrc":"14632:3:32","nodeType":"YulIdentifier","src":"14632:3:32"},{"kind":"number","nativeSrc":"14637:4:32","nodeType":"YulLiteral","src":"14637:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14628:3:32","nodeType":"YulIdentifier","src":"14628:3:32"},"nativeSrc":"14628:14:32","nodeType":"YulFunctionCall","src":"14628:14:32"},"variableNames":[{"name":"updatedPos","nativeSrc":"14614:10:32","nodeType":"YulIdentifier","src":"14614:10:32"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"14469:179:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"14522:6:32","nodeType":"YulTypedName","src":"14522:6:32","type":""},{"name":"pos","nativeSrc":"14530:3:32","nodeType":"YulTypedName","src":"14530:3:32","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"14538:10:32","nodeType":"YulTypedName","src":"14538:10:32","type":""}],"src":"14469:179:32"},{"body":{"nativeSrc":"14729:38:32","nodeType":"YulBlock","src":"14729:38:32","statements":[{"nativeSrc":"14739:22:32","nodeType":"YulAssignment","src":"14739:22:32","value":{"arguments":[{"name":"ptr","nativeSrc":"14751:3:32","nodeType":"YulIdentifier","src":"14751:3:32"},{"kind":"number","nativeSrc":"14756:4:32","nodeType":"YulLiteral","src":"14756:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14747:3:32","nodeType":"YulIdentifier","src":"14747:3:32"},"nativeSrc":"14747:14:32","nodeType":"YulFunctionCall","src":"14747:14:32"},"variableNames":[{"name":"next","nativeSrc":"14739:4:32","nodeType":"YulIdentifier","src":"14739:4:32"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14654:113:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14716:3:32","nodeType":"YulTypedName","src":"14716:3:32","type":""}],"returnVariables":[{"name":"next","nativeSrc":"14724:4:32","nodeType":"YulTypedName","src":"14724:4:32","type":""}],"src":"14654:113:32"},{"body":{"nativeSrc":"14927:608:32","nodeType":"YulBlock","src":"14927:608:32","statements":[{"nativeSrc":"14937:68:32","nodeType":"YulVariableDeclaration","src":"14937:68:32","value":{"arguments":[{"name":"value","nativeSrc":"14999:5:32","nodeType":"YulIdentifier","src":"14999:5:32"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14951:47:32","nodeType":"YulIdentifier","src":"14951:47:32"},"nativeSrc":"14951:54:32","nodeType":"YulFunctionCall","src":"14951:54:32"},"variables":[{"name":"length","nativeSrc":"14941:6:32","nodeType":"YulTypedName","src":"14941:6:32","type":""}]},{"nativeSrc":"15014:93:32","nodeType":"YulAssignment","src":"15014:93:32","value":{"arguments":[{"name":"pos","nativeSrc":"15095:3:32","nodeType":"YulIdentifier","src":"15095:3:32"},{"name":"length","nativeSrc":"15100:6:32","nodeType":"YulIdentifier","src":"15100:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"15021:73:32","nodeType":"YulIdentifier","src":"15021:73:32"},"nativeSrc":"15021:86:32","nodeType":"YulFunctionCall","src":"15021:86:32"},"variableNames":[{"name":"pos","nativeSrc":"15014:3:32","nodeType":"YulIdentifier","src":"15014:3:32"}]},{"nativeSrc":"15116:71:32","nodeType":"YulVariableDeclaration","src":"15116:71:32","value":{"arguments":[{"name":"value","nativeSrc":"15181:5:32","nodeType":"YulIdentifier","src":"15181:5:32"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"15131:49:32","nodeType":"YulIdentifier","src":"15131:49:32"},"nativeSrc":"15131:56:32","nodeType":"YulFunctionCall","src":"15131:56:32"},"variables":[{"name":"baseRef","nativeSrc":"15120:7:32","nodeType":"YulTypedName","src":"15120:7:32","type":""}]},{"nativeSrc":"15196:21:32","nodeType":"YulVariableDeclaration","src":"15196:21:32","value":{"name":"baseRef","nativeSrc":"15210:7:32","nodeType":"YulIdentifier","src":"15210:7:32"},"variables":[{"name":"srcPtr","nativeSrc":"15200:6:32","nodeType":"YulTypedName","src":"15200:6:32","type":""}]},{"body":{"nativeSrc":"15286:224:32","nodeType":"YulBlock","src":"15286:224:32","statements":[{"nativeSrc":"15300:34:32","nodeType":"YulVariableDeclaration","src":"15300:34:32","value":{"arguments":[{"name":"srcPtr","nativeSrc":"15327:6:32","nodeType":"YulIdentifier","src":"15327:6:32"}],"functionName":{"name":"mload","nativeSrc":"15321:5:32","nodeType":"YulIdentifier","src":"15321:5:32"},"nativeSrc":"15321:13:32","nodeType":"YulFunctionCall","src":"15321:13:32"},"variables":[{"name":"elementValue0","nativeSrc":"15304:13:32","nodeType":"YulTypedName","src":"15304:13:32","type":""}]},{"nativeSrc":"15347:70:32","nodeType":"YulAssignment","src":"15347:70:32","value":{"arguments":[{"name":"elementValue0","nativeSrc":"15398:13:32","nodeType":"YulIdentifier","src":"15398:13:32"},{"name":"pos","nativeSrc":"15413:3:32","nodeType":"YulIdentifier","src":"15413:3:32"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"15354:43:32","nodeType":"YulIdentifier","src":"15354:43:32"},"nativeSrc":"15354:63:32","nodeType":"YulFunctionCall","src":"15354:63:32"},"variableNames":[{"name":"pos","nativeSrc":"15347:3:32","nodeType":"YulIdentifier","src":"15347:3:32"}]},{"nativeSrc":"15430:70:32","nodeType":"YulAssignment","src":"15430:70:32","value":{"arguments":[{"name":"srcPtr","nativeSrc":"15493:6:32","nodeType":"YulIdentifier","src":"15493:6:32"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"15440:52:32","nodeType":"YulIdentifier","src":"15440:52:32"},"nativeSrc":"15440:60:32","nodeType":"YulFunctionCall","src":"15440:60:32"},"variableNames":[{"name":"srcPtr","nativeSrc":"15430:6:32","nodeType":"YulIdentifier","src":"15430:6:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"15248:1:32","nodeType":"YulIdentifier","src":"15248:1:32"},{"name":"length","nativeSrc":"15251:6:32","nodeType":"YulIdentifier","src":"15251:6:32"}],"functionName":{"name":"lt","nativeSrc":"15245:2:32","nodeType":"YulIdentifier","src":"15245:2:32"},"nativeSrc":"15245:13:32","nodeType":"YulFunctionCall","src":"15245:13:32"},"nativeSrc":"15226:284:32","nodeType":"YulForLoop","post":{"nativeSrc":"15259:18:32","nodeType":"YulBlock","src":"15259:18:32","statements":[{"nativeSrc":"15261:14:32","nodeType":"YulAssignment","src":"15261:14:32","value":{"arguments":[{"name":"i","nativeSrc":"15270:1:32","nodeType":"YulIdentifier","src":"15270:1:32"},{"kind":"number","nativeSrc":"15273:1:32","nodeType":"YulLiteral","src":"15273:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15266:3:32","nodeType":"YulIdentifier","src":"15266:3:32"},"nativeSrc":"15266:9:32","nodeType":"YulFunctionCall","src":"15266:9:32"},"variableNames":[{"name":"i","nativeSrc":"15261:1:32","nodeType":"YulIdentifier","src":"15261:1:32"}]}]},"pre":{"nativeSrc":"15230:14:32","nodeType":"YulBlock","src":"15230:14:32","statements":[{"nativeSrc":"15232:10:32","nodeType":"YulVariableDeclaration","src":"15232:10:32","value":{"kind":"number","nativeSrc":"15241:1:32","nodeType":"YulLiteral","src":"15241:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"15236:1:32","nodeType":"YulTypedName","src":"15236:1:32","type":""}]}]},"src":"15226:284:32"},{"nativeSrc":"15519:10:32","nodeType":"YulAssignment","src":"15519:10:32","value":{"name":"pos","nativeSrc":"15526:3:32","nodeType":"YulIdentifier","src":"15526:3:32"},"variableNames":[{"name":"end","nativeSrc":"15519:3:32","nodeType":"YulIdentifier","src":"15519:3:32"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"14803:732:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14906:5:32","nodeType":"YulTypedName","src":"14906:5:32","type":""},{"name":"pos","nativeSrc":"14913:3:32","nodeType":"YulTypedName","src":"14913:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14922:3:32","nodeType":"YulTypedName","src":"14922:3:32","type":""}],"src":"14803:732:32"},{"body":{"nativeSrc":"15895:861:32","nodeType":"YulBlock","src":"15895:861:32","statements":[{"nativeSrc":"15905:27:32","nodeType":"YulAssignment","src":"15905:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"15917:9:32","nodeType":"YulIdentifier","src":"15917:9:32"},{"kind":"number","nativeSrc":"15928:3:32","nodeType":"YulLiteral","src":"15928:3:32","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"15913:3:32","nodeType":"YulIdentifier","src":"15913:3:32"},"nativeSrc":"15913:19:32","nodeType":"YulFunctionCall","src":"15913:19:32"},"variableNames":[{"name":"tail","nativeSrc":"15905:4:32","nodeType":"YulIdentifier","src":"15905:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15984:6:32","nodeType":"YulIdentifier","src":"15984:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"15997:9:32","nodeType":"YulIdentifier","src":"15997:9:32"},{"kind":"number","nativeSrc":"16008:1:32","nodeType":"YulLiteral","src":"16008:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15993:3:32","nodeType":"YulIdentifier","src":"15993:3:32"},"nativeSrc":"15993:17:32","nodeType":"YulFunctionCall","src":"15993:17:32"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"15942:41:32","nodeType":"YulIdentifier","src":"15942:41:32"},"nativeSrc":"15942:69:32","nodeType":"YulFunctionCall","src":"15942:69:32"},"nativeSrc":"15942:69:32","nodeType":"YulExpressionStatement","src":"15942:69:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16032:9:32","nodeType":"YulIdentifier","src":"16032:9:32"},{"kind":"number","nativeSrc":"16043:2:32","nodeType":"YulLiteral","src":"16043:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16028:3:32","nodeType":"YulIdentifier","src":"16028:3:32"},"nativeSrc":"16028:18:32","nodeType":"YulFunctionCall","src":"16028:18:32"},{"arguments":[{"name":"tail","nativeSrc":"16052:4:32","nodeType":"YulIdentifier","src":"16052:4:32"},{"name":"headStart","nativeSrc":"16058:9:32","nodeType":"YulIdentifier","src":"16058:9:32"}],"functionName":{"name":"sub","nativeSrc":"16048:3:32","nodeType":"YulIdentifier","src":"16048:3:32"},"nativeSrc":"16048:20:32","nodeType":"YulFunctionCall","src":"16048:20:32"}],"functionName":{"name":"mstore","nativeSrc":"16021:6:32","nodeType":"YulIdentifier","src":"16021:6:32"},"nativeSrc":"16021:48:32","nodeType":"YulFunctionCall","src":"16021:48:32"},"nativeSrc":"16021:48:32","nodeType":"YulExpressionStatement","src":"16021:48:32"},{"nativeSrc":"16078:86:32","nodeType":"YulAssignment","src":"16078:86:32","value":{"arguments":[{"name":"value1","nativeSrc":"16150:6:32","nodeType":"YulIdentifier","src":"16150:6:32"},{"name":"tail","nativeSrc":"16159:4:32","nodeType":"YulIdentifier","src":"16159:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"16086:63:32","nodeType":"YulIdentifier","src":"16086:63:32"},"nativeSrc":"16086:78:32","nodeType":"YulFunctionCall","src":"16086:78:32"},"variableNames":[{"name":"tail","nativeSrc":"16078:4:32","nodeType":"YulIdentifier","src":"16078:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16185:9:32","nodeType":"YulIdentifier","src":"16185:9:32"},{"kind":"number","nativeSrc":"16196:2:32","nodeType":"YulLiteral","src":"16196:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16181:3:32","nodeType":"YulIdentifier","src":"16181:3:32"},"nativeSrc":"16181:18:32","nodeType":"YulFunctionCall","src":"16181:18:32"},{"arguments":[{"name":"tail","nativeSrc":"16205:4:32","nodeType":"YulIdentifier","src":"16205:4:32"},{"name":"headStart","nativeSrc":"16211:9:32","nodeType":"YulIdentifier","src":"16211:9:32"}],"functionName":{"name":"sub","nativeSrc":"16201:3:32","nodeType":"YulIdentifier","src":"16201:3:32"},"nativeSrc":"16201:20:32","nodeType":"YulFunctionCall","src":"16201:20:32"}],"functionName":{"name":"mstore","nativeSrc":"16174:6:32","nodeType":"YulIdentifier","src":"16174:6:32"},"nativeSrc":"16174:48:32","nodeType":"YulFunctionCall","src":"16174:48:32"},"nativeSrc":"16174:48:32","nodeType":"YulExpressionStatement","src":"16174:48:32"},{"nativeSrc":"16231:86:32","nodeType":"YulAssignment","src":"16231:86:32","value":{"arguments":[{"name":"value2","nativeSrc":"16303:6:32","nodeType":"YulIdentifier","src":"16303:6:32"},{"name":"tail","nativeSrc":"16312:4:32","nodeType":"YulIdentifier","src":"16312:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"16239:63:32","nodeType":"YulIdentifier","src":"16239:63:32"},"nativeSrc":"16239:78:32","nodeType":"YulFunctionCall","src":"16239:78:32"},"variableNames":[{"name":"tail","nativeSrc":"16231:4:32","nodeType":"YulIdentifier","src":"16231:4:32"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"16371:6:32","nodeType":"YulIdentifier","src":"16371:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"16384:9:32","nodeType":"YulIdentifier","src":"16384:9:32"},{"kind":"number","nativeSrc":"16395:2:32","nodeType":"YulLiteral","src":"16395:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16380:3:32","nodeType":"YulIdentifier","src":"16380:3:32"},"nativeSrc":"16380:18:32","nodeType":"YulFunctionCall","src":"16380:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16327:43:32","nodeType":"YulIdentifier","src":"16327:43:32"},"nativeSrc":"16327:72:32","nodeType":"YulFunctionCall","src":"16327:72:32"},"nativeSrc":"16327:72:32","nodeType":"YulExpressionStatement","src":"16327:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"16453:6:32","nodeType":"YulIdentifier","src":"16453:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"16466:9:32","nodeType":"YulIdentifier","src":"16466:9:32"},{"kind":"number","nativeSrc":"16477:3:32","nodeType":"YulLiteral","src":"16477:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16462:3:32","nodeType":"YulIdentifier","src":"16462:3:32"},"nativeSrc":"16462:19:32","nodeType":"YulFunctionCall","src":"16462:19:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16409:43:32","nodeType":"YulIdentifier","src":"16409:43:32"},"nativeSrc":"16409:73:32","nodeType":"YulFunctionCall","src":"16409:73:32"},"nativeSrc":"16409:73:32","nodeType":"YulExpressionStatement","src":"16409:73:32"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"16536:6:32","nodeType":"YulIdentifier","src":"16536:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"16549:9:32","nodeType":"YulIdentifier","src":"16549:9:32"},{"kind":"number","nativeSrc":"16560:3:32","nodeType":"YulLiteral","src":"16560:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"16545:3:32","nodeType":"YulIdentifier","src":"16545:3:32"},"nativeSrc":"16545:19:32","nodeType":"YulFunctionCall","src":"16545:19:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"16492:43:32","nodeType":"YulIdentifier","src":"16492:43:32"},"nativeSrc":"16492:73:32","nodeType":"YulFunctionCall","src":"16492:73:32"},"nativeSrc":"16492:73:32","nodeType":"YulExpressionStatement","src":"16492:73:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16586:9:32","nodeType":"YulIdentifier","src":"16586:9:32"},{"kind":"number","nativeSrc":"16597:3:32","nodeType":"YulLiteral","src":"16597:3:32","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"16582:3:32","nodeType":"YulIdentifier","src":"16582:3:32"},"nativeSrc":"16582:19:32","nodeType":"YulFunctionCall","src":"16582:19:32"},{"arguments":[{"name":"tail","nativeSrc":"16607:4:32","nodeType":"YulIdentifier","src":"16607:4:32"},{"name":"headStart","nativeSrc":"16613:9:32","nodeType":"YulIdentifier","src":"16613:9:32"}],"functionName":{"name":"sub","nativeSrc":"16603:3:32","nodeType":"YulIdentifier","src":"16603:3:32"},"nativeSrc":"16603:20:32","nodeType":"YulFunctionCall","src":"16603:20:32"}],"functionName":{"name":"mstore","nativeSrc":"16575:6:32","nodeType":"YulIdentifier","src":"16575:6:32"},"nativeSrc":"16575:49:32","nodeType":"YulFunctionCall","src":"16575:49:32"},"nativeSrc":"16575:49:32","nodeType":"YulExpressionStatement","src":"16575:49:32"},{"nativeSrc":"16633:116:32","nodeType":"YulAssignment","src":"16633:116:32","value":{"arguments":[{"name":"value6","nativeSrc":"16735:6:32","nodeType":"YulIdentifier","src":"16735:6:32"},{"name":"tail","nativeSrc":"16744:4:32","nodeType":"YulIdentifier","src":"16744:4:32"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"16641:93:32","nodeType":"YulIdentifier","src":"16641:93:32"},"nativeSrc":"16641:108:32","nodeType":"YulFunctionCall","src":"16641:108:32"},"variableNames":[{"name":"tail","nativeSrc":"16633:4:32","nodeType":"YulIdentifier","src":"16633:4:32"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"15541:1215:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15819:9:32","nodeType":"YulTypedName","src":"15819:9:32","type":""},{"name":"value6","nativeSrc":"15831:6:32","nodeType":"YulTypedName","src":"15831:6:32","type":""},{"name":"value5","nativeSrc":"15839:6:32","nodeType":"YulTypedName","src":"15839:6:32","type":""},{"name":"value4","nativeSrc":"15847:6:32","nodeType":"YulTypedName","src":"15847:6:32","type":""},{"name":"value3","nativeSrc":"15855:6:32","nodeType":"YulTypedName","src":"15855:6:32","type":""},{"name":"value2","nativeSrc":"15863:6:32","nodeType":"YulTypedName","src":"15863:6:32","type":""},{"name":"value1","nativeSrc":"15871:6:32","nodeType":"YulTypedName","src":"15871:6:32","type":""},{"name":"value0","nativeSrc":"15879:6:32","nodeType":"YulTypedName","src":"15879:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15890:4:32","nodeType":"YulTypedName","src":"15890:4:32","type":""}],"src":"15541:1215:32"},{"body":{"nativeSrc":"16802:76:32","nodeType":"YulBlock","src":"16802:76:32","statements":[{"body":{"nativeSrc":"16856:16:32","nodeType":"YulBlock","src":"16856:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16865:1:32","nodeType":"YulLiteral","src":"16865:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"16868:1:32","nodeType":"YulLiteral","src":"16868:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16858:6:32","nodeType":"YulIdentifier","src":"16858:6:32"},"nativeSrc":"16858:12:32","nodeType":"YulFunctionCall","src":"16858:12:32"},"nativeSrc":"16858:12:32","nodeType":"YulExpressionStatement","src":"16858:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16825:5:32","nodeType":"YulIdentifier","src":"16825:5:32"},{"arguments":[{"name":"value","nativeSrc":"16847:5:32","nodeType":"YulIdentifier","src":"16847:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"16832:14:32","nodeType":"YulIdentifier","src":"16832:14:32"},"nativeSrc":"16832:21:32","nodeType":"YulFunctionCall","src":"16832:21:32"}],"functionName":{"name":"eq","nativeSrc":"16822:2:32","nodeType":"YulIdentifier","src":"16822:2:32"},"nativeSrc":"16822:32:32","nodeType":"YulFunctionCall","src":"16822:32:32"}],"functionName":{"name":"iszero","nativeSrc":"16815:6:32","nodeType":"YulIdentifier","src":"16815:6:32"},"nativeSrc":"16815:40:32","nodeType":"YulFunctionCall","src":"16815:40:32"},"nativeSrc":"16812:60:32","nodeType":"YulIf","src":"16812:60:32"}]},"name":"validator_revert_t_bool","nativeSrc":"16762:116:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16795:5:32","nodeType":"YulTypedName","src":"16795:5:32","type":""}],"src":"16762:116:32"},{"body":{"nativeSrc":"16933:84:32","nodeType":"YulBlock","src":"16933:84:32","statements":[{"nativeSrc":"16943:29:32","nodeType":"YulAssignment","src":"16943:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"16965:6:32","nodeType":"YulIdentifier","src":"16965:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"16952:12:32","nodeType":"YulIdentifier","src":"16952:12:32"},"nativeSrc":"16952:20:32","nodeType":"YulFunctionCall","src":"16952:20:32"},"variableNames":[{"name":"value","nativeSrc":"16943:5:32","nodeType":"YulIdentifier","src":"16943:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17005:5:32","nodeType":"YulIdentifier","src":"17005:5:32"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"16981:23:32","nodeType":"YulIdentifier","src":"16981:23:32"},"nativeSrc":"16981:30:32","nodeType":"YulFunctionCall","src":"16981:30:32"},"nativeSrc":"16981:30:32","nodeType":"YulExpressionStatement","src":"16981:30:32"}]},"name":"abi_decode_t_bool","nativeSrc":"16884:133:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16911:6:32","nodeType":"YulTypedName","src":"16911:6:32","type":""},{"name":"end","nativeSrc":"16919:3:32","nodeType":"YulTypedName","src":"16919:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16927:5:32","nodeType":"YulTypedName","src":"16927:5:32","type":""}],"src":"16884:133:32"},{"body":{"nativeSrc":"17103:388:32","nodeType":"YulBlock","src":"17103:388:32","statements":[{"body":{"nativeSrc":"17149:83:32","nodeType":"YulBlock","src":"17149:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17151:77:32","nodeType":"YulIdentifier","src":"17151:77:32"},"nativeSrc":"17151:79:32","nodeType":"YulFunctionCall","src":"17151:79:32"},"nativeSrc":"17151:79:32","nodeType":"YulExpressionStatement","src":"17151:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17124:7:32","nodeType":"YulIdentifier","src":"17124:7:32"},{"name":"headStart","nativeSrc":"17133:9:32","nodeType":"YulIdentifier","src":"17133:9:32"}],"functionName":{"name":"sub","nativeSrc":"17120:3:32","nodeType":"YulIdentifier","src":"17120:3:32"},"nativeSrc":"17120:23:32","nodeType":"YulFunctionCall","src":"17120:23:32"},{"kind":"number","nativeSrc":"17145:2:32","nodeType":"YulLiteral","src":"17145:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"17116:3:32","nodeType":"YulIdentifier","src":"17116:3:32"},"nativeSrc":"17116:32:32","nodeType":"YulFunctionCall","src":"17116:32:32"},"nativeSrc":"17113:119:32","nodeType":"YulIf","src":"17113:119:32"},{"nativeSrc":"17242:117:32","nodeType":"YulBlock","src":"17242:117:32","statements":[{"nativeSrc":"17257:15:32","nodeType":"YulVariableDeclaration","src":"17257:15:32","value":{"kind":"number","nativeSrc":"17271:1:32","nodeType":"YulLiteral","src":"17271:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17261:6:32","nodeType":"YulTypedName","src":"17261:6:32","type":""}]},{"nativeSrc":"17286:63:32","nodeType":"YulAssignment","src":"17286:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17321:9:32","nodeType":"YulIdentifier","src":"17321:9:32"},{"name":"offset","nativeSrc":"17332:6:32","nodeType":"YulIdentifier","src":"17332:6:32"}],"functionName":{"name":"add","nativeSrc":"17317:3:32","nodeType":"YulIdentifier","src":"17317:3:32"},"nativeSrc":"17317:22:32","nodeType":"YulFunctionCall","src":"17317:22:32"},{"name":"dataEnd","nativeSrc":"17341:7:32","nodeType":"YulIdentifier","src":"17341:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17296:20:32","nodeType":"YulIdentifier","src":"17296:20:32"},"nativeSrc":"17296:53:32","nodeType":"YulFunctionCall","src":"17296:53:32"},"variableNames":[{"name":"value0","nativeSrc":"17286:6:32","nodeType":"YulIdentifier","src":"17286:6:32"}]}]},{"nativeSrc":"17369:115:32","nodeType":"YulBlock","src":"17369:115:32","statements":[{"nativeSrc":"17384:16:32","nodeType":"YulVariableDeclaration","src":"17384:16:32","value":{"kind":"number","nativeSrc":"17398:2:32","nodeType":"YulLiteral","src":"17398:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"17388:6:32","nodeType":"YulTypedName","src":"17388:6:32","type":""}]},{"nativeSrc":"17414:60:32","nodeType":"YulAssignment","src":"17414:60:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17446:9:32","nodeType":"YulIdentifier","src":"17446:9:32"},{"name":"offset","nativeSrc":"17457:6:32","nodeType":"YulIdentifier","src":"17457:6:32"}],"functionName":{"name":"add","nativeSrc":"17442:3:32","nodeType":"YulIdentifier","src":"17442:3:32"},"nativeSrc":"17442:22:32","nodeType":"YulFunctionCall","src":"17442:22:32"},{"name":"dataEnd","nativeSrc":"17466:7:32","nodeType":"YulIdentifier","src":"17466:7:32"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"17424:17:32","nodeType":"YulIdentifier","src":"17424:17:32"},"nativeSrc":"17424:50:32","nodeType":"YulFunctionCall","src":"17424:50:32"},"variableNames":[{"name":"value1","nativeSrc":"17414:6:32","nodeType":"YulIdentifier","src":"17414:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"17023:468:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17065:9:32","nodeType":"YulTypedName","src":"17065:9:32","type":""},{"name":"dataEnd","nativeSrc":"17076:7:32","nodeType":"YulTypedName","src":"17076:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17088:6:32","nodeType":"YulTypedName","src":"17088:6:32","type":""},{"name":"value1","nativeSrc":"17096:6:32","nodeType":"YulTypedName","src":"17096:6:32","type":""}],"src":"17023:468:32"},{"body":{"nativeSrc":"17713:1307:32","nodeType":"YulBlock","src":"17713:1307:32","statements":[{"body":{"nativeSrc":"17760:83:32","nodeType":"YulBlock","src":"17760:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17762:77:32","nodeType":"YulIdentifier","src":"17762:77:32"},"nativeSrc":"17762:79:32","nodeType":"YulFunctionCall","src":"17762:79:32"},"nativeSrc":"17762:79:32","nodeType":"YulExpressionStatement","src":"17762:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17734:7:32","nodeType":"YulIdentifier","src":"17734:7:32"},{"name":"headStart","nativeSrc":"17743:9:32","nodeType":"YulIdentifier","src":"17743:9:32"}],"functionName":{"name":"sub","nativeSrc":"17730:3:32","nodeType":"YulIdentifier","src":"17730:3:32"},"nativeSrc":"17730:23:32","nodeType":"YulFunctionCall","src":"17730:23:32"},{"kind":"number","nativeSrc":"17755:3:32","nodeType":"YulLiteral","src":"17755:3:32","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"17726:3:32","nodeType":"YulIdentifier","src":"17726:3:32"},"nativeSrc":"17726:33:32","nodeType":"YulFunctionCall","src":"17726:33:32"},"nativeSrc":"17723:120:32","nodeType":"YulIf","src":"17723:120:32"},{"nativeSrc":"17853:117:32","nodeType":"YulBlock","src":"17853:117:32","statements":[{"nativeSrc":"17868:15:32","nodeType":"YulVariableDeclaration","src":"17868:15:32","value":{"kind":"number","nativeSrc":"17882:1:32","nodeType":"YulLiteral","src":"17882:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17872:6:32","nodeType":"YulTypedName","src":"17872:6:32","type":""}]},{"nativeSrc":"17897:63:32","nodeType":"YulAssignment","src":"17897:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17932:9:32","nodeType":"YulIdentifier","src":"17932:9:32"},{"name":"offset","nativeSrc":"17943:6:32","nodeType":"YulIdentifier","src":"17943:6:32"}],"functionName":{"name":"add","nativeSrc":"17928:3:32","nodeType":"YulIdentifier","src":"17928:3:32"},"nativeSrc":"17928:22:32","nodeType":"YulFunctionCall","src":"17928:22:32"},{"name":"dataEnd","nativeSrc":"17952:7:32","nodeType":"YulIdentifier","src":"17952:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"17907:20:32","nodeType":"YulIdentifier","src":"17907:20:32"},"nativeSrc":"17907:53:32","nodeType":"YulFunctionCall","src":"17907:53:32"},"variableNames":[{"name":"value0","nativeSrc":"17897:6:32","nodeType":"YulIdentifier","src":"17897:6:32"}]}]},{"nativeSrc":"17980:132:32","nodeType":"YulBlock","src":"17980:132:32","statements":[{"nativeSrc":"17995:16:32","nodeType":"YulVariableDeclaration","src":"17995:16:32","value":{"kind":"number","nativeSrc":"18009:2:32","nodeType":"YulLiteral","src":"18009:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"17999:6:32","nodeType":"YulTypedName","src":"17999:6:32","type":""}]},{"nativeSrc":"18025:77:32","nodeType":"YulAssignment","src":"18025:77:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18074:9:32","nodeType":"YulIdentifier","src":"18074:9:32"},{"name":"offset","nativeSrc":"18085:6:32","nodeType":"YulIdentifier","src":"18085:6:32"}],"functionName":{"name":"add","nativeSrc":"18070:3:32","nodeType":"YulIdentifier","src":"18070:3:32"},"nativeSrc":"18070:22:32","nodeType":"YulFunctionCall","src":"18070:22:32"},{"name":"dataEnd","nativeSrc":"18094:7:32","nodeType":"YulIdentifier","src":"18094:7:32"}],"functionName":{"name":"abi_decode_t_enum$_PhaseType_$8454","nativeSrc":"18035:34:32","nodeType":"YulIdentifier","src":"18035:34:32"},"nativeSrc":"18035:67:32","nodeType":"YulFunctionCall","src":"18035:67:32"},"variableNames":[{"name":"value1","nativeSrc":"18025:6:32","nodeType":"YulIdentifier","src":"18025:6:32"}]}]},{"nativeSrc":"18122:118:32","nodeType":"YulBlock","src":"18122:118:32","statements":[{"nativeSrc":"18137:16:32","nodeType":"YulVariableDeclaration","src":"18137:16:32","value":{"kind":"number","nativeSrc":"18151:2:32","nodeType":"YulLiteral","src":"18151:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"18141:6:32","nodeType":"YulTypedName","src":"18141:6:32","type":""}]},{"nativeSrc":"18167:63:32","nodeType":"YulAssignment","src":"18167:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18202:9:32","nodeType":"YulIdentifier","src":"18202:9:32"},{"name":"offset","nativeSrc":"18213:6:32","nodeType":"YulIdentifier","src":"18213:6:32"}],"functionName":{"name":"add","nativeSrc":"18198:3:32","nodeType":"YulIdentifier","src":"18198:3:32"},"nativeSrc":"18198:22:32","nodeType":"YulFunctionCall","src":"18198:22:32"},{"name":"dataEnd","nativeSrc":"18222:7:32","nodeType":"YulIdentifier","src":"18222:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18177:20:32","nodeType":"YulIdentifier","src":"18177:20:32"},"nativeSrc":"18177:53:32","nodeType":"YulFunctionCall","src":"18177:53:32"},"variableNames":[{"name":"value2","nativeSrc":"18167:6:32","nodeType":"YulIdentifier","src":"18167:6:32"}]}]},{"nativeSrc":"18250:118:32","nodeType":"YulBlock","src":"18250:118:32","statements":[{"nativeSrc":"18265:16:32","nodeType":"YulVariableDeclaration","src":"18265:16:32","value":{"kind":"number","nativeSrc":"18279:2:32","nodeType":"YulLiteral","src":"18279:2:32","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"18269:6:32","nodeType":"YulTypedName","src":"18269:6:32","type":""}]},{"nativeSrc":"18295:63:32","nodeType":"YulAssignment","src":"18295:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18330:9:32","nodeType":"YulIdentifier","src":"18330:9:32"},{"name":"offset","nativeSrc":"18341:6:32","nodeType":"YulIdentifier","src":"18341:6:32"}],"functionName":{"name":"add","nativeSrc":"18326:3:32","nodeType":"YulIdentifier","src":"18326:3:32"},"nativeSrc":"18326:22:32","nodeType":"YulFunctionCall","src":"18326:22:32"},{"name":"dataEnd","nativeSrc":"18350:7:32","nodeType":"YulIdentifier","src":"18350:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18305:20:32","nodeType":"YulIdentifier","src":"18305:20:32"},"nativeSrc":"18305:53:32","nodeType":"YulFunctionCall","src":"18305:53:32"},"variableNames":[{"name":"value3","nativeSrc":"18295:6:32","nodeType":"YulIdentifier","src":"18295:6:32"}]}]},{"nativeSrc":"18378:119:32","nodeType":"YulBlock","src":"18378:119:32","statements":[{"nativeSrc":"18393:17:32","nodeType":"YulVariableDeclaration","src":"18393:17:32","value":{"kind":"number","nativeSrc":"18407:3:32","nodeType":"YulLiteral","src":"18407:3:32","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"18397:6:32","nodeType":"YulTypedName","src":"18397:6:32","type":""}]},{"nativeSrc":"18424:63:32","nodeType":"YulAssignment","src":"18424:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18459:9:32","nodeType":"YulIdentifier","src":"18459:9:32"},{"name":"offset","nativeSrc":"18470:6:32","nodeType":"YulIdentifier","src":"18470:6:32"}],"functionName":{"name":"add","nativeSrc":"18455:3:32","nodeType":"YulIdentifier","src":"18455:3:32"},"nativeSrc":"18455:22:32","nodeType":"YulFunctionCall","src":"18455:22:32"},{"name":"dataEnd","nativeSrc":"18479:7:32","nodeType":"YulIdentifier","src":"18479:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18434:20:32","nodeType":"YulIdentifier","src":"18434:20:32"},"nativeSrc":"18434:53:32","nodeType":"YulFunctionCall","src":"18434:53:32"},"variableNames":[{"name":"value4","nativeSrc":"18424:6:32","nodeType":"YulIdentifier","src":"18424:6:32"}]}]},{"nativeSrc":"18507:119:32","nodeType":"YulBlock","src":"18507:119:32","statements":[{"nativeSrc":"18522:17:32","nodeType":"YulVariableDeclaration","src":"18522:17:32","value":{"kind":"number","nativeSrc":"18536:3:32","nodeType":"YulLiteral","src":"18536:3:32","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"18526:6:32","nodeType":"YulTypedName","src":"18526:6:32","type":""}]},{"nativeSrc":"18553:63:32","nodeType":"YulAssignment","src":"18553:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18588:9:32","nodeType":"YulIdentifier","src":"18588:9:32"},{"name":"offset","nativeSrc":"18599:6:32","nodeType":"YulIdentifier","src":"18599:6:32"}],"functionName":{"name":"add","nativeSrc":"18584:3:32","nodeType":"YulIdentifier","src":"18584:3:32"},"nativeSrc":"18584:22:32","nodeType":"YulFunctionCall","src":"18584:22:32"},{"name":"dataEnd","nativeSrc":"18608:7:32","nodeType":"YulIdentifier","src":"18608:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18563:20:32","nodeType":"YulIdentifier","src":"18563:20:32"},"nativeSrc":"18563:53:32","nodeType":"YulFunctionCall","src":"18563:53:32"},"variableNames":[{"name":"value5","nativeSrc":"18553:6:32","nodeType":"YulIdentifier","src":"18553:6:32"}]}]},{"nativeSrc":"18636:119:32","nodeType":"YulBlock","src":"18636:119:32","statements":[{"nativeSrc":"18651:17:32","nodeType":"YulVariableDeclaration","src":"18651:17:32","value":{"kind":"number","nativeSrc":"18665:3:32","nodeType":"YulLiteral","src":"18665:3:32","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"18655:6:32","nodeType":"YulTypedName","src":"18655:6:32","type":""}]},{"nativeSrc":"18682:63:32","nodeType":"YulAssignment","src":"18682:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18717:9:32","nodeType":"YulIdentifier","src":"18717:9:32"},{"name":"offset","nativeSrc":"18728:6:32","nodeType":"YulIdentifier","src":"18728:6:32"}],"functionName":{"name":"add","nativeSrc":"18713:3:32","nodeType":"YulIdentifier","src":"18713:3:32"},"nativeSrc":"18713:22:32","nodeType":"YulFunctionCall","src":"18713:22:32"},{"name":"dataEnd","nativeSrc":"18737:7:32","nodeType":"YulIdentifier","src":"18737:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18692:20:32","nodeType":"YulIdentifier","src":"18692:20:32"},"nativeSrc":"18692:53:32","nodeType":"YulFunctionCall","src":"18692:53:32"},"variableNames":[{"name":"value6","nativeSrc":"18682:6:32","nodeType":"YulIdentifier","src":"18682:6:32"}]}]},{"nativeSrc":"18765:119:32","nodeType":"YulBlock","src":"18765:119:32","statements":[{"nativeSrc":"18780:17:32","nodeType":"YulVariableDeclaration","src":"18780:17:32","value":{"kind":"number","nativeSrc":"18794:3:32","nodeType":"YulLiteral","src":"18794:3:32","type":"","value":"224"},"variables":[{"name":"offset","nativeSrc":"18784:6:32","nodeType":"YulTypedName","src":"18784:6:32","type":""}]},{"nativeSrc":"18811:63:32","nodeType":"YulAssignment","src":"18811:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18846:9:32","nodeType":"YulIdentifier","src":"18846:9:32"},{"name":"offset","nativeSrc":"18857:6:32","nodeType":"YulIdentifier","src":"18857:6:32"}],"functionName":{"name":"add","nativeSrc":"18842:3:32","nodeType":"YulIdentifier","src":"18842:3:32"},"nativeSrc":"18842:22:32","nodeType":"YulFunctionCall","src":"18842:22:32"},{"name":"dataEnd","nativeSrc":"18866:7:32","nodeType":"YulIdentifier","src":"18866:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18821:20:32","nodeType":"YulIdentifier","src":"18821:20:32"},"nativeSrc":"18821:53:32","nodeType":"YulFunctionCall","src":"18821:53:32"},"variableNames":[{"name":"value7","nativeSrc":"18811:6:32","nodeType":"YulIdentifier","src":"18811:6:32"}]}]},{"nativeSrc":"18894:119:32","nodeType":"YulBlock","src":"18894:119:32","statements":[{"nativeSrc":"18909:17:32","nodeType":"YulVariableDeclaration","src":"18909:17:32","value":{"kind":"number","nativeSrc":"18923:3:32","nodeType":"YulLiteral","src":"18923:3:32","type":"","value":"256"},"variables":[{"name":"offset","nativeSrc":"18913:6:32","nodeType":"YulTypedName","src":"18913:6:32","type":""}]},{"nativeSrc":"18940:63:32","nodeType":"YulAssignment","src":"18940:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18975:9:32","nodeType":"YulIdentifier","src":"18975:9:32"},{"name":"offset","nativeSrc":"18986:6:32","nodeType":"YulIdentifier","src":"18986:6:32"}],"functionName":{"name":"add","nativeSrc":"18971:3:32","nodeType":"YulIdentifier","src":"18971:3:32"},"nativeSrc":"18971:22:32","nodeType":"YulFunctionCall","src":"18971:22:32"},{"name":"dataEnd","nativeSrc":"18995:7:32","nodeType":"YulIdentifier","src":"18995:7:32"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"18950:20:32","nodeType":"YulIdentifier","src":"18950:20:32"},"nativeSrc":"18950:53:32","nodeType":"YulFunctionCall","src":"18950:53:32"},"variableNames":[{"name":"value8","nativeSrc":"18940:6:32","nodeType":"YulIdentifier","src":"18940:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_PhaseType_$8454t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bytes32","nativeSrc":"17497:1523:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17619:9:32","nodeType":"YulTypedName","src":"17619:9:32","type":""},{"name":"dataEnd","nativeSrc":"17630:7:32","nodeType":"YulTypedName","src":"17630:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17642:6:32","nodeType":"YulTypedName","src":"17642:6:32","type":""},{"name":"value1","nativeSrc":"17650:6:32","nodeType":"YulTypedName","src":"17650:6:32","type":""},{"name":"value2","nativeSrc":"17658:6:32","nodeType":"YulTypedName","src":"17658:6:32","type":""},{"name":"value3","nativeSrc":"17666:6:32","nodeType":"YulTypedName","src":"17666:6:32","type":""},{"name":"value4","nativeSrc":"17674:6:32","nodeType":"YulTypedName","src":"17674:6:32","type":""},{"name":"value5","nativeSrc":"17682:6:32","nodeType":"YulTypedName","src":"17682:6:32","type":""},{"name":"value6","nativeSrc":"17690:6:32","nodeType":"YulTypedName","src":"17690:6:32","type":""},{"name":"value7","nativeSrc":"17698:6:32","nodeType":"YulTypedName","src":"17698:6:32","type":""},{"name":"value8","nativeSrc":"17706:6:32","nodeType":"YulTypedName","src":"17706:6:32","type":""}],"src":"17497:1523:32"},{"body":{"nativeSrc":"19115:28:32","nodeType":"YulBlock","src":"19115:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19132:1:32","nodeType":"YulLiteral","src":"19132:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"19135:1:32","nodeType":"YulLiteral","src":"19135:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19125:6:32","nodeType":"YulIdentifier","src":"19125:6:32"},"nativeSrc":"19125:12:32","nodeType":"YulFunctionCall","src":"19125:12:32"},"nativeSrc":"19125:12:32","nodeType":"YulExpressionStatement","src":"19125:12:32"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"19026:117:32","nodeType":"YulFunctionDefinition","src":"19026:117:32"},{"body":{"nativeSrc":"19238:28:32","nodeType":"YulBlock","src":"19238:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19255:1:32","nodeType":"YulLiteral","src":"19255:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"19258:1:32","nodeType":"YulLiteral","src":"19258:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19248:6:32","nodeType":"YulIdentifier","src":"19248:6:32"},"nativeSrc":"19248:12:32","nodeType":"YulFunctionCall","src":"19248:12:32"},"nativeSrc":"19248:12:32","nodeType":"YulExpressionStatement","src":"19248:12:32"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"19149:117:32","nodeType":"YulFunctionDefinition","src":"19149:117:32"},{"body":{"nativeSrc":"19300:152:32","nodeType":"YulBlock","src":"19300:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19317:1:32","nodeType":"YulLiteral","src":"19317:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"19320:77:32","nodeType":"YulLiteral","src":"19320:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19310:6:32","nodeType":"YulIdentifier","src":"19310:6:32"},"nativeSrc":"19310:88:32","nodeType":"YulFunctionCall","src":"19310:88:32"},"nativeSrc":"19310:88:32","nodeType":"YulExpressionStatement","src":"19310:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19414:1:32","nodeType":"YulLiteral","src":"19414:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"19417:4:32","nodeType":"YulLiteral","src":"19417:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"19407:6:32","nodeType":"YulIdentifier","src":"19407:6:32"},"nativeSrc":"19407:15:32","nodeType":"YulFunctionCall","src":"19407:15:32"},"nativeSrc":"19407:15:32","nodeType":"YulExpressionStatement","src":"19407:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19438:1:32","nodeType":"YulLiteral","src":"19438:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"19441:4:32","nodeType":"YulLiteral","src":"19441:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"19431:6:32","nodeType":"YulIdentifier","src":"19431:6:32"},"nativeSrc":"19431:15:32","nodeType":"YulFunctionCall","src":"19431:15:32"},"nativeSrc":"19431:15:32","nodeType":"YulExpressionStatement","src":"19431:15:32"}]},"name":"panic_error_0x41","nativeSrc":"19272:180:32","nodeType":"YulFunctionDefinition","src":"19272:180:32"},{"body":{"nativeSrc":"19501:238:32","nodeType":"YulBlock","src":"19501:238:32","statements":[{"nativeSrc":"19511:58:32","nodeType":"YulVariableDeclaration","src":"19511:58:32","value":{"arguments":[{"name":"memPtr","nativeSrc":"19533:6:32","nodeType":"YulIdentifier","src":"19533:6:32"},{"arguments":[{"name":"size","nativeSrc":"19563:4:32","nodeType":"YulIdentifier","src":"19563:4:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"19541:21:32","nodeType":"YulIdentifier","src":"19541:21:32"},"nativeSrc":"19541:27:32","nodeType":"YulFunctionCall","src":"19541:27:32"}],"functionName":{"name":"add","nativeSrc":"19529:3:32","nodeType":"YulIdentifier","src":"19529:3:32"},"nativeSrc":"19529:40:32","nodeType":"YulFunctionCall","src":"19529:40:32"},"variables":[{"name":"newFreePtr","nativeSrc":"19515:10:32","nodeType":"YulTypedName","src":"19515:10:32","type":""}]},{"body":{"nativeSrc":"19680:22:32","nodeType":"YulBlock","src":"19680:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"19682:16:32","nodeType":"YulIdentifier","src":"19682:16:32"},"nativeSrc":"19682:18:32","nodeType":"YulFunctionCall","src":"19682:18:32"},"nativeSrc":"19682:18:32","nodeType":"YulExpressionStatement","src":"19682:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"19623:10:32","nodeType":"YulIdentifier","src":"19623:10:32"},{"kind":"number","nativeSrc":"19635:18:32","nodeType":"YulLiteral","src":"19635:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19620:2:32","nodeType":"YulIdentifier","src":"19620:2:32"},"nativeSrc":"19620:34:32","nodeType":"YulFunctionCall","src":"19620:34:32"},{"arguments":[{"name":"newFreePtr","nativeSrc":"19659:10:32","nodeType":"YulIdentifier","src":"19659:10:32"},{"name":"memPtr","nativeSrc":"19671:6:32","nodeType":"YulIdentifier","src":"19671:6:32"}],"functionName":{"name":"lt","nativeSrc":"19656:2:32","nodeType":"YulIdentifier","src":"19656:2:32"},"nativeSrc":"19656:22:32","nodeType":"YulFunctionCall","src":"19656:22:32"}],"functionName":{"name":"or","nativeSrc":"19617:2:32","nodeType":"YulIdentifier","src":"19617:2:32"},"nativeSrc":"19617:62:32","nodeType":"YulFunctionCall","src":"19617:62:32"},"nativeSrc":"19614:88:32","nodeType":"YulIf","src":"19614:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19718:2:32","nodeType":"YulLiteral","src":"19718:2:32","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"19722:10:32","nodeType":"YulIdentifier","src":"19722:10:32"}],"functionName":{"name":"mstore","nativeSrc":"19711:6:32","nodeType":"YulIdentifier","src":"19711:6:32"},"nativeSrc":"19711:22:32","nodeType":"YulFunctionCall","src":"19711:22:32"},"nativeSrc":"19711:22:32","nodeType":"YulExpressionStatement","src":"19711:22:32"}]},"name":"finalize_allocation","nativeSrc":"19458:281:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"19487:6:32","nodeType":"YulTypedName","src":"19487:6:32","type":""},{"name":"size","nativeSrc":"19495:4:32","nodeType":"YulTypedName","src":"19495:4:32","type":""}],"src":"19458:281:32"},{"body":{"nativeSrc":"19786:88:32","nodeType":"YulBlock","src":"19786:88:32","statements":[{"nativeSrc":"19796:30:32","nodeType":"YulAssignment","src":"19796:30:32","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"19806:18:32","nodeType":"YulIdentifier","src":"19806:18:32"},"nativeSrc":"19806:20:32","nodeType":"YulFunctionCall","src":"19806:20:32"},"variableNames":[{"name":"memPtr","nativeSrc":"19796:6:32","nodeType":"YulIdentifier","src":"19796:6:32"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"19855:6:32","nodeType":"YulIdentifier","src":"19855:6:32"},{"name":"size","nativeSrc":"19863:4:32","nodeType":"YulIdentifier","src":"19863:4:32"}],"functionName":{"name":"finalize_allocation","nativeSrc":"19835:19:32","nodeType":"YulIdentifier","src":"19835:19:32"},"nativeSrc":"19835:33:32","nodeType":"YulFunctionCall","src":"19835:33:32"},"nativeSrc":"19835:33:32","nodeType":"YulExpressionStatement","src":"19835:33:32"}]},"name":"allocate_memory","nativeSrc":"19745:129:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"19770:4:32","nodeType":"YulTypedName","src":"19770:4:32","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"19779:6:32","nodeType":"YulTypedName","src":"19779:6:32","type":""}],"src":"19745:129:32"},{"body":{"nativeSrc":"19946:241:32","nodeType":"YulBlock","src":"19946:241:32","statements":[{"body":{"nativeSrc":"20051:22:32","nodeType":"YulBlock","src":"20051:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"20053:16:32","nodeType":"YulIdentifier","src":"20053:16:32"},"nativeSrc":"20053:18:32","nodeType":"YulFunctionCall","src":"20053:18:32"},"nativeSrc":"20053:18:32","nodeType":"YulExpressionStatement","src":"20053:18:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"20023:6:32","nodeType":"YulIdentifier","src":"20023:6:32"},{"kind":"number","nativeSrc":"20031:18:32","nodeType":"YulLiteral","src":"20031:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20020:2:32","nodeType":"YulIdentifier","src":"20020:2:32"},"nativeSrc":"20020:30:32","nodeType":"YulFunctionCall","src":"20020:30:32"},"nativeSrc":"20017:56:32","nodeType":"YulIf","src":"20017:56:32"},{"nativeSrc":"20083:37:32","nodeType":"YulAssignment","src":"20083:37:32","value":{"arguments":[{"name":"length","nativeSrc":"20113:6:32","nodeType":"YulIdentifier","src":"20113:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"20091:21:32","nodeType":"YulIdentifier","src":"20091:21:32"},"nativeSrc":"20091:29:32","nodeType":"YulFunctionCall","src":"20091:29:32"},"variableNames":[{"name":"size","nativeSrc":"20083:4:32","nodeType":"YulIdentifier","src":"20083:4:32"}]},{"nativeSrc":"20157:23:32","nodeType":"YulAssignment","src":"20157:23:32","value":{"arguments":[{"name":"size","nativeSrc":"20169:4:32","nodeType":"YulIdentifier","src":"20169:4:32"},{"kind":"number","nativeSrc":"20175:4:32","nodeType":"YulLiteral","src":"20175:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"20165:3:32","nodeType":"YulIdentifier","src":"20165:3:32"},"nativeSrc":"20165:15:32","nodeType":"YulFunctionCall","src":"20165:15:32"},"variableNames":[{"name":"size","nativeSrc":"20157:4:32","nodeType":"YulIdentifier","src":"20157:4:32"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"19880:307:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"19930:6:32","nodeType":"YulTypedName","src":"19930:6:32","type":""}],"returnVariables":[{"name":"size","nativeSrc":"19941:4:32","nodeType":"YulTypedName","src":"19941:4:32","type":""}],"src":"19880:307:32"},{"body":{"nativeSrc":"20257:84:32","nodeType":"YulBlock","src":"20257:84:32","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"20281:3:32","nodeType":"YulIdentifier","src":"20281:3:32"},{"name":"src","nativeSrc":"20286:3:32","nodeType":"YulIdentifier","src":"20286:3:32"},{"name":"length","nativeSrc":"20291:6:32","nodeType":"YulIdentifier","src":"20291:6:32"}],"functionName":{"name":"calldatacopy","nativeSrc":"20268:12:32","nodeType":"YulIdentifier","src":"20268:12:32"},"nativeSrc":"20268:30:32","nodeType":"YulFunctionCall","src":"20268:30:32"},"nativeSrc":"20268:30:32","nodeType":"YulExpressionStatement","src":"20268:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"20318:3:32","nodeType":"YulIdentifier","src":"20318:3:32"},{"name":"length","nativeSrc":"20323:6:32","nodeType":"YulIdentifier","src":"20323:6:32"}],"functionName":{"name":"add","nativeSrc":"20314:3:32","nodeType":"YulIdentifier","src":"20314:3:32"},"nativeSrc":"20314:16:32","nodeType":"YulFunctionCall","src":"20314:16:32"},{"kind":"number","nativeSrc":"20332:1:32","nodeType":"YulLiteral","src":"20332:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"20307:6:32","nodeType":"YulIdentifier","src":"20307:6:32"},"nativeSrc":"20307:27:32","nodeType":"YulFunctionCall","src":"20307:27:32"},"nativeSrc":"20307:27:32","nodeType":"YulExpressionStatement","src":"20307:27:32"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"20193:148:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"20239:3:32","nodeType":"YulTypedName","src":"20239:3:32","type":""},{"name":"dst","nativeSrc":"20244:3:32","nodeType":"YulTypedName","src":"20244:3:32","type":""},{"name":"length","nativeSrc":"20249:6:32","nodeType":"YulTypedName","src":"20249:6:32","type":""}],"src":"20193:148:32"},{"body":{"nativeSrc":"20430:340:32","nodeType":"YulBlock","src":"20430:340:32","statements":[{"nativeSrc":"20440:74:32","nodeType":"YulAssignment","src":"20440:74:32","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"20506:6:32","nodeType":"YulIdentifier","src":"20506:6:32"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"20465:40:32","nodeType":"YulIdentifier","src":"20465:40:32"},"nativeSrc":"20465:48:32","nodeType":"YulFunctionCall","src":"20465:48:32"}],"functionName":{"name":"allocate_memory","nativeSrc":"20449:15:32","nodeType":"YulIdentifier","src":"20449:15:32"},"nativeSrc":"20449:65:32","nodeType":"YulFunctionCall","src":"20449:65:32"},"variableNames":[{"name":"array","nativeSrc":"20440:5:32","nodeType":"YulIdentifier","src":"20440:5:32"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"20530:5:32","nodeType":"YulIdentifier","src":"20530:5:32"},{"name":"length","nativeSrc":"20537:6:32","nodeType":"YulIdentifier","src":"20537:6:32"}],"functionName":{"name":"mstore","nativeSrc":"20523:6:32","nodeType":"YulIdentifier","src":"20523:6:32"},"nativeSrc":"20523:21:32","nodeType":"YulFunctionCall","src":"20523:21:32"},"nativeSrc":"20523:21:32","nodeType":"YulExpressionStatement","src":"20523:21:32"},{"nativeSrc":"20553:27:32","nodeType":"YulVariableDeclaration","src":"20553:27:32","value":{"arguments":[{"name":"array","nativeSrc":"20568:5:32","nodeType":"YulIdentifier","src":"20568:5:32"},{"kind":"number","nativeSrc":"20575:4:32","nodeType":"YulLiteral","src":"20575:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"20564:3:32","nodeType":"YulIdentifier","src":"20564:3:32"},"nativeSrc":"20564:16:32","nodeType":"YulFunctionCall","src":"20564:16:32"},"variables":[{"name":"dst","nativeSrc":"20557:3:32","nodeType":"YulTypedName","src":"20557:3:32","type":""}]},{"body":{"nativeSrc":"20618:83:32","nodeType":"YulBlock","src":"20618:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"20620:77:32","nodeType":"YulIdentifier","src":"20620:77:32"},"nativeSrc":"20620:79:32","nodeType":"YulFunctionCall","src":"20620:79:32"},"nativeSrc":"20620:79:32","nodeType":"YulExpressionStatement","src":"20620:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"20599:3:32","nodeType":"YulIdentifier","src":"20599:3:32"},{"name":"length","nativeSrc":"20604:6:32","nodeType":"YulIdentifier","src":"20604:6:32"}],"functionName":{"name":"add","nativeSrc":"20595:3:32","nodeType":"YulIdentifier","src":"20595:3:32"},"nativeSrc":"20595:16:32","nodeType":"YulFunctionCall","src":"20595:16:32"},{"name":"end","nativeSrc":"20613:3:32","nodeType":"YulIdentifier","src":"20613:3:32"}],"functionName":{"name":"gt","nativeSrc":"20592:2:32","nodeType":"YulIdentifier","src":"20592:2:32"},"nativeSrc":"20592:25:32","nodeType":"YulFunctionCall","src":"20592:25:32"},"nativeSrc":"20589:112:32","nodeType":"YulIf","src":"20589:112:32"},{"expression":{"arguments":[{"name":"src","nativeSrc":"20747:3:32","nodeType":"YulIdentifier","src":"20747:3:32"},{"name":"dst","nativeSrc":"20752:3:32","nodeType":"YulIdentifier","src":"20752:3:32"},{"name":"length","nativeSrc":"20757:6:32","nodeType":"YulIdentifier","src":"20757:6:32"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"20710:36:32","nodeType":"YulIdentifier","src":"20710:36:32"},"nativeSrc":"20710:54:32","nodeType":"YulFunctionCall","src":"20710:54:32"},"nativeSrc":"20710:54:32","nodeType":"YulExpressionStatement","src":"20710:54:32"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"20347:423:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"20403:3:32","nodeType":"YulTypedName","src":"20403:3:32","type":""},{"name":"length","nativeSrc":"20408:6:32","nodeType":"YulTypedName","src":"20408:6:32","type":""},{"name":"end","nativeSrc":"20416:3:32","nodeType":"YulTypedName","src":"20416:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"20424:5:32","nodeType":"YulTypedName","src":"20424:5:32","type":""}],"src":"20347:423:32"},{"body":{"nativeSrc":"20850:277:32","nodeType":"YulBlock","src":"20850:277:32","statements":[{"body":{"nativeSrc":"20899:83:32","nodeType":"YulBlock","src":"20899:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"20901:77:32","nodeType":"YulIdentifier","src":"20901:77:32"},"nativeSrc":"20901:79:32","nodeType":"YulFunctionCall","src":"20901:79:32"},"nativeSrc":"20901:79:32","nodeType":"YulExpressionStatement","src":"20901:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"20878:6:32","nodeType":"YulIdentifier","src":"20878:6:32"},{"kind":"number","nativeSrc":"20886:4:32","nodeType":"YulLiteral","src":"20886:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"20874:3:32","nodeType":"YulIdentifier","src":"20874:3:32"},"nativeSrc":"20874:17:32","nodeType":"YulFunctionCall","src":"20874:17:32"},{"name":"end","nativeSrc":"20893:3:32","nodeType":"YulIdentifier","src":"20893:3:32"}],"functionName":{"name":"slt","nativeSrc":"20870:3:32","nodeType":"YulIdentifier","src":"20870:3:32"},"nativeSrc":"20870:27:32","nodeType":"YulFunctionCall","src":"20870:27:32"}],"functionName":{"name":"iszero","nativeSrc":"20863:6:32","nodeType":"YulIdentifier","src":"20863:6:32"},"nativeSrc":"20863:35:32","nodeType":"YulFunctionCall","src":"20863:35:32"},"nativeSrc":"20860:122:32","nodeType":"YulIf","src":"20860:122:32"},{"nativeSrc":"20991:34:32","nodeType":"YulVariableDeclaration","src":"20991:34:32","value":{"arguments":[{"name":"offset","nativeSrc":"21018:6:32","nodeType":"YulIdentifier","src":"21018:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"21005:12:32","nodeType":"YulIdentifier","src":"21005:12:32"},"nativeSrc":"21005:20:32","nodeType":"YulFunctionCall","src":"21005:20:32"},"variables":[{"name":"length","nativeSrc":"20995:6:32","nodeType":"YulTypedName","src":"20995:6:32","type":""}]},{"nativeSrc":"21034:87:32","nodeType":"YulAssignment","src":"21034:87:32","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"21094:6:32","nodeType":"YulIdentifier","src":"21094:6:32"},{"kind":"number","nativeSrc":"21102:4:32","nodeType":"YulLiteral","src":"21102:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21090:3:32","nodeType":"YulIdentifier","src":"21090:3:32"},"nativeSrc":"21090:17:32","nodeType":"YulFunctionCall","src":"21090:17:32"},{"name":"length","nativeSrc":"21109:6:32","nodeType":"YulIdentifier","src":"21109:6:32"},{"name":"end","nativeSrc":"21117:3:32","nodeType":"YulIdentifier","src":"21117:3:32"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"21043:46:32","nodeType":"YulIdentifier","src":"21043:46:32"},"nativeSrc":"21043:78:32","nodeType":"YulFunctionCall","src":"21043:78:32"},"variableNames":[{"name":"array","nativeSrc":"21034:5:32","nodeType":"YulIdentifier","src":"21034:5:32"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"20789:338:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"20828:6:32","nodeType":"YulTypedName","src":"20828:6:32","type":""},{"name":"end","nativeSrc":"20836:3:32","nodeType":"YulTypedName","src":"20836:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"20844:5:32","nodeType":"YulTypedName","src":"20844:5:32","type":""}],"src":"20789:338:32"},{"body":{"nativeSrc":"21259:817:32","nodeType":"YulBlock","src":"21259:817:32","statements":[{"body":{"nativeSrc":"21306:83:32","nodeType":"YulBlock","src":"21306:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21308:77:32","nodeType":"YulIdentifier","src":"21308:77:32"},"nativeSrc":"21308:79:32","nodeType":"YulFunctionCall","src":"21308:79:32"},"nativeSrc":"21308:79:32","nodeType":"YulExpressionStatement","src":"21308:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"21280:7:32","nodeType":"YulIdentifier","src":"21280:7:32"},{"name":"headStart","nativeSrc":"21289:9:32","nodeType":"YulIdentifier","src":"21289:9:32"}],"functionName":{"name":"sub","nativeSrc":"21276:3:32","nodeType":"YulIdentifier","src":"21276:3:32"},"nativeSrc":"21276:23:32","nodeType":"YulFunctionCall","src":"21276:23:32"},{"kind":"number","nativeSrc":"21301:3:32","nodeType":"YulLiteral","src":"21301:3:32","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"21272:3:32","nodeType":"YulIdentifier","src":"21272:3:32"},"nativeSrc":"21272:33:32","nodeType":"YulFunctionCall","src":"21272:33:32"},"nativeSrc":"21269:120:32","nodeType":"YulIf","src":"21269:120:32"},{"nativeSrc":"21399:117:32","nodeType":"YulBlock","src":"21399:117:32","statements":[{"nativeSrc":"21414:15:32","nodeType":"YulVariableDeclaration","src":"21414:15:32","value":{"kind":"number","nativeSrc":"21428:1:32","nodeType":"YulLiteral","src":"21428:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21418:6:32","nodeType":"YulTypedName","src":"21418:6:32","type":""}]},{"nativeSrc":"21443:63:32","nodeType":"YulAssignment","src":"21443:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21478:9:32","nodeType":"YulIdentifier","src":"21478:9:32"},{"name":"offset","nativeSrc":"21489:6:32","nodeType":"YulIdentifier","src":"21489:6:32"}],"functionName":{"name":"add","nativeSrc":"21474:3:32","nodeType":"YulIdentifier","src":"21474:3:32"},"nativeSrc":"21474:22:32","nodeType":"YulFunctionCall","src":"21474:22:32"},{"name":"dataEnd","nativeSrc":"21498:7:32","nodeType":"YulIdentifier","src":"21498:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21453:20:32","nodeType":"YulIdentifier","src":"21453:20:32"},"nativeSrc":"21453:53:32","nodeType":"YulFunctionCall","src":"21453:53:32"},"variableNames":[{"name":"value0","nativeSrc":"21443:6:32","nodeType":"YulIdentifier","src":"21443:6:32"}]}]},{"nativeSrc":"21526:118:32","nodeType":"YulBlock","src":"21526:118:32","statements":[{"nativeSrc":"21541:16:32","nodeType":"YulVariableDeclaration","src":"21541:16:32","value":{"kind":"number","nativeSrc":"21555:2:32","nodeType":"YulLiteral","src":"21555:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"21545:6:32","nodeType":"YulTypedName","src":"21545:6:32","type":""}]},{"nativeSrc":"21571:63:32","nodeType":"YulAssignment","src":"21571:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21606:9:32","nodeType":"YulIdentifier","src":"21606:9:32"},{"name":"offset","nativeSrc":"21617:6:32","nodeType":"YulIdentifier","src":"21617:6:32"}],"functionName":{"name":"add","nativeSrc":"21602:3:32","nodeType":"YulIdentifier","src":"21602:3:32"},"nativeSrc":"21602:22:32","nodeType":"YulFunctionCall","src":"21602:22:32"},{"name":"dataEnd","nativeSrc":"21626:7:32","nodeType":"YulIdentifier","src":"21626:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21581:20:32","nodeType":"YulIdentifier","src":"21581:20:32"},"nativeSrc":"21581:53:32","nodeType":"YulFunctionCall","src":"21581:53:32"},"variableNames":[{"name":"value1","nativeSrc":"21571:6:32","nodeType":"YulIdentifier","src":"21571:6:32"}]}]},{"nativeSrc":"21654:118:32","nodeType":"YulBlock","src":"21654:118:32","statements":[{"nativeSrc":"21669:16:32","nodeType":"YulVariableDeclaration","src":"21669:16:32","value":{"kind":"number","nativeSrc":"21683:2:32","nodeType":"YulLiteral","src":"21683:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"21673:6:32","nodeType":"YulTypedName","src":"21673:6:32","type":""}]},{"nativeSrc":"21699:63:32","nodeType":"YulAssignment","src":"21699:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21734:9:32","nodeType":"YulIdentifier","src":"21734:9:32"},{"name":"offset","nativeSrc":"21745:6:32","nodeType":"YulIdentifier","src":"21745:6:32"}],"functionName":{"name":"add","nativeSrc":"21730:3:32","nodeType":"YulIdentifier","src":"21730:3:32"},"nativeSrc":"21730:22:32","nodeType":"YulFunctionCall","src":"21730:22:32"},{"name":"dataEnd","nativeSrc":"21754:7:32","nodeType":"YulIdentifier","src":"21754:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"21709:20:32","nodeType":"YulIdentifier","src":"21709:20:32"},"nativeSrc":"21709:53:32","nodeType":"YulFunctionCall","src":"21709:53:32"},"variableNames":[{"name":"value2","nativeSrc":"21699:6:32","nodeType":"YulIdentifier","src":"21699:6:32"}]}]},{"nativeSrc":"21782:287:32","nodeType":"YulBlock","src":"21782:287:32","statements":[{"nativeSrc":"21797:46:32","nodeType":"YulVariableDeclaration","src":"21797:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21828:9:32","nodeType":"YulIdentifier","src":"21828:9:32"},{"kind":"number","nativeSrc":"21839:2:32","nodeType":"YulLiteral","src":"21839:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21824:3:32","nodeType":"YulIdentifier","src":"21824:3:32"},"nativeSrc":"21824:18:32","nodeType":"YulFunctionCall","src":"21824:18:32"}],"functionName":{"name":"calldataload","nativeSrc":"21811:12:32","nodeType":"YulIdentifier","src":"21811:12:32"},"nativeSrc":"21811:32:32","nodeType":"YulFunctionCall","src":"21811:32:32"},"variables":[{"name":"offset","nativeSrc":"21801:6:32","nodeType":"YulTypedName","src":"21801:6:32","type":""}]},{"body":{"nativeSrc":"21890:83:32","nodeType":"YulBlock","src":"21890:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"21892:77:32","nodeType":"YulIdentifier","src":"21892:77:32"},"nativeSrc":"21892:79:32","nodeType":"YulFunctionCall","src":"21892:79:32"},"nativeSrc":"21892:79:32","nodeType":"YulExpressionStatement","src":"21892:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"21862:6:32","nodeType":"YulIdentifier","src":"21862:6:32"},{"kind":"number","nativeSrc":"21870:18:32","nodeType":"YulLiteral","src":"21870:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"21859:2:32","nodeType":"YulIdentifier","src":"21859:2:32"},"nativeSrc":"21859:30:32","nodeType":"YulFunctionCall","src":"21859:30:32"},"nativeSrc":"21856:117:32","nodeType":"YulIf","src":"21856:117:32"},{"nativeSrc":"21987:72:32","nodeType":"YulAssignment","src":"21987:72:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22031:9:32","nodeType":"YulIdentifier","src":"22031:9:32"},{"name":"offset","nativeSrc":"22042:6:32","nodeType":"YulIdentifier","src":"22042:6:32"}],"functionName":{"name":"add","nativeSrc":"22027:3:32","nodeType":"YulIdentifier","src":"22027:3:32"},"nativeSrc":"22027:22:32","nodeType":"YulFunctionCall","src":"22027:22:32"},{"name":"dataEnd","nativeSrc":"22051:7:32","nodeType":"YulIdentifier","src":"22051:7:32"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"21997:29:32","nodeType":"YulIdentifier","src":"21997:29:32"},"nativeSrc":"21997:62:32","nodeType":"YulFunctionCall","src":"21997:62:32"},"variableNames":[{"name":"value3","nativeSrc":"21987:6:32","nodeType":"YulIdentifier","src":"21987:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"21133:943:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21205:9:32","nodeType":"YulTypedName","src":"21205:9:32","type":""},{"name":"dataEnd","nativeSrc":"21216:7:32","nodeType":"YulTypedName","src":"21216:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"21228:6:32","nodeType":"YulTypedName","src":"21228:6:32","type":""},{"name":"value1","nativeSrc":"21236:6:32","nodeType":"YulTypedName","src":"21236:6:32","type":""},{"name":"value2","nativeSrc":"21244:6:32","nodeType":"YulTypedName","src":"21244:6:32","type":""},{"name":"value3","nativeSrc":"21252:6:32","nodeType":"YulTypedName","src":"21252:6:32","type":""}],"src":"21133:943:32"},{"body":{"nativeSrc":"22126:65:32","nodeType":"YulBlock","src":"22126:65:32","statements":[{"nativeSrc":"22136:49:32","nodeType":"YulAssignment","src":"22136:49:32","value":{"arguments":[{"name":"value","nativeSrc":"22151:5:32","nodeType":"YulIdentifier","src":"22151:5:32"},{"kind":"number","nativeSrc":"22158:26:32","nodeType":"YulLiteral","src":"22158:26:32","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"22147:3:32","nodeType":"YulIdentifier","src":"22147:3:32"},"nativeSrc":"22147:38:32","nodeType":"YulFunctionCall","src":"22147:38:32"},"variableNames":[{"name":"cleaned","nativeSrc":"22136:7:32","nodeType":"YulIdentifier","src":"22136:7:32"}]}]},"name":"cleanup_t_uint96","nativeSrc":"22082:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22108:5:32","nodeType":"YulTypedName","src":"22108:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"22118:7:32","nodeType":"YulTypedName","src":"22118:7:32","type":""}],"src":"22082:109:32"},{"body":{"nativeSrc":"22260:52:32","nodeType":"YulBlock","src":"22260:52:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"22277:3:32","nodeType":"YulIdentifier","src":"22277:3:32"},{"arguments":[{"name":"value","nativeSrc":"22299:5:32","nodeType":"YulIdentifier","src":"22299:5:32"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"22282:16:32","nodeType":"YulIdentifier","src":"22282:16:32"},"nativeSrc":"22282:23:32","nodeType":"YulFunctionCall","src":"22282:23:32"}],"functionName":{"name":"mstore","nativeSrc":"22270:6:32","nodeType":"YulIdentifier","src":"22270:6:32"},"nativeSrc":"22270:36:32","nodeType":"YulFunctionCall","src":"22270:36:32"},"nativeSrc":"22270:36:32","nodeType":"YulExpressionStatement","src":"22270:36:32"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nativeSrc":"22197:115:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22248:5:32","nodeType":"YulTypedName","src":"22248:5:32","type":""},{"name":"pos","nativeSrc":"22255:3:32","nodeType":"YulTypedName","src":"22255:3:32","type":""}],"src":"22197:115:32"},{"body":{"nativeSrc":"22414:122:32","nodeType":"YulBlock","src":"22414:122:32","statements":[{"nativeSrc":"22424:26:32","nodeType":"YulAssignment","src":"22424:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"22436:9:32","nodeType":"YulIdentifier","src":"22436:9:32"},{"kind":"number","nativeSrc":"22447:2:32","nodeType":"YulLiteral","src":"22447:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22432:3:32","nodeType":"YulIdentifier","src":"22432:3:32"},"nativeSrc":"22432:18:32","nodeType":"YulFunctionCall","src":"22432:18:32"},"variableNames":[{"name":"tail","nativeSrc":"22424:4:32","nodeType":"YulIdentifier","src":"22424:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22502:6:32","nodeType":"YulIdentifier","src":"22502:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"22515:9:32","nodeType":"YulIdentifier","src":"22515:9:32"},{"kind":"number","nativeSrc":"22526:1:32","nodeType":"YulLiteral","src":"22526:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22511:3:32","nodeType":"YulIdentifier","src":"22511:3:32"},"nativeSrc":"22511:17:32","nodeType":"YulFunctionCall","src":"22511:17:32"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nativeSrc":"22460:41:32","nodeType":"YulIdentifier","src":"22460:41:32"},"nativeSrc":"22460:69:32","nodeType":"YulFunctionCall","src":"22460:69:32"},"nativeSrc":"22460:69:32","nodeType":"YulExpressionStatement","src":"22460:69:32"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nativeSrc":"22318:218:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22386:9:32","nodeType":"YulTypedName","src":"22386:9:32","type":""},{"name":"value0","nativeSrc":"22398:6:32","nodeType":"YulTypedName","src":"22398:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22409:4:32","nodeType":"YulTypedName","src":"22409:4:32","type":""}],"src":"22318:218:32"},{"body":{"nativeSrc":"22584:78:32","nodeType":"YulBlock","src":"22584:78:32","statements":[{"body":{"nativeSrc":"22640:16:32","nodeType":"YulBlock","src":"22640:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22649:1:32","nodeType":"YulLiteral","src":"22649:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"22652:1:32","nodeType":"YulLiteral","src":"22652:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22642:6:32","nodeType":"YulIdentifier","src":"22642:6:32"},"nativeSrc":"22642:12:32","nodeType":"YulFunctionCall","src":"22642:12:32"},"nativeSrc":"22642:12:32","nodeType":"YulExpressionStatement","src":"22642:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22607:5:32","nodeType":"YulIdentifier","src":"22607:5:32"},{"arguments":[{"name":"value","nativeSrc":"22631:5:32","nodeType":"YulIdentifier","src":"22631:5:32"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"22614:16:32","nodeType":"YulIdentifier","src":"22614:16:32"},"nativeSrc":"22614:23:32","nodeType":"YulFunctionCall","src":"22614:23:32"}],"functionName":{"name":"eq","nativeSrc":"22604:2:32","nodeType":"YulIdentifier","src":"22604:2:32"},"nativeSrc":"22604:34:32","nodeType":"YulFunctionCall","src":"22604:34:32"}],"functionName":{"name":"iszero","nativeSrc":"22597:6:32","nodeType":"YulIdentifier","src":"22597:6:32"},"nativeSrc":"22597:42:32","nodeType":"YulFunctionCall","src":"22597:42:32"},"nativeSrc":"22594:62:32","nodeType":"YulIf","src":"22594:62:32"}]},"name":"validator_revert_t_uint96","nativeSrc":"22542:120:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22577:5:32","nodeType":"YulTypedName","src":"22577:5:32","type":""}],"src":"22542:120:32"},{"body":{"nativeSrc":"22719:86:32","nodeType":"YulBlock","src":"22719:86:32","statements":[{"nativeSrc":"22729:29:32","nodeType":"YulAssignment","src":"22729:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"22751:6:32","nodeType":"YulIdentifier","src":"22751:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"22738:12:32","nodeType":"YulIdentifier","src":"22738:12:32"},"nativeSrc":"22738:20:32","nodeType":"YulFunctionCall","src":"22738:20:32"},"variableNames":[{"name":"value","nativeSrc":"22729:5:32","nodeType":"YulIdentifier","src":"22729:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"22793:5:32","nodeType":"YulIdentifier","src":"22793:5:32"}],"functionName":{"name":"validator_revert_t_uint96","nativeSrc":"22767:25:32","nodeType":"YulIdentifier","src":"22767:25:32"},"nativeSrc":"22767:32:32","nodeType":"YulFunctionCall","src":"22767:32:32"},"nativeSrc":"22767:32:32","nodeType":"YulExpressionStatement","src":"22767:32:32"}]},"name":"abi_decode_t_uint96","nativeSrc":"22668:137:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"22697:6:32","nodeType":"YulTypedName","src":"22697:6:32","type":""},{"name":"end","nativeSrc":"22705:3:32","nodeType":"YulTypedName","src":"22705:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"22713:5:32","nodeType":"YulTypedName","src":"22713:5:32","type":""}],"src":"22668:137:32"},{"body":{"nativeSrc":"22893:390:32","nodeType":"YulBlock","src":"22893:390:32","statements":[{"body":{"nativeSrc":"22939:83:32","nodeType":"YulBlock","src":"22939:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"22941:77:32","nodeType":"YulIdentifier","src":"22941:77:32"},"nativeSrc":"22941:79:32","nodeType":"YulFunctionCall","src":"22941:79:32"},"nativeSrc":"22941:79:32","nodeType":"YulExpressionStatement","src":"22941:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"22914:7:32","nodeType":"YulIdentifier","src":"22914:7:32"},{"name":"headStart","nativeSrc":"22923:9:32","nodeType":"YulIdentifier","src":"22923:9:32"}],"functionName":{"name":"sub","nativeSrc":"22910:3:32","nodeType":"YulIdentifier","src":"22910:3:32"},"nativeSrc":"22910:23:32","nodeType":"YulFunctionCall","src":"22910:23:32"},{"kind":"number","nativeSrc":"22935:2:32","nodeType":"YulLiteral","src":"22935:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"22906:3:32","nodeType":"YulIdentifier","src":"22906:3:32"},"nativeSrc":"22906:32:32","nodeType":"YulFunctionCall","src":"22906:32:32"},"nativeSrc":"22903:119:32","nodeType":"YulIf","src":"22903:119:32"},{"nativeSrc":"23032:116:32","nodeType":"YulBlock","src":"23032:116:32","statements":[{"nativeSrc":"23047:15:32","nodeType":"YulVariableDeclaration","src":"23047:15:32","value":{"kind":"number","nativeSrc":"23061:1:32","nodeType":"YulLiteral","src":"23061:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23051:6:32","nodeType":"YulTypedName","src":"23051:6:32","type":""}]},{"nativeSrc":"23076:62:32","nodeType":"YulAssignment","src":"23076:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23110:9:32","nodeType":"YulIdentifier","src":"23110:9:32"},{"name":"offset","nativeSrc":"23121:6:32","nodeType":"YulIdentifier","src":"23121:6:32"}],"functionName":{"name":"add","nativeSrc":"23106:3:32","nodeType":"YulIdentifier","src":"23106:3:32"},"nativeSrc":"23106:22:32","nodeType":"YulFunctionCall","src":"23106:22:32"},{"name":"dataEnd","nativeSrc":"23130:7:32","nodeType":"YulIdentifier","src":"23130:7:32"}],"functionName":{"name":"abi_decode_t_uint96","nativeSrc":"23086:19:32","nodeType":"YulIdentifier","src":"23086:19:32"},"nativeSrc":"23086:52:32","nodeType":"YulFunctionCall","src":"23086:52:32"},"variableNames":[{"name":"value0","nativeSrc":"23076:6:32","nodeType":"YulIdentifier","src":"23076:6:32"}]}]},{"nativeSrc":"23158:118:32","nodeType":"YulBlock","src":"23158:118:32","statements":[{"nativeSrc":"23173:16:32","nodeType":"YulVariableDeclaration","src":"23173:16:32","value":{"kind":"number","nativeSrc":"23187:2:32","nodeType":"YulLiteral","src":"23187:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"23177:6:32","nodeType":"YulTypedName","src":"23177:6:32","type":""}]},{"nativeSrc":"23203:63:32","nodeType":"YulAssignment","src":"23203:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23238:9:32","nodeType":"YulIdentifier","src":"23238:9:32"},{"name":"offset","nativeSrc":"23249:6:32","nodeType":"YulIdentifier","src":"23249:6:32"}],"functionName":{"name":"add","nativeSrc":"23234:3:32","nodeType":"YulIdentifier","src":"23234:3:32"},"nativeSrc":"23234:22:32","nodeType":"YulFunctionCall","src":"23234:22:32"},{"name":"dataEnd","nativeSrc":"23258:7:32","nodeType":"YulIdentifier","src":"23258:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"23213:20:32","nodeType":"YulIdentifier","src":"23213:20:32"},"nativeSrc":"23213:53:32","nodeType":"YulFunctionCall","src":"23213:53:32"},"variableNames":[{"name":"value1","nativeSrc":"23203:6:32","nodeType":"YulIdentifier","src":"23203:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint96t_address","nativeSrc":"22811:472:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22855:9:32","nodeType":"YulTypedName","src":"22855:9:32","type":""},{"name":"dataEnd","nativeSrc":"22866:7:32","nodeType":"YulTypedName","src":"22866:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"22878:6:32","nodeType":"YulTypedName","src":"22878:6:32","type":""},{"name":"value1","nativeSrc":"22886:6:32","nodeType":"YulTypedName","src":"22886:6:32","type":""}],"src":"22811:472:32"},{"body":{"nativeSrc":"23372:391:32","nodeType":"YulBlock","src":"23372:391:32","statements":[{"body":{"nativeSrc":"23418:83:32","nodeType":"YulBlock","src":"23418:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"23420:77:32","nodeType":"YulIdentifier","src":"23420:77:32"},"nativeSrc":"23420:79:32","nodeType":"YulFunctionCall","src":"23420:79:32"},"nativeSrc":"23420:79:32","nodeType":"YulExpressionStatement","src":"23420:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23393:7:32","nodeType":"YulIdentifier","src":"23393:7:32"},{"name":"headStart","nativeSrc":"23402:9:32","nodeType":"YulIdentifier","src":"23402:9:32"}],"functionName":{"name":"sub","nativeSrc":"23389:3:32","nodeType":"YulIdentifier","src":"23389:3:32"},"nativeSrc":"23389:23:32","nodeType":"YulFunctionCall","src":"23389:23:32"},{"kind":"number","nativeSrc":"23414:2:32","nodeType":"YulLiteral","src":"23414:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"23385:3:32","nodeType":"YulIdentifier","src":"23385:3:32"},"nativeSrc":"23385:32:32","nodeType":"YulFunctionCall","src":"23385:32:32"},"nativeSrc":"23382:119:32","nodeType":"YulIf","src":"23382:119:32"},{"nativeSrc":"23511:117:32","nodeType":"YulBlock","src":"23511:117:32","statements":[{"nativeSrc":"23526:15:32","nodeType":"YulVariableDeclaration","src":"23526:15:32","value":{"kind":"number","nativeSrc":"23540:1:32","nodeType":"YulLiteral","src":"23540:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23530:6:32","nodeType":"YulTypedName","src":"23530:6:32","type":""}]},{"nativeSrc":"23555:63:32","nodeType":"YulAssignment","src":"23555:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23590:9:32","nodeType":"YulIdentifier","src":"23590:9:32"},{"name":"offset","nativeSrc":"23601:6:32","nodeType":"YulIdentifier","src":"23601:6:32"}],"functionName":{"name":"add","nativeSrc":"23586:3:32","nodeType":"YulIdentifier","src":"23586:3:32"},"nativeSrc":"23586:22:32","nodeType":"YulFunctionCall","src":"23586:22:32"},{"name":"dataEnd","nativeSrc":"23610:7:32","nodeType":"YulIdentifier","src":"23610:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"23565:20:32","nodeType":"YulIdentifier","src":"23565:20:32"},"nativeSrc":"23565:53:32","nodeType":"YulFunctionCall","src":"23565:53:32"},"variableNames":[{"name":"value0","nativeSrc":"23555:6:32","nodeType":"YulIdentifier","src":"23555:6:32"}]}]},{"nativeSrc":"23638:118:32","nodeType":"YulBlock","src":"23638:118:32","statements":[{"nativeSrc":"23653:16:32","nodeType":"YulVariableDeclaration","src":"23653:16:32","value":{"kind":"number","nativeSrc":"23667:2:32","nodeType":"YulLiteral","src":"23667:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"23657:6:32","nodeType":"YulTypedName","src":"23657:6:32","type":""}]},{"nativeSrc":"23683:63:32","nodeType":"YulAssignment","src":"23683:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23718:9:32","nodeType":"YulIdentifier","src":"23718:9:32"},{"name":"offset","nativeSrc":"23729:6:32","nodeType":"YulIdentifier","src":"23729:6:32"}],"functionName":{"name":"add","nativeSrc":"23714:3:32","nodeType":"YulIdentifier","src":"23714:3:32"},"nativeSrc":"23714:22:32","nodeType":"YulFunctionCall","src":"23714:22:32"},{"name":"dataEnd","nativeSrc":"23738:7:32","nodeType":"YulIdentifier","src":"23738:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"23693:20:32","nodeType":"YulIdentifier","src":"23693:20:32"},"nativeSrc":"23693:53:32","nodeType":"YulFunctionCall","src":"23693:53:32"},"variableNames":[{"name":"value1","nativeSrc":"23683:6:32","nodeType":"YulIdentifier","src":"23683:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"23289:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23334:9:32","nodeType":"YulTypedName","src":"23334:9:32","type":""},{"name":"dataEnd","nativeSrc":"23345:7:32","nodeType":"YulTypedName","src":"23345:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23357:6:32","nodeType":"YulTypedName","src":"23357:6:32","type":""},{"name":"value1","nativeSrc":"23365:6:32","nodeType":"YulTypedName","src":"23365:6:32","type":""}],"src":"23289:474:32"},{"body":{"nativeSrc":"23867:124:32","nodeType":"YulBlock","src":"23867:124:32","statements":[{"nativeSrc":"23877:26:32","nodeType":"YulAssignment","src":"23877:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"23889:9:32","nodeType":"YulIdentifier","src":"23889:9:32"},{"kind":"number","nativeSrc":"23900:2:32","nodeType":"YulLiteral","src":"23900:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23885:3:32","nodeType":"YulIdentifier","src":"23885:3:32"},"nativeSrc":"23885:18:32","nodeType":"YulFunctionCall","src":"23885:18:32"},"variableNames":[{"name":"tail","nativeSrc":"23877:4:32","nodeType":"YulIdentifier","src":"23877:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23957:6:32","nodeType":"YulIdentifier","src":"23957:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"23970:9:32","nodeType":"YulIdentifier","src":"23970:9:32"},{"kind":"number","nativeSrc":"23981:1:32","nodeType":"YulLiteral","src":"23981:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23966:3:32","nodeType":"YulIdentifier","src":"23966:3:32"},"nativeSrc":"23966:17:32","nodeType":"YulFunctionCall","src":"23966:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"23913:43:32","nodeType":"YulIdentifier","src":"23913:43:32"},"nativeSrc":"23913:71:32","nodeType":"YulFunctionCall","src":"23913:71:32"},"nativeSrc":"23913:71:32","nodeType":"YulExpressionStatement","src":"23913:71:32"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"23769:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23839:9:32","nodeType":"YulTypedName","src":"23839:9:32","type":""},{"name":"value0","nativeSrc":"23851:6:32","nodeType":"YulTypedName","src":"23851:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23862:4:32","nodeType":"YulTypedName","src":"23862:4:32","type":""}],"src":"23769:222:32"},{"body":{"nativeSrc":"24086:28:32","nodeType":"YulBlock","src":"24086:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"24103:1:32","nodeType":"YulLiteral","src":"24103:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"24106:1:32","nodeType":"YulLiteral","src":"24106:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"24096:6:32","nodeType":"YulIdentifier","src":"24096:6:32"},"nativeSrc":"24096:12:32","nodeType":"YulFunctionCall","src":"24096:12:32"},"nativeSrc":"24096:12:32","nodeType":"YulExpressionStatement","src":"24096:12:32"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"23997:117:32","nodeType":"YulFunctionDefinition","src":"23997:117:32"},{"body":{"nativeSrc":"24209:28:32","nodeType":"YulBlock","src":"24209:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"24226:1:32","nodeType":"YulLiteral","src":"24226:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"24229:1:32","nodeType":"YulLiteral","src":"24229:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"24219:6:32","nodeType":"YulIdentifier","src":"24219:6:32"},"nativeSrc":"24219:12:32","nodeType":"YulFunctionCall","src":"24219:12:32"},"nativeSrc":"24219:12:32","nodeType":"YulExpressionStatement","src":"24219:12:32"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"24120:117:32","nodeType":"YulFunctionDefinition","src":"24120:117:32"},{"body":{"nativeSrc":"24332:478:32","nodeType":"YulBlock","src":"24332:478:32","statements":[{"body":{"nativeSrc":"24381:83:32","nodeType":"YulBlock","src":"24381:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"24383:77:32","nodeType":"YulIdentifier","src":"24383:77:32"},"nativeSrc":"24383:79:32","nodeType":"YulFunctionCall","src":"24383:79:32"},"nativeSrc":"24383:79:32","nodeType":"YulExpressionStatement","src":"24383:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"24360:6:32","nodeType":"YulIdentifier","src":"24360:6:32"},{"kind":"number","nativeSrc":"24368:4:32","nodeType":"YulLiteral","src":"24368:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"24356:3:32","nodeType":"YulIdentifier","src":"24356:3:32"},"nativeSrc":"24356:17:32","nodeType":"YulFunctionCall","src":"24356:17:32"},{"name":"end","nativeSrc":"24375:3:32","nodeType":"YulIdentifier","src":"24375:3:32"}],"functionName":{"name":"slt","nativeSrc":"24352:3:32","nodeType":"YulIdentifier","src":"24352:3:32"},"nativeSrc":"24352:27:32","nodeType":"YulFunctionCall","src":"24352:27:32"}],"functionName":{"name":"iszero","nativeSrc":"24345:6:32","nodeType":"YulIdentifier","src":"24345:6:32"},"nativeSrc":"24345:35:32","nodeType":"YulFunctionCall","src":"24345:35:32"},"nativeSrc":"24342:122:32","nodeType":"YulIf","src":"24342:122:32"},{"nativeSrc":"24473:30:32","nodeType":"YulAssignment","src":"24473:30:32","value":{"arguments":[{"name":"offset","nativeSrc":"24496:6:32","nodeType":"YulIdentifier","src":"24496:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"24483:12:32","nodeType":"YulIdentifier","src":"24483:12:32"},"nativeSrc":"24483:20:32","nodeType":"YulFunctionCall","src":"24483:20:32"},"variableNames":[{"name":"length","nativeSrc":"24473:6:32","nodeType":"YulIdentifier","src":"24473:6:32"}]},{"body":{"nativeSrc":"24546:83:32","nodeType":"YulBlock","src":"24546:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"24548:77:32","nodeType":"YulIdentifier","src":"24548:77:32"},"nativeSrc":"24548:79:32","nodeType":"YulFunctionCall","src":"24548:79:32"},"nativeSrc":"24548:79:32","nodeType":"YulExpressionStatement","src":"24548:79:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"24518:6:32","nodeType":"YulIdentifier","src":"24518:6:32"},{"kind":"number","nativeSrc":"24526:18:32","nodeType":"YulLiteral","src":"24526:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"24515:2:32","nodeType":"YulIdentifier","src":"24515:2:32"},"nativeSrc":"24515:30:32","nodeType":"YulFunctionCall","src":"24515:30:32"},"nativeSrc":"24512:117:32","nodeType":"YulIf","src":"24512:117:32"},{"nativeSrc":"24638:29:32","nodeType":"YulAssignment","src":"24638:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"24654:6:32","nodeType":"YulIdentifier","src":"24654:6:32"},{"kind":"number","nativeSrc":"24662:4:32","nodeType":"YulLiteral","src":"24662:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24650:3:32","nodeType":"YulIdentifier","src":"24650:3:32"},"nativeSrc":"24650:17:32","nodeType":"YulFunctionCall","src":"24650:17:32"},"variableNames":[{"name":"arrayPos","nativeSrc":"24638:8:32","nodeType":"YulIdentifier","src":"24638:8:32"}]},{"body":{"nativeSrc":"24721:83:32","nodeType":"YulBlock","src":"24721:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"24723:77:32","nodeType":"YulIdentifier","src":"24723:77:32"},"nativeSrc":"24723:79:32","nodeType":"YulFunctionCall","src":"24723:79:32"},"nativeSrc":"24723:79:32","nodeType":"YulExpressionStatement","src":"24723:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"24686:8:32","nodeType":"YulIdentifier","src":"24686:8:32"},{"arguments":[{"name":"length","nativeSrc":"24700:6:32","nodeType":"YulIdentifier","src":"24700:6:32"},{"kind":"number","nativeSrc":"24708:4:32","nodeType":"YulLiteral","src":"24708:4:32","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"24696:3:32","nodeType":"YulIdentifier","src":"24696:3:32"},"nativeSrc":"24696:17:32","nodeType":"YulFunctionCall","src":"24696:17:32"}],"functionName":{"name":"add","nativeSrc":"24682:3:32","nodeType":"YulIdentifier","src":"24682:3:32"},"nativeSrc":"24682:32:32","nodeType":"YulFunctionCall","src":"24682:32:32"},{"name":"end","nativeSrc":"24716:3:32","nodeType":"YulIdentifier","src":"24716:3:32"}],"functionName":{"name":"gt","nativeSrc":"24679:2:32","nodeType":"YulIdentifier","src":"24679:2:32"},"nativeSrc":"24679:41:32","nodeType":"YulFunctionCall","src":"24679:41:32"},"nativeSrc":"24676:128:32","nodeType":"YulIf","src":"24676:128:32"}]},"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"24257:553:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"24299:6:32","nodeType":"YulTypedName","src":"24299:6:32","type":""},{"name":"end","nativeSrc":"24307:3:32","nodeType":"YulTypedName","src":"24307:3:32","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"24315:8:32","nodeType":"YulTypedName","src":"24315:8:32","type":""},{"name":"length","nativeSrc":"24325:6:32","nodeType":"YulTypedName","src":"24325:6:32","type":""}],"src":"24257:553:32"},{"body":{"nativeSrc":"24903:478:32","nodeType":"YulBlock","src":"24903:478:32","statements":[{"body":{"nativeSrc":"24952:83:32","nodeType":"YulBlock","src":"24952:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"24954:77:32","nodeType":"YulIdentifier","src":"24954:77:32"},"nativeSrc":"24954:79:32","nodeType":"YulFunctionCall","src":"24954:79:32"},"nativeSrc":"24954:79:32","nodeType":"YulExpressionStatement","src":"24954:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"24931:6:32","nodeType":"YulIdentifier","src":"24931:6:32"},{"kind":"number","nativeSrc":"24939:4:32","nodeType":"YulLiteral","src":"24939:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"24927:3:32","nodeType":"YulIdentifier","src":"24927:3:32"},"nativeSrc":"24927:17:32","nodeType":"YulFunctionCall","src":"24927:17:32"},{"name":"end","nativeSrc":"24946:3:32","nodeType":"YulIdentifier","src":"24946:3:32"}],"functionName":{"name":"slt","nativeSrc":"24923:3:32","nodeType":"YulIdentifier","src":"24923:3:32"},"nativeSrc":"24923:27:32","nodeType":"YulFunctionCall","src":"24923:27:32"}],"functionName":{"name":"iszero","nativeSrc":"24916:6:32","nodeType":"YulIdentifier","src":"24916:6:32"},"nativeSrc":"24916:35:32","nodeType":"YulFunctionCall","src":"24916:35:32"},"nativeSrc":"24913:122:32","nodeType":"YulIf","src":"24913:122:32"},{"nativeSrc":"25044:30:32","nodeType":"YulAssignment","src":"25044:30:32","value":{"arguments":[{"name":"offset","nativeSrc":"25067:6:32","nodeType":"YulIdentifier","src":"25067:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"25054:12:32","nodeType":"YulIdentifier","src":"25054:12:32"},"nativeSrc":"25054:20:32","nodeType":"YulFunctionCall","src":"25054:20:32"},"variableNames":[{"name":"length","nativeSrc":"25044:6:32","nodeType":"YulIdentifier","src":"25044:6:32"}]},{"body":{"nativeSrc":"25117:83:32","nodeType":"YulBlock","src":"25117:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"25119:77:32","nodeType":"YulIdentifier","src":"25119:77:32"},"nativeSrc":"25119:79:32","nodeType":"YulFunctionCall","src":"25119:79:32"},"nativeSrc":"25119:79:32","nodeType":"YulExpressionStatement","src":"25119:79:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"25089:6:32","nodeType":"YulIdentifier","src":"25089:6:32"},{"kind":"number","nativeSrc":"25097:18:32","nodeType":"YulLiteral","src":"25097:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"25086:2:32","nodeType":"YulIdentifier","src":"25086:2:32"},"nativeSrc":"25086:30:32","nodeType":"YulFunctionCall","src":"25086:30:32"},"nativeSrc":"25083:117:32","nodeType":"YulIf","src":"25083:117:32"},{"nativeSrc":"25209:29:32","nodeType":"YulAssignment","src":"25209:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"25225:6:32","nodeType":"YulIdentifier","src":"25225:6:32"},{"kind":"number","nativeSrc":"25233:4:32","nodeType":"YulLiteral","src":"25233:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25221:3:32","nodeType":"YulIdentifier","src":"25221:3:32"},"nativeSrc":"25221:17:32","nodeType":"YulFunctionCall","src":"25221:17:32"},"variableNames":[{"name":"arrayPos","nativeSrc":"25209:8:32","nodeType":"YulIdentifier","src":"25209:8:32"}]},{"body":{"nativeSrc":"25292:83:32","nodeType":"YulBlock","src":"25292:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"25294:77:32","nodeType":"YulIdentifier","src":"25294:77:32"},"nativeSrc":"25294:79:32","nodeType":"YulFunctionCall","src":"25294:79:32"},"nativeSrc":"25294:79:32","nodeType":"YulExpressionStatement","src":"25294:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"25257:8:32","nodeType":"YulIdentifier","src":"25257:8:32"},{"arguments":[{"name":"length","nativeSrc":"25271:6:32","nodeType":"YulIdentifier","src":"25271:6:32"},{"kind":"number","nativeSrc":"25279:4:32","nodeType":"YulLiteral","src":"25279:4:32","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"25267:3:32","nodeType":"YulIdentifier","src":"25267:3:32"},"nativeSrc":"25267:17:32","nodeType":"YulFunctionCall","src":"25267:17:32"}],"functionName":{"name":"add","nativeSrc":"25253:3:32","nodeType":"YulIdentifier","src":"25253:3:32"},"nativeSrc":"25253:32:32","nodeType":"YulFunctionCall","src":"25253:32:32"},{"name":"end","nativeSrc":"25287:3:32","nodeType":"YulIdentifier","src":"25287:3:32"}],"functionName":{"name":"gt","nativeSrc":"25250:2:32","nodeType":"YulIdentifier","src":"25250:2:32"},"nativeSrc":"25250:41:32","nodeType":"YulFunctionCall","src":"25250:41:32"},"nativeSrc":"25247:128:32","nodeType":"YulIf","src":"25247:128:32"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"24829:552:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"24870:6:32","nodeType":"YulTypedName","src":"24870:6:32","type":""},{"name":"end","nativeSrc":"24878:3:32","nodeType":"YulTypedName","src":"24878:3:32","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"24886:8:32","nodeType":"YulTypedName","src":"24886:8:32","type":""},{"name":"length","nativeSrc":"24896:6:32","nodeType":"YulTypedName","src":"24896:6:32","type":""}],"src":"24829:552:32"},{"body":{"nativeSrc":"25494:478:32","nodeType":"YulBlock","src":"25494:478:32","statements":[{"body":{"nativeSrc":"25543:83:32","nodeType":"YulBlock","src":"25543:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"25545:77:32","nodeType":"YulIdentifier","src":"25545:77:32"},"nativeSrc":"25545:79:32","nodeType":"YulFunctionCall","src":"25545:79:32"},"nativeSrc":"25545:79:32","nodeType":"YulExpressionStatement","src":"25545:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"25522:6:32","nodeType":"YulIdentifier","src":"25522:6:32"},{"kind":"number","nativeSrc":"25530:4:32","nodeType":"YulLiteral","src":"25530:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"25518:3:32","nodeType":"YulIdentifier","src":"25518:3:32"},"nativeSrc":"25518:17:32","nodeType":"YulFunctionCall","src":"25518:17:32"},{"name":"end","nativeSrc":"25537:3:32","nodeType":"YulIdentifier","src":"25537:3:32"}],"functionName":{"name":"slt","nativeSrc":"25514:3:32","nodeType":"YulIdentifier","src":"25514:3:32"},"nativeSrc":"25514:27:32","nodeType":"YulFunctionCall","src":"25514:27:32"}],"functionName":{"name":"iszero","nativeSrc":"25507:6:32","nodeType":"YulIdentifier","src":"25507:6:32"},"nativeSrc":"25507:35:32","nodeType":"YulFunctionCall","src":"25507:35:32"},"nativeSrc":"25504:122:32","nodeType":"YulIf","src":"25504:122:32"},{"nativeSrc":"25635:30:32","nodeType":"YulAssignment","src":"25635:30:32","value":{"arguments":[{"name":"offset","nativeSrc":"25658:6:32","nodeType":"YulIdentifier","src":"25658:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"25645:12:32","nodeType":"YulIdentifier","src":"25645:12:32"},"nativeSrc":"25645:20:32","nodeType":"YulFunctionCall","src":"25645:20:32"},"variableNames":[{"name":"length","nativeSrc":"25635:6:32","nodeType":"YulIdentifier","src":"25635:6:32"}]},{"body":{"nativeSrc":"25708:83:32","nodeType":"YulBlock","src":"25708:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"25710:77:32","nodeType":"YulIdentifier","src":"25710:77:32"},"nativeSrc":"25710:79:32","nodeType":"YulFunctionCall","src":"25710:79:32"},"nativeSrc":"25710:79:32","nodeType":"YulExpressionStatement","src":"25710:79:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"25680:6:32","nodeType":"YulIdentifier","src":"25680:6:32"},{"kind":"number","nativeSrc":"25688:18:32","nodeType":"YulLiteral","src":"25688:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"25677:2:32","nodeType":"YulIdentifier","src":"25677:2:32"},"nativeSrc":"25677:30:32","nodeType":"YulFunctionCall","src":"25677:30:32"},"nativeSrc":"25674:117:32","nodeType":"YulIf","src":"25674:117:32"},{"nativeSrc":"25800:29:32","nodeType":"YulAssignment","src":"25800:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"25816:6:32","nodeType":"YulIdentifier","src":"25816:6:32"},{"kind":"number","nativeSrc":"25824:4:32","nodeType":"YulLiteral","src":"25824:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25812:3:32","nodeType":"YulIdentifier","src":"25812:3:32"},"nativeSrc":"25812:17:32","nodeType":"YulFunctionCall","src":"25812:17:32"},"variableNames":[{"name":"arrayPos","nativeSrc":"25800:8:32","nodeType":"YulIdentifier","src":"25800:8:32"}]},{"body":{"nativeSrc":"25883:83:32","nodeType":"YulBlock","src":"25883:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"25885:77:32","nodeType":"YulIdentifier","src":"25885:77:32"},"nativeSrc":"25885:79:32","nodeType":"YulFunctionCall","src":"25885:79:32"},"nativeSrc":"25885:79:32","nodeType":"YulExpressionStatement","src":"25885:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"25848:8:32","nodeType":"YulIdentifier","src":"25848:8:32"},{"arguments":[{"name":"length","nativeSrc":"25862:6:32","nodeType":"YulIdentifier","src":"25862:6:32"},{"kind":"number","nativeSrc":"25870:4:32","nodeType":"YulLiteral","src":"25870:4:32","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"25858:3:32","nodeType":"YulIdentifier","src":"25858:3:32"},"nativeSrc":"25858:17:32","nodeType":"YulFunctionCall","src":"25858:17:32"}],"functionName":{"name":"add","nativeSrc":"25844:3:32","nodeType":"YulIdentifier","src":"25844:3:32"},"nativeSrc":"25844:32:32","nodeType":"YulFunctionCall","src":"25844:32:32"},{"name":"end","nativeSrc":"25878:3:32","nodeType":"YulIdentifier","src":"25878:3:32"}],"functionName":{"name":"gt","nativeSrc":"25841:2:32","nodeType":"YulIdentifier","src":"25841:2:32"},"nativeSrc":"25841:41:32","nodeType":"YulFunctionCall","src":"25841:41:32"},"nativeSrc":"25838:128:32","nodeType":"YulIf","src":"25838:128:32"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"25404:568:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"25461:6:32","nodeType":"YulTypedName","src":"25461:6:32","type":""},{"name":"end","nativeSrc":"25469:3:32","nodeType":"YulTypedName","src":"25469:3:32","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"25477:8:32","nodeType":"YulTypedName","src":"25477:8:32","type":""},{"name":"length","nativeSrc":"25487:6:32","nodeType":"YulTypedName","src":"25487:6:32","type":""}],"src":"25404:568:32"},{"body":{"nativeSrc":"26186:1331:32","nodeType":"YulBlock","src":"26186:1331:32","statements":[{"body":{"nativeSrc":"26233:83:32","nodeType":"YulBlock","src":"26233:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"26235:77:32","nodeType":"YulIdentifier","src":"26235:77:32"},"nativeSrc":"26235:79:32","nodeType":"YulFunctionCall","src":"26235:79:32"},"nativeSrc":"26235:79:32","nodeType":"YulExpressionStatement","src":"26235:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"26207:7:32","nodeType":"YulIdentifier","src":"26207:7:32"},{"name":"headStart","nativeSrc":"26216:9:32","nodeType":"YulIdentifier","src":"26216:9:32"}],"functionName":{"name":"sub","nativeSrc":"26203:3:32","nodeType":"YulIdentifier","src":"26203:3:32"},"nativeSrc":"26203:23:32","nodeType":"YulFunctionCall","src":"26203:23:32"},{"kind":"number","nativeSrc":"26228:3:32","nodeType":"YulLiteral","src":"26228:3:32","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"26199:3:32","nodeType":"YulIdentifier","src":"26199:3:32"},"nativeSrc":"26199:33:32","nodeType":"YulFunctionCall","src":"26199:33:32"},"nativeSrc":"26196:120:32","nodeType":"YulIf","src":"26196:120:32"},{"nativeSrc":"26326:117:32","nodeType":"YulBlock","src":"26326:117:32","statements":[{"nativeSrc":"26341:15:32","nodeType":"YulVariableDeclaration","src":"26341:15:32","value":{"kind":"number","nativeSrc":"26355:1:32","nodeType":"YulLiteral","src":"26355:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"26345:6:32","nodeType":"YulTypedName","src":"26345:6:32","type":""}]},{"nativeSrc":"26370:63:32","nodeType":"YulAssignment","src":"26370:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26405:9:32","nodeType":"YulIdentifier","src":"26405:9:32"},{"name":"offset","nativeSrc":"26416:6:32","nodeType":"YulIdentifier","src":"26416:6:32"}],"functionName":{"name":"add","nativeSrc":"26401:3:32","nodeType":"YulIdentifier","src":"26401:3:32"},"nativeSrc":"26401:22:32","nodeType":"YulFunctionCall","src":"26401:22:32"},{"name":"dataEnd","nativeSrc":"26425:7:32","nodeType":"YulIdentifier","src":"26425:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"26380:20:32","nodeType":"YulIdentifier","src":"26380:20:32"},"nativeSrc":"26380:53:32","nodeType":"YulFunctionCall","src":"26380:53:32"},"variableNames":[{"name":"value0","nativeSrc":"26370:6:32","nodeType":"YulIdentifier","src":"26370:6:32"}]}]},{"nativeSrc":"26453:298:32","nodeType":"YulBlock","src":"26453:298:32","statements":[{"nativeSrc":"26468:46:32","nodeType":"YulVariableDeclaration","src":"26468:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26499:9:32","nodeType":"YulIdentifier","src":"26499:9:32"},{"kind":"number","nativeSrc":"26510:2:32","nodeType":"YulLiteral","src":"26510:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26495:3:32","nodeType":"YulIdentifier","src":"26495:3:32"},"nativeSrc":"26495:18:32","nodeType":"YulFunctionCall","src":"26495:18:32"}],"functionName":{"name":"calldataload","nativeSrc":"26482:12:32","nodeType":"YulIdentifier","src":"26482:12:32"},"nativeSrc":"26482:32:32","nodeType":"YulFunctionCall","src":"26482:32:32"},"variables":[{"name":"offset","nativeSrc":"26472:6:32","nodeType":"YulTypedName","src":"26472:6:32","type":""}]},{"body":{"nativeSrc":"26561:83:32","nodeType":"YulBlock","src":"26561:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"26563:77:32","nodeType":"YulIdentifier","src":"26563:77:32"},"nativeSrc":"26563:79:32","nodeType":"YulFunctionCall","src":"26563:79:32"},"nativeSrc":"26563:79:32","nodeType":"YulExpressionStatement","src":"26563:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"26533:6:32","nodeType":"YulIdentifier","src":"26533:6:32"},{"kind":"number","nativeSrc":"26541:18:32","nodeType":"YulLiteral","src":"26541:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"26530:2:32","nodeType":"YulIdentifier","src":"26530:2:32"},"nativeSrc":"26530:30:32","nodeType":"YulFunctionCall","src":"26530:30:32"},"nativeSrc":"26527:117:32","nodeType":"YulIf","src":"26527:117:32"},{"nativeSrc":"26658:83:32","nodeType":"YulAssignment","src":"26658:83:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26713:9:32","nodeType":"YulIdentifier","src":"26713:9:32"},{"name":"offset","nativeSrc":"26724:6:32","nodeType":"YulIdentifier","src":"26724:6:32"}],"functionName":{"name":"add","nativeSrc":"26709:3:32","nodeType":"YulIdentifier","src":"26709:3:32"},"nativeSrc":"26709:22:32","nodeType":"YulFunctionCall","src":"26709:22:32"},{"name":"dataEnd","nativeSrc":"26733:7:32","nodeType":"YulIdentifier","src":"26733:7:32"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"26676:32:32","nodeType":"YulIdentifier","src":"26676:32:32"},"nativeSrc":"26676:65:32","nodeType":"YulFunctionCall","src":"26676:65:32"},"variableNames":[{"name":"value1","nativeSrc":"26658:6:32","nodeType":"YulIdentifier","src":"26658:6:32"},{"name":"value2","nativeSrc":"26666:6:32","nodeType":"YulIdentifier","src":"26666:6:32"}]}]},{"nativeSrc":"26761:118:32","nodeType":"YulBlock","src":"26761:118:32","statements":[{"nativeSrc":"26776:16:32","nodeType":"YulVariableDeclaration","src":"26776:16:32","value":{"kind":"number","nativeSrc":"26790:2:32","nodeType":"YulLiteral","src":"26790:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"26780:6:32","nodeType":"YulTypedName","src":"26780:6:32","type":""}]},{"nativeSrc":"26806:63:32","nodeType":"YulAssignment","src":"26806:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26841:9:32","nodeType":"YulIdentifier","src":"26841:9:32"},{"name":"offset","nativeSrc":"26852:6:32","nodeType":"YulIdentifier","src":"26852:6:32"}],"functionName":{"name":"add","nativeSrc":"26837:3:32","nodeType":"YulIdentifier","src":"26837:3:32"},"nativeSrc":"26837:22:32","nodeType":"YulFunctionCall","src":"26837:22:32"},{"name":"dataEnd","nativeSrc":"26861:7:32","nodeType":"YulIdentifier","src":"26861:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"26816:20:32","nodeType":"YulIdentifier","src":"26816:20:32"},"nativeSrc":"26816:53:32","nodeType":"YulFunctionCall","src":"26816:53:32"},"variableNames":[{"name":"value3","nativeSrc":"26806:6:32","nodeType":"YulIdentifier","src":"26806:6:32"}]}]},{"nativeSrc":"26889:297:32","nodeType":"YulBlock","src":"26889:297:32","statements":[{"nativeSrc":"26904:46:32","nodeType":"YulVariableDeclaration","src":"26904:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26935:9:32","nodeType":"YulIdentifier","src":"26935:9:32"},{"kind":"number","nativeSrc":"26946:2:32","nodeType":"YulLiteral","src":"26946:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26931:3:32","nodeType":"YulIdentifier","src":"26931:3:32"},"nativeSrc":"26931:18:32","nodeType":"YulFunctionCall","src":"26931:18:32"}],"functionName":{"name":"calldataload","nativeSrc":"26918:12:32","nodeType":"YulIdentifier","src":"26918:12:32"},"nativeSrc":"26918:32:32","nodeType":"YulFunctionCall","src":"26918:32:32"},"variables":[{"name":"offset","nativeSrc":"26908:6:32","nodeType":"YulTypedName","src":"26908:6:32","type":""}]},{"body":{"nativeSrc":"26997:83:32","nodeType":"YulBlock","src":"26997:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"26999:77:32","nodeType":"YulIdentifier","src":"26999:77:32"},"nativeSrc":"26999:79:32","nodeType":"YulFunctionCall","src":"26999:79:32"},"nativeSrc":"26999:79:32","nodeType":"YulExpressionStatement","src":"26999:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"26969:6:32","nodeType":"YulIdentifier","src":"26969:6:32"},{"kind":"number","nativeSrc":"26977:18:32","nodeType":"YulLiteral","src":"26977:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"26966:2:32","nodeType":"YulIdentifier","src":"26966:2:32"},"nativeSrc":"26966:30:32","nodeType":"YulFunctionCall","src":"26966:30:32"},"nativeSrc":"26963:117:32","nodeType":"YulIf","src":"26963:117:32"},{"nativeSrc":"27094:82:32","nodeType":"YulAssignment","src":"27094:82:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27148:9:32","nodeType":"YulIdentifier","src":"27148:9:32"},{"name":"offset","nativeSrc":"27159:6:32","nodeType":"YulIdentifier","src":"27159:6:32"}],"functionName":{"name":"add","nativeSrc":"27144:3:32","nodeType":"YulIdentifier","src":"27144:3:32"},"nativeSrc":"27144:22:32","nodeType":"YulFunctionCall","src":"27144:22:32"},{"name":"dataEnd","nativeSrc":"27168:7:32","nodeType":"YulIdentifier","src":"27168:7:32"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"27112:31:32","nodeType":"YulIdentifier","src":"27112:31:32"},"nativeSrc":"27112:64:32","nodeType":"YulFunctionCall","src":"27112:64:32"},"variableNames":[{"name":"value4","nativeSrc":"27094:6:32","nodeType":"YulIdentifier","src":"27094:6:32"},{"name":"value5","nativeSrc":"27102:6:32","nodeType":"YulIdentifier","src":"27102:6:32"}]}]},{"nativeSrc":"27196:314:32","nodeType":"YulBlock","src":"27196:314:32","statements":[{"nativeSrc":"27211:47:32","nodeType":"YulVariableDeclaration","src":"27211:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27242:9:32","nodeType":"YulIdentifier","src":"27242:9:32"},{"kind":"number","nativeSrc":"27253:3:32","nodeType":"YulLiteral","src":"27253:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"27238:3:32","nodeType":"YulIdentifier","src":"27238:3:32"},"nativeSrc":"27238:19:32","nodeType":"YulFunctionCall","src":"27238:19:32"}],"functionName":{"name":"calldataload","nativeSrc":"27225:12:32","nodeType":"YulIdentifier","src":"27225:12:32"},"nativeSrc":"27225:33:32","nodeType":"YulFunctionCall","src":"27225:33:32"},"variables":[{"name":"offset","nativeSrc":"27215:6:32","nodeType":"YulTypedName","src":"27215:6:32","type":""}]},{"body":{"nativeSrc":"27305:83:32","nodeType":"YulBlock","src":"27305:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"27307:77:32","nodeType":"YulIdentifier","src":"27307:77:32"},"nativeSrc":"27307:79:32","nodeType":"YulFunctionCall","src":"27307:79:32"},"nativeSrc":"27307:79:32","nodeType":"YulExpressionStatement","src":"27307:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"27277:6:32","nodeType":"YulIdentifier","src":"27277:6:32"},{"kind":"number","nativeSrc":"27285:18:32","nodeType":"YulLiteral","src":"27285:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"27274:2:32","nodeType":"YulIdentifier","src":"27274:2:32"},"nativeSrc":"27274:30:32","nodeType":"YulFunctionCall","src":"27274:30:32"},"nativeSrc":"27271:117:32","nodeType":"YulIf","src":"27271:117:32"},{"nativeSrc":"27402:98:32","nodeType":"YulAssignment","src":"27402:98:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27472:9:32","nodeType":"YulIdentifier","src":"27472:9:32"},{"name":"offset","nativeSrc":"27483:6:32","nodeType":"YulIdentifier","src":"27483:6:32"}],"functionName":{"name":"add","nativeSrc":"27468:3:32","nodeType":"YulIdentifier","src":"27468:3:32"},"nativeSrc":"27468:22:32","nodeType":"YulFunctionCall","src":"27468:22:32"},{"name":"dataEnd","nativeSrc":"27492:7:32","nodeType":"YulIdentifier","src":"27492:7:32"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"27420:47:32","nodeType":"YulIdentifier","src":"27420:47:32"},"nativeSrc":"27420:80:32","nodeType":"YulFunctionCall","src":"27420:80:32"},"variableNames":[{"name":"value6","nativeSrc":"27402:6:32","nodeType":"YulIdentifier","src":"27402:6:32"},{"name":"value7","nativeSrc":"27410:6:32","nodeType":"YulIdentifier","src":"27410:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_calldata_ptrt_uint256t_bytes_calldata_ptrt_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"25978:1539:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26100:9:32","nodeType":"YulTypedName","src":"26100:9:32","type":""},{"name":"dataEnd","nativeSrc":"26111:7:32","nodeType":"YulTypedName","src":"26111:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"26123:6:32","nodeType":"YulTypedName","src":"26123:6:32","type":""},{"name":"value1","nativeSrc":"26131:6:32","nodeType":"YulTypedName","src":"26131:6:32","type":""},{"name":"value2","nativeSrc":"26139:6:32","nodeType":"YulTypedName","src":"26139:6:32","type":""},{"name":"value3","nativeSrc":"26147:6:32","nodeType":"YulTypedName","src":"26147:6:32","type":""},{"name":"value4","nativeSrc":"26155:6:32","nodeType":"YulTypedName","src":"26155:6:32","type":""},{"name":"value5","nativeSrc":"26163:6:32","nodeType":"YulTypedName","src":"26163:6:32","type":""},{"name":"value6","nativeSrc":"26171:6:32","nodeType":"YulTypedName","src":"26171:6:32","type":""},{"name":"value7","nativeSrc":"26179:6:32","nodeType":"YulTypedName","src":"26179:6:32","type":""}],"src":"25978:1539:32"},{"body":{"nativeSrc":"27620:405:32","nodeType":"YulBlock","src":"27620:405:32","statements":[{"body":{"nativeSrc":"27666:83:32","nodeType":"YulBlock","src":"27666:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"27668:77:32","nodeType":"YulIdentifier","src":"27668:77:32"},"nativeSrc":"27668:79:32","nodeType":"YulFunctionCall","src":"27668:79:32"},"nativeSrc":"27668:79:32","nodeType":"YulExpressionStatement","src":"27668:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"27641:7:32","nodeType":"YulIdentifier","src":"27641:7:32"},{"name":"headStart","nativeSrc":"27650:9:32","nodeType":"YulIdentifier","src":"27650:9:32"}],"functionName":{"name":"sub","nativeSrc":"27637:3:32","nodeType":"YulIdentifier","src":"27637:3:32"},"nativeSrc":"27637:23:32","nodeType":"YulFunctionCall","src":"27637:23:32"},{"kind":"number","nativeSrc":"27662:2:32","nodeType":"YulLiteral","src":"27662:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"27633:3:32","nodeType":"YulIdentifier","src":"27633:3:32"},"nativeSrc":"27633:32:32","nodeType":"YulFunctionCall","src":"27633:32:32"},"nativeSrc":"27630:119:32","nodeType":"YulIf","src":"27630:119:32"},{"nativeSrc":"27759:117:32","nodeType":"YulBlock","src":"27759:117:32","statements":[{"nativeSrc":"27774:15:32","nodeType":"YulVariableDeclaration","src":"27774:15:32","value":{"kind":"number","nativeSrc":"27788:1:32","nodeType":"YulLiteral","src":"27788:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"27778:6:32","nodeType":"YulTypedName","src":"27778:6:32","type":""}]},{"nativeSrc":"27803:63:32","nodeType":"YulAssignment","src":"27803:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27838:9:32","nodeType":"YulIdentifier","src":"27838:9:32"},{"name":"offset","nativeSrc":"27849:6:32","nodeType":"YulIdentifier","src":"27849:6:32"}],"functionName":{"name":"add","nativeSrc":"27834:3:32","nodeType":"YulIdentifier","src":"27834:3:32"},"nativeSrc":"27834:22:32","nodeType":"YulFunctionCall","src":"27834:22:32"},{"name":"dataEnd","nativeSrc":"27858:7:32","nodeType":"YulIdentifier","src":"27858:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"27813:20:32","nodeType":"YulIdentifier","src":"27813:20:32"},"nativeSrc":"27813:53:32","nodeType":"YulFunctionCall","src":"27813:53:32"},"variableNames":[{"name":"value0","nativeSrc":"27803:6:32","nodeType":"YulIdentifier","src":"27803:6:32"}]}]},{"nativeSrc":"27886:132:32","nodeType":"YulBlock","src":"27886:132:32","statements":[{"nativeSrc":"27901:16:32","nodeType":"YulVariableDeclaration","src":"27901:16:32","value":{"kind":"number","nativeSrc":"27915:2:32","nodeType":"YulLiteral","src":"27915:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"27905:6:32","nodeType":"YulTypedName","src":"27905:6:32","type":""}]},{"nativeSrc":"27931:77:32","nodeType":"YulAssignment","src":"27931:77:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27980:9:32","nodeType":"YulIdentifier","src":"27980:9:32"},{"name":"offset","nativeSrc":"27991:6:32","nodeType":"YulIdentifier","src":"27991:6:32"}],"functionName":{"name":"add","nativeSrc":"27976:3:32","nodeType":"YulIdentifier","src":"27976:3:32"},"nativeSrc":"27976:22:32","nodeType":"YulFunctionCall","src":"27976:22:32"},{"name":"dataEnd","nativeSrc":"28000:7:32","nodeType":"YulIdentifier","src":"28000:7:32"}],"functionName":{"name":"abi_decode_t_enum$_PhaseType_$8454","nativeSrc":"27941:34:32","nodeType":"YulIdentifier","src":"27941:34:32"},"nativeSrc":"27941:67:32","nodeType":"YulFunctionCall","src":"27941:67:32"},"variableNames":[{"name":"value1","nativeSrc":"27931:6:32","nodeType":"YulIdentifier","src":"27931:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_PhaseType_$8454","nativeSrc":"27523:502:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27582:9:32","nodeType":"YulTypedName","src":"27582:9:32","type":""},{"name":"dataEnd","nativeSrc":"27593:7:32","nodeType":"YulTypedName","src":"27593:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"27605:6:32","nodeType":"YulTypedName","src":"27605:6:32","type":""},{"name":"value1","nativeSrc":"27613:6:32","nodeType":"YulTypedName","src":"27613:6:32","type":""}],"src":"27523:502:32"},{"body":{"nativeSrc":"28059:152:32","nodeType":"YulBlock","src":"28059:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"28076:1:32","nodeType":"YulLiteral","src":"28076:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"28079:77:32","nodeType":"YulLiteral","src":"28079:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"28069:6:32","nodeType":"YulIdentifier","src":"28069:6:32"},"nativeSrc":"28069:88:32","nodeType":"YulFunctionCall","src":"28069:88:32"},"nativeSrc":"28069:88:32","nodeType":"YulExpressionStatement","src":"28069:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28173:1:32","nodeType":"YulLiteral","src":"28173:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"28176:4:32","nodeType":"YulLiteral","src":"28176:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"28166:6:32","nodeType":"YulIdentifier","src":"28166:6:32"},"nativeSrc":"28166:15:32","nodeType":"YulFunctionCall","src":"28166:15:32"},"nativeSrc":"28166:15:32","nodeType":"YulExpressionStatement","src":"28166:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28197:1:32","nodeType":"YulLiteral","src":"28197:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"28200:4:32","nodeType":"YulLiteral","src":"28200:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"28190:6:32","nodeType":"YulIdentifier","src":"28190:6:32"},"nativeSrc":"28190:15:32","nodeType":"YulFunctionCall","src":"28190:15:32"},"nativeSrc":"28190:15:32","nodeType":"YulExpressionStatement","src":"28190:15:32"}]},"name":"panic_error_0x22","nativeSrc":"28031:180:32","nodeType":"YulFunctionDefinition","src":"28031:180:32"},{"body":{"nativeSrc":"28268:269:32","nodeType":"YulBlock","src":"28268:269:32","statements":[{"nativeSrc":"28278:22:32","nodeType":"YulAssignment","src":"28278:22:32","value":{"arguments":[{"name":"data","nativeSrc":"28292:4:32","nodeType":"YulIdentifier","src":"28292:4:32"},{"kind":"number","nativeSrc":"28298:1:32","nodeType":"YulLiteral","src":"28298:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"28288:3:32","nodeType":"YulIdentifier","src":"28288:3:32"},"nativeSrc":"28288:12:32","nodeType":"YulFunctionCall","src":"28288:12:32"},"variableNames":[{"name":"length","nativeSrc":"28278:6:32","nodeType":"YulIdentifier","src":"28278:6:32"}]},{"nativeSrc":"28309:38:32","nodeType":"YulVariableDeclaration","src":"28309:38:32","value":{"arguments":[{"name":"data","nativeSrc":"28339:4:32","nodeType":"YulIdentifier","src":"28339:4:32"},{"kind":"number","nativeSrc":"28345:1:32","nodeType":"YulLiteral","src":"28345:1:32","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"28335:3:32","nodeType":"YulIdentifier","src":"28335:3:32"},"nativeSrc":"28335:12:32","nodeType":"YulFunctionCall","src":"28335:12:32"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"28313:18:32","nodeType":"YulTypedName","src":"28313:18:32","type":""}]},{"body":{"nativeSrc":"28386:51:32","nodeType":"YulBlock","src":"28386:51:32","statements":[{"nativeSrc":"28400:27:32","nodeType":"YulAssignment","src":"28400:27:32","value":{"arguments":[{"name":"length","nativeSrc":"28414:6:32","nodeType":"YulIdentifier","src":"28414:6:32"},{"kind":"number","nativeSrc":"28422:4:32","nodeType":"YulLiteral","src":"28422:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"28410:3:32","nodeType":"YulIdentifier","src":"28410:3:32"},"nativeSrc":"28410:17:32","nodeType":"YulFunctionCall","src":"28410:17:32"},"variableNames":[{"name":"length","nativeSrc":"28400:6:32","nodeType":"YulIdentifier","src":"28400:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"28366:18:32","nodeType":"YulIdentifier","src":"28366:18:32"}],"functionName":{"name":"iszero","nativeSrc":"28359:6:32","nodeType":"YulIdentifier","src":"28359:6:32"},"nativeSrc":"28359:26:32","nodeType":"YulFunctionCall","src":"28359:26:32"},"nativeSrc":"28356:81:32","nodeType":"YulIf","src":"28356:81:32"},{"body":{"nativeSrc":"28489:42:32","nodeType":"YulBlock","src":"28489:42:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"28503:16:32","nodeType":"YulIdentifier","src":"28503:16:32"},"nativeSrc":"28503:18:32","nodeType":"YulFunctionCall","src":"28503:18:32"},"nativeSrc":"28503:18:32","nodeType":"YulExpressionStatement","src":"28503:18:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"28453:18:32","nodeType":"YulIdentifier","src":"28453:18:32"},{"arguments":[{"name":"length","nativeSrc":"28476:6:32","nodeType":"YulIdentifier","src":"28476:6:32"},{"kind":"number","nativeSrc":"28484:2:32","nodeType":"YulLiteral","src":"28484:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"28473:2:32","nodeType":"YulIdentifier","src":"28473:2:32"},"nativeSrc":"28473:14:32","nodeType":"YulFunctionCall","src":"28473:14:32"}],"functionName":{"name":"eq","nativeSrc":"28450:2:32","nodeType":"YulIdentifier","src":"28450:2:32"},"nativeSrc":"28450:38:32","nodeType":"YulFunctionCall","src":"28450:38:32"},"nativeSrc":"28447:84:32","nodeType":"YulIf","src":"28447:84:32"}]},"name":"extract_byte_array_length","nativeSrc":"28217:320:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"28252:4:32","nodeType":"YulTypedName","src":"28252:4:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"28261:6:32","nodeType":"YulTypedName","src":"28261:6:32","type":""}],"src":"28217:320:32"},{"body":{"nativeSrc":"28571:152:32","nodeType":"YulBlock","src":"28571:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"28588:1:32","nodeType":"YulLiteral","src":"28588:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"28591:77:32","nodeType":"YulLiteral","src":"28591:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"28581:6:32","nodeType":"YulIdentifier","src":"28581:6:32"},"nativeSrc":"28581:88:32","nodeType":"YulFunctionCall","src":"28581:88:32"},"nativeSrc":"28581:88:32","nodeType":"YulExpressionStatement","src":"28581:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28685:1:32","nodeType":"YulLiteral","src":"28685:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"28688:4:32","nodeType":"YulLiteral","src":"28688:4:32","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"28678:6:32","nodeType":"YulIdentifier","src":"28678:6:32"},"nativeSrc":"28678:15:32","nodeType":"YulFunctionCall","src":"28678:15:32"},"nativeSrc":"28678:15:32","nodeType":"YulExpressionStatement","src":"28678:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28709:1:32","nodeType":"YulLiteral","src":"28709:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"28712:4:32","nodeType":"YulLiteral","src":"28712:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"28702:6:32","nodeType":"YulIdentifier","src":"28702:6:32"},"nativeSrc":"28702:15:32","nodeType":"YulFunctionCall","src":"28702:15:32"},"nativeSrc":"28702:15:32","nodeType":"YulExpressionStatement","src":"28702:15:32"}]},"name":"panic_error_0x32","nativeSrc":"28543:180:32","nodeType":"YulFunctionDefinition","src":"28543:180:32"},{"body":{"nativeSrc":"28883:288:32","nodeType":"YulBlock","src":"28883:288:32","statements":[{"nativeSrc":"28893:26:32","nodeType":"YulAssignment","src":"28893:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"28905:9:32","nodeType":"YulIdentifier","src":"28905:9:32"},{"kind":"number","nativeSrc":"28916:2:32","nodeType":"YulLiteral","src":"28916:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"28901:3:32","nodeType":"YulIdentifier","src":"28901:3:32"},"nativeSrc":"28901:18:32","nodeType":"YulFunctionCall","src":"28901:18:32"},"variableNames":[{"name":"tail","nativeSrc":"28893:4:32","nodeType":"YulIdentifier","src":"28893:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"28973:6:32","nodeType":"YulIdentifier","src":"28973:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"28986:9:32","nodeType":"YulIdentifier","src":"28986:9:32"},{"kind":"number","nativeSrc":"28997:1:32","nodeType":"YulLiteral","src":"28997:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28982:3:32","nodeType":"YulIdentifier","src":"28982:3:32"},"nativeSrc":"28982:17:32","nodeType":"YulFunctionCall","src":"28982:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"28929:43:32","nodeType":"YulIdentifier","src":"28929:43:32"},"nativeSrc":"28929:71:32","nodeType":"YulFunctionCall","src":"28929:71:32"},"nativeSrc":"28929:71:32","nodeType":"YulExpressionStatement","src":"28929:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"29054:6:32","nodeType":"YulIdentifier","src":"29054:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"29067:9:32","nodeType":"YulIdentifier","src":"29067:9:32"},{"kind":"number","nativeSrc":"29078:2:32","nodeType":"YulLiteral","src":"29078:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29063:3:32","nodeType":"YulIdentifier","src":"29063:3:32"},"nativeSrc":"29063:18:32","nodeType":"YulFunctionCall","src":"29063:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29010:43:32","nodeType":"YulIdentifier","src":"29010:43:32"},"nativeSrc":"29010:72:32","nodeType":"YulFunctionCall","src":"29010:72:32"},"nativeSrc":"29010:72:32","nodeType":"YulExpressionStatement","src":"29010:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"29136:6:32","nodeType":"YulIdentifier","src":"29136:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"29149:9:32","nodeType":"YulIdentifier","src":"29149:9:32"},{"kind":"number","nativeSrc":"29160:2:32","nodeType":"YulLiteral","src":"29160:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29145:3:32","nodeType":"YulIdentifier","src":"29145:3:32"},"nativeSrc":"29145:18:32","nodeType":"YulFunctionCall","src":"29145:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"29092:43:32","nodeType":"YulIdentifier","src":"29092:43:32"},"nativeSrc":"29092:72:32","nodeType":"YulFunctionCall","src":"29092:72:32"},"nativeSrc":"29092:72:32","nodeType":"YulExpressionStatement","src":"29092:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"28729:442:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28839:9:32","nodeType":"YulTypedName","src":"28839:9:32","type":""},{"name":"value2","nativeSrc":"28851:6:32","nodeType":"YulTypedName","src":"28851:6:32","type":""},{"name":"value1","nativeSrc":"28859:6:32","nodeType":"YulTypedName","src":"28859:6:32","type":""},{"name":"value0","nativeSrc":"28867:6:32","nodeType":"YulTypedName","src":"28867:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28878:4:32","nodeType":"YulTypedName","src":"28878:4:32","type":""}],"src":"28729:442:32"},{"body":{"nativeSrc":"29205:152:32","nodeType":"YulBlock","src":"29205:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"29222:1:32","nodeType":"YulLiteral","src":"29222:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"29225:77:32","nodeType":"YulLiteral","src":"29225:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"29215:6:32","nodeType":"YulIdentifier","src":"29215:6:32"},"nativeSrc":"29215:88:32","nodeType":"YulFunctionCall","src":"29215:88:32"},"nativeSrc":"29215:88:32","nodeType":"YulExpressionStatement","src":"29215:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29319:1:32","nodeType":"YulLiteral","src":"29319:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"29322:4:32","nodeType":"YulLiteral","src":"29322:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"29312:6:32","nodeType":"YulIdentifier","src":"29312:6:32"},"nativeSrc":"29312:15:32","nodeType":"YulFunctionCall","src":"29312:15:32"},"nativeSrc":"29312:15:32","nodeType":"YulExpressionStatement","src":"29312:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29343:1:32","nodeType":"YulLiteral","src":"29343:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"29346:4:32","nodeType":"YulLiteral","src":"29346:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"29336:6:32","nodeType":"YulIdentifier","src":"29336:6:32"},"nativeSrc":"29336:15:32","nodeType":"YulFunctionCall","src":"29336:15:32"},"nativeSrc":"29336:15:32","nodeType":"YulExpressionStatement","src":"29336:15:32"}]},"name":"panic_error_0x11","nativeSrc":"29177:180:32","nodeType":"YulFunctionDefinition","src":"29177:180:32"},{"body":{"nativeSrc":"29411:362:32","nodeType":"YulBlock","src":"29411:362:32","statements":[{"nativeSrc":"29421:25:32","nodeType":"YulAssignment","src":"29421:25:32","value":{"arguments":[{"name":"x","nativeSrc":"29444:1:32","nodeType":"YulIdentifier","src":"29444:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"29426:17:32","nodeType":"YulIdentifier","src":"29426:17:32"},"nativeSrc":"29426:20:32","nodeType":"YulFunctionCall","src":"29426:20:32"},"variableNames":[{"name":"x","nativeSrc":"29421:1:32","nodeType":"YulIdentifier","src":"29421:1:32"}]},{"nativeSrc":"29455:25:32","nodeType":"YulAssignment","src":"29455:25:32","value":{"arguments":[{"name":"y","nativeSrc":"29478:1:32","nodeType":"YulIdentifier","src":"29478:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"29460:17:32","nodeType":"YulIdentifier","src":"29460:17:32"},"nativeSrc":"29460:20:32","nodeType":"YulFunctionCall","src":"29460:20:32"},"variableNames":[{"name":"y","nativeSrc":"29455:1:32","nodeType":"YulIdentifier","src":"29455:1:32"}]},{"nativeSrc":"29489:28:32","nodeType":"YulVariableDeclaration","src":"29489:28:32","value":{"arguments":[{"name":"x","nativeSrc":"29512:1:32","nodeType":"YulIdentifier","src":"29512:1:32"},{"name":"y","nativeSrc":"29515:1:32","nodeType":"YulIdentifier","src":"29515:1:32"}],"functionName":{"name":"mul","nativeSrc":"29508:3:32","nodeType":"YulIdentifier","src":"29508:3:32"},"nativeSrc":"29508:9:32","nodeType":"YulFunctionCall","src":"29508:9:32"},"variables":[{"name":"product_raw","nativeSrc":"29493:11:32","nodeType":"YulTypedName","src":"29493:11:32","type":""}]},{"nativeSrc":"29526:41:32","nodeType":"YulAssignment","src":"29526:41:32","value":{"arguments":[{"name":"product_raw","nativeSrc":"29555:11:32","nodeType":"YulIdentifier","src":"29555:11:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"29537:17:32","nodeType":"YulIdentifier","src":"29537:17:32"},"nativeSrc":"29537:30:32","nodeType":"YulFunctionCall","src":"29537:30:32"},"variableNames":[{"name":"product","nativeSrc":"29526:7:32","nodeType":"YulIdentifier","src":"29526:7:32"}]},{"body":{"nativeSrc":"29744:22:32","nodeType":"YulBlock","src":"29744:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"29746:16:32","nodeType":"YulIdentifier","src":"29746:16:32"},"nativeSrc":"29746:18:32","nodeType":"YulFunctionCall","src":"29746:18:32"},"nativeSrc":"29746:18:32","nodeType":"YulExpressionStatement","src":"29746:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"29677:1:32","nodeType":"YulIdentifier","src":"29677:1:32"}],"functionName":{"name":"iszero","nativeSrc":"29670:6:32","nodeType":"YulIdentifier","src":"29670:6:32"},"nativeSrc":"29670:9:32","nodeType":"YulFunctionCall","src":"29670:9:32"},{"arguments":[{"name":"y","nativeSrc":"29700:1:32","nodeType":"YulIdentifier","src":"29700:1:32"},{"arguments":[{"name":"product","nativeSrc":"29707:7:32","nodeType":"YulIdentifier","src":"29707:7:32"},{"name":"x","nativeSrc":"29716:1:32","nodeType":"YulIdentifier","src":"29716:1:32"}],"functionName":{"name":"div","nativeSrc":"29703:3:32","nodeType":"YulIdentifier","src":"29703:3:32"},"nativeSrc":"29703:15:32","nodeType":"YulFunctionCall","src":"29703:15:32"}],"functionName":{"name":"eq","nativeSrc":"29697:2:32","nodeType":"YulIdentifier","src":"29697:2:32"},"nativeSrc":"29697:22:32","nodeType":"YulFunctionCall","src":"29697:22:32"}],"functionName":{"name":"or","nativeSrc":"29650:2:32","nodeType":"YulIdentifier","src":"29650:2:32"},"nativeSrc":"29650:83:32","nodeType":"YulFunctionCall","src":"29650:83:32"}],"functionName":{"name":"iszero","nativeSrc":"29630:6:32","nodeType":"YulIdentifier","src":"29630:6:32"},"nativeSrc":"29630:113:32","nodeType":"YulFunctionCall","src":"29630:113:32"},"nativeSrc":"29627:139:32","nodeType":"YulIf","src":"29627:139:32"}]},"name":"checked_mul_t_uint256","nativeSrc":"29363:410:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"29394:1:32","nodeType":"YulTypedName","src":"29394:1:32","type":""},{"name":"y","nativeSrc":"29397:1:32","nodeType":"YulTypedName","src":"29397:1:32","type":""}],"returnVariables":[{"name":"product","nativeSrc":"29403:7:32","nodeType":"YulTypedName","src":"29403:7:32","type":""}],"src":"29363:410:32"},{"body":{"nativeSrc":"29807:152:32","nodeType":"YulBlock","src":"29807:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"29824:1:32","nodeType":"YulLiteral","src":"29824:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"29827:77:32","nodeType":"YulLiteral","src":"29827:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"29817:6:32","nodeType":"YulIdentifier","src":"29817:6:32"},"nativeSrc":"29817:88:32","nodeType":"YulFunctionCall","src":"29817:88:32"},"nativeSrc":"29817:88:32","nodeType":"YulExpressionStatement","src":"29817:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29921:1:32","nodeType":"YulLiteral","src":"29921:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"29924:4:32","nodeType":"YulLiteral","src":"29924:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"29914:6:32","nodeType":"YulIdentifier","src":"29914:6:32"},"nativeSrc":"29914:15:32","nodeType":"YulFunctionCall","src":"29914:15:32"},"nativeSrc":"29914:15:32","nodeType":"YulExpressionStatement","src":"29914:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"29945:1:32","nodeType":"YulLiteral","src":"29945:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"29948:4:32","nodeType":"YulLiteral","src":"29948:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"29938:6:32","nodeType":"YulIdentifier","src":"29938:6:32"},"nativeSrc":"29938:15:32","nodeType":"YulFunctionCall","src":"29938:15:32"},"nativeSrc":"29938:15:32","nodeType":"YulExpressionStatement","src":"29938:15:32"}]},"name":"panic_error_0x12","nativeSrc":"29779:180:32","nodeType":"YulFunctionDefinition","src":"29779:180:32"},{"body":{"nativeSrc":"30007:143:32","nodeType":"YulBlock","src":"30007:143:32","statements":[{"nativeSrc":"30017:25:32","nodeType":"YulAssignment","src":"30017:25:32","value":{"arguments":[{"name":"x","nativeSrc":"30040:1:32","nodeType":"YulIdentifier","src":"30040:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"30022:17:32","nodeType":"YulIdentifier","src":"30022:17:32"},"nativeSrc":"30022:20:32","nodeType":"YulFunctionCall","src":"30022:20:32"},"variableNames":[{"name":"x","nativeSrc":"30017:1:32","nodeType":"YulIdentifier","src":"30017:1:32"}]},{"nativeSrc":"30051:25:32","nodeType":"YulAssignment","src":"30051:25:32","value":{"arguments":[{"name":"y","nativeSrc":"30074:1:32","nodeType":"YulIdentifier","src":"30074:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"30056:17:32","nodeType":"YulIdentifier","src":"30056:17:32"},"nativeSrc":"30056:20:32","nodeType":"YulFunctionCall","src":"30056:20:32"},"variableNames":[{"name":"y","nativeSrc":"30051:1:32","nodeType":"YulIdentifier","src":"30051:1:32"}]},{"body":{"nativeSrc":"30098:22:32","nodeType":"YulBlock","src":"30098:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"30100:16:32","nodeType":"YulIdentifier","src":"30100:16:32"},"nativeSrc":"30100:18:32","nodeType":"YulFunctionCall","src":"30100:18:32"},"nativeSrc":"30100:18:32","nodeType":"YulExpressionStatement","src":"30100:18:32"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"30095:1:32","nodeType":"YulIdentifier","src":"30095:1:32"}],"functionName":{"name":"iszero","nativeSrc":"30088:6:32","nodeType":"YulIdentifier","src":"30088:6:32"},"nativeSrc":"30088:9:32","nodeType":"YulFunctionCall","src":"30088:9:32"},"nativeSrc":"30085:35:32","nodeType":"YulIf","src":"30085:35:32"},{"nativeSrc":"30130:14:32","nodeType":"YulAssignment","src":"30130:14:32","value":{"arguments":[{"name":"x","nativeSrc":"30139:1:32","nodeType":"YulIdentifier","src":"30139:1:32"},{"name":"y","nativeSrc":"30142:1:32","nodeType":"YulIdentifier","src":"30142:1:32"}],"functionName":{"name":"div","nativeSrc":"30135:3:32","nodeType":"YulIdentifier","src":"30135:3:32"},"nativeSrc":"30135:9:32","nodeType":"YulFunctionCall","src":"30135:9:32"},"variableNames":[{"name":"r","nativeSrc":"30130:1:32","nodeType":"YulIdentifier","src":"30130:1:32"}]}]},"name":"checked_div_t_uint256","nativeSrc":"29965:185:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"29996:1:32","nodeType":"YulTypedName","src":"29996:1:32","type":""},{"name":"y","nativeSrc":"29999:1:32","nodeType":"YulTypedName","src":"29999:1:32","type":""}],"returnVariables":[{"name":"r","nativeSrc":"30005:1:32","nodeType":"YulTypedName","src":"30005:1:32","type":""}],"src":"29965:185:32"},{"body":{"nativeSrc":"30262:66:32","nodeType":"YulBlock","src":"30262:66:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"30284:6:32","nodeType":"YulIdentifier","src":"30284:6:32"},{"kind":"number","nativeSrc":"30292:1:32","nodeType":"YulLiteral","src":"30292:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30280:3:32","nodeType":"YulIdentifier","src":"30280:3:32"},"nativeSrc":"30280:14:32","nodeType":"YulFunctionCall","src":"30280:14:32"},{"hexValue":"4e6f2062616c616e636520746f207769746864726177","kind":"string","nativeSrc":"30296:24:32","nodeType":"YulLiteral","src":"30296:24:32","type":"","value":"No balance to withdraw"}],"functionName":{"name":"mstore","nativeSrc":"30273:6:32","nodeType":"YulIdentifier","src":"30273:6:32"},"nativeSrc":"30273:48:32","nodeType":"YulFunctionCall","src":"30273:48:32"},"nativeSrc":"30273:48:32","nodeType":"YulExpressionStatement","src":"30273:48:32"}]},"name":"store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5","nativeSrc":"30156:172:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"30254:6:32","nodeType":"YulTypedName","src":"30254:6:32","type":""}],"src":"30156:172:32"},{"body":{"nativeSrc":"30480:220:32","nodeType":"YulBlock","src":"30480:220:32","statements":[{"nativeSrc":"30490:74:32","nodeType":"YulAssignment","src":"30490:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"30556:3:32","nodeType":"YulIdentifier","src":"30556:3:32"},{"kind":"number","nativeSrc":"30561:2:32","nodeType":"YulLiteral","src":"30561:2:32","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"30497:58:32","nodeType":"YulIdentifier","src":"30497:58:32"},"nativeSrc":"30497:67:32","nodeType":"YulFunctionCall","src":"30497:67:32"},"variableNames":[{"name":"pos","nativeSrc":"30490:3:32","nodeType":"YulIdentifier","src":"30490:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"30662:3:32","nodeType":"YulIdentifier","src":"30662:3:32"}],"functionName":{"name":"store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5","nativeSrc":"30573:88:32","nodeType":"YulIdentifier","src":"30573:88:32"},"nativeSrc":"30573:93:32","nodeType":"YulFunctionCall","src":"30573:93:32"},"nativeSrc":"30573:93:32","nodeType":"YulExpressionStatement","src":"30573:93:32"},{"nativeSrc":"30675:19:32","nodeType":"YulAssignment","src":"30675:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"30686:3:32","nodeType":"YulIdentifier","src":"30686:3:32"},{"kind":"number","nativeSrc":"30691:2:32","nodeType":"YulLiteral","src":"30691:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30682:3:32","nodeType":"YulIdentifier","src":"30682:3:32"},"nativeSrc":"30682:12:32","nodeType":"YulFunctionCall","src":"30682:12:32"},"variableNames":[{"name":"end","nativeSrc":"30675:3:32","nodeType":"YulIdentifier","src":"30675:3:32"}]}]},"name":"abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack","nativeSrc":"30334:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"30468:3:32","nodeType":"YulTypedName","src":"30468:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30476:3:32","nodeType":"YulTypedName","src":"30476:3:32","type":""}],"src":"30334:366:32"},{"body":{"nativeSrc":"30877:248:32","nodeType":"YulBlock","src":"30877:248:32","statements":[{"nativeSrc":"30887:26:32","nodeType":"YulAssignment","src":"30887:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"30899:9:32","nodeType":"YulIdentifier","src":"30899:9:32"},{"kind":"number","nativeSrc":"30910:2:32","nodeType":"YulLiteral","src":"30910:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30895:3:32","nodeType":"YulIdentifier","src":"30895:3:32"},"nativeSrc":"30895:18:32","nodeType":"YulFunctionCall","src":"30895:18:32"},"variableNames":[{"name":"tail","nativeSrc":"30887:4:32","nodeType":"YulIdentifier","src":"30887:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30934:9:32","nodeType":"YulIdentifier","src":"30934:9:32"},{"kind":"number","nativeSrc":"30945:1:32","nodeType":"YulLiteral","src":"30945:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30930:3:32","nodeType":"YulIdentifier","src":"30930:3:32"},"nativeSrc":"30930:17:32","nodeType":"YulFunctionCall","src":"30930:17:32"},{"arguments":[{"name":"tail","nativeSrc":"30953:4:32","nodeType":"YulIdentifier","src":"30953:4:32"},{"name":"headStart","nativeSrc":"30959:9:32","nodeType":"YulIdentifier","src":"30959:9:32"}],"functionName":{"name":"sub","nativeSrc":"30949:3:32","nodeType":"YulIdentifier","src":"30949:3:32"},"nativeSrc":"30949:20:32","nodeType":"YulFunctionCall","src":"30949:20:32"}],"functionName":{"name":"mstore","nativeSrc":"30923:6:32","nodeType":"YulIdentifier","src":"30923:6:32"},"nativeSrc":"30923:47:32","nodeType":"YulFunctionCall","src":"30923:47:32"},"nativeSrc":"30923:47:32","nodeType":"YulExpressionStatement","src":"30923:47:32"},{"nativeSrc":"30979:139:32","nodeType":"YulAssignment","src":"30979:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"31113:4:32","nodeType":"YulIdentifier","src":"31113:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack","nativeSrc":"30987:124:32","nodeType":"YulIdentifier","src":"30987:124:32"},"nativeSrc":"30987:131:32","nodeType":"YulFunctionCall","src":"30987:131:32"},"variableNames":[{"name":"tail","nativeSrc":"30979:4:32","nodeType":"YulIdentifier","src":"30979:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"30706:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30857:9:32","nodeType":"YulTypedName","src":"30857:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30872:4:32","nodeType":"YulTypedName","src":"30872:4:32","type":""}],"src":"30706:419:32"},{"body":{"nativeSrc":"31244:34:32","nodeType":"YulBlock","src":"31244:34:32","statements":[{"nativeSrc":"31254:18:32","nodeType":"YulAssignment","src":"31254:18:32","value":{"name":"pos","nativeSrc":"31269:3:32","nodeType":"YulIdentifier","src":"31269:3:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"31254:11:32","nodeType":"YulIdentifier","src":"31254:11:32"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"31131:147:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31216:3:32","nodeType":"YulTypedName","src":"31216:3:32","type":""},{"name":"length","nativeSrc":"31221:6:32","nodeType":"YulTypedName","src":"31221:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"31232:11:32","nodeType":"YulTypedName","src":"31232:11:32","type":""}],"src":"31131:147:32"},{"body":{"nativeSrc":"31390:8:32","nodeType":"YulBlock","src":"31390:8:32","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"31284:114:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"31382:6:32","nodeType":"YulTypedName","src":"31382:6:32","type":""}],"src":"31284:114:32"},{"body":{"nativeSrc":"31567:235:32","nodeType":"YulBlock","src":"31567:235:32","statements":[{"nativeSrc":"31577:90:32","nodeType":"YulAssignment","src":"31577:90:32","value":{"arguments":[{"name":"pos","nativeSrc":"31660:3:32","nodeType":"YulIdentifier","src":"31660:3:32"},{"kind":"number","nativeSrc":"31665:1:32","nodeType":"YulLiteral","src":"31665:1:32","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"31584:75:32","nodeType":"YulIdentifier","src":"31584:75:32"},"nativeSrc":"31584:83:32","nodeType":"YulFunctionCall","src":"31584:83:32"},"variableNames":[{"name":"pos","nativeSrc":"31577:3:32","nodeType":"YulIdentifier","src":"31577:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"31765:3:32","nodeType":"YulIdentifier","src":"31765:3:32"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"31676:88:32","nodeType":"YulIdentifier","src":"31676:88:32"},"nativeSrc":"31676:93:32","nodeType":"YulFunctionCall","src":"31676:93:32"},"nativeSrc":"31676:93:32","nodeType":"YulExpressionStatement","src":"31676:93:32"},{"nativeSrc":"31778:18:32","nodeType":"YulAssignment","src":"31778:18:32","value":{"arguments":[{"name":"pos","nativeSrc":"31789:3:32","nodeType":"YulIdentifier","src":"31789:3:32"},{"kind":"number","nativeSrc":"31794:1:32","nodeType":"YulLiteral","src":"31794:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31785:3:32","nodeType":"YulIdentifier","src":"31785:3:32"},"nativeSrc":"31785:11:32","nodeType":"YulFunctionCall","src":"31785:11:32"},"variableNames":[{"name":"end","nativeSrc":"31778:3:32","nodeType":"YulIdentifier","src":"31778:3:32"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"31404:398:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31555:3:32","nodeType":"YulTypedName","src":"31555:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31563:3:32","nodeType":"YulTypedName","src":"31563:3:32","type":""}],"src":"31404:398:32"},{"body":{"nativeSrc":"31996:191:32","nodeType":"YulBlock","src":"31996:191:32","statements":[{"nativeSrc":"32007:154:32","nodeType":"YulAssignment","src":"32007:154:32","value":{"arguments":[{"name":"pos","nativeSrc":"32157:3:32","nodeType":"YulIdentifier","src":"32157:3:32"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"32014:141:32","nodeType":"YulIdentifier","src":"32014:141:32"},"nativeSrc":"32014:147:32","nodeType":"YulFunctionCall","src":"32014:147:32"},"variableNames":[{"name":"pos","nativeSrc":"32007:3:32","nodeType":"YulIdentifier","src":"32007:3:32"}]},{"nativeSrc":"32171:10:32","nodeType":"YulAssignment","src":"32171:10:32","value":{"name":"pos","nativeSrc":"32178:3:32","nodeType":"YulIdentifier","src":"32178:3:32"},"variableNames":[{"name":"end","nativeSrc":"32171:3:32","nodeType":"YulIdentifier","src":"32171:3:32"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"31808:379:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31983:3:32","nodeType":"YulTypedName","src":"31983:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31992:3:32","nodeType":"YulTypedName","src":"31992:3:32","type":""}],"src":"31808:379:32"},{"body":{"nativeSrc":"32299:62:32","nodeType":"YulBlock","src":"32299:62:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"32321:6:32","nodeType":"YulIdentifier","src":"32321:6:32"},{"kind":"number","nativeSrc":"32329:1:32","nodeType":"YulLiteral","src":"32329:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32317:3:32","nodeType":"YulIdentifier","src":"32317:3:32"},"nativeSrc":"32317:14:32","nodeType":"YulFunctionCall","src":"32317:14:32"},{"hexValue":"496e76616c69642074696d652072616e6765","kind":"string","nativeSrc":"32333:20:32","nodeType":"YulLiteral","src":"32333:20:32","type":"","value":"Invalid time range"}],"functionName":{"name":"mstore","nativeSrc":"32310:6:32","nodeType":"YulIdentifier","src":"32310:6:32"},"nativeSrc":"32310:44:32","nodeType":"YulFunctionCall","src":"32310:44:32"},"nativeSrc":"32310:44:32","nodeType":"YulExpressionStatement","src":"32310:44:32"}]},"name":"store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc","nativeSrc":"32193:168:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"32291:6:32","nodeType":"YulTypedName","src":"32291:6:32","type":""}],"src":"32193:168:32"},{"body":{"nativeSrc":"32513:220:32","nodeType":"YulBlock","src":"32513:220:32","statements":[{"nativeSrc":"32523:74:32","nodeType":"YulAssignment","src":"32523:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"32589:3:32","nodeType":"YulIdentifier","src":"32589:3:32"},{"kind":"number","nativeSrc":"32594:2:32","nodeType":"YulLiteral","src":"32594:2:32","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"32530:58:32","nodeType":"YulIdentifier","src":"32530:58:32"},"nativeSrc":"32530:67:32","nodeType":"YulFunctionCall","src":"32530:67:32"},"variableNames":[{"name":"pos","nativeSrc":"32523:3:32","nodeType":"YulIdentifier","src":"32523:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"32695:3:32","nodeType":"YulIdentifier","src":"32695:3:32"}],"functionName":{"name":"store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc","nativeSrc":"32606:88:32","nodeType":"YulIdentifier","src":"32606:88:32"},"nativeSrc":"32606:93:32","nodeType":"YulFunctionCall","src":"32606:93:32"},"nativeSrc":"32606:93:32","nodeType":"YulExpressionStatement","src":"32606:93:32"},{"nativeSrc":"32708:19:32","nodeType":"YulAssignment","src":"32708:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"32719:3:32","nodeType":"YulIdentifier","src":"32719:3:32"},{"kind":"number","nativeSrc":"32724:2:32","nodeType":"YulLiteral","src":"32724:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32715:3:32","nodeType":"YulIdentifier","src":"32715:3:32"},"nativeSrc":"32715:12:32","nodeType":"YulFunctionCall","src":"32715:12:32"},"variableNames":[{"name":"end","nativeSrc":"32708:3:32","nodeType":"YulIdentifier","src":"32708:3:32"}]}]},"name":"abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack","nativeSrc":"32367:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"32501:3:32","nodeType":"YulTypedName","src":"32501:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"32509:3:32","nodeType":"YulTypedName","src":"32509:3:32","type":""}],"src":"32367:366:32"},{"body":{"nativeSrc":"32910:248:32","nodeType":"YulBlock","src":"32910:248:32","statements":[{"nativeSrc":"32920:26:32","nodeType":"YulAssignment","src":"32920:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"32932:9:32","nodeType":"YulIdentifier","src":"32932:9:32"},{"kind":"number","nativeSrc":"32943:2:32","nodeType":"YulLiteral","src":"32943:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32928:3:32","nodeType":"YulIdentifier","src":"32928:3:32"},"nativeSrc":"32928:18:32","nodeType":"YulFunctionCall","src":"32928:18:32"},"variableNames":[{"name":"tail","nativeSrc":"32920:4:32","nodeType":"YulIdentifier","src":"32920:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32967:9:32","nodeType":"YulIdentifier","src":"32967:9:32"},{"kind":"number","nativeSrc":"32978:1:32","nodeType":"YulLiteral","src":"32978:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32963:3:32","nodeType":"YulIdentifier","src":"32963:3:32"},"nativeSrc":"32963:17:32","nodeType":"YulFunctionCall","src":"32963:17:32"},{"arguments":[{"name":"tail","nativeSrc":"32986:4:32","nodeType":"YulIdentifier","src":"32986:4:32"},{"name":"headStart","nativeSrc":"32992:9:32","nodeType":"YulIdentifier","src":"32992:9:32"}],"functionName":{"name":"sub","nativeSrc":"32982:3:32","nodeType":"YulIdentifier","src":"32982:3:32"},"nativeSrc":"32982:20:32","nodeType":"YulFunctionCall","src":"32982:20:32"}],"functionName":{"name":"mstore","nativeSrc":"32956:6:32","nodeType":"YulIdentifier","src":"32956:6:32"},"nativeSrc":"32956:47:32","nodeType":"YulFunctionCall","src":"32956:47:32"},"nativeSrc":"32956:47:32","nodeType":"YulExpressionStatement","src":"32956:47:32"},{"nativeSrc":"33012:139:32","nodeType":"YulAssignment","src":"33012:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"33146:4:32","nodeType":"YulIdentifier","src":"33146:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack","nativeSrc":"33020:124:32","nodeType":"YulIdentifier","src":"33020:124:32"},"nativeSrc":"33020:131:32","nodeType":"YulFunctionCall","src":"33020:131:32"},"variableNames":[{"name":"tail","nativeSrc":"33012:4:32","nodeType":"YulIdentifier","src":"33012:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"32739:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32890:9:32","nodeType":"YulTypedName","src":"32890:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32905:4:32","nodeType":"YulTypedName","src":"32905:4:32","type":""}],"src":"32739:419:32"},{"body":{"nativeSrc":"33270:124:32","nodeType":"YulBlock","src":"33270:124:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"33292:6:32","nodeType":"YulIdentifier","src":"33292:6:32"},{"kind":"number","nativeSrc":"33300:1:32","nodeType":"YulLiteral","src":"33300:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33288:3:32","nodeType":"YulIdentifier","src":"33288:3:32"},"nativeSrc":"33288:14:32","nodeType":"YulFunctionCall","src":"33288:14:32"},{"hexValue":"496e76616c6964206d6178207065722077616c6c657420666f72206e6f6e2d70","kind":"string","nativeSrc":"33304:34:32","nodeType":"YulLiteral","src":"33304:34:32","type":"","value":"Invalid max per wallet for non-p"}],"functionName":{"name":"mstore","nativeSrc":"33281:6:32","nodeType":"YulIdentifier","src":"33281:6:32"},"nativeSrc":"33281:58:32","nodeType":"YulFunctionCall","src":"33281:58:32"},"nativeSrc":"33281:58:32","nodeType":"YulExpressionStatement","src":"33281:58:32"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"33360:6:32","nodeType":"YulIdentifier","src":"33360:6:32"},{"kind":"number","nativeSrc":"33368:2:32","nodeType":"YulLiteral","src":"33368:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33356:3:32","nodeType":"YulIdentifier","src":"33356:3:32"},"nativeSrc":"33356:15:32","nodeType":"YulFunctionCall","src":"33356:15:32"},{"hexValue":"75626c6963207068617365","kind":"string","nativeSrc":"33373:13:32","nodeType":"YulLiteral","src":"33373:13:32","type":"","value":"ublic phase"}],"functionName":{"name":"mstore","nativeSrc":"33349:6:32","nodeType":"YulIdentifier","src":"33349:6:32"},"nativeSrc":"33349:38:32","nodeType":"YulFunctionCall","src":"33349:38:32"},"nativeSrc":"33349:38:32","nodeType":"YulExpressionStatement","src":"33349:38:32"}]},"name":"store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3","nativeSrc":"33164:230:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"33262:6:32","nodeType":"YulTypedName","src":"33262:6:32","type":""}],"src":"33164:230:32"},{"body":{"nativeSrc":"33546:220:32","nodeType":"YulBlock","src":"33546:220:32","statements":[{"nativeSrc":"33556:74:32","nodeType":"YulAssignment","src":"33556:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"33622:3:32","nodeType":"YulIdentifier","src":"33622:3:32"},{"kind":"number","nativeSrc":"33627:2:32","nodeType":"YulLiteral","src":"33627:2:32","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"33563:58:32","nodeType":"YulIdentifier","src":"33563:58:32"},"nativeSrc":"33563:67:32","nodeType":"YulFunctionCall","src":"33563:67:32"},"variableNames":[{"name":"pos","nativeSrc":"33556:3:32","nodeType":"YulIdentifier","src":"33556:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"33728:3:32","nodeType":"YulIdentifier","src":"33728:3:32"}],"functionName":{"name":"store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3","nativeSrc":"33639:88:32","nodeType":"YulIdentifier","src":"33639:88:32"},"nativeSrc":"33639:93:32","nodeType":"YulFunctionCall","src":"33639:93:32"},"nativeSrc":"33639:93:32","nodeType":"YulExpressionStatement","src":"33639:93:32"},{"nativeSrc":"33741:19:32","nodeType":"YulAssignment","src":"33741:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"33752:3:32","nodeType":"YulIdentifier","src":"33752:3:32"},{"kind":"number","nativeSrc":"33757:2:32","nodeType":"YulLiteral","src":"33757:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"33748:3:32","nodeType":"YulIdentifier","src":"33748:3:32"},"nativeSrc":"33748:12:32","nodeType":"YulFunctionCall","src":"33748:12:32"},"variableNames":[{"name":"end","nativeSrc":"33741:3:32","nodeType":"YulIdentifier","src":"33741:3:32"}]}]},"name":"abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack","nativeSrc":"33400:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"33534:3:32","nodeType":"YulTypedName","src":"33534:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"33542:3:32","nodeType":"YulTypedName","src":"33542:3:32","type":""}],"src":"33400:366:32"},{"body":{"nativeSrc":"33943:248:32","nodeType":"YulBlock","src":"33943:248:32","statements":[{"nativeSrc":"33953:26:32","nodeType":"YulAssignment","src":"33953:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"33965:9:32","nodeType":"YulIdentifier","src":"33965:9:32"},{"kind":"number","nativeSrc":"33976:2:32","nodeType":"YulLiteral","src":"33976:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33961:3:32","nodeType":"YulIdentifier","src":"33961:3:32"},"nativeSrc":"33961:18:32","nodeType":"YulFunctionCall","src":"33961:18:32"},"variableNames":[{"name":"tail","nativeSrc":"33953:4:32","nodeType":"YulIdentifier","src":"33953:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"34000:9:32","nodeType":"YulIdentifier","src":"34000:9:32"},{"kind":"number","nativeSrc":"34011:1:32","nodeType":"YulLiteral","src":"34011:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33996:3:32","nodeType":"YulIdentifier","src":"33996:3:32"},"nativeSrc":"33996:17:32","nodeType":"YulFunctionCall","src":"33996:17:32"},{"arguments":[{"name":"tail","nativeSrc":"34019:4:32","nodeType":"YulIdentifier","src":"34019:4:32"},{"name":"headStart","nativeSrc":"34025:9:32","nodeType":"YulIdentifier","src":"34025:9:32"}],"functionName":{"name":"sub","nativeSrc":"34015:3:32","nodeType":"YulIdentifier","src":"34015:3:32"},"nativeSrc":"34015:20:32","nodeType":"YulFunctionCall","src":"34015:20:32"}],"functionName":{"name":"mstore","nativeSrc":"33989:6:32","nodeType":"YulIdentifier","src":"33989:6:32"},"nativeSrc":"33989:47:32","nodeType":"YulFunctionCall","src":"33989:47:32"},"nativeSrc":"33989:47:32","nodeType":"YulExpressionStatement","src":"33989:47:32"},{"nativeSrc":"34045:139:32","nodeType":"YulAssignment","src":"34045:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"34179:4:32","nodeType":"YulIdentifier","src":"34179:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack","nativeSrc":"34053:124:32","nodeType":"YulIdentifier","src":"34053:124:32"},"nativeSrc":"34053:131:32","nodeType":"YulFunctionCall","src":"34053:131:32"},"variableNames":[{"name":"tail","nativeSrc":"34045:4:32","nodeType":"YulIdentifier","src":"34045:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"33772:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33923:9:32","nodeType":"YulTypedName","src":"33923:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33938:4:32","nodeType":"YulTypedName","src":"33938:4:32","type":""}],"src":"33772:419:32"},{"body":{"nativeSrc":"34303:128:32","nodeType":"YulBlock","src":"34303:128:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"34325:6:32","nodeType":"YulIdentifier","src":"34325:6:32"},{"kind":"number","nativeSrc":"34333:1:32","nodeType":"YulLiteral","src":"34333:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34321:3:32","nodeType":"YulIdentifier","src":"34321:3:32"},"nativeSrc":"34321:14:32","nodeType":"YulFunctionCall","src":"34321:14:32"},{"hexValue":"496e76616c6964206d6178206d696e742070657220706861736520666f72206e","kind":"string","nativeSrc":"34337:34:32","nodeType":"YulLiteral","src":"34337:34:32","type":"","value":"Invalid max mint per phase for n"}],"functionName":{"name":"mstore","nativeSrc":"34314:6:32","nodeType":"YulIdentifier","src":"34314:6:32"},"nativeSrc":"34314:58:32","nodeType":"YulFunctionCall","src":"34314:58:32"},"nativeSrc":"34314:58:32","nodeType":"YulExpressionStatement","src":"34314:58:32"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"34393:6:32","nodeType":"YulIdentifier","src":"34393:6:32"},{"kind":"number","nativeSrc":"34401:2:32","nodeType":"YulLiteral","src":"34401:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34389:3:32","nodeType":"YulIdentifier","src":"34389:3:32"},"nativeSrc":"34389:15:32","nodeType":"YulFunctionCall","src":"34389:15:32"},{"hexValue":"6f6e2d7075626c6963207068617365","kind":"string","nativeSrc":"34406:17:32","nodeType":"YulLiteral","src":"34406:17:32","type":"","value":"on-public phase"}],"functionName":{"name":"mstore","nativeSrc":"34382:6:32","nodeType":"YulIdentifier","src":"34382:6:32"},"nativeSrc":"34382:42:32","nodeType":"YulFunctionCall","src":"34382:42:32"},"nativeSrc":"34382:42:32","nodeType":"YulExpressionStatement","src":"34382:42:32"}]},"name":"store_literal_in_memory_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c","nativeSrc":"34197:234:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"34295:6:32","nodeType":"YulTypedName","src":"34295:6:32","type":""}],"src":"34197:234:32"},{"body":{"nativeSrc":"34583:220:32","nodeType":"YulBlock","src":"34583:220:32","statements":[{"nativeSrc":"34593:74:32","nodeType":"YulAssignment","src":"34593:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"34659:3:32","nodeType":"YulIdentifier","src":"34659:3:32"},{"kind":"number","nativeSrc":"34664:2:32","nodeType":"YulLiteral","src":"34664:2:32","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"34600:58:32","nodeType":"YulIdentifier","src":"34600:58:32"},"nativeSrc":"34600:67:32","nodeType":"YulFunctionCall","src":"34600:67:32"},"variableNames":[{"name":"pos","nativeSrc":"34593:3:32","nodeType":"YulIdentifier","src":"34593:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"34765:3:32","nodeType":"YulIdentifier","src":"34765:3:32"}],"functionName":{"name":"store_literal_in_memory_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c","nativeSrc":"34676:88:32","nodeType":"YulIdentifier","src":"34676:88:32"},"nativeSrc":"34676:93:32","nodeType":"YulFunctionCall","src":"34676:93:32"},"nativeSrc":"34676:93:32","nodeType":"YulExpressionStatement","src":"34676:93:32"},{"nativeSrc":"34778:19:32","nodeType":"YulAssignment","src":"34778:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"34789:3:32","nodeType":"YulIdentifier","src":"34789:3:32"},{"kind":"number","nativeSrc":"34794:2:32","nodeType":"YulLiteral","src":"34794:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"34785:3:32","nodeType":"YulIdentifier","src":"34785:3:32"},"nativeSrc":"34785:12:32","nodeType":"YulFunctionCall","src":"34785:12:32"},"variableNames":[{"name":"end","nativeSrc":"34778:3:32","nodeType":"YulIdentifier","src":"34778:3:32"}]}]},"name":"abi_encode_t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c_to_t_string_memory_ptr_fromStack","nativeSrc":"34437:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"34571:3:32","nodeType":"YulTypedName","src":"34571:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"34579:3:32","nodeType":"YulTypedName","src":"34579:3:32","type":""}],"src":"34437:366:32"},{"body":{"nativeSrc":"34980:248:32","nodeType":"YulBlock","src":"34980:248:32","statements":[{"nativeSrc":"34990:26:32","nodeType":"YulAssignment","src":"34990:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"35002:9:32","nodeType":"YulIdentifier","src":"35002:9:32"},{"kind":"number","nativeSrc":"35013:2:32","nodeType":"YulLiteral","src":"35013:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34998:3:32","nodeType":"YulIdentifier","src":"34998:3:32"},"nativeSrc":"34998:18:32","nodeType":"YulFunctionCall","src":"34998:18:32"},"variableNames":[{"name":"tail","nativeSrc":"34990:4:32","nodeType":"YulIdentifier","src":"34990:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"35037:9:32","nodeType":"YulIdentifier","src":"35037:9:32"},{"kind":"number","nativeSrc":"35048:1:32","nodeType":"YulLiteral","src":"35048:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35033:3:32","nodeType":"YulIdentifier","src":"35033:3:32"},"nativeSrc":"35033:17:32","nodeType":"YulFunctionCall","src":"35033:17:32"},{"arguments":[{"name":"tail","nativeSrc":"35056:4:32","nodeType":"YulIdentifier","src":"35056:4:32"},{"name":"headStart","nativeSrc":"35062:9:32","nodeType":"YulIdentifier","src":"35062:9:32"}],"functionName":{"name":"sub","nativeSrc":"35052:3:32","nodeType":"YulIdentifier","src":"35052:3:32"},"nativeSrc":"35052:20:32","nodeType":"YulFunctionCall","src":"35052:20:32"}],"functionName":{"name":"mstore","nativeSrc":"35026:6:32","nodeType":"YulIdentifier","src":"35026:6:32"},"nativeSrc":"35026:47:32","nodeType":"YulFunctionCall","src":"35026:47:32"},"nativeSrc":"35026:47:32","nodeType":"YulExpressionStatement","src":"35026:47:32"},{"nativeSrc":"35082:139:32","nodeType":"YulAssignment","src":"35082:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"35216:4:32","nodeType":"YulIdentifier","src":"35216:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c_to_t_string_memory_ptr_fromStack","nativeSrc":"35090:124:32","nodeType":"YulIdentifier","src":"35090:124:32"},"nativeSrc":"35090:131:32","nodeType":"YulFunctionCall","src":"35090:131:32"},"variableNames":[{"name":"tail","nativeSrc":"35082:4:32","nodeType":"YulIdentifier","src":"35082:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"34809:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"34960:9:32","nodeType":"YulTypedName","src":"34960:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"34975:4:32","nodeType":"YulTypedName","src":"34975:4:32","type":""}],"src":"34809:419:32"},{"body":{"nativeSrc":"35340:121:32","nodeType":"YulBlock","src":"35340:121:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"35362:6:32","nodeType":"YulIdentifier","src":"35362:6:32"},{"kind":"number","nativeSrc":"35370:1:32","nodeType":"YulLiteral","src":"35370:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35358:3:32","nodeType":"YulIdentifier","src":"35358:3:32"},"nativeSrc":"35358:14:32","nodeType":"YulFunctionCall","src":"35358:14:32"},{"hexValue":"4d65726b6c6520726f6f7420726571756972656420666f722077686974656c69","kind":"string","nativeSrc":"35374:34:32","nodeType":"YulLiteral","src":"35374:34:32","type":"","value":"Merkle root required for whiteli"}],"functionName":{"name":"mstore","nativeSrc":"35351:6:32","nodeType":"YulIdentifier","src":"35351:6:32"},"nativeSrc":"35351:58:32","nodeType":"YulFunctionCall","src":"35351:58:32"},"nativeSrc":"35351:58:32","nodeType":"YulExpressionStatement","src":"35351:58:32"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"35430:6:32","nodeType":"YulIdentifier","src":"35430:6:32"},{"kind":"number","nativeSrc":"35438:2:32","nodeType":"YulLiteral","src":"35438:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35426:3:32","nodeType":"YulIdentifier","src":"35426:3:32"},"nativeSrc":"35426:15:32","nodeType":"YulFunctionCall","src":"35426:15:32"},{"hexValue":"7374207068617365","kind":"string","nativeSrc":"35443:10:32","nodeType":"YulLiteral","src":"35443:10:32","type":"","value":"st phase"}],"functionName":{"name":"mstore","nativeSrc":"35419:6:32","nodeType":"YulIdentifier","src":"35419:6:32"},"nativeSrc":"35419:35:32","nodeType":"YulFunctionCall","src":"35419:35:32"},"nativeSrc":"35419:35:32","nodeType":"YulExpressionStatement","src":"35419:35:32"}]},"name":"store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef","nativeSrc":"35234:227:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"35332:6:32","nodeType":"YulTypedName","src":"35332:6:32","type":""}],"src":"35234:227:32"},{"body":{"nativeSrc":"35613:220:32","nodeType":"YulBlock","src":"35613:220:32","statements":[{"nativeSrc":"35623:74:32","nodeType":"YulAssignment","src":"35623:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"35689:3:32","nodeType":"YulIdentifier","src":"35689:3:32"},{"kind":"number","nativeSrc":"35694:2:32","nodeType":"YulLiteral","src":"35694:2:32","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"35630:58:32","nodeType":"YulIdentifier","src":"35630:58:32"},"nativeSrc":"35630:67:32","nodeType":"YulFunctionCall","src":"35630:67:32"},"variableNames":[{"name":"pos","nativeSrc":"35623:3:32","nodeType":"YulIdentifier","src":"35623:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"35795:3:32","nodeType":"YulIdentifier","src":"35795:3:32"}],"functionName":{"name":"store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef","nativeSrc":"35706:88:32","nodeType":"YulIdentifier","src":"35706:88:32"},"nativeSrc":"35706:93:32","nodeType":"YulFunctionCall","src":"35706:93:32"},"nativeSrc":"35706:93:32","nodeType":"YulExpressionStatement","src":"35706:93:32"},{"nativeSrc":"35808:19:32","nodeType":"YulAssignment","src":"35808:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"35819:3:32","nodeType":"YulIdentifier","src":"35819:3:32"},{"kind":"number","nativeSrc":"35824:2:32","nodeType":"YulLiteral","src":"35824:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"35815:3:32","nodeType":"YulIdentifier","src":"35815:3:32"},"nativeSrc":"35815:12:32","nodeType":"YulFunctionCall","src":"35815:12:32"},"variableNames":[{"name":"end","nativeSrc":"35808:3:32","nodeType":"YulIdentifier","src":"35808:3:32"}]}]},"name":"abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack","nativeSrc":"35467:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"35601:3:32","nodeType":"YulTypedName","src":"35601:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"35609:3:32","nodeType":"YulTypedName","src":"35609:3:32","type":""}],"src":"35467:366:32"},{"body":{"nativeSrc":"36010:248:32","nodeType":"YulBlock","src":"36010:248:32","statements":[{"nativeSrc":"36020:26:32","nodeType":"YulAssignment","src":"36020:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"36032:9:32","nodeType":"YulIdentifier","src":"36032:9:32"},{"kind":"number","nativeSrc":"36043:2:32","nodeType":"YulLiteral","src":"36043:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36028:3:32","nodeType":"YulIdentifier","src":"36028:3:32"},"nativeSrc":"36028:18:32","nodeType":"YulFunctionCall","src":"36028:18:32"},"variableNames":[{"name":"tail","nativeSrc":"36020:4:32","nodeType":"YulIdentifier","src":"36020:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36067:9:32","nodeType":"YulIdentifier","src":"36067:9:32"},{"kind":"number","nativeSrc":"36078:1:32","nodeType":"YulLiteral","src":"36078:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36063:3:32","nodeType":"YulIdentifier","src":"36063:3:32"},"nativeSrc":"36063:17:32","nodeType":"YulFunctionCall","src":"36063:17:32"},{"arguments":[{"name":"tail","nativeSrc":"36086:4:32","nodeType":"YulIdentifier","src":"36086:4:32"},{"name":"headStart","nativeSrc":"36092:9:32","nodeType":"YulIdentifier","src":"36092:9:32"}],"functionName":{"name":"sub","nativeSrc":"36082:3:32","nodeType":"YulIdentifier","src":"36082:3:32"},"nativeSrc":"36082:20:32","nodeType":"YulFunctionCall","src":"36082:20:32"}],"functionName":{"name":"mstore","nativeSrc":"36056:6:32","nodeType":"YulIdentifier","src":"36056:6:32"},"nativeSrc":"36056:47:32","nodeType":"YulFunctionCall","src":"36056:47:32"},"nativeSrc":"36056:47:32","nodeType":"YulExpressionStatement","src":"36056:47:32"},{"nativeSrc":"36112:139:32","nodeType":"YulAssignment","src":"36112:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"36246:4:32","nodeType":"YulIdentifier","src":"36246:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack","nativeSrc":"36120:124:32","nodeType":"YulIdentifier","src":"36120:124:32"},"nativeSrc":"36120:131:32","nodeType":"YulFunctionCall","src":"36120:131:32"},"variableNames":[{"name":"tail","nativeSrc":"36112:4:32","nodeType":"YulIdentifier","src":"36112:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"35839:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35990:9:32","nodeType":"YulTypedName","src":"35990:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36005:4:32","nodeType":"YulTypedName","src":"36005:4:32","type":""}],"src":"35839:419:32"},{"body":{"nativeSrc":"36570:715:32","nodeType":"YulBlock","src":"36570:715:32","statements":[{"nativeSrc":"36580:27:32","nodeType":"YulAssignment","src":"36580:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"36592:9:32","nodeType":"YulIdentifier","src":"36592:9:32"},{"kind":"number","nativeSrc":"36603:3:32","nodeType":"YulLiteral","src":"36603:3:32","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"36588:3:32","nodeType":"YulIdentifier","src":"36588:3:32"},"nativeSrc":"36588:19:32","nodeType":"YulFunctionCall","src":"36588:19:32"},"variableNames":[{"name":"tail","nativeSrc":"36580:4:32","nodeType":"YulIdentifier","src":"36580:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"36673:6:32","nodeType":"YulIdentifier","src":"36673:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"36686:9:32","nodeType":"YulIdentifier","src":"36686:9:32"},{"kind":"number","nativeSrc":"36697:1:32","nodeType":"YulLiteral","src":"36697:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36682:3:32","nodeType":"YulIdentifier","src":"36682:3:32"},"nativeSrc":"36682:17:32","nodeType":"YulFunctionCall","src":"36682:17:32"}],"functionName":{"name":"abi_encode_t_enum$_PhaseType_$8454_to_t_uint8_fromStack","nativeSrc":"36617:55:32","nodeType":"YulIdentifier","src":"36617:55:32"},"nativeSrc":"36617:83:32","nodeType":"YulFunctionCall","src":"36617:83:32"},"nativeSrc":"36617:83:32","nodeType":"YulExpressionStatement","src":"36617:83:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"36754:6:32","nodeType":"YulIdentifier","src":"36754:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"36767:9:32","nodeType":"YulIdentifier","src":"36767:9:32"},{"kind":"number","nativeSrc":"36778:2:32","nodeType":"YulLiteral","src":"36778:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36763:3:32","nodeType":"YulIdentifier","src":"36763:3:32"},"nativeSrc":"36763:18:32","nodeType":"YulFunctionCall","src":"36763:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"36710:43:32","nodeType":"YulIdentifier","src":"36710:43:32"},"nativeSrc":"36710:72:32","nodeType":"YulFunctionCall","src":"36710:72:32"},"nativeSrc":"36710:72:32","nodeType":"YulExpressionStatement","src":"36710:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"36836:6:32","nodeType":"YulIdentifier","src":"36836:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"36849:9:32","nodeType":"YulIdentifier","src":"36849:9:32"},{"kind":"number","nativeSrc":"36860:2:32","nodeType":"YulLiteral","src":"36860:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"36845:3:32","nodeType":"YulIdentifier","src":"36845:3:32"},"nativeSrc":"36845:18:32","nodeType":"YulFunctionCall","src":"36845:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"36792:43:32","nodeType":"YulIdentifier","src":"36792:43:32"},"nativeSrc":"36792:72:32","nodeType":"YulFunctionCall","src":"36792:72:32"},"nativeSrc":"36792:72:32","nodeType":"YulExpressionStatement","src":"36792:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"36918:6:32","nodeType":"YulIdentifier","src":"36918:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"36931:9:32","nodeType":"YulIdentifier","src":"36931:9:32"},{"kind":"number","nativeSrc":"36942:2:32","nodeType":"YulLiteral","src":"36942:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"36927:3:32","nodeType":"YulIdentifier","src":"36927:3:32"},"nativeSrc":"36927:18:32","nodeType":"YulFunctionCall","src":"36927:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"36874:43:32","nodeType":"YulIdentifier","src":"36874:43:32"},"nativeSrc":"36874:72:32","nodeType":"YulFunctionCall","src":"36874:72:32"},"nativeSrc":"36874:72:32","nodeType":"YulExpressionStatement","src":"36874:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"37000:6:32","nodeType":"YulIdentifier","src":"37000:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"37013:9:32","nodeType":"YulIdentifier","src":"37013:9:32"},{"kind":"number","nativeSrc":"37024:3:32","nodeType":"YulLiteral","src":"37024:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"37009:3:32","nodeType":"YulIdentifier","src":"37009:3:32"},"nativeSrc":"37009:19:32","nodeType":"YulFunctionCall","src":"37009:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"36956:43:32","nodeType":"YulIdentifier","src":"36956:43:32"},"nativeSrc":"36956:73:32","nodeType":"YulFunctionCall","src":"36956:73:32"},"nativeSrc":"36956:73:32","nodeType":"YulExpressionStatement","src":"36956:73:32"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"37083:6:32","nodeType":"YulIdentifier","src":"37083:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"37096:9:32","nodeType":"YulIdentifier","src":"37096:9:32"},{"kind":"number","nativeSrc":"37107:3:32","nodeType":"YulLiteral","src":"37107:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"37092:3:32","nodeType":"YulIdentifier","src":"37092:3:32"},"nativeSrc":"37092:19:32","nodeType":"YulFunctionCall","src":"37092:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37039:43:32","nodeType":"YulIdentifier","src":"37039:43:32"},"nativeSrc":"37039:73:32","nodeType":"YulFunctionCall","src":"37039:73:32"},"nativeSrc":"37039:73:32","nodeType":"YulExpressionStatement","src":"37039:73:32"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"37166:6:32","nodeType":"YulIdentifier","src":"37166:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"37179:9:32","nodeType":"YulIdentifier","src":"37179:9:32"},{"kind":"number","nativeSrc":"37190:3:32","nodeType":"YulLiteral","src":"37190:3:32","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"37175:3:32","nodeType":"YulIdentifier","src":"37175:3:32"},"nativeSrc":"37175:19:32","nodeType":"YulFunctionCall","src":"37175:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37122:43:32","nodeType":"YulIdentifier","src":"37122:43:32"},"nativeSrc":"37122:73:32","nodeType":"YulFunctionCall","src":"37122:73:32"},"nativeSrc":"37122:73:32","nodeType":"YulExpressionStatement","src":"37122:73:32"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"37249:6:32","nodeType":"YulIdentifier","src":"37249:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"37262:9:32","nodeType":"YulIdentifier","src":"37262:9:32"},{"kind":"number","nativeSrc":"37273:3:32","nodeType":"YulLiteral","src":"37273:3:32","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"37258:3:32","nodeType":"YulIdentifier","src":"37258:3:32"},"nativeSrc":"37258:19:32","nodeType":"YulFunctionCall","src":"37258:19:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"37205:43:32","nodeType":"YulIdentifier","src":"37205:43:32"},"nativeSrc":"37205:73:32","nodeType":"YulFunctionCall","src":"37205:73:32"},"nativeSrc":"37205:73:32","nodeType":"YulExpressionStatement","src":"37205:73:32"}]},"name":"abi_encode_tuple_t_enum$_PhaseType_$8454_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nativeSrc":"36264:1021:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"36486:9:32","nodeType":"YulTypedName","src":"36486:9:32","type":""},{"name":"value7","nativeSrc":"36498:6:32","nodeType":"YulTypedName","src":"36498:6:32","type":""},{"name":"value6","nativeSrc":"36506:6:32","nodeType":"YulTypedName","src":"36506:6:32","type":""},{"name":"value5","nativeSrc":"36514:6:32","nodeType":"YulTypedName","src":"36514:6:32","type":""},{"name":"value4","nativeSrc":"36522:6:32","nodeType":"YulTypedName","src":"36522:6:32","type":""},{"name":"value3","nativeSrc":"36530:6:32","nodeType":"YulTypedName","src":"36530:6:32","type":""},{"name":"value2","nativeSrc":"36538:6:32","nodeType":"YulTypedName","src":"36538:6:32","type":""},{"name":"value1","nativeSrc":"36546:6:32","nodeType":"YulTypedName","src":"36546:6:32","type":""},{"name":"value0","nativeSrc":"36554:6:32","nodeType":"YulTypedName","src":"36554:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36565:4:32","nodeType":"YulTypedName","src":"36565:4:32","type":""}],"src":"36264:1021:32"},{"body":{"nativeSrc":"37397:74:32","nodeType":"YulBlock","src":"37397:74:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"37419:6:32","nodeType":"YulIdentifier","src":"37419:6:32"},{"kind":"number","nativeSrc":"37427:1:32","nodeType":"YulLiteral","src":"37427:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37415:3:32","nodeType":"YulIdentifier","src":"37415:3:32"},"nativeSrc":"37415:14:32","nodeType":"YulFunctionCall","src":"37415:14:32"},{"hexValue":"506c6174666f726d206665652063616e6e6f742065786365656420313025","kind":"string","nativeSrc":"37431:32:32","nodeType":"YulLiteral","src":"37431:32:32","type":"","value":"Platform fee cannot exceed 10%"}],"functionName":{"name":"mstore","nativeSrc":"37408:6:32","nodeType":"YulIdentifier","src":"37408:6:32"},"nativeSrc":"37408:56:32","nodeType":"YulFunctionCall","src":"37408:56:32"},"nativeSrc":"37408:56:32","nodeType":"YulExpressionStatement","src":"37408:56:32"}]},"name":"store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270","nativeSrc":"37291:180:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"37389:6:32","nodeType":"YulTypedName","src":"37389:6:32","type":""}],"src":"37291:180:32"},{"body":{"nativeSrc":"37623:220:32","nodeType":"YulBlock","src":"37623:220:32","statements":[{"nativeSrc":"37633:74:32","nodeType":"YulAssignment","src":"37633:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"37699:3:32","nodeType":"YulIdentifier","src":"37699:3:32"},{"kind":"number","nativeSrc":"37704:2:32","nodeType":"YulLiteral","src":"37704:2:32","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"37640:58:32","nodeType":"YulIdentifier","src":"37640:58:32"},"nativeSrc":"37640:67:32","nodeType":"YulFunctionCall","src":"37640:67:32"},"variableNames":[{"name":"pos","nativeSrc":"37633:3:32","nodeType":"YulIdentifier","src":"37633:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"37805:3:32","nodeType":"YulIdentifier","src":"37805:3:32"}],"functionName":{"name":"store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270","nativeSrc":"37716:88:32","nodeType":"YulIdentifier","src":"37716:88:32"},"nativeSrc":"37716:93:32","nodeType":"YulFunctionCall","src":"37716:93:32"},"nativeSrc":"37716:93:32","nodeType":"YulExpressionStatement","src":"37716:93:32"},{"nativeSrc":"37818:19:32","nodeType":"YulAssignment","src":"37818:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"37829:3:32","nodeType":"YulIdentifier","src":"37829:3:32"},{"kind":"number","nativeSrc":"37834:2:32","nodeType":"YulLiteral","src":"37834:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37825:3:32","nodeType":"YulIdentifier","src":"37825:3:32"},"nativeSrc":"37825:12:32","nodeType":"YulFunctionCall","src":"37825:12:32"},"variableNames":[{"name":"end","nativeSrc":"37818:3:32","nodeType":"YulIdentifier","src":"37818:3:32"}]}]},"name":"abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack","nativeSrc":"37477:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"37611:3:32","nodeType":"YulTypedName","src":"37611:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"37619:3:32","nodeType":"YulTypedName","src":"37619:3:32","type":""}],"src":"37477:366:32"},{"body":{"nativeSrc":"38020:248:32","nodeType":"YulBlock","src":"38020:248:32","statements":[{"nativeSrc":"38030:26:32","nodeType":"YulAssignment","src":"38030:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"38042:9:32","nodeType":"YulIdentifier","src":"38042:9:32"},{"kind":"number","nativeSrc":"38053:2:32","nodeType":"YulLiteral","src":"38053:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38038:3:32","nodeType":"YulIdentifier","src":"38038:3:32"},"nativeSrc":"38038:18:32","nodeType":"YulFunctionCall","src":"38038:18:32"},"variableNames":[{"name":"tail","nativeSrc":"38030:4:32","nodeType":"YulIdentifier","src":"38030:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"38077:9:32","nodeType":"YulIdentifier","src":"38077:9:32"},{"kind":"number","nativeSrc":"38088:1:32","nodeType":"YulLiteral","src":"38088:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38073:3:32","nodeType":"YulIdentifier","src":"38073:3:32"},"nativeSrc":"38073:17:32","nodeType":"YulFunctionCall","src":"38073:17:32"},{"arguments":[{"name":"tail","nativeSrc":"38096:4:32","nodeType":"YulIdentifier","src":"38096:4:32"},{"name":"headStart","nativeSrc":"38102:9:32","nodeType":"YulIdentifier","src":"38102:9:32"}],"functionName":{"name":"sub","nativeSrc":"38092:3:32","nodeType":"YulIdentifier","src":"38092:3:32"},"nativeSrc":"38092:20:32","nodeType":"YulFunctionCall","src":"38092:20:32"}],"functionName":{"name":"mstore","nativeSrc":"38066:6:32","nodeType":"YulIdentifier","src":"38066:6:32"},"nativeSrc":"38066:47:32","nodeType":"YulFunctionCall","src":"38066:47:32"},"nativeSrc":"38066:47:32","nodeType":"YulExpressionStatement","src":"38066:47:32"},{"nativeSrc":"38122:139:32","nodeType":"YulAssignment","src":"38122:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"38256:4:32","nodeType":"YulIdentifier","src":"38256:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack","nativeSrc":"38130:124:32","nodeType":"YulIdentifier","src":"38130:124:32"},"nativeSrc":"38130:131:32","nodeType":"YulFunctionCall","src":"38130:131:32"},"variableNames":[{"name":"tail","nativeSrc":"38122:4:32","nodeType":"YulIdentifier","src":"38122:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"37849:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38000:9:32","nodeType":"YulTypedName","src":"38000:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38015:4:32","nodeType":"YulTypedName","src":"38015:4:32","type":""}],"src":"37849:419:32"},{"body":{"nativeSrc":"38380:65:32","nodeType":"YulBlock","src":"38380:65:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"38402:6:32","nodeType":"YulIdentifier","src":"38402:6:32"},{"kind":"number","nativeSrc":"38410:1:32","nodeType":"YulLiteral","src":"38410:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38398:3:32","nodeType":"YulIdentifier","src":"38398:3:32"},"nativeSrc":"38398:14:32","nodeType":"YulFunctionCall","src":"38398:14:32"},{"hexValue":"496e76616c69642066656520726563697069656e74","kind":"string","nativeSrc":"38414:23:32","nodeType":"YulLiteral","src":"38414:23:32","type":"","value":"Invalid fee recipient"}],"functionName":{"name":"mstore","nativeSrc":"38391:6:32","nodeType":"YulIdentifier","src":"38391:6:32"},"nativeSrc":"38391:47:32","nodeType":"YulFunctionCall","src":"38391:47:32"},"nativeSrc":"38391:47:32","nodeType":"YulExpressionStatement","src":"38391:47:32"}]},"name":"store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361","nativeSrc":"38274:171:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"38372:6:32","nodeType":"YulTypedName","src":"38372:6:32","type":""}],"src":"38274:171:32"},{"body":{"nativeSrc":"38597:220:32","nodeType":"YulBlock","src":"38597:220:32","statements":[{"nativeSrc":"38607:74:32","nodeType":"YulAssignment","src":"38607:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"38673:3:32","nodeType":"YulIdentifier","src":"38673:3:32"},{"kind":"number","nativeSrc":"38678:2:32","nodeType":"YulLiteral","src":"38678:2:32","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"38614:58:32","nodeType":"YulIdentifier","src":"38614:58:32"},"nativeSrc":"38614:67:32","nodeType":"YulFunctionCall","src":"38614:67:32"},"variableNames":[{"name":"pos","nativeSrc":"38607:3:32","nodeType":"YulIdentifier","src":"38607:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"38779:3:32","nodeType":"YulIdentifier","src":"38779:3:32"}],"functionName":{"name":"store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361","nativeSrc":"38690:88:32","nodeType":"YulIdentifier","src":"38690:88:32"},"nativeSrc":"38690:93:32","nodeType":"YulFunctionCall","src":"38690:93:32"},"nativeSrc":"38690:93:32","nodeType":"YulExpressionStatement","src":"38690:93:32"},{"nativeSrc":"38792:19:32","nodeType":"YulAssignment","src":"38792:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"38803:3:32","nodeType":"YulIdentifier","src":"38803:3:32"},{"kind":"number","nativeSrc":"38808:2:32","nodeType":"YulLiteral","src":"38808:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38799:3:32","nodeType":"YulIdentifier","src":"38799:3:32"},"nativeSrc":"38799:12:32","nodeType":"YulFunctionCall","src":"38799:12:32"},"variableNames":[{"name":"end","nativeSrc":"38792:3:32","nodeType":"YulIdentifier","src":"38792:3:32"}]}]},"name":"abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack","nativeSrc":"38451:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"38585:3:32","nodeType":"YulTypedName","src":"38585:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"38593:3:32","nodeType":"YulTypedName","src":"38593:3:32","type":""}],"src":"38451:366:32"},{"body":{"nativeSrc":"38994:248:32","nodeType":"YulBlock","src":"38994:248:32","statements":[{"nativeSrc":"39004:26:32","nodeType":"YulAssignment","src":"39004:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"39016:9:32","nodeType":"YulIdentifier","src":"39016:9:32"},{"kind":"number","nativeSrc":"39027:2:32","nodeType":"YulLiteral","src":"39027:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39012:3:32","nodeType":"YulIdentifier","src":"39012:3:32"},"nativeSrc":"39012:18:32","nodeType":"YulFunctionCall","src":"39012:18:32"},"variableNames":[{"name":"tail","nativeSrc":"39004:4:32","nodeType":"YulIdentifier","src":"39004:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"39051:9:32","nodeType":"YulIdentifier","src":"39051:9:32"},{"kind":"number","nativeSrc":"39062:1:32","nodeType":"YulLiteral","src":"39062:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39047:3:32","nodeType":"YulIdentifier","src":"39047:3:32"},"nativeSrc":"39047:17:32","nodeType":"YulFunctionCall","src":"39047:17:32"},{"arguments":[{"name":"tail","nativeSrc":"39070:4:32","nodeType":"YulIdentifier","src":"39070:4:32"},{"name":"headStart","nativeSrc":"39076:9:32","nodeType":"YulIdentifier","src":"39076:9:32"}],"functionName":{"name":"sub","nativeSrc":"39066:3:32","nodeType":"YulIdentifier","src":"39066:3:32"},"nativeSrc":"39066:20:32","nodeType":"YulFunctionCall","src":"39066:20:32"}],"functionName":{"name":"mstore","nativeSrc":"39040:6:32","nodeType":"YulIdentifier","src":"39040:6:32"},"nativeSrc":"39040:47:32","nodeType":"YulFunctionCall","src":"39040:47:32"},"nativeSrc":"39040:47:32","nodeType":"YulExpressionStatement","src":"39040:47:32"},{"nativeSrc":"39096:139:32","nodeType":"YulAssignment","src":"39096:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"39230:4:32","nodeType":"YulIdentifier","src":"39230:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack","nativeSrc":"39104:124:32","nodeType":"YulIdentifier","src":"39104:124:32"},"nativeSrc":"39104:131:32","nodeType":"YulFunctionCall","src":"39104:131:32"},"variableNames":[{"name":"tail","nativeSrc":"39096:4:32","nodeType":"YulIdentifier","src":"39096:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"38823:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38974:9:32","nodeType":"YulTypedName","src":"38974:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38989:4:32","nodeType":"YulTypedName","src":"38989:4:32","type":""}],"src":"38823:419:32"},{"body":{"nativeSrc":"39372:204:32","nodeType":"YulBlock","src":"39372:204:32","statements":[{"nativeSrc":"39382:26:32","nodeType":"YulAssignment","src":"39382:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"39394:9:32","nodeType":"YulIdentifier","src":"39394:9:32"},{"kind":"number","nativeSrc":"39405:2:32","nodeType":"YulLiteral","src":"39405:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"39390:3:32","nodeType":"YulIdentifier","src":"39390:3:32"},"nativeSrc":"39390:18:32","nodeType":"YulFunctionCall","src":"39390:18:32"},"variableNames":[{"name":"tail","nativeSrc":"39382:4:32","nodeType":"YulIdentifier","src":"39382:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"39460:6:32","nodeType":"YulIdentifier","src":"39460:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"39473:9:32","nodeType":"YulIdentifier","src":"39473:9:32"},{"kind":"number","nativeSrc":"39484:1:32","nodeType":"YulLiteral","src":"39484:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39469:3:32","nodeType":"YulIdentifier","src":"39469:3:32"},"nativeSrc":"39469:17:32","nodeType":"YulFunctionCall","src":"39469:17:32"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nativeSrc":"39418:41:32","nodeType":"YulIdentifier","src":"39418:41:32"},"nativeSrc":"39418:69:32","nodeType":"YulFunctionCall","src":"39418:69:32"},"nativeSrc":"39418:69:32","nodeType":"YulExpressionStatement","src":"39418:69:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"39541:6:32","nodeType":"YulIdentifier","src":"39541:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"39554:9:32","nodeType":"YulIdentifier","src":"39554:9:32"},{"kind":"number","nativeSrc":"39565:2:32","nodeType":"YulLiteral","src":"39565:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39550:3:32","nodeType":"YulIdentifier","src":"39550:3:32"},"nativeSrc":"39550:18:32","nodeType":"YulFunctionCall","src":"39550:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"39497:43:32","nodeType":"YulIdentifier","src":"39497:43:32"},"nativeSrc":"39497:72:32","nodeType":"YulFunctionCall","src":"39497:72:32"},"nativeSrc":"39497:72:32","nodeType":"YulExpressionStatement","src":"39497:72:32"}]},"name":"abi_encode_tuple_t_uint96_t_address__to_t_uint96_t_address__fromStack_reversed","nativeSrc":"39248:328:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"39336:9:32","nodeType":"YulTypedName","src":"39336:9:32","type":""},{"name":"value1","nativeSrc":"39348:6:32","nodeType":"YulTypedName","src":"39348:6:32","type":""},{"name":"value0","nativeSrc":"39356:6:32","nodeType":"YulTypedName","src":"39356:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"39367:4:32","nodeType":"YulTypedName","src":"39367:4:32","type":""}],"src":"39248:328:32"},{"body":{"nativeSrc":"39624:52:32","nodeType":"YulBlock","src":"39624:52:32","statements":[{"nativeSrc":"39634:35:32","nodeType":"YulAssignment","src":"39634:35:32","value":{"arguments":[{"kind":"number","nativeSrc":"39659:2:32","nodeType":"YulLiteral","src":"39659:2:32","type":"","value":"96"},{"name":"value","nativeSrc":"39663:5:32","nodeType":"YulIdentifier","src":"39663:5:32"}],"functionName":{"name":"shl","nativeSrc":"39655:3:32","nodeType":"YulIdentifier","src":"39655:3:32"},"nativeSrc":"39655:14:32","nodeType":"YulFunctionCall","src":"39655:14:32"},"variableNames":[{"name":"newValue","nativeSrc":"39634:8:32","nodeType":"YulIdentifier","src":"39634:8:32"}]}]},"name":"shift_left_96","nativeSrc":"39582:94:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"39605:5:32","nodeType":"YulTypedName","src":"39605:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"39615:8:32","nodeType":"YulTypedName","src":"39615:8:32","type":""}],"src":"39582:94:32"},{"body":{"nativeSrc":"39729:47:32","nodeType":"YulBlock","src":"39729:47:32","statements":[{"nativeSrc":"39739:31:32","nodeType":"YulAssignment","src":"39739:31:32","value":{"arguments":[{"name":"value","nativeSrc":"39764:5:32","nodeType":"YulIdentifier","src":"39764:5:32"}],"functionName":{"name":"shift_left_96","nativeSrc":"39750:13:32","nodeType":"YulIdentifier","src":"39750:13:32"},"nativeSrc":"39750:20:32","nodeType":"YulFunctionCall","src":"39750:20:32"},"variableNames":[{"name":"aligned","nativeSrc":"39739:7:32","nodeType":"YulIdentifier","src":"39739:7:32"}]}]},"name":"leftAlign_t_uint160","nativeSrc":"39682:94:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"39711:5:32","nodeType":"YulTypedName","src":"39711:5:32","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"39721:7:32","nodeType":"YulTypedName","src":"39721:7:32","type":""}],"src":"39682:94:32"},{"body":{"nativeSrc":"39829:53:32","nodeType":"YulBlock","src":"39829:53:32","statements":[{"nativeSrc":"39839:37:32","nodeType":"YulAssignment","src":"39839:37:32","value":{"arguments":[{"name":"value","nativeSrc":"39870:5:32","nodeType":"YulIdentifier","src":"39870:5:32"}],"functionName":{"name":"leftAlign_t_uint160","nativeSrc":"39850:19:32","nodeType":"YulIdentifier","src":"39850:19:32"},"nativeSrc":"39850:26:32","nodeType":"YulFunctionCall","src":"39850:26:32"},"variableNames":[{"name":"aligned","nativeSrc":"39839:7:32","nodeType":"YulIdentifier","src":"39839:7:32"}]}]},"name":"leftAlign_t_address","nativeSrc":"39782:100:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"39811:5:32","nodeType":"YulTypedName","src":"39811:5:32","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"39821:7:32","nodeType":"YulTypedName","src":"39821:7:32","type":""}],"src":"39782:100:32"},{"body":{"nativeSrc":"39971:74:32","nodeType":"YulBlock","src":"39971:74:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"39988:3:32","nodeType":"YulIdentifier","src":"39988:3:32"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"40031:5:32","nodeType":"YulIdentifier","src":"40031:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"40013:17:32","nodeType":"YulIdentifier","src":"40013:17:32"},"nativeSrc":"40013:24:32","nodeType":"YulFunctionCall","src":"40013:24:32"}],"functionName":{"name":"leftAlign_t_address","nativeSrc":"39993:19:32","nodeType":"YulIdentifier","src":"39993:19:32"},"nativeSrc":"39993:45:32","nodeType":"YulFunctionCall","src":"39993:45:32"}],"functionName":{"name":"mstore","nativeSrc":"39981:6:32","nodeType":"YulIdentifier","src":"39981:6:32"},"nativeSrc":"39981:58:32","nodeType":"YulFunctionCall","src":"39981:58:32"},"nativeSrc":"39981:58:32","nodeType":"YulExpressionStatement","src":"39981:58:32"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"39888:157:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"39959:5:32","nodeType":"YulTypedName","src":"39959:5:32","type":""},{"name":"pos","nativeSrc":"39966:3:32","nodeType":"YulTypedName","src":"39966:3:32","type":""}],"src":"39888:157:32"},{"body":{"nativeSrc":"40167:140:32","nodeType":"YulBlock","src":"40167:140:32","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"40240:6:32","nodeType":"YulIdentifier","src":"40240:6:32"},{"name":"pos","nativeSrc":"40249:3:32","nodeType":"YulIdentifier","src":"40249:3:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"40178:61:32","nodeType":"YulIdentifier","src":"40178:61:32"},"nativeSrc":"40178:75:32","nodeType":"YulFunctionCall","src":"40178:75:32"},"nativeSrc":"40178:75:32","nodeType":"YulExpressionStatement","src":"40178:75:32"},{"nativeSrc":"40262:19:32","nodeType":"YulAssignment","src":"40262:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"40273:3:32","nodeType":"YulIdentifier","src":"40273:3:32"},{"kind":"number","nativeSrc":"40278:2:32","nodeType":"YulLiteral","src":"40278:2:32","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"40269:3:32","nodeType":"YulIdentifier","src":"40269:3:32"},"nativeSrc":"40269:12:32","nodeType":"YulFunctionCall","src":"40269:12:32"},"variableNames":[{"name":"pos","nativeSrc":"40262:3:32","nodeType":"YulIdentifier","src":"40262:3:32"}]},{"nativeSrc":"40291:10:32","nodeType":"YulAssignment","src":"40291:10:32","value":{"name":"pos","nativeSrc":"40298:3:32","nodeType":"YulIdentifier","src":"40298:3:32"},"variableNames":[{"name":"end","nativeSrc":"40291:3:32","nodeType":"YulIdentifier","src":"40291:3:32"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nativeSrc":"40051:256:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"40146:3:32","nodeType":"YulTypedName","src":"40146:3:32","type":""},{"name":"value0","nativeSrc":"40152:6:32","nodeType":"YulTypedName","src":"40152:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"40163:3:32","nodeType":"YulTypedName","src":"40163:3:32","type":""}],"src":"40051:256:32"},{"body":{"nativeSrc":"40453:209:32","nodeType":"YulBlock","src":"40453:209:32","statements":[{"nativeSrc":"40463:95:32","nodeType":"YulAssignment","src":"40463:95:32","value":{"arguments":[{"name":"pos","nativeSrc":"40546:3:32","nodeType":"YulIdentifier","src":"40546:3:32"},{"name":"length","nativeSrc":"40551:6:32","nodeType":"YulIdentifier","src":"40551:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"40470:75:32","nodeType":"YulIdentifier","src":"40470:75:32"},"nativeSrc":"40470:88:32","nodeType":"YulFunctionCall","src":"40470:88:32"},"variableNames":[{"name":"pos","nativeSrc":"40463:3:32","nodeType":"YulIdentifier","src":"40463:3:32"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"40605:5:32","nodeType":"YulIdentifier","src":"40605:5:32"},{"name":"pos","nativeSrc":"40612:3:32","nodeType":"YulIdentifier","src":"40612:3:32"},{"name":"length","nativeSrc":"40617:6:32","nodeType":"YulIdentifier","src":"40617:6:32"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"40568:36:32","nodeType":"YulIdentifier","src":"40568:36:32"},"nativeSrc":"40568:56:32","nodeType":"YulFunctionCall","src":"40568:56:32"},"nativeSrc":"40568:56:32","nodeType":"YulExpressionStatement","src":"40568:56:32"},{"nativeSrc":"40633:23:32","nodeType":"YulAssignment","src":"40633:23:32","value":{"arguments":[{"name":"pos","nativeSrc":"40644:3:32","nodeType":"YulIdentifier","src":"40644:3:32"},{"name":"length","nativeSrc":"40649:6:32","nodeType":"YulIdentifier","src":"40649:6:32"}],"functionName":{"name":"add","nativeSrc":"40640:3:32","nodeType":"YulIdentifier","src":"40640:3:32"},"nativeSrc":"40640:16:32","nodeType":"YulFunctionCall","src":"40640:16:32"},"variableNames":[{"name":"end","nativeSrc":"40633:3:32","nodeType":"YulIdentifier","src":"40633:3:32"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"40335:327:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"40426:5:32","nodeType":"YulTypedName","src":"40426:5:32","type":""},{"name":"length","nativeSrc":"40433:6:32","nodeType":"YulTypedName","src":"40433:6:32","type":""},{"name":"pos","nativeSrc":"40441:3:32","nodeType":"YulTypedName","src":"40441:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"40449:3:32","nodeType":"YulTypedName","src":"40449:3:32","type":""}],"src":"40335:327:32"},{"body":{"nativeSrc":"40812:147:32","nodeType":"YulBlock","src":"40812:147:32","statements":[{"nativeSrc":"40823:110:32","nodeType":"YulAssignment","src":"40823:110:32","value":{"arguments":[{"name":"value0","nativeSrc":"40912:6:32","nodeType":"YulIdentifier","src":"40912:6:32"},{"name":"value1","nativeSrc":"40920:6:32","nodeType":"YulIdentifier","src":"40920:6:32"},{"name":"pos","nativeSrc":"40929:3:32","nodeType":"YulIdentifier","src":"40929:3:32"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"40830:81:32","nodeType":"YulIdentifier","src":"40830:81:32"},"nativeSrc":"40830:103:32","nodeType":"YulFunctionCall","src":"40830:103:32"},"variableNames":[{"name":"pos","nativeSrc":"40823:3:32","nodeType":"YulIdentifier","src":"40823:3:32"}]},{"nativeSrc":"40943:10:32","nodeType":"YulAssignment","src":"40943:10:32","value":{"name":"pos","nativeSrc":"40950:3:32","nodeType":"YulIdentifier","src":"40950:3:32"},"variableNames":[{"name":"end","nativeSrc":"40943:3:32","nodeType":"YulIdentifier","src":"40943:3:32"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"40668:291:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"40783:3:32","nodeType":"YulTypedName","src":"40783:3:32","type":""},{"name":"value1","nativeSrc":"40789:6:32","nodeType":"YulTypedName","src":"40789:6:32","type":""},{"name":"value0","nativeSrc":"40797:6:32","nodeType":"YulTypedName","src":"40797:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"40808:3:32","nodeType":"YulTypedName","src":"40808:3:32","type":""}],"src":"40668:291:32"},{"body":{"nativeSrc":"41008:190:32","nodeType":"YulBlock","src":"41008:190:32","statements":[{"nativeSrc":"41018:33:32","nodeType":"YulAssignment","src":"41018:33:32","value":{"arguments":[{"name":"value","nativeSrc":"41045:5:32","nodeType":"YulIdentifier","src":"41045:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"41027:17:32","nodeType":"YulIdentifier","src":"41027:17:32"},"nativeSrc":"41027:24:32","nodeType":"YulFunctionCall","src":"41027:24:32"},"variableNames":[{"name":"value","nativeSrc":"41018:5:32","nodeType":"YulIdentifier","src":"41018:5:32"}]},{"body":{"nativeSrc":"41141:22:32","nodeType":"YulBlock","src":"41141:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"41143:16:32","nodeType":"YulIdentifier","src":"41143:16:32"},"nativeSrc":"41143:18:32","nodeType":"YulFunctionCall","src":"41143:18:32"},"nativeSrc":"41143:18:32","nodeType":"YulExpressionStatement","src":"41143:18:32"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"41066:5:32","nodeType":"YulIdentifier","src":"41066:5:32"},{"kind":"number","nativeSrc":"41073:66:32","nodeType":"YulLiteral","src":"41073:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"41063:2:32","nodeType":"YulIdentifier","src":"41063:2:32"},"nativeSrc":"41063:77:32","nodeType":"YulFunctionCall","src":"41063:77:32"},"nativeSrc":"41060:103:32","nodeType":"YulIf","src":"41060:103:32"},{"nativeSrc":"41172:20:32","nodeType":"YulAssignment","src":"41172:20:32","value":{"arguments":[{"name":"value","nativeSrc":"41183:5:32","nodeType":"YulIdentifier","src":"41183:5:32"},{"kind":"number","nativeSrc":"41190:1:32","nodeType":"YulLiteral","src":"41190:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"41179:3:32","nodeType":"YulIdentifier","src":"41179:3:32"},"nativeSrc":"41179:13:32","nodeType":"YulFunctionCall","src":"41179:13:32"},"variableNames":[{"name":"ret","nativeSrc":"41172:3:32","nodeType":"YulIdentifier","src":"41172:3:32"}]}]},"name":"increment_t_uint256","nativeSrc":"40965:233:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"40994:5:32","nodeType":"YulTypedName","src":"40994:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"41004:3:32","nodeType":"YulTypedName","src":"41004:3:32","type":""}],"src":"40965:233:32"},{"body":{"nativeSrc":"41498:703:32","nodeType":"YulBlock","src":"41498:703:32","statements":[{"nativeSrc":"41508:27:32","nodeType":"YulAssignment","src":"41508:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"41520:9:32","nodeType":"YulIdentifier","src":"41520:9:32"},{"kind":"number","nativeSrc":"41531:3:32","nodeType":"YulLiteral","src":"41531:3:32","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"41516:3:32","nodeType":"YulIdentifier","src":"41516:3:32"},"nativeSrc":"41516:19:32","nodeType":"YulFunctionCall","src":"41516:19:32"},"variableNames":[{"name":"tail","nativeSrc":"41508:4:32","nodeType":"YulIdentifier","src":"41508:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"41589:6:32","nodeType":"YulIdentifier","src":"41589:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"41602:9:32","nodeType":"YulIdentifier","src":"41602:9:32"},{"kind":"number","nativeSrc":"41613:1:32","nodeType":"YulLiteral","src":"41613:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41598:3:32","nodeType":"YulIdentifier","src":"41598:3:32"},"nativeSrc":"41598:17:32","nodeType":"YulFunctionCall","src":"41598:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"41545:43:32","nodeType":"YulIdentifier","src":"41545:43:32"},"nativeSrc":"41545:71:32","nodeType":"YulFunctionCall","src":"41545:71:32"},"nativeSrc":"41545:71:32","nodeType":"YulExpressionStatement","src":"41545:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"41670:6:32","nodeType":"YulIdentifier","src":"41670:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"41683:9:32","nodeType":"YulIdentifier","src":"41683:9:32"},{"kind":"number","nativeSrc":"41694:2:32","nodeType":"YulLiteral","src":"41694:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41679:3:32","nodeType":"YulIdentifier","src":"41679:3:32"},"nativeSrc":"41679:18:32","nodeType":"YulFunctionCall","src":"41679:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"41626:43:32","nodeType":"YulIdentifier","src":"41626:43:32"},"nativeSrc":"41626:72:32","nodeType":"YulFunctionCall","src":"41626:72:32"},"nativeSrc":"41626:72:32","nodeType":"YulExpressionStatement","src":"41626:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"41752:6:32","nodeType":"YulIdentifier","src":"41752:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"41765:9:32","nodeType":"YulIdentifier","src":"41765:9:32"},{"kind":"number","nativeSrc":"41776:2:32","nodeType":"YulLiteral","src":"41776:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"41761:3:32","nodeType":"YulIdentifier","src":"41761:3:32"},"nativeSrc":"41761:18:32","nodeType":"YulFunctionCall","src":"41761:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"41708:43:32","nodeType":"YulIdentifier","src":"41708:43:32"},"nativeSrc":"41708:72:32","nodeType":"YulFunctionCall","src":"41708:72:32"},"nativeSrc":"41708:72:32","nodeType":"YulExpressionStatement","src":"41708:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"41834:6:32","nodeType":"YulIdentifier","src":"41834:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"41847:9:32","nodeType":"YulIdentifier","src":"41847:9:32"},{"kind":"number","nativeSrc":"41858:2:32","nodeType":"YulLiteral","src":"41858:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"41843:3:32","nodeType":"YulIdentifier","src":"41843:3:32"},"nativeSrc":"41843:18:32","nodeType":"YulFunctionCall","src":"41843:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"41790:43:32","nodeType":"YulIdentifier","src":"41790:43:32"},"nativeSrc":"41790:72:32","nodeType":"YulFunctionCall","src":"41790:72:32"},"nativeSrc":"41790:72:32","nodeType":"YulExpressionStatement","src":"41790:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"41916:6:32","nodeType":"YulIdentifier","src":"41916:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"41929:9:32","nodeType":"YulIdentifier","src":"41929:9:32"},{"kind":"number","nativeSrc":"41940:3:32","nodeType":"YulLiteral","src":"41940:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"41925:3:32","nodeType":"YulIdentifier","src":"41925:3:32"},"nativeSrc":"41925:19:32","nodeType":"YulFunctionCall","src":"41925:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"41872:43:32","nodeType":"YulIdentifier","src":"41872:43:32"},"nativeSrc":"41872:73:32","nodeType":"YulFunctionCall","src":"41872:73:32"},"nativeSrc":"41872:73:32","nodeType":"YulExpressionStatement","src":"41872:73:32"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"41999:6:32","nodeType":"YulIdentifier","src":"41999:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"42012:9:32","nodeType":"YulIdentifier","src":"42012:9:32"},{"kind":"number","nativeSrc":"42023:3:32","nodeType":"YulLiteral","src":"42023:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"42008:3:32","nodeType":"YulIdentifier","src":"42008:3:32"},"nativeSrc":"42008:19:32","nodeType":"YulFunctionCall","src":"42008:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"41955:43:32","nodeType":"YulIdentifier","src":"41955:43:32"},"nativeSrc":"41955:73:32","nodeType":"YulFunctionCall","src":"41955:73:32"},"nativeSrc":"41955:73:32","nodeType":"YulExpressionStatement","src":"41955:73:32"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"42082:6:32","nodeType":"YulIdentifier","src":"42082:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"42095:9:32","nodeType":"YulIdentifier","src":"42095:9:32"},{"kind":"number","nativeSrc":"42106:3:32","nodeType":"YulLiteral","src":"42106:3:32","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"42091:3:32","nodeType":"YulIdentifier","src":"42091:3:32"},"nativeSrc":"42091:19:32","nodeType":"YulFunctionCall","src":"42091:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"42038:43:32","nodeType":"YulIdentifier","src":"42038:43:32"},"nativeSrc":"42038:73:32","nodeType":"YulFunctionCall","src":"42038:73:32"},"nativeSrc":"42038:73:32","nodeType":"YulExpressionStatement","src":"42038:73:32"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"42165:6:32","nodeType":"YulIdentifier","src":"42165:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"42178:9:32","nodeType":"YulIdentifier","src":"42178:9:32"},{"kind":"number","nativeSrc":"42189:3:32","nodeType":"YulLiteral","src":"42189:3:32","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"42174:3:32","nodeType":"YulIdentifier","src":"42174:3:32"},"nativeSrc":"42174:19:32","nodeType":"YulFunctionCall","src":"42174:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"42121:43:32","nodeType":"YulIdentifier","src":"42121:43:32"},"nativeSrc":"42121:73:32","nodeType":"YulFunctionCall","src":"42121:73:32"},"nativeSrc":"42121:73:32","nodeType":"YulExpressionStatement","src":"42121:73:32"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"41204:997:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41414:9:32","nodeType":"YulTypedName","src":"41414:9:32","type":""},{"name":"value7","nativeSrc":"41426:6:32","nodeType":"YulTypedName","src":"41426:6:32","type":""},{"name":"value6","nativeSrc":"41434:6:32","nodeType":"YulTypedName","src":"41434:6:32","type":""},{"name":"value5","nativeSrc":"41442:6:32","nodeType":"YulTypedName","src":"41442:6:32","type":""},{"name":"value4","nativeSrc":"41450:6:32","nodeType":"YulTypedName","src":"41450:6:32","type":""},{"name":"value3","nativeSrc":"41458:6:32","nodeType":"YulTypedName","src":"41458:6:32","type":""},{"name":"value2","nativeSrc":"41466:6:32","nodeType":"YulTypedName","src":"41466:6:32","type":""},{"name":"value1","nativeSrc":"41474:6:32","nodeType":"YulTypedName","src":"41474:6:32","type":""},{"name":"value0","nativeSrc":"41482:6:32","nodeType":"YulTypedName","src":"41482:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"41493:4:32","nodeType":"YulTypedName","src":"41493:4:32","type":""}],"src":"41204:997:32"},{"body":{"nativeSrc":"42252:149:32","nodeType":"YulBlock","src":"42252:149:32","statements":[{"nativeSrc":"42262:25:32","nodeType":"YulAssignment","src":"42262:25:32","value":{"arguments":[{"name":"x","nativeSrc":"42285:1:32","nodeType":"YulIdentifier","src":"42285:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"42267:17:32","nodeType":"YulIdentifier","src":"42267:17:32"},"nativeSrc":"42267:20:32","nodeType":"YulFunctionCall","src":"42267:20:32"},"variableNames":[{"name":"x","nativeSrc":"42262:1:32","nodeType":"YulIdentifier","src":"42262:1:32"}]},{"nativeSrc":"42296:25:32","nodeType":"YulAssignment","src":"42296:25:32","value":{"arguments":[{"name":"y","nativeSrc":"42319:1:32","nodeType":"YulIdentifier","src":"42319:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"42301:17:32","nodeType":"YulIdentifier","src":"42301:17:32"},"nativeSrc":"42301:20:32","nodeType":"YulFunctionCall","src":"42301:20:32"},"variableNames":[{"name":"y","nativeSrc":"42296:1:32","nodeType":"YulIdentifier","src":"42296:1:32"}]},{"nativeSrc":"42330:17:32","nodeType":"YulAssignment","src":"42330:17:32","value":{"arguments":[{"name":"x","nativeSrc":"42342:1:32","nodeType":"YulIdentifier","src":"42342:1:32"},{"name":"y","nativeSrc":"42345:1:32","nodeType":"YulIdentifier","src":"42345:1:32"}],"functionName":{"name":"sub","nativeSrc":"42338:3:32","nodeType":"YulIdentifier","src":"42338:3:32"},"nativeSrc":"42338:9:32","nodeType":"YulFunctionCall","src":"42338:9:32"},"variableNames":[{"name":"diff","nativeSrc":"42330:4:32","nodeType":"YulIdentifier","src":"42330:4:32"}]},{"body":{"nativeSrc":"42372:22:32","nodeType":"YulBlock","src":"42372:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"42374:16:32","nodeType":"YulIdentifier","src":"42374:16:32"},"nativeSrc":"42374:18:32","nodeType":"YulFunctionCall","src":"42374:18:32"},"nativeSrc":"42374:18:32","nodeType":"YulExpressionStatement","src":"42374:18:32"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"42363:4:32","nodeType":"YulIdentifier","src":"42363:4:32"},{"name":"x","nativeSrc":"42369:1:32","nodeType":"YulIdentifier","src":"42369:1:32"}],"functionName":{"name":"gt","nativeSrc":"42360:2:32","nodeType":"YulIdentifier","src":"42360:2:32"},"nativeSrc":"42360:11:32","nodeType":"YulFunctionCall","src":"42360:11:32"},"nativeSrc":"42357:37:32","nodeType":"YulIf","src":"42357:37:32"}]},"name":"checked_sub_t_uint256","nativeSrc":"42207:194:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"42238:1:32","nodeType":"YulTypedName","src":"42238:1:32","type":""},{"name":"y","nativeSrc":"42241:1:32","nodeType":"YulTypedName","src":"42241:1:32","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"42247:4:32","nodeType":"YulTypedName","src":"42247:4:32","type":""}],"src":"42207:194:32"},{"body":{"nativeSrc":"42517:136:32","nodeType":"YulBlock","src":"42517:136:32","statements":[{"nativeSrc":"42527:26:32","nodeType":"YulAssignment","src":"42527:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"42539:9:32","nodeType":"YulIdentifier","src":"42539:9:32"},{"kind":"number","nativeSrc":"42550:2:32","nodeType":"YulLiteral","src":"42550:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"42535:3:32","nodeType":"YulIdentifier","src":"42535:3:32"},"nativeSrc":"42535:18:32","nodeType":"YulFunctionCall","src":"42535:18:32"},"variableNames":[{"name":"tail","nativeSrc":"42527:4:32","nodeType":"YulIdentifier","src":"42527:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"42619:6:32","nodeType":"YulIdentifier","src":"42619:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"42632:9:32","nodeType":"YulIdentifier","src":"42632:9:32"},{"kind":"number","nativeSrc":"42643:1:32","nodeType":"YulLiteral","src":"42643:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"42628:3:32","nodeType":"YulIdentifier","src":"42628:3:32"},"nativeSrc":"42628:17:32","nodeType":"YulFunctionCall","src":"42628:17:32"}],"functionName":{"name":"abi_encode_t_enum$_PhaseType_$8454_to_t_uint8_fromStack","nativeSrc":"42563:55:32","nodeType":"YulIdentifier","src":"42563:55:32"},"nativeSrc":"42563:83:32","nodeType":"YulFunctionCall","src":"42563:83:32"},"nativeSrc":"42563:83:32","nodeType":"YulExpressionStatement","src":"42563:83:32"}]},"name":"abi_encode_tuple_t_enum$_PhaseType_$8454__to_t_uint8__fromStack_reversed","nativeSrc":"42407:246:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"42489:9:32","nodeType":"YulTypedName","src":"42489:9:32","type":""},{"name":"value0","nativeSrc":"42501:6:32","nodeType":"YulTypedName","src":"42501:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"42512:4:32","nodeType":"YulTypedName","src":"42512:4:32","type":""}],"src":"42407:246:32"},{"body":{"nativeSrc":"42717:40:32","nodeType":"YulBlock","src":"42717:40:32","statements":[{"nativeSrc":"42728:22:32","nodeType":"YulAssignment","src":"42728:22:32","value":{"arguments":[{"name":"value","nativeSrc":"42744:5:32","nodeType":"YulIdentifier","src":"42744:5:32"}],"functionName":{"name":"mload","nativeSrc":"42738:5:32","nodeType":"YulIdentifier","src":"42738:5:32"},"nativeSrc":"42738:12:32","nodeType":"YulFunctionCall","src":"42738:12:32"},"variableNames":[{"name":"length","nativeSrc":"42728:6:32","nodeType":"YulIdentifier","src":"42728:6:32"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"42659:98:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"42700:5:32","nodeType":"YulTypedName","src":"42700:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"42710:6:32","nodeType":"YulTypedName","src":"42710:6:32","type":""}],"src":"42659:98:32"},{"body":{"nativeSrc":"42858:73:32","nodeType":"YulBlock","src":"42858:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"42875:3:32","nodeType":"YulIdentifier","src":"42875:3:32"},{"name":"length","nativeSrc":"42880:6:32","nodeType":"YulIdentifier","src":"42880:6:32"}],"functionName":{"name":"mstore","nativeSrc":"42868:6:32","nodeType":"YulIdentifier","src":"42868:6:32"},"nativeSrc":"42868:19:32","nodeType":"YulFunctionCall","src":"42868:19:32"},"nativeSrc":"42868:19:32","nodeType":"YulExpressionStatement","src":"42868:19:32"},{"nativeSrc":"42896:29:32","nodeType":"YulAssignment","src":"42896:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"42915:3:32","nodeType":"YulIdentifier","src":"42915:3:32"},{"kind":"number","nativeSrc":"42920:4:32","nodeType":"YulLiteral","src":"42920:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"42911:3:32","nodeType":"YulIdentifier","src":"42911:3:32"},"nativeSrc":"42911:14:32","nodeType":"YulFunctionCall","src":"42911:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"42896:11:32","nodeType":"YulIdentifier","src":"42896:11:32"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"42763:168:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"42830:3:32","nodeType":"YulTypedName","src":"42830:3:32","type":""},{"name":"length","nativeSrc":"42835:6:32","nodeType":"YulTypedName","src":"42835:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"42846:11:32","nodeType":"YulTypedName","src":"42846:11:32","type":""}],"src":"42763:168:32"},{"body":{"nativeSrc":"43027:283:32","nodeType":"YulBlock","src":"43027:283:32","statements":[{"nativeSrc":"43037:52:32","nodeType":"YulVariableDeclaration","src":"43037:52:32","value":{"arguments":[{"name":"value","nativeSrc":"43083:5:32","nodeType":"YulIdentifier","src":"43083:5:32"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"43051:31:32","nodeType":"YulIdentifier","src":"43051:31:32"},"nativeSrc":"43051:38:32","nodeType":"YulFunctionCall","src":"43051:38:32"},"variables":[{"name":"length","nativeSrc":"43041:6:32","nodeType":"YulTypedName","src":"43041:6:32","type":""}]},{"nativeSrc":"43098:77:32","nodeType":"YulAssignment","src":"43098:77:32","value":{"arguments":[{"name":"pos","nativeSrc":"43163:3:32","nodeType":"YulIdentifier","src":"43163:3:32"},{"name":"length","nativeSrc":"43168:6:32","nodeType":"YulIdentifier","src":"43168:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"43105:57:32","nodeType":"YulIdentifier","src":"43105:57:32"},"nativeSrc":"43105:70:32","nodeType":"YulFunctionCall","src":"43105:70:32"},"variableNames":[{"name":"pos","nativeSrc":"43098:3:32","nodeType":"YulIdentifier","src":"43098:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"43223:5:32","nodeType":"YulIdentifier","src":"43223:5:32"},{"kind":"number","nativeSrc":"43230:4:32","nodeType":"YulLiteral","src":"43230:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"43219:3:32","nodeType":"YulIdentifier","src":"43219:3:32"},"nativeSrc":"43219:16:32","nodeType":"YulFunctionCall","src":"43219:16:32"},{"name":"pos","nativeSrc":"43237:3:32","nodeType":"YulIdentifier","src":"43237:3:32"},{"name":"length","nativeSrc":"43242:6:32","nodeType":"YulIdentifier","src":"43242:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"43184:34:32","nodeType":"YulIdentifier","src":"43184:34:32"},"nativeSrc":"43184:65:32","nodeType":"YulFunctionCall","src":"43184:65:32"},"nativeSrc":"43184:65:32","nodeType":"YulExpressionStatement","src":"43184:65:32"},{"nativeSrc":"43258:46:32","nodeType":"YulAssignment","src":"43258:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"43269:3:32","nodeType":"YulIdentifier","src":"43269:3:32"},{"arguments":[{"name":"length","nativeSrc":"43296:6:32","nodeType":"YulIdentifier","src":"43296:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"43274:21:32","nodeType":"YulIdentifier","src":"43274:21:32"},"nativeSrc":"43274:29:32","nodeType":"YulFunctionCall","src":"43274:29:32"}],"functionName":{"name":"add","nativeSrc":"43265:3:32","nodeType":"YulIdentifier","src":"43265:3:32"},"nativeSrc":"43265:39:32","nodeType":"YulFunctionCall","src":"43265:39:32"},"variableNames":[{"name":"end","nativeSrc":"43258:3:32","nodeType":"YulIdentifier","src":"43258:3:32"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"42937:373:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"43008:5:32","nodeType":"YulTypedName","src":"43008:5:32","type":""},{"name":"pos","nativeSrc":"43015:3:32","nodeType":"YulTypedName","src":"43015:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"43023:3:32","nodeType":"YulTypedName","src":"43023:3:32","type":""}],"src":"42937:373:32"},{"body":{"nativeSrc":"43516:440:32","nodeType":"YulBlock","src":"43516:440:32","statements":[{"nativeSrc":"43526:27:32","nodeType":"YulAssignment","src":"43526:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"43538:9:32","nodeType":"YulIdentifier","src":"43538:9:32"},{"kind":"number","nativeSrc":"43549:3:32","nodeType":"YulLiteral","src":"43549:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"43534:3:32","nodeType":"YulIdentifier","src":"43534:3:32"},"nativeSrc":"43534:19:32","nodeType":"YulFunctionCall","src":"43534:19:32"},"variableNames":[{"name":"tail","nativeSrc":"43526:4:32","nodeType":"YulIdentifier","src":"43526:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"43607:6:32","nodeType":"YulIdentifier","src":"43607:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"43620:9:32","nodeType":"YulIdentifier","src":"43620:9:32"},{"kind":"number","nativeSrc":"43631:1:32","nodeType":"YulLiteral","src":"43631:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43616:3:32","nodeType":"YulIdentifier","src":"43616:3:32"},"nativeSrc":"43616:17:32","nodeType":"YulFunctionCall","src":"43616:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"43563:43:32","nodeType":"YulIdentifier","src":"43563:43:32"},"nativeSrc":"43563:71:32","nodeType":"YulFunctionCall","src":"43563:71:32"},"nativeSrc":"43563:71:32","nodeType":"YulExpressionStatement","src":"43563:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"43688:6:32","nodeType":"YulIdentifier","src":"43688:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"43701:9:32","nodeType":"YulIdentifier","src":"43701:9:32"},{"kind":"number","nativeSrc":"43712:2:32","nodeType":"YulLiteral","src":"43712:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"43697:3:32","nodeType":"YulIdentifier","src":"43697:3:32"},"nativeSrc":"43697:18:32","nodeType":"YulFunctionCall","src":"43697:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"43644:43:32","nodeType":"YulIdentifier","src":"43644:43:32"},"nativeSrc":"43644:72:32","nodeType":"YulFunctionCall","src":"43644:72:32"},"nativeSrc":"43644:72:32","nodeType":"YulExpressionStatement","src":"43644:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"43770:6:32","nodeType":"YulIdentifier","src":"43770:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"43783:9:32","nodeType":"YulIdentifier","src":"43783:9:32"},{"kind":"number","nativeSrc":"43794:2:32","nodeType":"YulLiteral","src":"43794:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"43779:3:32","nodeType":"YulIdentifier","src":"43779:3:32"},"nativeSrc":"43779:18:32","nodeType":"YulFunctionCall","src":"43779:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"43726:43:32","nodeType":"YulIdentifier","src":"43726:43:32"},"nativeSrc":"43726:72:32","nodeType":"YulFunctionCall","src":"43726:72:32"},"nativeSrc":"43726:72:32","nodeType":"YulExpressionStatement","src":"43726:72:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"43819:9:32","nodeType":"YulIdentifier","src":"43819:9:32"},{"kind":"number","nativeSrc":"43830:2:32","nodeType":"YulLiteral","src":"43830:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"43815:3:32","nodeType":"YulIdentifier","src":"43815:3:32"},"nativeSrc":"43815:18:32","nodeType":"YulFunctionCall","src":"43815:18:32"},{"arguments":[{"name":"tail","nativeSrc":"43839:4:32","nodeType":"YulIdentifier","src":"43839:4:32"},{"name":"headStart","nativeSrc":"43845:9:32","nodeType":"YulIdentifier","src":"43845:9:32"}],"functionName":{"name":"sub","nativeSrc":"43835:3:32","nodeType":"YulIdentifier","src":"43835:3:32"},"nativeSrc":"43835:20:32","nodeType":"YulFunctionCall","src":"43835:20:32"}],"functionName":{"name":"mstore","nativeSrc":"43808:6:32","nodeType":"YulIdentifier","src":"43808:6:32"},"nativeSrc":"43808:48:32","nodeType":"YulFunctionCall","src":"43808:48:32"},"nativeSrc":"43808:48:32","nodeType":"YulExpressionStatement","src":"43808:48:32"},{"nativeSrc":"43865:84:32","nodeType":"YulAssignment","src":"43865:84:32","value":{"arguments":[{"name":"value3","nativeSrc":"43935:6:32","nodeType":"YulIdentifier","src":"43935:6:32"},{"name":"tail","nativeSrc":"43944:4:32","nodeType":"YulIdentifier","src":"43944:4:32"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"43873:61:32","nodeType":"YulIdentifier","src":"43873:61:32"},"nativeSrc":"43873:76:32","nodeType":"YulFunctionCall","src":"43873:76:32"},"variableNames":[{"name":"tail","nativeSrc":"43865:4:32","nodeType":"YulIdentifier","src":"43865:4:32"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"43316:640:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43464:9:32","nodeType":"YulTypedName","src":"43464:9:32","type":""},{"name":"value3","nativeSrc":"43476:6:32","nodeType":"YulTypedName","src":"43476:6:32","type":""},{"name":"value2","nativeSrc":"43484:6:32","nodeType":"YulTypedName","src":"43484:6:32","type":""},{"name":"value1","nativeSrc":"43492:6:32","nodeType":"YulTypedName","src":"43492:6:32","type":""},{"name":"value0","nativeSrc":"43500:6:32","nodeType":"YulTypedName","src":"43500:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"43511:4:32","nodeType":"YulTypedName","src":"43511:4:32","type":""}],"src":"43316:640:32"},{"body":{"nativeSrc":"44024:79:32","nodeType":"YulBlock","src":"44024:79:32","statements":[{"nativeSrc":"44034:22:32","nodeType":"YulAssignment","src":"44034:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"44049:6:32","nodeType":"YulIdentifier","src":"44049:6:32"}],"functionName":{"name":"mload","nativeSrc":"44043:5:32","nodeType":"YulIdentifier","src":"44043:5:32"},"nativeSrc":"44043:13:32","nodeType":"YulFunctionCall","src":"44043:13:32"},"variableNames":[{"name":"value","nativeSrc":"44034:5:32","nodeType":"YulIdentifier","src":"44034:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"44091:5:32","nodeType":"YulIdentifier","src":"44091:5:32"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"44065:25:32","nodeType":"YulIdentifier","src":"44065:25:32"},"nativeSrc":"44065:32:32","nodeType":"YulFunctionCall","src":"44065:32:32"},"nativeSrc":"44065:32:32","nodeType":"YulExpressionStatement","src":"44065:32:32"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"43962:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"44002:6:32","nodeType":"YulTypedName","src":"44002:6:32","type":""},{"name":"end","nativeSrc":"44010:3:32","nodeType":"YulTypedName","src":"44010:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"44018:5:32","nodeType":"YulTypedName","src":"44018:5:32","type":""}],"src":"43962:141:32"},{"body":{"nativeSrc":"44185:273:32","nodeType":"YulBlock","src":"44185:273:32","statements":[{"body":{"nativeSrc":"44231:83:32","nodeType":"YulBlock","src":"44231:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"44233:77:32","nodeType":"YulIdentifier","src":"44233:77:32"},"nativeSrc":"44233:79:32","nodeType":"YulFunctionCall","src":"44233:79:32"},"nativeSrc":"44233:79:32","nodeType":"YulExpressionStatement","src":"44233:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"44206:7:32","nodeType":"YulIdentifier","src":"44206:7:32"},{"name":"headStart","nativeSrc":"44215:9:32","nodeType":"YulIdentifier","src":"44215:9:32"}],"functionName":{"name":"sub","nativeSrc":"44202:3:32","nodeType":"YulIdentifier","src":"44202:3:32"},"nativeSrc":"44202:23:32","nodeType":"YulFunctionCall","src":"44202:23:32"},{"kind":"number","nativeSrc":"44227:2:32","nodeType":"YulLiteral","src":"44227:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"44198:3:32","nodeType":"YulIdentifier","src":"44198:3:32"},"nativeSrc":"44198:32:32","nodeType":"YulFunctionCall","src":"44198:32:32"},"nativeSrc":"44195:119:32","nodeType":"YulIf","src":"44195:119:32"},{"nativeSrc":"44324:127:32","nodeType":"YulBlock","src":"44324:127:32","statements":[{"nativeSrc":"44339:15:32","nodeType":"YulVariableDeclaration","src":"44339:15:32","value":{"kind":"number","nativeSrc":"44353:1:32","nodeType":"YulLiteral","src":"44353:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"44343:6:32","nodeType":"YulTypedName","src":"44343:6:32","type":""}]},{"nativeSrc":"44368:73:32","nodeType":"YulAssignment","src":"44368:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"44413:9:32","nodeType":"YulIdentifier","src":"44413:9:32"},{"name":"offset","nativeSrc":"44424:6:32","nodeType":"YulIdentifier","src":"44424:6:32"}],"functionName":{"name":"add","nativeSrc":"44409:3:32","nodeType":"YulIdentifier","src":"44409:3:32"},"nativeSrc":"44409:22:32","nodeType":"YulFunctionCall","src":"44409:22:32"},{"name":"dataEnd","nativeSrc":"44433:7:32","nodeType":"YulIdentifier","src":"44433:7:32"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"44378:30:32","nodeType":"YulIdentifier","src":"44378:30:32"},"nativeSrc":"44378:63:32","nodeType":"YulFunctionCall","src":"44378:63:32"},"variableNames":[{"name":"value0","nativeSrc":"44368:6:32","nodeType":"YulIdentifier","src":"44368:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"44109:349:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"44155:9:32","nodeType":"YulTypedName","src":"44155:9:32","type":""},{"name":"dataEnd","nativeSrc":"44166:7:32","nodeType":"YulTypedName","src":"44166:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"44178:6:32","nodeType":"YulTypedName","src":"44178:6:32","type":""}],"src":"44109:349:32"},{"body":{"nativeSrc":"44578:34:32","nodeType":"YulBlock","src":"44578:34:32","statements":[{"nativeSrc":"44588:18:32","nodeType":"YulAssignment","src":"44588:18:32","value":{"name":"pos","nativeSrc":"44603:3:32","nodeType":"YulIdentifier","src":"44603:3:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"44588:11:32","nodeType":"YulIdentifier","src":"44588:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"44464:148:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"44550:3:32","nodeType":"YulTypedName","src":"44550:3:32","type":""},{"name":"length","nativeSrc":"44555:6:32","nodeType":"YulTypedName","src":"44555:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"44566:11:32","nodeType":"YulTypedName","src":"44566:11:32","type":""}],"src":"44464:148:32"},{"body":{"nativeSrc":"44728:280:32","nodeType":"YulBlock","src":"44728:280:32","statements":[{"nativeSrc":"44738:53:32","nodeType":"YulVariableDeclaration","src":"44738:53:32","value":{"arguments":[{"name":"value","nativeSrc":"44785:5:32","nodeType":"YulIdentifier","src":"44785:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"44752:32:32","nodeType":"YulIdentifier","src":"44752:32:32"},"nativeSrc":"44752:39:32","nodeType":"YulFunctionCall","src":"44752:39:32"},"variables":[{"name":"length","nativeSrc":"44742:6:32","nodeType":"YulTypedName","src":"44742:6:32","type":""}]},{"nativeSrc":"44800:96:32","nodeType":"YulAssignment","src":"44800:96:32","value":{"arguments":[{"name":"pos","nativeSrc":"44884:3:32","nodeType":"YulIdentifier","src":"44884:3:32"},{"name":"length","nativeSrc":"44889:6:32","nodeType":"YulIdentifier","src":"44889:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"44807:76:32","nodeType":"YulIdentifier","src":"44807:76:32"},"nativeSrc":"44807:89:32","nodeType":"YulFunctionCall","src":"44807:89:32"},"variableNames":[{"name":"pos","nativeSrc":"44800:3:32","nodeType":"YulIdentifier","src":"44800:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"44944:5:32","nodeType":"YulIdentifier","src":"44944:5:32"},{"kind":"number","nativeSrc":"44951:4:32","nodeType":"YulLiteral","src":"44951:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"44940:3:32","nodeType":"YulIdentifier","src":"44940:3:32"},"nativeSrc":"44940:16:32","nodeType":"YulFunctionCall","src":"44940:16:32"},{"name":"pos","nativeSrc":"44958:3:32","nodeType":"YulIdentifier","src":"44958:3:32"},{"name":"length","nativeSrc":"44963:6:32","nodeType":"YulIdentifier","src":"44963:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"44905:34:32","nodeType":"YulIdentifier","src":"44905:34:32"},"nativeSrc":"44905:65:32","nodeType":"YulFunctionCall","src":"44905:65:32"},"nativeSrc":"44905:65:32","nodeType":"YulExpressionStatement","src":"44905:65:32"},{"nativeSrc":"44979:23:32","nodeType":"YulAssignment","src":"44979:23:32","value":{"arguments":[{"name":"pos","nativeSrc":"44990:3:32","nodeType":"YulIdentifier","src":"44990:3:32"},{"name":"length","nativeSrc":"44995:6:32","nodeType":"YulIdentifier","src":"44995:6:32"}],"functionName":{"name":"add","nativeSrc":"44986:3:32","nodeType":"YulIdentifier","src":"44986:3:32"},"nativeSrc":"44986:16:32","nodeType":"YulFunctionCall","src":"44986:16:32"},"variableNames":[{"name":"end","nativeSrc":"44979:3:32","nodeType":"YulIdentifier","src":"44979:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"44618:390:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"44709:5:32","nodeType":"YulTypedName","src":"44709:5:32","type":""},{"name":"pos","nativeSrc":"44716:3:32","nodeType":"YulTypedName","src":"44716:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"44724:3:32","nodeType":"YulTypedName","src":"44724:3:32","type":""}],"src":"44618:390:32"},{"body":{"nativeSrc":"45198:251:32","nodeType":"YulBlock","src":"45198:251:32","statements":[{"nativeSrc":"45209:102:32","nodeType":"YulAssignment","src":"45209:102:32","value":{"arguments":[{"name":"value0","nativeSrc":"45298:6:32","nodeType":"YulIdentifier","src":"45298:6:32"},{"name":"pos","nativeSrc":"45307:3:32","nodeType":"YulIdentifier","src":"45307:3:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"45216:81:32","nodeType":"YulIdentifier","src":"45216:81:32"},"nativeSrc":"45216:95:32","nodeType":"YulFunctionCall","src":"45216:95:32"},"variableNames":[{"name":"pos","nativeSrc":"45209:3:32","nodeType":"YulIdentifier","src":"45209:3:32"}]},{"nativeSrc":"45321:102:32","nodeType":"YulAssignment","src":"45321:102:32","value":{"arguments":[{"name":"value1","nativeSrc":"45410:6:32","nodeType":"YulIdentifier","src":"45410:6:32"},{"name":"pos","nativeSrc":"45419:3:32","nodeType":"YulIdentifier","src":"45419:3:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"45328:81:32","nodeType":"YulIdentifier","src":"45328:81:32"},"nativeSrc":"45328:95:32","nodeType":"YulFunctionCall","src":"45328:95:32"},"variableNames":[{"name":"pos","nativeSrc":"45321:3:32","nodeType":"YulIdentifier","src":"45321:3:32"}]},{"nativeSrc":"45433:10:32","nodeType":"YulAssignment","src":"45433:10:32","value":{"name":"pos","nativeSrc":"45440:3:32","nodeType":"YulIdentifier","src":"45440:3:32"},"variableNames":[{"name":"end","nativeSrc":"45433:3:32","nodeType":"YulIdentifier","src":"45433:3:32"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"45014:435:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"45169:3:32","nodeType":"YulTypedName","src":"45169:3:32","type":""},{"name":"value1","nativeSrc":"45175:6:32","nodeType":"YulTypedName","src":"45175:6:32","type":""},{"name":"value0","nativeSrc":"45183:6:32","nodeType":"YulTypedName","src":"45183:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"45194:3:32","nodeType":"YulTypedName","src":"45194:3:32","type":""}],"src":"45014:435:32"},{"body":{"nativeSrc":"45509:87:32","nodeType":"YulBlock","src":"45509:87:32","statements":[{"nativeSrc":"45519:11:32","nodeType":"YulAssignment","src":"45519:11:32","value":{"name":"ptr","nativeSrc":"45527:3:32","nodeType":"YulIdentifier","src":"45527:3:32"},"variableNames":[{"name":"data","nativeSrc":"45519:4:32","nodeType":"YulIdentifier","src":"45519:4:32"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"45547:1:32","nodeType":"YulLiteral","src":"45547:1:32","type":"","value":"0"},{"name":"ptr","nativeSrc":"45550:3:32","nodeType":"YulIdentifier","src":"45550:3:32"}],"functionName":{"name":"mstore","nativeSrc":"45540:6:32","nodeType":"YulIdentifier","src":"45540:6:32"},"nativeSrc":"45540:14:32","nodeType":"YulFunctionCall","src":"45540:14:32"},"nativeSrc":"45540:14:32","nodeType":"YulExpressionStatement","src":"45540:14:32"},{"nativeSrc":"45563:26:32","nodeType":"YulAssignment","src":"45563:26:32","value":{"arguments":[{"kind":"number","nativeSrc":"45581:1:32","nodeType":"YulLiteral","src":"45581:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"45584:4:32","nodeType":"YulLiteral","src":"45584:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"45571:9:32","nodeType":"YulIdentifier","src":"45571:9:32"},"nativeSrc":"45571:18:32","nodeType":"YulFunctionCall","src":"45571:18:32"},"variableNames":[{"name":"data","nativeSrc":"45563:4:32","nodeType":"YulIdentifier","src":"45563:4:32"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"45455:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"45496:3:32","nodeType":"YulTypedName","src":"45496:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"45504:4:32","nodeType":"YulTypedName","src":"45504:4:32","type":""}],"src":"45455:141:32"},{"body":{"nativeSrc":"45646:49:32","nodeType":"YulBlock","src":"45646:49:32","statements":[{"nativeSrc":"45656:33:32","nodeType":"YulAssignment","src":"45656:33:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"45674:5:32","nodeType":"YulIdentifier","src":"45674:5:32"},{"kind":"number","nativeSrc":"45681:2:32","nodeType":"YulLiteral","src":"45681:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"45670:3:32","nodeType":"YulIdentifier","src":"45670:3:32"},"nativeSrc":"45670:14:32","nodeType":"YulFunctionCall","src":"45670:14:32"},{"kind":"number","nativeSrc":"45686:2:32","nodeType":"YulLiteral","src":"45686:2:32","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"45666:3:32","nodeType":"YulIdentifier","src":"45666:3:32"},"nativeSrc":"45666:23:32","nodeType":"YulFunctionCall","src":"45666:23:32"},"variableNames":[{"name":"result","nativeSrc":"45656:6:32","nodeType":"YulIdentifier","src":"45656:6:32"}]}]},"name":"divide_by_32_ceil","nativeSrc":"45602:93:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"45629:5:32","nodeType":"YulTypedName","src":"45629:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"45639:6:32","nodeType":"YulTypedName","src":"45639:6:32","type":""}],"src":"45602:93:32"},{"body":{"nativeSrc":"45754:54:32","nodeType":"YulBlock","src":"45754:54:32","statements":[{"nativeSrc":"45764:37:32","nodeType":"YulAssignment","src":"45764:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"45789:4:32","nodeType":"YulIdentifier","src":"45789:4:32"},{"name":"value","nativeSrc":"45795:5:32","nodeType":"YulIdentifier","src":"45795:5:32"}],"functionName":{"name":"shl","nativeSrc":"45785:3:32","nodeType":"YulIdentifier","src":"45785:3:32"},"nativeSrc":"45785:16:32","nodeType":"YulFunctionCall","src":"45785:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"45764:8:32","nodeType":"YulIdentifier","src":"45764:8:32"}]}]},"name":"shift_left_dynamic","nativeSrc":"45701:107:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"45729:4:32","nodeType":"YulTypedName","src":"45729:4:32","type":""},{"name":"value","nativeSrc":"45735:5:32","nodeType":"YulTypedName","src":"45735:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"45745:8:32","nodeType":"YulTypedName","src":"45745:8:32","type":""}],"src":"45701:107:32"},{"body":{"nativeSrc":"45890:317:32","nodeType":"YulBlock","src":"45890:317:32","statements":[{"nativeSrc":"45900:35:32","nodeType":"YulVariableDeclaration","src":"45900:35:32","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"45921:10:32","nodeType":"YulIdentifier","src":"45921:10:32"},{"kind":"number","nativeSrc":"45933:1:32","nodeType":"YulLiteral","src":"45933:1:32","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"45917:3:32","nodeType":"YulIdentifier","src":"45917:3:32"},"nativeSrc":"45917:18:32","nodeType":"YulFunctionCall","src":"45917:18:32"},"variables":[{"name":"shiftBits","nativeSrc":"45904:9:32","nodeType":"YulTypedName","src":"45904:9:32","type":""}]},{"nativeSrc":"45944:109:32","nodeType":"YulVariableDeclaration","src":"45944:109:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"45975:9:32","nodeType":"YulIdentifier","src":"45975:9:32"},{"kind":"number","nativeSrc":"45986:66:32","nodeType":"YulLiteral","src":"45986:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"45956:18:32","nodeType":"YulIdentifier","src":"45956:18:32"},"nativeSrc":"45956:97:32","nodeType":"YulFunctionCall","src":"45956:97:32"},"variables":[{"name":"mask","nativeSrc":"45948:4:32","nodeType":"YulTypedName","src":"45948:4:32","type":""}]},{"nativeSrc":"46062:51:32","nodeType":"YulAssignment","src":"46062:51:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"46093:9:32","nodeType":"YulIdentifier","src":"46093:9:32"},{"name":"toInsert","nativeSrc":"46104:8:32","nodeType":"YulIdentifier","src":"46104:8:32"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"46074:18:32","nodeType":"YulIdentifier","src":"46074:18:32"},"nativeSrc":"46074:39:32","nodeType":"YulFunctionCall","src":"46074:39:32"},"variableNames":[{"name":"toInsert","nativeSrc":"46062:8:32","nodeType":"YulIdentifier","src":"46062:8:32"}]},{"nativeSrc":"46122:30:32","nodeType":"YulAssignment","src":"46122:30:32","value":{"arguments":[{"name":"value","nativeSrc":"46135:5:32","nodeType":"YulIdentifier","src":"46135:5:32"},{"arguments":[{"name":"mask","nativeSrc":"46146:4:32","nodeType":"YulIdentifier","src":"46146:4:32"}],"functionName":{"name":"not","nativeSrc":"46142:3:32","nodeType":"YulIdentifier","src":"46142:3:32"},"nativeSrc":"46142:9:32","nodeType":"YulFunctionCall","src":"46142:9:32"}],"functionName":{"name":"and","nativeSrc":"46131:3:32","nodeType":"YulIdentifier","src":"46131:3:32"},"nativeSrc":"46131:21:32","nodeType":"YulFunctionCall","src":"46131:21:32"},"variableNames":[{"name":"value","nativeSrc":"46122:5:32","nodeType":"YulIdentifier","src":"46122:5:32"}]},{"nativeSrc":"46161:40:32","nodeType":"YulAssignment","src":"46161:40:32","value":{"arguments":[{"name":"value","nativeSrc":"46174:5:32","nodeType":"YulIdentifier","src":"46174:5:32"},{"arguments":[{"name":"toInsert","nativeSrc":"46185:8:32","nodeType":"YulIdentifier","src":"46185:8:32"},{"name":"mask","nativeSrc":"46195:4:32","nodeType":"YulIdentifier","src":"46195:4:32"}],"functionName":{"name":"and","nativeSrc":"46181:3:32","nodeType":"YulIdentifier","src":"46181:3:32"},"nativeSrc":"46181:19:32","nodeType":"YulFunctionCall","src":"46181:19:32"}],"functionName":{"name":"or","nativeSrc":"46171:2:32","nodeType":"YulIdentifier","src":"46171:2:32"},"nativeSrc":"46171:30:32","nodeType":"YulFunctionCall","src":"46171:30:32"},"variableNames":[{"name":"result","nativeSrc":"46161:6:32","nodeType":"YulIdentifier","src":"46161:6:32"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"45814:393:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"45851:5:32","nodeType":"YulTypedName","src":"45851:5:32","type":""},{"name":"shiftBytes","nativeSrc":"45858:10:32","nodeType":"YulTypedName","src":"45858:10:32","type":""},{"name":"toInsert","nativeSrc":"45870:8:32","nodeType":"YulTypedName","src":"45870:8:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"45883:6:32","nodeType":"YulTypedName","src":"45883:6:32","type":""}],"src":"45814:393:32"},{"body":{"nativeSrc":"46245:28:32","nodeType":"YulBlock","src":"46245:28:32","statements":[{"nativeSrc":"46255:12:32","nodeType":"YulAssignment","src":"46255:12:32","value":{"name":"value","nativeSrc":"46262:5:32","nodeType":"YulIdentifier","src":"46262:5:32"},"variableNames":[{"name":"ret","nativeSrc":"46255:3:32","nodeType":"YulIdentifier","src":"46255:3:32"}]}]},"name":"identity","nativeSrc":"46213:60:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"46231:5:32","nodeType":"YulTypedName","src":"46231:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"46241:3:32","nodeType":"YulTypedName","src":"46241:3:32","type":""}],"src":"46213:60:32"},{"body":{"nativeSrc":"46339:82:32","nodeType":"YulBlock","src":"46339:82:32","statements":[{"nativeSrc":"46349:66:32","nodeType":"YulAssignment","src":"46349:66:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"46407:5:32","nodeType":"YulIdentifier","src":"46407:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"46389:17:32","nodeType":"YulIdentifier","src":"46389:17:32"},"nativeSrc":"46389:24:32","nodeType":"YulFunctionCall","src":"46389:24:32"}],"functionName":{"name":"identity","nativeSrc":"46380:8:32","nodeType":"YulIdentifier","src":"46380:8:32"},"nativeSrc":"46380:34:32","nodeType":"YulFunctionCall","src":"46380:34:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"46362:17:32","nodeType":"YulIdentifier","src":"46362:17:32"},"nativeSrc":"46362:53:32","nodeType":"YulFunctionCall","src":"46362:53:32"},"variableNames":[{"name":"converted","nativeSrc":"46349:9:32","nodeType":"YulIdentifier","src":"46349:9:32"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"46279:142:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"46319:5:32","nodeType":"YulTypedName","src":"46319:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"46329:9:32","nodeType":"YulTypedName","src":"46329:9:32","type":""}],"src":"46279:142:32"},{"body":{"nativeSrc":"46474:28:32","nodeType":"YulBlock","src":"46474:28:32","statements":[{"nativeSrc":"46484:12:32","nodeType":"YulAssignment","src":"46484:12:32","value":{"name":"value","nativeSrc":"46491:5:32","nodeType":"YulIdentifier","src":"46491:5:32"},"variableNames":[{"name":"ret","nativeSrc":"46484:3:32","nodeType":"YulIdentifier","src":"46484:3:32"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"46427:75:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"46460:5:32","nodeType":"YulTypedName","src":"46460:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"46470:3:32","nodeType":"YulTypedName","src":"46470:3:32","type":""}],"src":"46427:75:32"},{"body":{"nativeSrc":"46584:193:32","nodeType":"YulBlock","src":"46584:193:32","statements":[{"nativeSrc":"46594:63:32","nodeType":"YulVariableDeclaration","src":"46594:63:32","value":{"arguments":[{"name":"value_0","nativeSrc":"46649:7:32","nodeType":"YulIdentifier","src":"46649:7:32"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"46618:30:32","nodeType":"YulIdentifier","src":"46618:30:32"},"nativeSrc":"46618:39:32","nodeType":"YulFunctionCall","src":"46618:39:32"},"variables":[{"name":"convertedValue_0","nativeSrc":"46598:16:32","nodeType":"YulTypedName","src":"46598:16:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"46673:4:32","nodeType":"YulIdentifier","src":"46673:4:32"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"46713:4:32","nodeType":"YulIdentifier","src":"46713:4:32"}],"functionName":{"name":"sload","nativeSrc":"46707:5:32","nodeType":"YulIdentifier","src":"46707:5:32"},"nativeSrc":"46707:11:32","nodeType":"YulFunctionCall","src":"46707:11:32"},{"name":"offset","nativeSrc":"46720:6:32","nodeType":"YulIdentifier","src":"46720:6:32"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"46752:16:32","nodeType":"YulIdentifier","src":"46752:16:32"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"46728:23:32","nodeType":"YulIdentifier","src":"46728:23:32"},"nativeSrc":"46728:41:32","nodeType":"YulFunctionCall","src":"46728:41:32"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"46679:27:32","nodeType":"YulIdentifier","src":"46679:27:32"},"nativeSrc":"46679:91:32","nodeType":"YulFunctionCall","src":"46679:91:32"}],"functionName":{"name":"sstore","nativeSrc":"46666:6:32","nodeType":"YulIdentifier","src":"46666:6:32"},"nativeSrc":"46666:105:32","nodeType":"YulFunctionCall","src":"46666:105:32"},"nativeSrc":"46666:105:32","nodeType":"YulExpressionStatement","src":"46666:105:32"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"46508:269:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"46561:4:32","nodeType":"YulTypedName","src":"46561:4:32","type":""},{"name":"offset","nativeSrc":"46567:6:32","nodeType":"YulTypedName","src":"46567:6:32","type":""},{"name":"value_0","nativeSrc":"46575:7:32","nodeType":"YulTypedName","src":"46575:7:32","type":""}],"src":"46508:269:32"},{"body":{"nativeSrc":"46832:24:32","nodeType":"YulBlock","src":"46832:24:32","statements":[{"nativeSrc":"46842:8:32","nodeType":"YulAssignment","src":"46842:8:32","value":{"kind":"number","nativeSrc":"46849:1:32","nodeType":"YulLiteral","src":"46849:1:32","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"46842:3:32","nodeType":"YulIdentifier","src":"46842:3:32"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"46783:73:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"46828:3:32","nodeType":"YulTypedName","src":"46828:3:32","type":""}],"src":"46783:73:32"},{"body":{"nativeSrc":"46915:136:32","nodeType":"YulBlock","src":"46915:136:32","statements":[{"nativeSrc":"46925:46:32","nodeType":"YulVariableDeclaration","src":"46925:46:32","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"46939:30:32","nodeType":"YulIdentifier","src":"46939:30:32"},"nativeSrc":"46939:32:32","nodeType":"YulFunctionCall","src":"46939:32:32"},"variables":[{"name":"zero_0","nativeSrc":"46929:6:32","nodeType":"YulTypedName","src":"46929:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"47024:4:32","nodeType":"YulIdentifier","src":"47024:4:32"},{"name":"offset","nativeSrc":"47030:6:32","nodeType":"YulIdentifier","src":"47030:6:32"},{"name":"zero_0","nativeSrc":"47038:6:32","nodeType":"YulIdentifier","src":"47038:6:32"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"46980:43:32","nodeType":"YulIdentifier","src":"46980:43:32"},"nativeSrc":"46980:65:32","nodeType":"YulFunctionCall","src":"46980:65:32"},"nativeSrc":"46980:65:32","nodeType":"YulExpressionStatement","src":"46980:65:32"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"46862:189:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"46901:4:32","nodeType":"YulTypedName","src":"46901:4:32","type":""},{"name":"offset","nativeSrc":"46907:6:32","nodeType":"YulTypedName","src":"46907:6:32","type":""}],"src":"46862:189:32"},{"body":{"nativeSrc":"47107:136:32","nodeType":"YulBlock","src":"47107:136:32","statements":[{"body":{"nativeSrc":"47174:63:32","nodeType":"YulBlock","src":"47174:63:32","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"47218:5:32","nodeType":"YulIdentifier","src":"47218:5:32"},{"kind":"number","nativeSrc":"47225:1:32","nodeType":"YulLiteral","src":"47225:1:32","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"47188:29:32","nodeType":"YulIdentifier","src":"47188:29:32"},"nativeSrc":"47188:39:32","nodeType":"YulFunctionCall","src":"47188:39:32"},"nativeSrc":"47188:39:32","nodeType":"YulExpressionStatement","src":"47188:39:32"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"47127:5:32","nodeType":"YulIdentifier","src":"47127:5:32"},{"name":"end","nativeSrc":"47134:3:32","nodeType":"YulIdentifier","src":"47134:3:32"}],"functionName":{"name":"lt","nativeSrc":"47124:2:32","nodeType":"YulIdentifier","src":"47124:2:32"},"nativeSrc":"47124:14:32","nodeType":"YulFunctionCall","src":"47124:14:32"},"nativeSrc":"47117:120:32","nodeType":"YulForLoop","post":{"nativeSrc":"47139:26:32","nodeType":"YulBlock","src":"47139:26:32","statements":[{"nativeSrc":"47141:22:32","nodeType":"YulAssignment","src":"47141:22:32","value":{"arguments":[{"name":"start","nativeSrc":"47154:5:32","nodeType":"YulIdentifier","src":"47154:5:32"},{"kind":"number","nativeSrc":"47161:1:32","nodeType":"YulLiteral","src":"47161:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"47150:3:32","nodeType":"YulIdentifier","src":"47150:3:32"},"nativeSrc":"47150:13:32","nodeType":"YulFunctionCall","src":"47150:13:32"},"variableNames":[{"name":"start","nativeSrc":"47141:5:32","nodeType":"YulIdentifier","src":"47141:5:32"}]}]},"pre":{"nativeSrc":"47121:2:32","nodeType":"YulBlock","src":"47121:2:32","statements":[]},"src":"47117:120:32"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"47057:186:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"47095:5:32","nodeType":"YulTypedName","src":"47095:5:32","type":""},{"name":"end","nativeSrc":"47102:3:32","nodeType":"YulTypedName","src":"47102:3:32","type":""}],"src":"47057:186:32"},{"body":{"nativeSrc":"47328:464:32","nodeType":"YulBlock","src":"47328:464:32","statements":[{"body":{"nativeSrc":"47354:431:32","nodeType":"YulBlock","src":"47354:431:32","statements":[{"nativeSrc":"47368:54:32","nodeType":"YulVariableDeclaration","src":"47368:54:32","value":{"arguments":[{"name":"array","nativeSrc":"47416:5:32","nodeType":"YulIdentifier","src":"47416:5:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"47384:31:32","nodeType":"YulIdentifier","src":"47384:31:32"},"nativeSrc":"47384:38:32","nodeType":"YulFunctionCall","src":"47384:38:32"},"variables":[{"name":"dataArea","nativeSrc":"47372:8:32","nodeType":"YulTypedName","src":"47372:8:32","type":""}]},{"nativeSrc":"47435:63:32","nodeType":"YulVariableDeclaration","src":"47435:63:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"47458:8:32","nodeType":"YulIdentifier","src":"47458:8:32"},{"arguments":[{"name":"startIndex","nativeSrc":"47486:10:32","nodeType":"YulIdentifier","src":"47486:10:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"47468:17:32","nodeType":"YulIdentifier","src":"47468:17:32"},"nativeSrc":"47468:29:32","nodeType":"YulFunctionCall","src":"47468:29:32"}],"functionName":{"name":"add","nativeSrc":"47454:3:32","nodeType":"YulIdentifier","src":"47454:3:32"},"nativeSrc":"47454:44:32","nodeType":"YulFunctionCall","src":"47454:44:32"},"variables":[{"name":"deleteStart","nativeSrc":"47439:11:32","nodeType":"YulTypedName","src":"47439:11:32","type":""}]},{"body":{"nativeSrc":"47655:27:32","nodeType":"YulBlock","src":"47655:27:32","statements":[{"nativeSrc":"47657:23:32","nodeType":"YulAssignment","src":"47657:23:32","value":{"name":"dataArea","nativeSrc":"47672:8:32","nodeType":"YulIdentifier","src":"47672:8:32"},"variableNames":[{"name":"deleteStart","nativeSrc":"47657:11:32","nodeType":"YulIdentifier","src":"47657:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"47639:10:32","nodeType":"YulIdentifier","src":"47639:10:32"},{"kind":"number","nativeSrc":"47651:2:32","nodeType":"YulLiteral","src":"47651:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"47636:2:32","nodeType":"YulIdentifier","src":"47636:2:32"},"nativeSrc":"47636:18:32","nodeType":"YulFunctionCall","src":"47636:18:32"},"nativeSrc":"47633:49:32","nodeType":"YulIf","src":"47633:49:32"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"47724:11:32","nodeType":"YulIdentifier","src":"47724:11:32"},{"arguments":[{"name":"dataArea","nativeSrc":"47741:8:32","nodeType":"YulIdentifier","src":"47741:8:32"},{"arguments":[{"name":"len","nativeSrc":"47769:3:32","nodeType":"YulIdentifier","src":"47769:3:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"47751:17:32","nodeType":"YulIdentifier","src":"47751:17:32"},"nativeSrc":"47751:22:32","nodeType":"YulFunctionCall","src":"47751:22:32"}],"functionName":{"name":"add","nativeSrc":"47737:3:32","nodeType":"YulIdentifier","src":"47737:3:32"},"nativeSrc":"47737:37:32","nodeType":"YulFunctionCall","src":"47737:37:32"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"47695:28:32","nodeType":"YulIdentifier","src":"47695:28:32"},"nativeSrc":"47695:80:32","nodeType":"YulFunctionCall","src":"47695:80:32"},"nativeSrc":"47695:80:32","nodeType":"YulExpressionStatement","src":"47695:80:32"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"47345:3:32","nodeType":"YulIdentifier","src":"47345:3:32"},{"kind":"number","nativeSrc":"47350:2:32","nodeType":"YulLiteral","src":"47350:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"47342:2:32","nodeType":"YulIdentifier","src":"47342:2:32"},"nativeSrc":"47342:11:32","nodeType":"YulFunctionCall","src":"47342:11:32"},"nativeSrc":"47339:446:32","nodeType":"YulIf","src":"47339:446:32"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"47249:543:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"47304:5:32","nodeType":"YulTypedName","src":"47304:5:32","type":""},{"name":"len","nativeSrc":"47311:3:32","nodeType":"YulTypedName","src":"47311:3:32","type":""},{"name":"startIndex","nativeSrc":"47316:10:32","nodeType":"YulTypedName","src":"47316:10:32","type":""}],"src":"47249:543:32"},{"body":{"nativeSrc":"47861:54:32","nodeType":"YulBlock","src":"47861:54:32","statements":[{"nativeSrc":"47871:37:32","nodeType":"YulAssignment","src":"47871:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"47896:4:32","nodeType":"YulIdentifier","src":"47896:4:32"},{"name":"value","nativeSrc":"47902:5:32","nodeType":"YulIdentifier","src":"47902:5:32"}],"functionName":{"name":"shr","nativeSrc":"47892:3:32","nodeType":"YulIdentifier","src":"47892:3:32"},"nativeSrc":"47892:16:32","nodeType":"YulFunctionCall","src":"47892:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"47871:8:32","nodeType":"YulIdentifier","src":"47871:8:32"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"47798:117:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"47836:4:32","nodeType":"YulTypedName","src":"47836:4:32","type":""},{"name":"value","nativeSrc":"47842:5:32","nodeType":"YulTypedName","src":"47842:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"47852:8:32","nodeType":"YulTypedName","src":"47852:8:32","type":""}],"src":"47798:117:32"},{"body":{"nativeSrc":"47972:118:32","nodeType":"YulBlock","src":"47972:118:32","statements":[{"nativeSrc":"47982:68:32","nodeType":"YulVariableDeclaration","src":"47982:68:32","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"48031:1:32","nodeType":"YulLiteral","src":"48031:1:32","type":"","value":"8"},{"name":"bytes","nativeSrc":"48034:5:32","nodeType":"YulIdentifier","src":"48034:5:32"}],"functionName":{"name":"mul","nativeSrc":"48027:3:32","nodeType":"YulIdentifier","src":"48027:3:32"},"nativeSrc":"48027:13:32","nodeType":"YulFunctionCall","src":"48027:13:32"},{"arguments":[{"kind":"number","nativeSrc":"48046:1:32","nodeType":"YulLiteral","src":"48046:1:32","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"48042:3:32","nodeType":"YulIdentifier","src":"48042:3:32"},"nativeSrc":"48042:6:32","nodeType":"YulFunctionCall","src":"48042:6:32"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"47998:28:32","nodeType":"YulIdentifier","src":"47998:28:32"},"nativeSrc":"47998:51:32","nodeType":"YulFunctionCall","src":"47998:51:32"}],"functionName":{"name":"not","nativeSrc":"47994:3:32","nodeType":"YulIdentifier","src":"47994:3:32"},"nativeSrc":"47994:56:32","nodeType":"YulFunctionCall","src":"47994:56:32"},"variables":[{"name":"mask","nativeSrc":"47986:4:32","nodeType":"YulTypedName","src":"47986:4:32","type":""}]},{"nativeSrc":"48059:25:32","nodeType":"YulAssignment","src":"48059:25:32","value":{"arguments":[{"name":"data","nativeSrc":"48073:4:32","nodeType":"YulIdentifier","src":"48073:4:32"},{"name":"mask","nativeSrc":"48079:4:32","nodeType":"YulIdentifier","src":"48079:4:32"}],"functionName":{"name":"and","nativeSrc":"48069:3:32","nodeType":"YulIdentifier","src":"48069:3:32"},"nativeSrc":"48069:15:32","nodeType":"YulFunctionCall","src":"48069:15:32"},"variableNames":[{"name":"result","nativeSrc":"48059:6:32","nodeType":"YulIdentifier","src":"48059:6:32"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"47921:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"47949:4:32","nodeType":"YulTypedName","src":"47949:4:32","type":""},{"name":"bytes","nativeSrc":"47955:5:32","nodeType":"YulTypedName","src":"47955:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"47965:6:32","nodeType":"YulTypedName","src":"47965:6:32","type":""}],"src":"47921:169:32"},{"body":{"nativeSrc":"48176:214:32","nodeType":"YulBlock","src":"48176:214:32","statements":[{"nativeSrc":"48309:37:32","nodeType":"YulAssignment","src":"48309:37:32","value":{"arguments":[{"name":"data","nativeSrc":"48336:4:32","nodeType":"YulIdentifier","src":"48336:4:32"},{"name":"len","nativeSrc":"48342:3:32","nodeType":"YulIdentifier","src":"48342:3:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"48317:18:32","nodeType":"YulIdentifier","src":"48317:18:32"},"nativeSrc":"48317:29:32","nodeType":"YulFunctionCall","src":"48317:29:32"},"variableNames":[{"name":"data","nativeSrc":"48309:4:32","nodeType":"YulIdentifier","src":"48309:4:32"}]},{"nativeSrc":"48355:29:32","nodeType":"YulAssignment","src":"48355:29:32","value":{"arguments":[{"name":"data","nativeSrc":"48366:4:32","nodeType":"YulIdentifier","src":"48366:4:32"},{"arguments":[{"kind":"number","nativeSrc":"48376:1:32","nodeType":"YulLiteral","src":"48376:1:32","type":"","value":"2"},{"name":"len","nativeSrc":"48379:3:32","nodeType":"YulIdentifier","src":"48379:3:32"}],"functionName":{"name":"mul","nativeSrc":"48372:3:32","nodeType":"YulIdentifier","src":"48372:3:32"},"nativeSrc":"48372:11:32","nodeType":"YulFunctionCall","src":"48372:11:32"}],"functionName":{"name":"or","nativeSrc":"48363:2:32","nodeType":"YulIdentifier","src":"48363:2:32"},"nativeSrc":"48363:21:32","nodeType":"YulFunctionCall","src":"48363:21:32"},"variableNames":[{"name":"used","nativeSrc":"48355:4:32","nodeType":"YulIdentifier","src":"48355:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"48095:295:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"48157:4:32","nodeType":"YulTypedName","src":"48157:4:32","type":""},{"name":"len","nativeSrc":"48163:3:32","nodeType":"YulTypedName","src":"48163:3:32","type":""}],"returnVariables":[{"name":"used","nativeSrc":"48171:4:32","nodeType":"YulTypedName","src":"48171:4:32","type":""}],"src":"48095:295:32"},{"body":{"nativeSrc":"48487:1303:32","nodeType":"YulBlock","src":"48487:1303:32","statements":[{"nativeSrc":"48498:51:32","nodeType":"YulVariableDeclaration","src":"48498:51:32","value":{"arguments":[{"name":"src","nativeSrc":"48545:3:32","nodeType":"YulIdentifier","src":"48545:3:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"48512:32:32","nodeType":"YulIdentifier","src":"48512:32:32"},"nativeSrc":"48512:37:32","nodeType":"YulFunctionCall","src":"48512:37:32"},"variables":[{"name":"newLen","nativeSrc":"48502:6:32","nodeType":"YulTypedName","src":"48502:6:32","type":""}]},{"body":{"nativeSrc":"48634:22:32","nodeType":"YulBlock","src":"48634:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"48636:16:32","nodeType":"YulIdentifier","src":"48636:16:32"},"nativeSrc":"48636:18:32","nodeType":"YulFunctionCall","src":"48636:18:32"},"nativeSrc":"48636:18:32","nodeType":"YulExpressionStatement","src":"48636:18:32"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"48606:6:32","nodeType":"YulIdentifier","src":"48606:6:32"},{"kind":"number","nativeSrc":"48614:18:32","nodeType":"YulLiteral","src":"48614:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"48603:2:32","nodeType":"YulIdentifier","src":"48603:2:32"},"nativeSrc":"48603:30:32","nodeType":"YulFunctionCall","src":"48603:30:32"},"nativeSrc":"48600:56:32","nodeType":"YulIf","src":"48600:56:32"},{"nativeSrc":"48666:52:32","nodeType":"YulVariableDeclaration","src":"48666:52:32","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"48712:4:32","nodeType":"YulIdentifier","src":"48712:4:32"}],"functionName":{"name":"sload","nativeSrc":"48706:5:32","nodeType":"YulIdentifier","src":"48706:5:32"},"nativeSrc":"48706:11:32","nodeType":"YulFunctionCall","src":"48706:11:32"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"48680:25:32","nodeType":"YulIdentifier","src":"48680:25:32"},"nativeSrc":"48680:38:32","nodeType":"YulFunctionCall","src":"48680:38:32"},"variables":[{"name":"oldLen","nativeSrc":"48670:6:32","nodeType":"YulTypedName","src":"48670:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"48811:4:32","nodeType":"YulIdentifier","src":"48811:4:32"},{"name":"oldLen","nativeSrc":"48817:6:32","nodeType":"YulIdentifier","src":"48817:6:32"},{"name":"newLen","nativeSrc":"48825:6:32","nodeType":"YulIdentifier","src":"48825:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"48765:45:32","nodeType":"YulIdentifier","src":"48765:45:32"},"nativeSrc":"48765:67:32","nodeType":"YulFunctionCall","src":"48765:67:32"},"nativeSrc":"48765:67:32","nodeType":"YulExpressionStatement","src":"48765:67:32"},{"nativeSrc":"48842:18:32","nodeType":"YulVariableDeclaration","src":"48842:18:32","value":{"kind":"number","nativeSrc":"48859:1:32","nodeType":"YulLiteral","src":"48859:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"48846:9:32","nodeType":"YulTypedName","src":"48846:9:32","type":""}]},{"nativeSrc":"48870:17:32","nodeType":"YulAssignment","src":"48870:17:32","value":{"kind":"number","nativeSrc":"48883:4:32","nodeType":"YulLiteral","src":"48883:4:32","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"48870:9:32","nodeType":"YulIdentifier","src":"48870:9:32"}]},{"cases":[{"body":{"nativeSrc":"48934:611:32","nodeType":"YulBlock","src":"48934:611:32","statements":[{"nativeSrc":"48948:37:32","nodeType":"YulVariableDeclaration","src":"48948:37:32","value":{"arguments":[{"name":"newLen","nativeSrc":"48967:6:32","nodeType":"YulIdentifier","src":"48967:6:32"},{"arguments":[{"kind":"number","nativeSrc":"48979:4:32","nodeType":"YulLiteral","src":"48979:4:32","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"48975:3:32","nodeType":"YulIdentifier","src":"48975:3:32"},"nativeSrc":"48975:9:32","nodeType":"YulFunctionCall","src":"48975:9:32"}],"functionName":{"name":"and","nativeSrc":"48963:3:32","nodeType":"YulIdentifier","src":"48963:3:32"},"nativeSrc":"48963:22:32","nodeType":"YulFunctionCall","src":"48963:22:32"},"variables":[{"name":"loopEnd","nativeSrc":"48952:7:32","nodeType":"YulTypedName","src":"48952:7:32","type":""}]},{"nativeSrc":"48999:51:32","nodeType":"YulVariableDeclaration","src":"48999:51:32","value":{"arguments":[{"name":"slot","nativeSrc":"49045:4:32","nodeType":"YulIdentifier","src":"49045:4:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"49013:31:32","nodeType":"YulIdentifier","src":"49013:31:32"},"nativeSrc":"49013:37:32","nodeType":"YulFunctionCall","src":"49013:37:32"},"variables":[{"name":"dstPtr","nativeSrc":"49003:6:32","nodeType":"YulTypedName","src":"49003:6:32","type":""}]},{"nativeSrc":"49063:10:32","nodeType":"YulVariableDeclaration","src":"49063:10:32","value":{"kind":"number","nativeSrc":"49072:1:32","nodeType":"YulLiteral","src":"49072:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"49067:1:32","nodeType":"YulTypedName","src":"49067:1:32","type":""}]},{"body":{"nativeSrc":"49131:163:32","nodeType":"YulBlock","src":"49131:163:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"49156:6:32","nodeType":"YulIdentifier","src":"49156:6:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"49174:3:32","nodeType":"YulIdentifier","src":"49174:3:32"},{"name":"srcOffset","nativeSrc":"49179:9:32","nodeType":"YulIdentifier","src":"49179:9:32"}],"functionName":{"name":"add","nativeSrc":"49170:3:32","nodeType":"YulIdentifier","src":"49170:3:32"},"nativeSrc":"49170:19:32","nodeType":"YulFunctionCall","src":"49170:19:32"}],"functionName":{"name":"mload","nativeSrc":"49164:5:32","nodeType":"YulIdentifier","src":"49164:5:32"},"nativeSrc":"49164:26:32","nodeType":"YulFunctionCall","src":"49164:26:32"}],"functionName":{"name":"sstore","nativeSrc":"49149:6:32","nodeType":"YulIdentifier","src":"49149:6:32"},"nativeSrc":"49149:42:32","nodeType":"YulFunctionCall","src":"49149:42:32"},"nativeSrc":"49149:42:32","nodeType":"YulExpressionStatement","src":"49149:42:32"},{"nativeSrc":"49208:24:32","nodeType":"YulAssignment","src":"49208:24:32","value":{"arguments":[{"name":"dstPtr","nativeSrc":"49222:6:32","nodeType":"YulIdentifier","src":"49222:6:32"},{"kind":"number","nativeSrc":"49230:1:32","nodeType":"YulLiteral","src":"49230:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"49218:3:32","nodeType":"YulIdentifier","src":"49218:3:32"},"nativeSrc":"49218:14:32","nodeType":"YulFunctionCall","src":"49218:14:32"},"variableNames":[{"name":"dstPtr","nativeSrc":"49208:6:32","nodeType":"YulIdentifier","src":"49208:6:32"}]},{"nativeSrc":"49249:31:32","nodeType":"YulAssignment","src":"49249:31:32","value":{"arguments":[{"name":"srcOffset","nativeSrc":"49266:9:32","nodeType":"YulIdentifier","src":"49266:9:32"},{"kind":"number","nativeSrc":"49277:2:32","nodeType":"YulLiteral","src":"49277:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"49262:3:32","nodeType":"YulIdentifier","src":"49262:3:32"},"nativeSrc":"49262:18:32","nodeType":"YulFunctionCall","src":"49262:18:32"},"variableNames":[{"name":"srcOffset","nativeSrc":"49249:9:32","nodeType":"YulIdentifier","src":"49249:9:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"49097:1:32","nodeType":"YulIdentifier","src":"49097:1:32"},{"name":"loopEnd","nativeSrc":"49100:7:32","nodeType":"YulIdentifier","src":"49100:7:32"}],"functionName":{"name":"lt","nativeSrc":"49094:2:32","nodeType":"YulIdentifier","src":"49094:2:32"},"nativeSrc":"49094:14:32","nodeType":"YulFunctionCall","src":"49094:14:32"},"nativeSrc":"49086:208:32","nodeType":"YulForLoop","post":{"nativeSrc":"49109:21:32","nodeType":"YulBlock","src":"49109:21:32","statements":[{"nativeSrc":"49111:17:32","nodeType":"YulAssignment","src":"49111:17:32","value":{"arguments":[{"name":"i","nativeSrc":"49120:1:32","nodeType":"YulIdentifier","src":"49120:1:32"},{"kind":"number","nativeSrc":"49123:4:32","nodeType":"YulLiteral","src":"49123:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"49116:3:32","nodeType":"YulIdentifier","src":"49116:3:32"},"nativeSrc":"49116:12:32","nodeType":"YulFunctionCall","src":"49116:12:32"},"variableNames":[{"name":"i","nativeSrc":"49111:1:32","nodeType":"YulIdentifier","src":"49111:1:32"}]}]},"pre":{"nativeSrc":"49090:3:32","nodeType":"YulBlock","src":"49090:3:32","statements":[]},"src":"49086:208:32"},{"body":{"nativeSrc":"49330:156:32","nodeType":"YulBlock","src":"49330:156:32","statements":[{"nativeSrc":"49348:43:32","nodeType":"YulVariableDeclaration","src":"49348:43:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"49375:3:32","nodeType":"YulIdentifier","src":"49375:3:32"},{"name":"srcOffset","nativeSrc":"49380:9:32","nodeType":"YulIdentifier","src":"49380:9:32"}],"functionName":{"name":"add","nativeSrc":"49371:3:32","nodeType":"YulIdentifier","src":"49371:3:32"},"nativeSrc":"49371:19:32","nodeType":"YulFunctionCall","src":"49371:19:32"}],"functionName":{"name":"mload","nativeSrc":"49365:5:32","nodeType":"YulIdentifier","src":"49365:5:32"},"nativeSrc":"49365:26:32","nodeType":"YulFunctionCall","src":"49365:26:32"},"variables":[{"name":"lastValue","nativeSrc":"49352:9:32","nodeType":"YulTypedName","src":"49352:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"49415:6:32","nodeType":"YulIdentifier","src":"49415:6:32"},{"arguments":[{"name":"lastValue","nativeSrc":"49442:9:32","nodeType":"YulIdentifier","src":"49442:9:32"},{"arguments":[{"name":"newLen","nativeSrc":"49457:6:32","nodeType":"YulIdentifier","src":"49457:6:32"},{"kind":"number","nativeSrc":"49465:4:32","nodeType":"YulLiteral","src":"49465:4:32","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"49453:3:32","nodeType":"YulIdentifier","src":"49453:3:32"},"nativeSrc":"49453:17:32","nodeType":"YulFunctionCall","src":"49453:17:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"49423:18:32","nodeType":"YulIdentifier","src":"49423:18:32"},"nativeSrc":"49423:48:32","nodeType":"YulFunctionCall","src":"49423:48:32"}],"functionName":{"name":"sstore","nativeSrc":"49408:6:32","nodeType":"YulIdentifier","src":"49408:6:32"},"nativeSrc":"49408:64:32","nodeType":"YulFunctionCall","src":"49408:64:32"},"nativeSrc":"49408:64:32","nodeType":"YulExpressionStatement","src":"49408:64:32"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"49313:7:32","nodeType":"YulIdentifier","src":"49313:7:32"},{"name":"newLen","nativeSrc":"49322:6:32","nodeType":"YulIdentifier","src":"49322:6:32"}],"functionName":{"name":"lt","nativeSrc":"49310:2:32","nodeType":"YulIdentifier","src":"49310:2:32"},"nativeSrc":"49310:19:32","nodeType":"YulFunctionCall","src":"49310:19:32"},"nativeSrc":"49307:179:32","nodeType":"YulIf","src":"49307:179:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"49506:4:32","nodeType":"YulIdentifier","src":"49506:4:32"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"49520:6:32","nodeType":"YulIdentifier","src":"49520:6:32"},{"kind":"number","nativeSrc":"49528:1:32","nodeType":"YulLiteral","src":"49528:1:32","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"49516:3:32","nodeType":"YulIdentifier","src":"49516:3:32"},"nativeSrc":"49516:14:32","nodeType":"YulFunctionCall","src":"49516:14:32"},{"kind":"number","nativeSrc":"49532:1:32","nodeType":"YulLiteral","src":"49532:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"49512:3:32","nodeType":"YulIdentifier","src":"49512:3:32"},"nativeSrc":"49512:22:32","nodeType":"YulFunctionCall","src":"49512:22:32"}],"functionName":{"name":"sstore","nativeSrc":"49499:6:32","nodeType":"YulIdentifier","src":"49499:6:32"},"nativeSrc":"49499:36:32","nodeType":"YulFunctionCall","src":"49499:36:32"},"nativeSrc":"49499:36:32","nodeType":"YulExpressionStatement","src":"49499:36:32"}]},"nativeSrc":"48927:618:32","nodeType":"YulCase","src":"48927:618:32","value":{"kind":"number","nativeSrc":"48932:1:32","nodeType":"YulLiteral","src":"48932:1:32","type":"","value":"1"}},{"body":{"nativeSrc":"49562:222:32","nodeType":"YulBlock","src":"49562:222:32","statements":[{"nativeSrc":"49576:14:32","nodeType":"YulVariableDeclaration","src":"49576:14:32","value":{"kind":"number","nativeSrc":"49589:1:32","nodeType":"YulLiteral","src":"49589:1:32","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"49580:5:32","nodeType":"YulTypedName","src":"49580:5:32","type":""}]},{"body":{"nativeSrc":"49613:67:32","nodeType":"YulBlock","src":"49613:67:32","statements":[{"nativeSrc":"49631:35:32","nodeType":"YulAssignment","src":"49631:35:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"49650:3:32","nodeType":"YulIdentifier","src":"49650:3:32"},{"name":"srcOffset","nativeSrc":"49655:9:32","nodeType":"YulIdentifier","src":"49655:9:32"}],"functionName":{"name":"add","nativeSrc":"49646:3:32","nodeType":"YulIdentifier","src":"49646:3:32"},"nativeSrc":"49646:19:32","nodeType":"YulFunctionCall","src":"49646:19:32"}],"functionName":{"name":"mload","nativeSrc":"49640:5:32","nodeType":"YulIdentifier","src":"49640:5:32"},"nativeSrc":"49640:26:32","nodeType":"YulFunctionCall","src":"49640:26:32"},"variableNames":[{"name":"value","nativeSrc":"49631:5:32","nodeType":"YulIdentifier","src":"49631:5:32"}]}]},"condition":{"name":"newLen","nativeSrc":"49606:6:32","nodeType":"YulIdentifier","src":"49606:6:32"},"nativeSrc":"49603:77:32","nodeType":"YulIf","src":"49603:77:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"49700:4:32","nodeType":"YulIdentifier","src":"49700:4:32"},{"arguments":[{"name":"value","nativeSrc":"49759:5:32","nodeType":"YulIdentifier","src":"49759:5:32"},{"name":"newLen","nativeSrc":"49766:6:32","nodeType":"YulIdentifier","src":"49766:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"49706:52:32","nodeType":"YulIdentifier","src":"49706:52:32"},"nativeSrc":"49706:67:32","nodeType":"YulFunctionCall","src":"49706:67:32"}],"functionName":{"name":"sstore","nativeSrc":"49693:6:32","nodeType":"YulIdentifier","src":"49693:6:32"},"nativeSrc":"49693:81:32","nodeType":"YulFunctionCall","src":"49693:81:32"},"nativeSrc":"49693:81:32","nodeType":"YulExpressionStatement","src":"49693:81:32"}]},"nativeSrc":"49554:230:32","nodeType":"YulCase","src":"49554:230:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"48907:6:32","nodeType":"YulIdentifier","src":"48907:6:32"},{"kind":"number","nativeSrc":"48915:2:32","nodeType":"YulLiteral","src":"48915:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"48904:2:32","nodeType":"YulIdentifier","src":"48904:2:32"},"nativeSrc":"48904:14:32","nodeType":"YulFunctionCall","src":"48904:14:32"},"nativeSrc":"48897:887:32","nodeType":"YulSwitch","src":"48897:887:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"48395:1395:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"48476:4:32","nodeType":"YulTypedName","src":"48476:4:32","type":""},{"name":"src","nativeSrc":"48482:3:32","nodeType":"YulTypedName","src":"48482:3:32","type":""}],"src":"48395:1395:32"},{"body":{"nativeSrc":"50006:454:32","nodeType":"YulBlock","src":"50006:454:32","statements":[{"nativeSrc":"50016:27:32","nodeType":"YulAssignment","src":"50016:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"50028:9:32","nodeType":"YulIdentifier","src":"50028:9:32"},{"kind":"number","nativeSrc":"50039:3:32","nodeType":"YulLiteral","src":"50039:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"50024:3:32","nodeType":"YulIdentifier","src":"50024:3:32"},"nativeSrc":"50024:19:32","nodeType":"YulFunctionCall","src":"50024:19:32"},"variableNames":[{"name":"tail","nativeSrc":"50016:4:32","nodeType":"YulIdentifier","src":"50016:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"50097:6:32","nodeType":"YulIdentifier","src":"50097:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"50110:9:32","nodeType":"YulIdentifier","src":"50110:9:32"},{"kind":"number","nativeSrc":"50121:1:32","nodeType":"YulLiteral","src":"50121:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"50106:3:32","nodeType":"YulIdentifier","src":"50106:3:32"},"nativeSrc":"50106:17:32","nodeType":"YulFunctionCall","src":"50106:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"50053:43:32","nodeType":"YulIdentifier","src":"50053:43:32"},"nativeSrc":"50053:71:32","nodeType":"YulFunctionCall","src":"50053:71:32"},"nativeSrc":"50053:71:32","nodeType":"YulExpressionStatement","src":"50053:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"50178:6:32","nodeType":"YulIdentifier","src":"50178:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"50191:9:32","nodeType":"YulIdentifier","src":"50191:9:32"},{"kind":"number","nativeSrc":"50202:2:32","nodeType":"YulLiteral","src":"50202:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"50187:3:32","nodeType":"YulIdentifier","src":"50187:3:32"},"nativeSrc":"50187:18:32","nodeType":"YulFunctionCall","src":"50187:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"50134:43:32","nodeType":"YulIdentifier","src":"50134:43:32"},"nativeSrc":"50134:72:32","nodeType":"YulFunctionCall","src":"50134:72:32"},"nativeSrc":"50134:72:32","nodeType":"YulExpressionStatement","src":"50134:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"50260:6:32","nodeType":"YulIdentifier","src":"50260:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"50273:9:32","nodeType":"YulIdentifier","src":"50273:9:32"},{"kind":"number","nativeSrc":"50284:2:32","nodeType":"YulLiteral","src":"50284:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"50269:3:32","nodeType":"YulIdentifier","src":"50269:3:32"},"nativeSrc":"50269:18:32","nodeType":"YulFunctionCall","src":"50269:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"50216:43:32","nodeType":"YulIdentifier","src":"50216:43:32"},"nativeSrc":"50216:72:32","nodeType":"YulFunctionCall","src":"50216:72:32"},"nativeSrc":"50216:72:32","nodeType":"YulExpressionStatement","src":"50216:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"50342:6:32","nodeType":"YulIdentifier","src":"50342:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"50355:9:32","nodeType":"YulIdentifier","src":"50355:9:32"},{"kind":"number","nativeSrc":"50366:2:32","nodeType":"YulLiteral","src":"50366:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"50351:3:32","nodeType":"YulIdentifier","src":"50351:3:32"},"nativeSrc":"50351:18:32","nodeType":"YulFunctionCall","src":"50351:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"50298:43:32","nodeType":"YulIdentifier","src":"50298:43:32"},"nativeSrc":"50298:72:32","nodeType":"YulFunctionCall","src":"50298:72:32"},"nativeSrc":"50298:72:32","nodeType":"YulExpressionStatement","src":"50298:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"50424:6:32","nodeType":"YulIdentifier","src":"50424:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"50437:9:32","nodeType":"YulIdentifier","src":"50437:9:32"},{"kind":"number","nativeSrc":"50448:3:32","nodeType":"YulLiteral","src":"50448:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"50433:3:32","nodeType":"YulIdentifier","src":"50433:3:32"},"nativeSrc":"50433:19:32","nodeType":"YulFunctionCall","src":"50433:19:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"50380:43:32","nodeType":"YulIdentifier","src":"50380:43:32"},"nativeSrc":"50380:73:32","nodeType":"YulFunctionCall","src":"50380:73:32"},"nativeSrc":"50380:73:32","nodeType":"YulExpressionStatement","src":"50380:73:32"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"49796:664:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49946:9:32","nodeType":"YulTypedName","src":"49946:9:32","type":""},{"name":"value4","nativeSrc":"49958:6:32","nodeType":"YulTypedName","src":"49958:6:32","type":""},{"name":"value3","nativeSrc":"49966:6:32","nodeType":"YulTypedName","src":"49966:6:32","type":""},{"name":"value2","nativeSrc":"49974:6:32","nodeType":"YulTypedName","src":"49974:6:32","type":""},{"name":"value1","nativeSrc":"49982:6:32","nodeType":"YulTypedName","src":"49982:6:32","type":""},{"name":"value0","nativeSrc":"49990:6:32","nodeType":"YulTypedName","src":"49990:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"50001:4:32","nodeType":"YulTypedName","src":"50001:4:32","type":""}],"src":"49796:664:32"},{"body":{"nativeSrc":"50494:152:32","nodeType":"YulBlock","src":"50494:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"50511:1:32","nodeType":"YulLiteral","src":"50511:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"50514:77:32","nodeType":"YulLiteral","src":"50514:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"50504:6:32","nodeType":"YulIdentifier","src":"50504:6:32"},"nativeSrc":"50504:88:32","nodeType":"YulFunctionCall","src":"50504:88:32"},"nativeSrc":"50504:88:32","nodeType":"YulExpressionStatement","src":"50504:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"50608:1:32","nodeType":"YulLiteral","src":"50608:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"50611:4:32","nodeType":"YulLiteral","src":"50611:4:32","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"50601:6:32","nodeType":"YulIdentifier","src":"50601:6:32"},"nativeSrc":"50601:15:32","nodeType":"YulFunctionCall","src":"50601:15:32"},"nativeSrc":"50601:15:32","nodeType":"YulExpressionStatement","src":"50601:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"50632:1:32","nodeType":"YulLiteral","src":"50632:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"50635:4:32","nodeType":"YulLiteral","src":"50635:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"50625:6:32","nodeType":"YulIdentifier","src":"50625:6:32"},"nativeSrc":"50625:15:32","nodeType":"YulFunctionCall","src":"50625:15:32"},"nativeSrc":"50625:15:32","nodeType":"YulExpressionStatement","src":"50625:15:32"}]},"name":"panic_error_0x31","nativeSrc":"50466:180:32","nodeType":"YulFunctionDefinition","src":"50466:180:32"},{"body":{"nativeSrc":"50695:43:32","nodeType":"YulBlock","src":"50695:43:32","statements":[{"nativeSrc":"50705:27:32","nodeType":"YulAssignment","src":"50705:27:32","value":{"arguments":[{"name":"value","nativeSrc":"50720:5:32","nodeType":"YulIdentifier","src":"50720:5:32"},{"kind":"number","nativeSrc":"50727:4:32","nodeType":"YulLiteral","src":"50727:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"50716:3:32","nodeType":"YulIdentifier","src":"50716:3:32"},"nativeSrc":"50716:16:32","nodeType":"YulFunctionCall","src":"50716:16:32"},"variableNames":[{"name":"cleaned","nativeSrc":"50705:7:32","nodeType":"YulIdentifier","src":"50705:7:32"}]}]},"name":"cleanup_t_uint8","nativeSrc":"50652:86:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"50677:5:32","nodeType":"YulTypedName","src":"50677:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"50687:7:32","nodeType":"YulTypedName","src":"50687:7:32","type":""}],"src":"50652:86:32"},{"body":{"nativeSrc":"50805:51:32","nodeType":"YulBlock","src":"50805:51:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"50822:3:32","nodeType":"YulIdentifier","src":"50822:3:32"},{"arguments":[{"name":"value","nativeSrc":"50843:5:32","nodeType":"YulIdentifier","src":"50843:5:32"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"50827:15:32","nodeType":"YulIdentifier","src":"50827:15:32"},"nativeSrc":"50827:22:32","nodeType":"YulFunctionCall","src":"50827:22:32"}],"functionName":{"name":"mstore","nativeSrc":"50815:6:32","nodeType":"YulIdentifier","src":"50815:6:32"},"nativeSrc":"50815:35:32","nodeType":"YulFunctionCall","src":"50815:35:32"},"nativeSrc":"50815:35:32","nodeType":"YulExpressionStatement","src":"50815:35:32"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"50744:112:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"50793:5:32","nodeType":"YulTypedName","src":"50793:5:32","type":""},{"name":"pos","nativeSrc":"50800:3:32","nodeType":"YulTypedName","src":"50800:3:32","type":""}],"src":"50744:112:32"},{"body":{"nativeSrc":"51040:367:32","nodeType":"YulBlock","src":"51040:367:32","statements":[{"nativeSrc":"51050:27:32","nodeType":"YulAssignment","src":"51050:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"51062:9:32","nodeType":"YulIdentifier","src":"51062:9:32"},{"kind":"number","nativeSrc":"51073:3:32","nodeType":"YulLiteral","src":"51073:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"51058:3:32","nodeType":"YulIdentifier","src":"51058:3:32"},"nativeSrc":"51058:19:32","nodeType":"YulFunctionCall","src":"51058:19:32"},"variableNames":[{"name":"tail","nativeSrc":"51050:4:32","nodeType":"YulIdentifier","src":"51050:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"51131:6:32","nodeType":"YulIdentifier","src":"51131:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"51144:9:32","nodeType":"YulIdentifier","src":"51144:9:32"},{"kind":"number","nativeSrc":"51155:1:32","nodeType":"YulLiteral","src":"51155:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"51140:3:32","nodeType":"YulIdentifier","src":"51140:3:32"},"nativeSrc":"51140:17:32","nodeType":"YulFunctionCall","src":"51140:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"51087:43:32","nodeType":"YulIdentifier","src":"51087:43:32"},"nativeSrc":"51087:71:32","nodeType":"YulFunctionCall","src":"51087:71:32"},"nativeSrc":"51087:71:32","nodeType":"YulExpressionStatement","src":"51087:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"51208:6:32","nodeType":"YulIdentifier","src":"51208:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"51221:9:32","nodeType":"YulIdentifier","src":"51221:9:32"},{"kind":"number","nativeSrc":"51232:2:32","nodeType":"YulLiteral","src":"51232:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"51217:3:32","nodeType":"YulIdentifier","src":"51217:3:32"},"nativeSrc":"51217:18:32","nodeType":"YulFunctionCall","src":"51217:18:32"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"51168:39:32","nodeType":"YulIdentifier","src":"51168:39:32"},"nativeSrc":"51168:68:32","nodeType":"YulFunctionCall","src":"51168:68:32"},"nativeSrc":"51168:68:32","nodeType":"YulExpressionStatement","src":"51168:68:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"51290:6:32","nodeType":"YulIdentifier","src":"51290:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"51303:9:32","nodeType":"YulIdentifier","src":"51303:9:32"},{"kind":"number","nativeSrc":"51314:2:32","nodeType":"YulLiteral","src":"51314:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"51299:3:32","nodeType":"YulIdentifier","src":"51299:3:32"},"nativeSrc":"51299:18:32","nodeType":"YulFunctionCall","src":"51299:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"51246:43:32","nodeType":"YulIdentifier","src":"51246:43:32"},"nativeSrc":"51246:72:32","nodeType":"YulFunctionCall","src":"51246:72:32"},"nativeSrc":"51246:72:32","nodeType":"YulExpressionStatement","src":"51246:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"51372:6:32","nodeType":"YulIdentifier","src":"51372:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"51385:9:32","nodeType":"YulIdentifier","src":"51385:9:32"},{"kind":"number","nativeSrc":"51396:2:32","nodeType":"YulLiteral","src":"51396:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"51381:3:32","nodeType":"YulIdentifier","src":"51381:3:32"},"nativeSrc":"51381:18:32","nodeType":"YulFunctionCall","src":"51381:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"51328:43:32","nodeType":"YulIdentifier","src":"51328:43:32"},"nativeSrc":"51328:72:32","nodeType":"YulFunctionCall","src":"51328:72:32"},"nativeSrc":"51328:72:32","nodeType":"YulExpressionStatement","src":"51328:72:32"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"50862:545:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"50988:9:32","nodeType":"YulTypedName","src":"50988:9:32","type":""},{"name":"value3","nativeSrc":"51000:6:32","nodeType":"YulTypedName","src":"51000:6:32","type":""},{"name":"value2","nativeSrc":"51008:6:32","nodeType":"YulTypedName","src":"51008:6:32","type":""},{"name":"value1","nativeSrc":"51016:6:32","nodeType":"YulTypedName","src":"51016:6:32","type":""},{"name":"value0","nativeSrc":"51024:6:32","nodeType":"YulTypedName","src":"51024:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"51035:4:32","nodeType":"YulTypedName","src":"51035:4:32","type":""}],"src":"50862:545:32"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_PhaseType_$8454(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_PhaseType_$8454(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_PhaseType_$8454(value)\n    }\n\n    function convert_t_enum$_PhaseType_$8454_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_PhaseType_$8454(value)\n    }\n\n    function abi_encode_t_enum$_PhaseType_$8454_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_PhaseType_$8454_to_t_uint8(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    // struct LaunchNFTV2.Phase -> struct LaunchNFTV2.Phase\n    function abi_encode_t_struct$_Phase_$8474_memory_ptr_to_t_struct$_Phase_$8474_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // phaseType\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_enum$_PhaseType_$8454_to_t_uint8(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // startTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // endTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // maxSupply\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // maxPerWallet\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // maxMintPerPhase\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // mintedInPhase\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // merkleRoot\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x0100))\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_struct$_Phase_$8474_memory_ptr__to_t_uint256_t_struct$_Phase_$8474_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_struct$_Phase_$8474_memory_ptr_to_t_struct$_Phase_$8474_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_enum$_PhaseType_$8454_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_PhaseType_$8454_to_t_uint8(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_enum$_PhaseType_$8454_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_enum$_PhaseType_$8454_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function validator_revert_t_enum$_PhaseType_$8454(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_PhaseType_$8454(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_PhaseType_$8454(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_enum$_PhaseType_$8454t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_PhaseType_$8454(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_PhaseType_$8454t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_PhaseType_$8454(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptrt_uint256t_bytes_calldata_ptrt_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_PhaseType_$8454(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_PhaseType_$8454(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"No balance to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid time range\")\n\n    }\n\n    function abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid max per wallet for non-p\")\n\n        mstore(add(memPtr, 32), \"ublic phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid max mint per phase for n\")\n\n        mstore(add(memPtr, 32), \"on-public phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0efef66a50fbc3f7d715ca68deddd082650e5684c1361a7fe542b92ef0b4f3c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Merkle root required for whiteli\")\n\n        mstore(add(memPtr, 32), \"st phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_enum$_PhaseType_$8454_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_enum$_PhaseType_$8454_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270(memPtr) {\n\n        mstore(add(memPtr, 0), \"Platform fee cannot exceed 10%\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fe7f60f6231e3080404808e1b6021b85d763764929d1c068d95a42a4a74c6270_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid fee recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint96_t_address__to_t_uint96_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_enum$_PhaseType_$8454__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_PhaseType_$8454_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3481":[{"length":32,"start":12388}],"3483":[{"length":32,"start":12347}],"3485":[{"length":32,"start":12261}],"3487":[{"length":32,"start":13917}],"3489":[{"length":32,"start":13950}],"3492":[{"length":32,"start":11073}],"3495":[{"length":32,"start":11132}],"8476":[{"length":32,"start":4316},{"length":32,"start":8106}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xCDD78CFC GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEB13554F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEB13554F EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0xEE5F4F13 EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x859 JUMPI DUP1 PUSH4 0xF7330C2D EQ PUSH2 0x882 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xCDD78CFC EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0xDB5E0063 EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0xDECC4A6A EQ PUSH2 0x781 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7AA JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xA4836C11 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6EE JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x7A989281 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61D JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2D0335AB GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x65D65E86 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x56F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x2E37EEF6 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x48A JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x1CE97FD1 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x38D JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x72A1319 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x4700 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x47F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP3 SWAP2 SWAP1 PUSH2 0x4AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x4AEA JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x4B3D JUMP JUMPDEST PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP3 SWAP2 SWAP1 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x4BA6 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x444 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x4900 JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F PUSH2 0xEDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x4AEA JUMP JUMPDEST PUSH2 0x1032 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x559 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x4BA6 JUMP JUMPDEST PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C1 PUSH2 0x11B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x4CCF JUMP JUMPDEST PUSH2 0x11CC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x614 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65D PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x47F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0x4F1F JUMP JUMPDEST PUSH2 0x1738 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x4F5F JUMP JUMPDEST PUSH2 0x174E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x515E JUMP JUMPDEST PUSH2 0x1AF7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x715 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x484B JUMP JUMPDEST PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x47F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x740 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x5208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76B PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x778 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x524F JUMP JUMPDEST PUSH2 0x1B59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x528F JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FC PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x827 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x834 SWAP2 SWAP1 PUSH2 0x52CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x857 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x53F6 JUMP JUMPDEST PUSH2 0x1D9B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x880 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x4BA6 JUMP JUMPDEST PUSH2 0x2621 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x54D2 JUMP JUMPDEST PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8CA DUP3 PUSH2 0x2726 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x8E0 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x90C SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x959 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x92E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x959 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x93C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x98D JUMPI PUSH2 0x98C PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9A1 JUMPI PUSH2 0x9A0 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D2 JUMPI PUSH2 0x9D1 PUSH2 0x496A JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI POP PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9EF JUMPI PUSH2 0x9EE PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA36 JUMPI POP PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA20 JUMPI PUSH2 0xA1F PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0xA46 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xA5A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x96C JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA68 DUP3 PUSH2 0x27A0 JUMP JUMPDEST POP PUSH2 0xA72 DUP3 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8B DUP3 DUP3 PUSH2 0xA86 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x286D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA6 PUSH2 0x4633 JUMP JUMPDEST PUSH2 0xAAE PUSH2 0x287F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAE0 JUMPI PUSH2 0xADF PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xAF1 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBD6 DUP4 DUP4 PUSH2 0xBD1 PUSH2 0x2865 JUMP JUMPDEST PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC4C JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x55A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD33 JUMPI PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xD3D PUSH2 0x29E1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x5678 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP4 PUSH2 0x10FE JUMP JUMPDEST DUP3 LT PUSH2 0xE86 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP3 SWAP2 SWAP1 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE7 PUSH2 0x29EB JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xF2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP1 PUSH2 0x56F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF39 PUSH2 0x167C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xF5C SWAP1 PUSH2 0x5746 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFE1 PUSH2 0x167C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x60188009B974C2FA66EE3B916D93F64D6534EA2204E0C466F9784ACE689E8E49 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1026 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x104D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C PUSH2 0xA8F JUMP JUMPDEST DUP3 LT PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1099 SWAP3 SWAP2 SWAP1 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B6 JUMPI PUSH2 0x10B5 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 DUP3 PUSH2 0x27A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1171 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C0 PUSH2 0x29EB JUMP JUMPDEST PUSH2 0x11CA PUSH1 0x0 PUSH2 0x2A72 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11D4 PUSH2 0x29EB JUMP JUMPDEST DUP5 DUP7 LT PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120D SWAP1 PUSH2 0x57A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1229 JUMPI PUSH2 0x1228 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x123C JUMPI PUSH2 0x123B PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x130E JUMPI PUSH1 0x0 DUP4 GT PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127C SWAP1 PUSH2 0x5839 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BF SWAP1 PUSH2 0x58CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1304 SWAP1 PUSH2 0x595D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x146F JUMPI PUSH1 0x0 PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1373 JUMPI PUSH2 0x1372 PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13EF JUMPI PUSH2 0x13EE PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1406 JUMPI PUSH2 0x1405 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1411 JUMPI POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP9 GT ISZERO DUP1 ISZERO PUSH2 0x1429 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP8 LT ISZERO JUMPDEST ISZERO PUSH2 0x1460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x27FDFACF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1311 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1491 JUMPI PUSH2 0x1490 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x11 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x11 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x496A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE POP POP DUP1 PUSH32 0xC1E64363396EF448152A5ABCCF24231295B872B93E1B6A53908FF34C8390A78 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x15BE SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x597D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x15E6 PUSH2 0x2B38 JUMP JUMPDEST PUSH2 0x15EE PUSH2 0x2B73 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160F JUMPI PUSH2 0x160E PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x163D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x16B5 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16E1 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x172E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1703 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x172E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1711 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x174A PUSH2 0x1743 PUSH2 0x2865 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2BAE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1756 PUSH2 0x29EB JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP10 LT PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3D911D5700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP7 LT PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x514C71C200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x17DF PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17F3 JUMPI PUSH2 0x17F2 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x18AA JUMPI PUSH1 0x0 DUP4 SUB PUSH2 0x1833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x514C71C200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD PUSH32 0x514C71C200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x18A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x514C71C200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1A13 JUMPI DUP10 DUP2 SUB ISZERO PUSH2 0x1A06 JUMPI PUSH1 0x0 PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18D8 JUMPI PUSH2 0x18D7 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1917 JUMPI PUSH2 0x1916 PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1929 JUMPI PUSH2 0x1928 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1993 JUMPI PUSH2 0x1992 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x19B5 JUMPI POP PUSH2 0x1A06 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP9 GT ISZERO DUP1 ISZERO PUSH2 0x19CD JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP8 LT ISZERO JUMPDEST ISZERO PUSH2 0x1A04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x27FDFACF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x18AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x11 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP9 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A61 JUMPI PUSH2 0x1A60 PUSH2 0x496A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP DUP10 PUSH32 0x83C587334C090F25E5A6AEC0675C11D1310C8B758FE5A28308A6CF7FF9DB4E53 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1AE3 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x597D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B02 DUP5 DUP5 DUP5 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x1B16 PUSH2 0x1B0D PUSH2 0x2865 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2D1D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B27 DUP3 PUSH2 0x2ECE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B61 PUSH2 0x29EB JUMP JUMPDEST PUSH2 0x3E8 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1BB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAB SWAP1 PUSH2 0x5A47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1A SWAP1 PUSH2 0x5AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x13 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x13 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBAD9436335DDABDD6FC56EA571323EB7DCFC0E82E9DBAF786BBB2A2AD6DE573C DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CC6 SWAP3 SWAP2 SWAP1 PUSH2 0x5AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D96 PUSH2 0x2FE1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DA6 PUSH2 0x287F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DBE JUMPI PUSH2 0x1DBD PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DE2 JUMPI PUSH2 0x1DE1 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1E9A JUMPI PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DFA SWAP2 SWAP1 PUSH2 0x5B44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1E62 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP4 PUSH1 0x8 ADD SLOAD DUP4 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x1E98 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB05E92FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST TIMESTAMP DUP8 LT ISZERO PUSH2 0x1ED4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x819BDCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x280749F6B9AC9E1A05F80919C2E8F043F5E409A99355AE2C6E1AB8664F17CB8D CALLER DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1F09 SWAP3 SWAP2 SWAP1 PUSH2 0x5B84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 PUSH1 0x1 ADD SLOAD DUP8 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F67 SWAP1 PUSH2 0x5B9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F83 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1FA6 DUP3 PUSH2 0x30AF JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2036 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP4 PUSH2 0x30C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2083 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD CALLVALUE EQ PUSH2 0x20C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x43A8B01000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x4 ADD SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x20DD JUMPI POP DUP3 PUSH1 0x4 ADD SLOAD DUP4 PUSH1 0x7 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x2114 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3E3F7E0D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x214B JUMPI PUSH2 0x214A PUSH2 0x496A JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x215C JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x5 ADD SLOAD EQ JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x21F2 JUMPI POP DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x12 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x21CE JUMPI PUSH2 0x21CD PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x21E0 JUMPI PUSH2 0x21DF PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x2229 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5107DBE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x223C JUMPI PUSH2 0x223B PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x496A JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x2271 JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x6 ADD SLOAD EQ JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x2286 JUMPI POP DUP3 PUSH1 0x6 ADD SLOAD DUP4 PUSH1 0x7 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x22BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3E3F7E0D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x13 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH2 0x22F6 SWAP2 SWAP1 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x2300 SWAP2 SWAP1 PUSH2 0x5678 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x23D2 JUMPI PUSH1 0x0 PUSH1 0x13 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2353 SWAP1 PUSH2 0x5746 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2390 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x23D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP2 CALLVALUE PUSH2 0x23E0 SWAP2 SWAP1 PUSH2 0x5C63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2497 JUMPI PUSH1 0x0 PUSH2 0x23F5 PUSH2 0x167C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2418 SWAP1 PUSH2 0x5746 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2455 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x245A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP5 PUSH1 0x7 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x24AC SWAP1 PUSH2 0x5B9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x12 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2516 JUMPI PUSH2 0x2515 PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2528 JUMPI PUSH2 0x2527 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2547 SWAP1 PUSH2 0x5B9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x2556 CALLER DUP16 PUSH2 0x30F5 JUMP JUMPDEST PUSH1 0x0 DUP14 DUP14 SWAP1 POP GT ISZERO PUSH2 0x25B1 JUMPI PUSH2 0x25B0 DUP15 DUP15 DUP15 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x3113 JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP15 PUSH32 0x99F38CF3FEAAD38E0A2E22EF51BDD4FABA32B432520A951248D77057596A425A DUP8 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x2609 SWAP2 SWAP1 PUSH2 0x5C97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2629 PUSH2 0x29EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x269B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2692 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26A4 DUP2 PUSH2 0x2A72 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26FD JUMPI PUSH2 0x26FC PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x270F JUMPI PUSH2 0x270E PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2799 JUMPI POP PUSH2 0x2798 DUP3 PUSH2 0x316F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x27AC DUP4 PUSH2 0x31E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x281F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2816 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x287A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3226 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2994 JUMPI PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28AB JUMPI PUSH2 0x28AA PUSH2 0x496A JUMP JUMPDEST JUMPDEST PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28BF JUMPI PUSH2 0x28BE PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28F0 JUMPI PUSH2 0x28EF PUSH2 0x496A JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2923 JUMPI POP PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2954 JUMPI POP PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x293E JUMPI PUSH2 0x293D PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0x2987 JUMPI DUP1 PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x296E JUMPI PUSH2 0x296D PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP4 POP SWAP4 POP POP POP PUSH2 0x29C7 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x288A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xA9477E0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D8 DUP5 DUP5 DUP5 PUSH2 0x33EB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x29F3 PUSH2 0x2865 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A11 PUSH2 0x167C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A70 JUMPI PUSH2 0x2A34 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A67 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B6E PUSH1 0xE PUSH32 0x0 PUSH2 0x3508 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2BA9 PUSH1 0xF PUSH32 0x0 PUSH2 0x3508 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C1F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C16 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2D10 SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2EC7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5D07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2DB8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DB5 SWAP2 SWAP1 PUSH2 0x5D68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2E3C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2DE8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2DED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2E34 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2B SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2EC5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EBC SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2ED9 DUP3 PUSH2 0x27A0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x2EFA SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F26 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F73 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F48 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F73 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F56 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2F84 PUSH2 0x35B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2F99 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2FCE JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FB6 SWAP3 SWAP2 SWAP1 PUSH2 0x5DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x2FD7 DUP5 PUSH2 0x35CF JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x305D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x308A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x3095 JUMP JUMPDEST PUSH2 0x3092 PUSH2 0x3638 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x30A5 DUP6 DUP5 PUSH2 0x36CE JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C2 PUSH2 0x30BC PUSH2 0x2FE1 JUMP JUMPDEST DUP4 PUSH2 0x371E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x30D9 DUP7 DUP7 PUSH2 0x375F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x30E9 DUP3 DUP3 PUSH2 0x37BB JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x310F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x391F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x3133 SWAP2 SWAP1 PUSH2 0x5FA1 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3163 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x31E2 JUMPI POP PUSH2 0x31E1 DUP3 PUSH2 0x3943 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x325F JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3393 JUMPI PUSH1 0x0 PUSH2 0x326F DUP5 PUSH2 0x27A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x32DA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x32ED JUMPI POP PUSH2 0x32EB DUP2 DUP5 PUSH2 0x1CD2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x332F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3326 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3391 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33F9 DUP6 DUP6 DUP6 PUSH2 0x39A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x343D JUMPI PUSH2 0x3438 DUP5 PUSH2 0x3BBE JUMP JUMPDEST PUSH2 0x347C JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x347B JUMPI PUSH2 0x347A DUP2 DUP6 PUSH2 0x3C07 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34BE JUMPI PUSH2 0x34B9 DUP5 PUSH2 0x3CF2 JUMP JUMPDEST PUSH2 0x34FD JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x34FC JUMPI PUSH2 0x34FB DUP6 DUP6 PUSH2 0x3DC3 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x3525 JUMPI PUSH2 0x351E DUP4 PUSH2 0x3E4E JUMP JUMPDEST SWAP1 POP PUSH2 0x35B2 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x3531 SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x355D SWAP1 PUSH2 0x5541 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x357F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x358D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35DA DUP3 PUSH2 0x27A0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x35E5 PUSH2 0x35B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3605 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3630 JUMP JUMPDEST DUP1 PUSH2 0x360F DUP5 PUSH2 0x3EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3620 SWAP3 SWAP2 SWAP1 PUSH2 0x5DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36B3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6073 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3713 JUMPI PUSH2 0x3704 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x36F7 JUMPI PUSH2 0x36F6 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3F90 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x36D7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x37A4 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x3796 DUP9 DUP3 DUP6 DUP6 PUSH2 0x3FBB JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x37CF JUMPI PUSH2 0x37CE PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x37E2 JUMPI PUSH2 0x37E1 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x391B JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x37FC JUMPI PUSH2 0x37FB PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x380F JUMPI PUSH2 0x380E PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3846 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x385A JUMPI PUSH2 0x3859 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x386D JUMPI PUSH2 0x386C PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x38B2 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A9 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x38C5 JUMPI PUSH2 0x38C4 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x38D8 JUMPI PUSH2 0x38D7 PUSH2 0x496A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x391A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3911 SWAP2 SWAP1 PUSH2 0x52CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3929 DUP4 DUP4 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x393E PUSH2 0x3934 PUSH2 0x2865 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2D1D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x399D JUMPI POP PUSH2 0x399C DUP3 PUSH2 0x41A8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39B0 DUP5 PUSH2 0x31E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39F2 JUMPI PUSH2 0x39F1 DUP2 DUP5 DUP7 PUSH2 0x428A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A83 JUMPI PUSH2 0x3A34 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x3226 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3B06 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xC DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C12 DUP4 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP3 EQ PUSH2 0x3CBE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xC DUP1 SLOAD SWAP1 POP PUSH2 0x3D06 SWAP2 SWAP1 PUSH2 0x5C63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3D36 JUMPI PUSH2 0x3D35 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3D58 JUMPI PUSH2 0x3D57 PUSH2 0x5572 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD DUP1 PUSH2 0x3DA7 JUMPI PUSH2 0x3DA6 PUSH2 0x60C6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3DD0 DUP5 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x3DDA SWAP2 SWAP1 PUSH2 0x5C63 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3E5B DUP4 PUSH2 0x434E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E7A JUMPI PUSH2 0x3E79 PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3EAC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x3ED1 DUP5 PUSH2 0x439E JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EF0 JUMPI PUSH2 0x3EEF PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3F22 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3F85 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x3F79 JUMPI PUSH2 0x3F78 PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3F30 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x3FA8 JUMPI PUSH2 0x3FA3 DUP3 DUP5 PUSH2 0x44F1 JUMP JUMPDEST PUSH2 0x3FB3 JUMP JUMPDEST PUSH2 0x3FB2 DUP4 DUP4 PUSH2 0x44F1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3FFB JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x40A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x4020 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6111 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4042 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4096 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x40A5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4121 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4118 SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x412F DUP4 DUP4 PUSH1 0x0 PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x41A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x419A SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4273 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4283 JUMPI POP PUSH2 0x4282 DUP3 PUSH2 0x4508 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4295 DUP4 DUP4 DUP4 PUSH2 0x4572 JUMP JUMPDEST PUSH2 0x4349 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x430A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4301 SWAP2 SWAP1 PUSH2 0x494F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4340 SWAP3 SWAP2 SWAP1 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x4395 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x43FC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x43F2 JUMPI PUSH2 0x43F1 PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x4439 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x442F JUMPI PUSH2 0x442E PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x4468 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x445E JUMPI PUSH2 0x445D PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x4491 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x4487 JUMPI PUSH2 0x4486 PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x44B6 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x44AC JUMPI PUSH2 0x44AB PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x44D9 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x44CF JUMPI PUSH2 0x44CE PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x44E8 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x462A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45EB JUMPI POP PUSH2 0x45EA DUP5 DUP5 PUSH2 0x1CD2 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x4629 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4611 DUP4 PUSH2 0x2828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4653 JUMPI PUSH2 0x4652 PUSH2 0x496A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46DD DUP2 PUSH2 0x46A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x46E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46FA DUP2 PUSH2 0x46D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4716 JUMPI PUSH2 0x4715 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4724 DUP5 DUP3 DUP6 ADD PUSH2 0x46EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4742 DUP2 PUSH2 0x472D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x475D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4739 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x479D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4782 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C5 DUP3 PUSH2 0x4763 JUMP JUMPDEST PUSH2 0x47CF DUP2 DUP6 PUSH2 0x476E JUMP JUMPDEST SWAP4 POP PUSH2 0x47DF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x477F JUMP JUMPDEST PUSH2 0x47E8 DUP2 PUSH2 0x47A9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x480D DUP2 DUP5 PUSH2 0x47BA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4828 DUP2 PUSH2 0x4815 JUMP JUMPDEST DUP2 EQ PUSH2 0x4833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4845 DUP2 PUSH2 0x481F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4861 JUMPI PUSH2 0x4860 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x486F DUP5 DUP3 DUP6 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A3 DUP3 PUSH2 0x4878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48B3 DUP2 PUSH2 0x4898 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x48AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48DD DUP2 PUSH2 0x4898 JUMP JUMPDEST DUP2 EQ PUSH2 0x48E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48FA DUP2 PUSH2 0x48D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4917 JUMPI PUSH2 0x4916 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4925 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4936 DUP6 DUP3 DUP7 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4949 DUP2 PUSH2 0x4815 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4964 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4940 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x49AA JUMPI PUSH2 0x49A9 PUSH2 0x496A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x49BB DUP3 PUSH2 0x4999 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49CB DUP3 PUSH2 0x49AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49DB DUP2 PUSH2 0x49C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x49EA DUP2 PUSH2 0x4815 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A03 DUP2 PUSH2 0x49F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x4A20 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x49D2 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4A33 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4A46 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x4A59 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4A6C PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x4A7F PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x4A92 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4AA5 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x49E1 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4ABA PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x49FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x4AD6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4AE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A09 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4B03 JUMPI PUSH2 0x4B02 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B11 DUP7 DUP3 DUP8 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4B22 DUP7 DUP3 DUP8 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4B33 DUP7 DUP3 DUP8 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B54 JUMPI PUSH2 0x4B53 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B62 DUP6 DUP3 DUP7 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4B73 DUP6 DUP3 DUP7 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4B92 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x4B9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4940 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BBC JUMPI PUSH2 0x4BBB PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BCA DUP5 DUP3 DUP6 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BDC DUP2 PUSH2 0x49C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4BEB DUP2 PUSH2 0x49F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x4C07 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x4BD3 JUMP JUMPDEST PUSH2 0x4C14 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C21 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C2E PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C3B PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C48 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C55 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C62 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4C70 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x4BE2 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x4C8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4C9D DUP2 PUSH2 0x4C7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CAC DUP2 PUSH2 0x49F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4CC9 DUP2 PUSH2 0x4CA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4CF0 JUMPI PUSH2 0x4CEF PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CFE DUP12 DUP3 DUP13 ADD PUSH2 0x4C8E JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x4D0F DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x4D20 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x4D31 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x4D42 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x4D53 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x4D64 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x4D75 DUP12 DUP3 DUP13 ADD PUSH2 0x4CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DBA DUP2 PUSH2 0x4D85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF8 DUP4 DUP4 PUSH2 0x49E1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1C DUP3 PUSH2 0x4DC0 JUMP JUMPDEST PUSH2 0x4E26 DUP2 DUP6 PUSH2 0x4DCB JUMP JUMPDEST SWAP4 POP PUSH2 0x4E31 DUP4 PUSH2 0x4DDC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E62 JUMPI DUP2 MLOAD PUSH2 0x4E49 DUP9 DUP3 PUSH2 0x4DEC JUMP JUMPDEST SWAP8 POP PUSH2 0x4E54 DUP4 PUSH2 0x4E04 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4E35 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x4E84 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x4DB1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4E96 DUP2 DUP10 PUSH2 0x47BA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4EAA DUP2 DUP9 PUSH2 0x47BA JUMP JUMPDEST SWAP1 POP PUSH2 0x4EB9 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x4EC6 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x4ED3 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x4BE2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4EE5 DUP2 DUP5 PUSH2 0x4E11 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4EFC DUP2 PUSH2 0x472D JUMP JUMPDEST DUP2 EQ PUSH2 0x4F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4F19 DUP2 PUSH2 0x4EF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F36 JUMPI PUSH2 0x4F35 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F44 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4F55 DUP6 DUP3 DUP7 ADD PUSH2 0x4F0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4F82 JUMPI PUSH2 0x4F81 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F90 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x4FA1 DUP13 DUP3 DUP14 ADD PUSH2 0x4C8E JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x4FB2 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x4FC3 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x4FD4 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x4FE5 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x4FF6 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH2 0x5007 DUP13 DUP3 DUP14 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0x5019 DUP13 DUP3 DUP14 ADD PUSH2 0x4CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x506B DUP3 PUSH2 0x47A9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x508A JUMPI PUSH2 0x5089 PUSH2 0x5033 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x509D PUSH2 0x4694 JUMP JUMPDEST SWAP1 POP PUSH2 0x50A9 DUP3 DUP3 PUSH2 0x5062 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x50C9 JUMPI PUSH2 0x50C8 PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH2 0x50D2 DUP3 PUSH2 0x47A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5101 PUSH2 0x50FC DUP5 PUSH2 0x50AE JUMP JUMPDEST PUSH2 0x5093 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x511D JUMPI PUSH2 0x511C PUSH2 0x502E JUMP JUMPDEST JUMPDEST PUSH2 0x5128 DUP5 DUP3 DUP6 PUSH2 0x50DF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5145 JUMPI PUSH2 0x5144 PUSH2 0x5029 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5155 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x50EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5178 JUMPI PUSH2 0x5177 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5186 DUP8 DUP3 DUP9 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x5197 DUP8 DUP3 DUP9 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x51A8 DUP8 DUP3 DUP9 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51C9 JUMPI PUSH2 0x51C8 PUSH2 0x46A3 JUMP JUMPDEST JUMPDEST PUSH2 0x51D5 DUP8 DUP3 DUP9 ADD PUSH2 0x5130 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5202 DUP2 PUSH2 0x51E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x521D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x522C DUP2 PUSH2 0x51E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x5237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5249 DUP2 PUSH2 0x5223 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5266 JUMPI PUSH2 0x5265 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5274 DUP6 DUP3 DUP7 ADD PUSH2 0x523A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5285 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x52A6 JUMPI PUSH2 0x52A5 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x52B4 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x52C5 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x52E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x530A JUMPI PUSH2 0x5309 PUSH2 0x5029 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5327 JUMPI PUSH2 0x5326 PUSH2 0x52EA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x5343 JUMPI PUSH2 0x5342 PUSH2 0x52EF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x5360 JUMPI PUSH2 0x535F PUSH2 0x5029 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x537D JUMPI PUSH2 0x537C PUSH2 0x52EA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x5399 JUMPI PUSH2 0x5398 PUSH2 0x52EF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x53B6 JUMPI PUSH2 0x53B5 PUSH2 0x5029 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53D3 JUMPI PUSH2 0x53D2 PUSH2 0x52EA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x53EF JUMPI PUSH2 0x53EE PUSH2 0x52EF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x5416 JUMPI PUSH2 0x5415 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5424 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5445 JUMPI PUSH2 0x5444 PUSH2 0x46A3 JUMP JUMPDEST JUMPDEST PUSH2 0x5451 DUP12 DUP3 DUP13 ADD PUSH2 0x52F4 JUMP JUMPDEST SWAP8 POP SWAP8 POP POP PUSH1 0x40 PUSH2 0x5464 DUP12 DUP3 DUP13 ADD PUSH2 0x4836 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5485 JUMPI PUSH2 0x5484 PUSH2 0x46A3 JUMP JUMPDEST JUMPDEST PUSH2 0x5491 DUP12 DUP3 DUP13 ADD PUSH2 0x534A JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x54B4 JUMPI PUSH2 0x54B3 PUSH2 0x46A3 JUMP JUMPDEST JUMPDEST PUSH2 0x54C0 DUP12 DUP3 DUP13 ADD PUSH2 0x53A0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x54E9 JUMPI PUSH2 0x54E8 PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x54F7 DUP6 DUP3 DUP7 ADD PUSH2 0x48EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5508 DUP6 DUP3 DUP7 ADD PUSH2 0x4C8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5559 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x556C JUMPI PUSH2 0x556B PUSH2 0x5512 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x55B6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x55C3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x55D0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x48AA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5612 DUP3 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP PUSH2 0x561D DUP4 PUSH2 0x4815 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x562B DUP2 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x5642 JUMPI PUSH2 0x5641 PUSH2 0x55D8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5683 DUP3 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP PUSH2 0x568E DUP4 PUSH2 0x4815 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x569E JUMPI PUSH2 0x569D PUSH2 0x5649 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2062616C616E636520746F20776974686472617700000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56DF PUSH1 0x16 DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x56EA DUP3 PUSH2 0x56A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x570E DUP2 PUSH2 0x56D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5730 PUSH1 0x0 DUP4 PUSH2 0x5715 JUMP JUMPDEST SWAP2 POP PUSH2 0x573B DUP3 PUSH2 0x5720 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5751 DUP3 PUSH2 0x5723 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642074696D652072616E67650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5791 PUSH1 0x12 DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x579C DUP3 PUSH2 0x575B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57C0 DUP2 PUSH2 0x5784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D6178207065722077616C6C657420666F72206E6F6E2D70 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x75626C6963207068617365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5823 PUSH1 0x2B DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x582E DUP3 PUSH2 0x57C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5852 DUP2 PUSH2 0x5816 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D6178206D696E742070657220706861736520666F72206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E2D7075626C69632070686173650000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B5 PUSH1 0x2F DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x58C0 DUP3 PUSH2 0x5859 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x58E4 DUP2 PUSH2 0x58A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D65726B6C6520726F6F7420726571756972656420666F722077686974656C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374207068617365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5947 PUSH1 0x28 DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x5952 DUP3 PUSH2 0x58EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5976 DUP2 PUSH2 0x593A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x5993 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4BD3 JUMP JUMPDEST PUSH2 0x59A0 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59AD PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59BA PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59C7 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59D4 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59E1 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x59EE PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4BE2 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x506C6174666F726D206665652063616E6E6F7420657863656564203130250000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A31 PUSH1 0x1E DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x5A3C DUP3 PUSH2 0x59FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A60 DUP2 PUSH2 0x5A24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642066656520726563697069656E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9D PUSH1 0x15 DUP4 PUSH2 0x476E JUMP JUMPDEST SWAP2 POP PUSH2 0x5AA8 DUP3 PUSH2 0x5A67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5ACC DUP2 PUSH2 0x5A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5AE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x51F9 JUMP JUMPDEST PUSH2 0x5AF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x48AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B14 DUP3 PUSH2 0x5AFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B26 DUP3 PUSH2 0x5B09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B3E PUSH2 0x5B39 DUP3 PUSH2 0x4898 JUMP JUMPDEST PUSH2 0x5B1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B50 DUP3 DUP5 PUSH2 0x5B2D JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B6B DUP4 DUP6 PUSH2 0x5715 JUMP JUMPDEST SWAP4 POP PUSH2 0x5B78 DUP4 DUP6 DUP5 PUSH2 0x50DF JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B91 DUP3 DUP5 DUP7 PUSH2 0x5B5F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA8 DUP3 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x5BDA JUMPI PUSH2 0x5BD9 PUSH2 0x55D8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x5BFB PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x5C08 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x5C15 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x5C22 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x5C2F PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x5C3C PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x5C49 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x5C56 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x4940 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C6E DUP3 PUSH2 0x4815 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C79 DUP4 PUSH2 0x4815 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5C91 JUMPI PUSH2 0x5C90 PUSH2 0x55D8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5CAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CD9 DUP3 PUSH2 0x5CB2 JUMP JUMPDEST PUSH2 0x5CE3 DUP2 DUP6 PUSH2 0x5CBD JUMP JUMPDEST SWAP4 POP PUSH2 0x5CF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x477F JUMP JUMPDEST PUSH2 0x5CFC DUP2 PUSH2 0x47A9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5D1C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x5D29 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x5D36 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5D48 DUP2 DUP5 PUSH2 0x5CCE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5D62 DUP2 PUSH2 0x46D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D7E JUMPI PUSH2 0x5D7D PUSH2 0x469E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5D8C DUP5 DUP3 DUP6 ADD PUSH2 0x5D53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DAB DUP3 PUSH2 0x4763 JUMP JUMPDEST PUSH2 0x5DB5 DUP2 DUP6 PUSH2 0x5D95 JUMP JUMPDEST SWAP4 POP PUSH2 0x5DC5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x477F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DDD DUP3 DUP6 PUSH2 0x5DA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x5DE9 DUP3 DUP5 PUSH2 0x5DA0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5E57 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5E1A JUMP JUMPDEST PUSH2 0x5E61 DUP7 DUP4 PUSH2 0x5E1A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E9E PUSH2 0x5E99 PUSH2 0x5E94 DUP5 PUSH2 0x4815 JUMP JUMPDEST PUSH2 0x5E79 JUMP JUMPDEST PUSH2 0x4815 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EB8 DUP4 PUSH2 0x5E83 JUMP JUMPDEST PUSH2 0x5ECC PUSH2 0x5EC4 DUP3 PUSH2 0x5EA5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5E27 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5EE1 PUSH2 0x5ED4 JUMP JUMPDEST PUSH2 0x5EEC DUP2 DUP5 DUP5 PUSH2 0x5EAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F10 JUMPI PUSH2 0x5F05 PUSH1 0x0 DUP3 PUSH2 0x5ED9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5EF2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5F55 JUMPI PUSH2 0x5F26 DUP2 PUSH2 0x5DF5 JUMP JUMPDEST PUSH2 0x5F2F DUP5 PUSH2 0x5E0A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5F3E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5F52 PUSH2 0x5F4A DUP6 PUSH2 0x5E0A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5EF1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F78 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5F5A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F91 DUP4 DUP4 PUSH2 0x5F67 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FAA DUP3 PUSH2 0x4763 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5FC3 JUMPI PUSH2 0x5FC2 PUSH2 0x5033 JUMP JUMPDEST JUMPDEST PUSH2 0x5FCD DUP3 SLOAD PUSH2 0x5541 JUMP JUMPDEST PUSH2 0x5FD8 DUP3 DUP3 DUP6 PUSH2 0x5F14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x600B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5FF9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x6003 DUP6 DUP3 PUSH2 0x5F85 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x606B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x6019 DUP7 PUSH2 0x5DF5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6041 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x601C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x605E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x605A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5F67 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x6088 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x6095 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x60A2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x60AF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4940 JUMP JUMPDEST PUSH2 0x60BC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x48AA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610B DUP2 PUSH2 0x60F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6126 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x6133 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6102 JUMP JUMPDEST PUSH2 0x6140 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x614D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4BE2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 SHL JUMPI PUSH24 0xDE253254A9CB4B1C39E0CBF63C54FBE3BFDC7F5251E9D815 0xBD TLOAD SLOAD 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"622:13275:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12307:216;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13525:370:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2062:102:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7655:138:31;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4142:578:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2379:657:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;13169:94:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1588:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1736:255:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11990:289:31;;;;;;;;;;;;;:::i;:::-;;4786:132:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2236:226:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2184:118:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1217:38:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;7797:1795:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5144:557:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9596:1925:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:233:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12527:155:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1784:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13433:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11525:392;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3927:153:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1823:35:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13065:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4139:3072;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13267:162:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12307:216;12461:4;12482:36;12506:11;12482:23;:36::i;:::-;12475:43;;12307:216;;;:::o;2364:89:7:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;13525:370:31:-;13578:4;13590:17;13610:15;13590:35;;13637:9;13632:240;13656:6;:13;;;;13652:1;:17;13632:240;;;13720:21;13697:44;;;;;;;;:::i;:::-;;:6;13704:1;13697:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;;;;;;;;;;:44;;;;;;;;:::i;:::-;;;;:88;;;;;13766:6;13773:1;13766:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;13753:9;:32;;13697:88;:130;;;;;13810:6;13817:1;13810:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;13797:9;:30;;13697:130;13684:182;;;13853:4;13846:11;;;;;;13684:182;13671:3;;;;;;;13632:240;;;;13885:5;13878:12;;;13525:370;;:::o;3496:154:7:-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;2062:102:10:-;2114:7;2140:10;:17;;;;2133:24;;2062:102;:::o;7655:138:31:-;7716:18;7736;;:::i;:::-;7771:17;:15;:17::i;:::-;7764:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7655:138;;:::o;4142:578:7:-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;2379:657:15:-;2487:16;2505:14;2531:32;2566:17;:26;2584:7;2566:26;;;;;;;;;;;2531:61;;2602:23;2628:12;:21;;;;;;;;;;;;2602:47;;2659:22;2684:12;:28;;;;;;;;;;;;2659:53;;2754:1;2727:29;;:15;:29;;;2723:173;;2790:19;:28;;;;;;;;;;;;2772:46;;2850:19;:35;;;;;;;;;;;;2832:53;;2723:173;2906:21;2962:17;:15;:17::i;:::-;2930:49;;2943:15;2931:27;;:9;:27;;;;:::i;:::-;2930:49;;;;:::i;:::-;2906:73;;2998:15;3015:13;2990:39;;;;;;;;2379:657;;;;;:::o;13169:94:31:-;13224:7;13246:6;:12;13253:4;13246:12;;;;;;;;;;;;;;;;13239:19;;13169:94;;;:::o;1588:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1736:255:10:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1918:5;1925;1895:36;;;;;;;;;;;;:::i;:::-;;;;;;;;1843:99;1958:12;:19;1971:5;1958:19;;;;;;;;;;;;;;;:26;1978:5;1958:26;;;;;;;;;;;;1951:33;;1736:255;;;;:::o;11990:289:31:-;1531:13:0;:11;:13::i;:::-;12035:15:31::1;12053:21;12035:39;;12098:1;12088:7;:11;12080:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;12134:12;12152:7;:5;:7::i;:::-;:12;;12172:7;12152:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12133:51;;;12195:7;12190:37;;12211:16;;;;;;;;;;;;;;12190:37;12257:7;:5;:7::i;:::-;12239:35;;;12266:7;12239:35;;;;;;:::i;:::-;;;;;;;;12029:250;;11990:289::o:0;4786:132:7:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2236:226:10:-;2302:7;2334:13;:11;:13::i;:::-;2325:5;:22;2321:101;;2401:1;2405:5;2370:41;;;;;;;;;;;;:::i;:::-;;;;;;;;2321:101;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;;2431:24;;2236:226;;;:::o;2184:118:7:-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;1217:38:31:-;;;:::o;1919:208:7:-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7797:1795:31:-;1531:13:0;:11;:13::i;:::-;8063:8:31::1;8050:10;:21;8042:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;8199:16;8185:30:::0;::::1;;;;;;;:::i;:::-;;:10;:30;;;;;;;;:::i;:::-;;::::0;8181:435;::::1;;8338:1;8322:13;:17;8314:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;8431:1;8412:16;:20;8395:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;8547:1;8539:10:::0;::::1;8524:11;:25:::0;8507:102:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8181:435;8663:9;8658:360;8682:6;:13;;;;8678:1;:17;8658:360;;;8710:26;8739:6;8746:1;8739:9;;;;;;;;:::i;:::-;;;;;;;;;;;;8710:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;8787:21;8760:48;;;;;;;;:::i;:::-;;:13;:23;;;:48;;;;;;;;:::i;:::-;;::::0;8756:62:::1;;8810:8;;;8756:62;8887:13;:21;;;8873:10;:35;;:84;;;;;8934:13;:23;;;8922:8;:35;;8873:84;8859:153;;;8984:19;;;;;;;;;;;;;;8859:153;8702:316;8658:360;8697:3;;;;;;;8658:360;;;;9024:21;9048:277;;;;;;;;9073:10;9048:277;;;;;;;;:::i;:::-;;;;;;9098:6;9048:277;;;;9123:10;9048:277;;;;9150:8;9048:277;;;;9177:10;9048:277;;;;9209:13;9048:277;;;;9247:16;9048:277;;;;9286:1;9048:277;;;;9307:11;9048:277;;::::0;9024:301:::1;;9332:18;9353:6;:13;;;;9332:34;;9372:6;9384:8;9372:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9423:10;9405:182;9441:10;9459:6;9473:10;9491:8;9507:10;9525:13;9546:16;9570:11;9405:182;;;;;;;;;;;;;:::i;:::-;;;;;;;;8036:1556;;7797:1795:::0;;;;;;;;:::o;5144:557:22:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2517:93:7:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;9596:1925:31:-;1531:13:0;:11;:13::i;:::-;9888:6:31::1;:13;;;;9873:11;:28;9869:60;;9910:19;;;;;;;;;;;;;;9869:60;9953:8;9939:10;:22;9935:62;;9970:27;;;;;;;;;;;;;;9935:62;10076:16;10062:30:::0;::::1;;;;;;;:::i;:::-;;:10;:30;;;;;;;;:::i;:::-;;::::0;10058:340;::::1;;10212:1;10195:13;:18:::0;10191:58:::1;;10222:27;;;;;;;;;;;;;;10191:58;10281:1;10261:16;:21:::0;10257:61:::1;;10291:27;;;;;;;;;;;;;;10257:61;10353:1;10345:10:::0;::::1;10330:11;:25:::0;10326:65:::1;;10364:27;;;;;;;;;;;;;;10326:65;10058:340;10445:9;10440:430;10464:6;:13;;;;10460:1;:17;10440:430;;;10501:11;10496:1;:16:::0;10492:30;10514:8:::1;10492:30;10562:26;10591:6;10598:1;10591:9;;;;;;;;:::i;:::-;;;;;;;;;;;;10562:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;10639:21;10612:48;;;;;;;;:::i;:::-;;:13;:23;;;:48;;;;;;;;:::i;:::-;;::::0;10608:62:::1;;10662:8;;;10608:62;10739:13;:21;;;10725:10;:35;;:84;;;;;10786:13;:23;;;10774:8;:35;;10725:84;10711:153;;;10836:19;;;;;;;;;;;;;;10711:153;10484:386;10440:430;10479:3;;;;;;;10440:430;;;;10876:27;10906:6;10913:11;10906:19;;;;;;;;:::i;:::-;;;;;;;;;;;;10876:49;;10957:10;10931:13;:23;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;10995:6;10973:13;:19;;:28;;;;11033:10;11007:13;:23;;:36;;;;11073:8;11049:13;:21;;:32;;;;11113:10;11087:13;:23;;:36;;;;11158:13;11129;:26;;:42;;;;11209:16;11177:13;:29;;:48;;;;11258:11;11231:13;:24;;:38;;;;11351:11;11331:185;11370:10;11388:6;11402:10;11420:8;11436:10;11454:13;11475:16;11499:11;11331:185;;;;;;;;;;;;;:::i;:::-;;;;;;;;9863:1658;9596:1925:::0;;;;;;;;;:::o;4984:233:7:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;12527:155:31:-;12626:13;12654:23;12669:7;12654:14;:23::i;:::-;12647:30;;12527:155;;;:::o;1784:35::-;;;;;;;;;;;;;:::o;13433:88::-;13481:7;13503:6;:13;;;;13496:20;;13433:88;:::o;11525:392::-;1531:13:0;:11;:13::i;:::-;11658:4:31::1;11640:14;:22;;;;11632:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11736:1;11711:27;;:13;:27;;::::0;11703:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;11795:14;11771:21;;:38;;;;;;;;;;;;;;;;;;11838:13;11815:20;;:36;;;;;;;;;;;;;;;;;;11863:49;11882:14;11898:13;11863:49;;;;;;;:::i;:::-;;;;;;;;11525:392:::0;;:::o;3927:153:7:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;1823:35:31:-;;;;;;;;;;;;;:::o;13065:100::-;13118:7;13140:20;:18;:20::i;:::-;13133:27;;13065:100;:::o;4139:3072::-;4389:18;4409:26;4439:17;:15;:17::i;:::-;4388:68;;;;4547:19;4521:45;;;;;;;;:::i;:::-;;:12;:22;;;;;;;;;;;;:45;;;;;;;;:::i;:::-;;;4517:242;;4576:12;4618:10;4601:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;4591:39;;;;;;4576:54;;4643:62;4662:11;;4643:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4675:12;:23;;;4700:4;4643:18;:62::i;:::-;4638:115;;4724:20;;;;;;;;;;;;;;4638:115;4568:191;4517:242;4804:15;4793:8;:26;4789:57;;;4828:18;;;;;;;;;;;;;;4789:57;4933:18;1362:143;5014:10;5034:7;5067:3;;5051:21;;;;;;;:::i;:::-;;;;;;;;5082:12;:18;;;5168:10;5231:6;:18;5238:10;5231:18;;;;;;;;;;;;;;;;:20;;;;;;;;;:::i;:::-;;;;;5261:8;4971:306;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4954:329;;;;;;4933:350;;5290:12;5305:28;5322:10;5305:16;:28::i;:::-;5290:43;;5370:13;5343:40;;:23;5356:9;;5343:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;:12;;:23;;;;:::i;:::-;:40;;;5339:71;;5392:18;;;;;;;;;;;;;;5339:71;5487:12;:18;;;5474:9;:31;5470:59;;5514:15;;;;;;;;;;;;;;5470:59;5645:1;5619:12;:22;;;:27;;:89;;;;;5686:12;:22;;;5656:12;:26;;;:52;;5619:89;5608:149;;;5730:20;;;;;;;;;;;;;;5608:149;5865:16;5839:42;;;;;;;;:::i;:::-;;:12;:22;;;;;;;;;;;;:42;;;;;;;;:::i;:::-;;;:84;;;;;5922:1;5893:12;:25;;;:30;5839:84;5837:87;:190;;;;;6002:12;:25;;;5934:22;:34;5957:10;5934:34;;;;;;;;;;;;;;;:58;5969:12;:22;;;;;;;;;;;;5934:58;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:93;;5837:190;5826:250;;;6049:20;;;;;;;;;;;;;;5826:250;6205:16;6179:42;;;;;;;;:::i;:::-;;:12;:22;;;;;;;;;;;;:42;;;;;;;;:::i;:::-;;;:87;;;;;6265:1;6233:12;:28;;;:33;6179:87;6177:90;:158;;;;;6307:12;:28;;;6277:12;:26;;;:58;;6177:158;6166:218;;;6357:20;;;;;;;;;;;;;;6166:218;6410:25;6476:5;6451:21;;;;;;;;;;;6439:33;;:9;:33;;;;:::i;:::-;6438:43;;;;:::i;:::-;6410:71;;6512:1;6492:17;:21;6488:177;;;6524:12;6542:20;;;;;;;;;;;:25;;6575:17;6542:71;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6523:90;;;6626:7;6621:37;;6642:16;;;;;;;;;;;;;;6621:37;6515:150;6488:177;6671:23;6709:17;6697:9;:29;;;;:::i;:::-;6671:55;;6754:1;6736:15;:19;6732:144;;;6766:12;6784:7;:5;:7::i;:::-;:12;;6804:15;6784:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6765:59;;;6837:7;6832:37;;6853:16;;;;;;;;;;;;;;6832:37;6757:119;6732:144;6916:12;:26;;;:28;;;;;;;;;:::i;:::-;;;;;;6950:22;:34;6973:10;6950:34;;;;;;;;;;;;;;;:58;6985:12;:22;;;;;;;;;;;;6950:58;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:60;;;;;;;;;:::i;:::-;;;;;;7035:30;7045:10;7057:7;7035:9;:30::i;:::-;7095:1;7081:3;;7075:17;;:21;7071:68;;;7106:26;7119:7;7128:3;;7106:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:26::i;:::-;7071:68;7171:10;7150:56;;7162:7;7150:56;7183:12;:22;;;;;;;;;;;;7150:56;;;;;;:::i;:::-;;;;;;;;4340:2871;;;;;;4139:3072;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;13267:162:31:-;13363:7;13385:22;:28;13408:4;13385:28;;;;;;;;;;;;;;;:39;13414:9;13385:39;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;13378:46;;13267:162;;;;:::o;1435:222:10:-;1537:4;1575:35;1560:50;;;:11;:50;;;;:90;;;;1614:36;1638:11;1614:23;:36::i;:::-;1560:90;1553:97;;1435:222;;;:::o;16212:241:7:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:16:-;709:7;735:10;728:17;;656:96;:::o;14492:120:7:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;7215:436:31:-;7277:18;7297:19;7326:17;7346:15;7326:35;;7373:9;7368:250;7392:6;:13;;;;7388:1;:17;7368:250;;;7456:21;7433:44;;;;;;;;:::i;:::-;;:6;7440:1;7433:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;;;;;;;;;;:44;;;;;;;;:::i;:::-;;;;:88;;;;;7502:6;7509:1;7502:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;7489:9;:32;;7433:88;:130;;;;;7546:6;7553:1;7546:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;7533:9;:30;;7433:130;7420:192;;;7590:1;7593:6;7600:1;7593:9;;;;;;;;:::i;:::-;;;;;;;;;;;;7582:21;;;;;;;;7420:192;7407:3;;;;;;;7368:250;;;;7631:15;;;;;;;;;;;;;;7215:436;;;:::o;12686:188::-;12815:7;12837:32;12851:2;12855:7;12864:4;12837:13;:32::i;:::-;12830:39;;12686:188;;;;;:::o;3311:95:15:-;3369:6;3394:5;3387:12;;3311:95;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6021:126:22:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;15665:312:7:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:14:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;1211:593:11:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;;1342:23;1368:10;:19;1379:7;1368:19;;;;;;;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;:8;:10::i;:::-;1397:31;;1523:1;1507:4;1501:18;:23;1497:70;;1547:9;1540:16;;;;;;1497:70;1692:1;1672:9;1666:23;:27;1662:95;;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;;;1662:95;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;;;;1211:593;;;;:::o;3845:262:22:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1902:154:24:-;1993:4;2045;2016:25;2029:5;2036:4;2016:12;:25::i;:::-;:33;2009:40;;1902:154;;;;;:::o;4917:176:22:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;3714:255:21:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;10656:100:7:-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;:::-;10656:100;;:::o;1923:167:11:-;2036:9;2014:10;:19;2025:7;2014:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2060:23;2075:7;2060:23;;;;;;:::i;:::-;;;;;;;;1923:167;;:::o;2116:213:15:-;2218:4;2256:26;2241:41;;;:11;:41;;;;:81;;;;2286:36;2310:11;2286:23;:36::i;:::-;2241:81;2234:88;;2116:213;;;:::o;5732:115:7:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;2518:625:10:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;;2728:1;2703:27;;:13;:27;;;2699:210;;2746:40;2778:7;2746:31;:40::i;:::-;2699:210;;;2824:2;2807:19;;:13;:19;;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;2803:106;2699:210;2936:1;2922:16;;:2;:16;;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;3020:19;;:13;:19;;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3016:90;2918:188;3123:13;3116:20;;;2518:625;;;;;:::o;3358:267:18:-;3452:13;1390:66;3510:17;;3500:5;3481:46;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:267;;;;;:::o;3173:92:7:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;4113:179:22:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2457:308:24:-;2540:7;2559:20;2582:4;2559:27;;2601:9;2596:134;2620:5;:12;2616:1;:16;2596:134;;;2668:51;2696:12;2710:5;2716:1;2710:8;;;;;;;;:::i;:::-;;;;;;;;2668:27;:51::i;:::-;2653:66;;2634:3;;;;;;;2596:134;;;;2746:12;2739:19;;;2457:308;;;;:::o;3326:374:25:-;3419:14;3501:4;3495:11;3531:10;3526:3;3519:23;3578:15;3571:4;3566:3;3562:14;3555:39;3630:10;3623:4;3618:3;3614:14;3607:34;3679:4;3674:3;3664:20;3654:30;;3470:224;3326:374;;;;:::o;2129:778:21:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;10977:207:7:-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;11133:12;:10;:12::i;:::-;11155:1;11159:2;11163:7;11172:4;11099:33;:78::i;:::-;10977:207;;;:::o;938::11:-;1040:4;761:10;754:18;;1063:35;;;:11;:35;;;;:75;;;;1102:36;1126:11;1102:23;:36::i;:::-;1063:75;1056:82;;938:207;;;:::o;8861:795:7:-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;3846:161:10:-;3949:10;:17;;;;3922:15;:24;3938:7;3922:24;;;;;;;;;;;:44;;;;3976:10;3992:7;3976:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:161;:::o;4624:1055::-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4886:40;;4936:18;4957:17;:26;4975:7;4957:26;;;;;;;;;;;;4936:47;;4994:61;5058:12;:18;5071:4;5058:18;;;;;;;;;;;;;;;4994:82;;5194:14;5180:10;:28;5176:325;;5224:19;5246;:35;5266:14;5246:35;;;;;;;;;;;;5224:57;;5330:11;5296:19;:31;5316:10;5296:31;;;;;;;;;;;:45;;;;5446:10;5413:17;:30;5431:11;5413:30;;;;;;;;;;;:43;;;;5210:291;5176:325;5594:17;:26;5612:7;5594:26;;;;;;;;;;;5587:33;;;5637:19;:35;5657:14;5637:35;;;;;;;;;;;5630:42;;;4705:974;;;4624:1055;;:::o;5967:1061::-;6216:22;6261:1;6241:10;:17;;;;:21;;;;:::i;:::-;6216:46;;6272:18;6293:15;:24;6309:7;6293:24;;;;;;;;;;;;6272:45;;6639:19;6661:10;6672:14;6661:26;;;;;;;;:::i;:::-;;;;;;;;;;6639:48;;6723:11;6698:10;6709;6698:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6833:10;6802:15;:28;6818:11;6802:28;;;;;;;;;;;:41;;;;6971:15;:24;6987:7;6971:24;;;;;;;;;;;6964:31;;;7005:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6038:990;;;5967:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;3521:34;;3592:7;3565:12;:16;3578:2;3565:16;;;;;;;;;;;;;;;:24;3582:6;3565:24;;;;;;;;;;;:34;;;;3638:6;3609:17;:26;3627:7;3609:26;;;;;;;;;;;:35;;;;3511:140;3437:214;;:::o;2078:378:18:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;637:632:20:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;944:6;940:2;936:15;928:6;924:28;917:35;;979:247;986:4;979:247;;;1010:5;;;;;;;;1114:10;1109:2;1102:5;1098:14;1093:32;1088:3;1080:46;1170:2;1161:11;;;;;;:::i;:::-;;;;;1203:1;1194:5;:10;979:247;1190:21;979:247;1246:6;1239:13;;;;;637:632;;;:::o;504:169:23:-;579:7;609:1;605;:5;:61;;641:25;661:1;664;641:19;:25::i;:::-;605:61;;;613:25;633:1;636;613:19;:25::i;:::-;605:61;598:68;;504:169;;;;:::o;5203:1551:21:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;9978:327:7:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;1560:300::-;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;2528:245:18:-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;25316:916:28:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;793:239:23:-;866:13;943:1;937:4;930:15;971:1;965:4;958:15;1011:4;1005;995:21;986:30;;793:239;;;;:::o;763:146:26:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;6401:272:7:-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:32:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:118::-;4979:24;4997:5;4979:24;:::i;:::-;4974:3;4967:37;4892:118;;:::o;5016:222::-;5109:4;5147:2;5136:9;5132:18;5124:26;;5160:71;5228:1;5217:9;5213:17;5204:6;5160:71;:::i;:::-;5016:222;;;;:::o;5244:180::-;5292:77;5289:1;5282:88;5389:4;5386:1;5379:15;5413:4;5410:1;5403:15;5430:119;5517:1;5510:5;5507:12;5497:46;;5523:18;;:::i;:::-;5497:46;5430:119;:::o;5555:139::-;5606:7;5635:5;5624:16;;5641:47;5682:5;5641:47;:::i;:::-;5555:139;;;:::o;5700:::-;5762:9;5795:38;5827:5;5795:38;:::i;:::-;5782:51;;5700:139;;;:::o;5845:145::-;5934:49;5977:5;5934:49;:::i;:::-;5929:3;5922:62;5845:145;;:::o;5996:108::-;6073:24;6091:5;6073:24;:::i;:::-;6068:3;6061:37;5996:108;;:::o;6110:77::-;6147:7;6176:5;6165:16;;6110:77;;;:::o;6193:108::-;6270:24;6288:5;6270:24;:::i;:::-;6265:3;6258:37;6193:108;;:::o;6367:1792::-;6510:6;6505:3;6501:16;6604:4;6597:5;6593:16;6587:23;6623:75;6692:4;6687:3;6683:14;6669:12;6623:75;:::i;:::-;6527:181;6791:4;6784:5;6780:16;6774:23;6810:63;6867:4;6862:3;6858:14;6844:12;6810:63;:::i;:::-;6718:165;6970:4;6963:5;6959:16;6953:23;6989:63;7046:4;7041:3;7037:14;7023:12;6989:63;:::i;:::-;6893:169;7147:4;7140:5;7136:16;7130:23;7166:63;7223:4;7218:3;7214:14;7200:12;7166:63;:::i;:::-;7072:167;7326:4;7319:5;7315:16;7309:23;7345:63;7402:4;7397:3;7393:14;7379:12;7345:63;:::i;:::-;7249:169;7508:4;7501:5;7497:16;7491:23;7527:63;7584:4;7579:3;7575:14;7561:12;7527:63;:::i;:::-;7428:172;7693:4;7686:5;7682:16;7676:23;7712:63;7769:4;7764:3;7760:14;7746:12;7712:63;:::i;:::-;7610:175;7876:4;7869:5;7865:16;7859:23;7895:63;7952:4;7947:3;7943:14;7929:12;7895:63;:::i;:::-;7795:173;8056:6;8049:5;8045:18;8039:25;8077:65;8134:6;8129:3;8125:16;8111:12;8077:65;:::i;:::-;7978:174;6479:1680;6367:1792;;:::o;8165:425::-;8332:4;8370:3;8359:9;8355:19;8347:27;;8384:71;8452:1;8441:9;8437:17;8428:6;8384:71;:::i;:::-;8465:118;8579:2;8568:9;8564:18;8555:6;8465:118;:::i;:::-;8165:425;;;;;:::o;8596:619::-;8673:6;8681;8689;8738:2;8726:9;8717:7;8713:23;8709:32;8706:119;;;8744:79;;:::i;:::-;8706:119;8864:1;8889:53;8934:7;8925:6;8914:9;8910:22;8889:53;:::i;:::-;8879:63;;8835:117;8991:2;9017:53;9062:7;9053:6;9042:9;9038:22;9017:53;:::i;:::-;9007:63;;8962:118;9119:2;9145:53;9190:7;9181:6;9170:9;9166:22;9145:53;:::i;:::-;9135:63;;9090:118;8596:619;;;;;:::o;9221:474::-;9289:6;9297;9346:2;9334:9;9325:7;9321:23;9317:32;9314:119;;;9352:79;;:::i;:::-;9314:119;9472:1;9497:53;9542:7;9533:6;9522:9;9518:22;9497:53;:::i;:::-;9487:63;;9443:117;9599:2;9625:53;9670:7;9661:6;9650:9;9646:22;9625:53;:::i;:::-;9615:63;;9570:118;9221:474;;;;;:::o;9701:332::-;9822:4;9860:2;9849:9;9845:18;9837:26;;9873:71;9941:1;9930:9;9926:17;9917:6;9873:71;:::i;:::-;9954:72;10022:2;10011:9;10007:18;9998:6;9954:72;:::i;:::-;9701:332;;;;;:::o;10039:329::-;10098:6;10147:2;10135:9;10126:7;10122:23;10118:32;10115:119;;;10153:79;;:::i;:::-;10115:119;10273:1;10298:53;10343:7;10334:6;10323:9;10319:22;10298:53;:::i;:::-;10288:63;;10244:117;10039:329;;;;:::o;10374:155::-;10473:49;10516:5;10473:49;:::i;:::-;10468:3;10461:62;10374:155;;:::o;10535:118::-;10622:24;10640:5;10622:24;:::i;:::-;10617:3;10610:37;10535:118;;:::o;10659:1132::-;10988:4;11026:3;11015:9;11011:19;11003:27;;11040:83;11120:1;11109:9;11105:17;11096:6;11040:83;:::i;:::-;11133:72;11201:2;11190:9;11186:18;11177:6;11133:72;:::i;:::-;11215;11283:2;11272:9;11268:18;11259:6;11215:72;:::i;:::-;11297;11365:2;11354:9;11350:18;11341:6;11297:72;:::i;:::-;11379:73;11447:3;11436:9;11432:19;11423:6;11379:73;:::i;:::-;11462;11530:3;11519:9;11515:19;11506:6;11462:73;:::i;:::-;11545;11613:3;11602:9;11598:19;11589:6;11545:73;:::i;:::-;11628;11696:3;11685:9;11681:19;11672:6;11628:73;:::i;:::-;11711;11779:3;11768:9;11764:19;11755:6;11711:73;:::i;:::-;10659:1132;;;;;;;;;;;;:::o;11797:113::-;11884:1;11877:5;11874:12;11864:40;;11900:1;11897;11890:12;11864:40;11797:113;:::o;11916:167::-;11976:5;12014:6;12001:20;11992:29;;12030:47;12071:5;12030:47;:::i;:::-;11916:167;;;;:::o;12089:122::-;12162:24;12180:5;12162:24;:::i;:::-;12155:5;12152:35;12142:63;;12201:1;12198;12191:12;12142:63;12089:122;:::o;12217:139::-;12263:5;12301:6;12288:20;12279:29;;12317:33;12344:5;12317:33;:::i;:::-;12217:139;;;;:::o;12362:1377::-;12498:6;12506;12514;12522;12530;12538;12546;12554;12603:3;12591:9;12582:7;12578:23;12574:33;12571:120;;;12610:79;;:::i;:::-;12571:120;12730:1;12755:67;12814:7;12805:6;12794:9;12790:22;12755:67;:::i;:::-;12745:77;;12701:131;12871:2;12897:53;12942:7;12933:6;12922:9;12918:22;12897:53;:::i;:::-;12887:63;;12842:118;12999:2;13025:53;13070:7;13061:6;13050:9;13046:22;13025:53;:::i;:::-;13015:63;;12970:118;13127:2;13153:53;13198:7;13189:6;13178:9;13174:22;13153:53;:::i;:::-;13143:63;;13098:118;13255:3;13282:53;13327:7;13318:6;13307:9;13303:22;13282:53;:::i;:::-;13272:63;;13226:119;13384:3;13411:53;13456:7;13447:6;13436:9;13432:22;13411:53;:::i;:::-;13401:63;;13355:119;13513:3;13540:53;13585:7;13576:6;13565:9;13561:22;13540:53;:::i;:::-;13530:63;;13484:119;13642:3;13669:53;13714:7;13705:6;13694:9;13690:22;13669:53;:::i;:::-;13659:63;;13613:119;12362:1377;;;;;;;;;;;:::o;13745:149::-;13781:7;13821:66;13814:5;13810:78;13799:89;;13745:149;;;:::o;13900:115::-;13985:23;14002:5;13985:23;:::i;:::-;13980:3;13973:36;13900:115;;:::o;14021:114::-;14088:6;14122:5;14116:12;14106:22;;14021:114;;;:::o;14141:184::-;14240:11;14274:6;14269:3;14262:19;14314:4;14309:3;14305:14;14290:29;;14141:184;;;;:::o;14331:132::-;14398:4;14421:3;14413:11;;14451:4;14446:3;14442:14;14434:22;;14331:132;;;:::o;14469:179::-;14538:10;14559:46;14601:3;14593:6;14559:46;:::i;:::-;14637:4;14632:3;14628:14;14614:28;;14469:179;;;;:::o;14654:113::-;14724:4;14756;14751:3;14747:14;14739:22;;14654:113;;;:::o;14803:732::-;14922:3;14951:54;14999:5;14951:54;:::i;:::-;15021:86;15100:6;15095:3;15021:86;:::i;:::-;15014:93;;15131:56;15181:5;15131:56;:::i;:::-;15210:7;15241:1;15226:284;15251:6;15248:1;15245:13;15226:284;;;15327:6;15321:13;15354:63;15413:3;15398:13;15354:63;:::i;:::-;15347:70;;15440:60;15493:6;15440:60;:::i;:::-;15430:70;;15286:224;15273:1;15270;15266:9;15261:14;;15226:284;;;15230:14;15526:3;15519:10;;14927:608;;;14803:732;;;;:::o;15541:1215::-;15890:4;15928:3;15917:9;15913:19;15905:27;;15942:69;16008:1;15997:9;15993:17;15984:6;15942:69;:::i;:::-;16058:9;16052:4;16048:20;16043:2;16032:9;16028:18;16021:48;16086:78;16159:4;16150:6;16086:78;:::i;:::-;16078:86;;16211:9;16205:4;16201:20;16196:2;16185:9;16181:18;16174:48;16239:78;16312:4;16303:6;16239:78;:::i;:::-;16231:86;;16327:72;16395:2;16384:9;16380:18;16371:6;16327:72;:::i;:::-;16409:73;16477:3;16466:9;16462:19;16453:6;16409:73;:::i;:::-;16492;16560:3;16549:9;16545:19;16536:6;16492:73;:::i;:::-;16613:9;16607:4;16603:20;16597:3;16586:9;16582:19;16575:49;16641:108;16744:4;16735:6;16641:108;:::i;:::-;16633:116;;15541:1215;;;;;;;;;;:::o;16762:116::-;16832:21;16847:5;16832:21;:::i;:::-;16825:5;16822:32;16812:60;;16868:1;16865;16858:12;16812:60;16762:116;:::o;16884:133::-;16927:5;16965:6;16952:20;16943:29;;16981:30;17005:5;16981:30;:::i;:::-;16884:133;;;;:::o;17023:468::-;17088:6;17096;17145:2;17133:9;17124:7;17120:23;17116:32;17113:119;;;17151:79;;:::i;:::-;17113:119;17271:1;17296:53;17341:7;17332:6;17321:9;17317:22;17296:53;:::i;:::-;17286:63;;17242:117;17398:2;17424:50;17466:7;17457:6;17446:9;17442:22;17424:50;:::i;:::-;17414:60;;17369:115;17023:468;;;;;:::o;17497:1523::-;17642:6;17650;17658;17666;17674;17682;17690;17698;17706;17755:3;17743:9;17734:7;17730:23;17726:33;17723:120;;;17762:79;;:::i;:::-;17723:120;17882:1;17907:53;17952:7;17943:6;17932:9;17928:22;17907:53;:::i;:::-;17897:63;;17853:117;18009:2;18035:67;18094:7;18085:6;18074:9;18070:22;18035:67;:::i;:::-;18025:77;;17980:132;18151:2;18177:53;18222:7;18213:6;18202:9;18198:22;18177:53;:::i;:::-;18167:63;;18122:118;18279:2;18305:53;18350:7;18341:6;18330:9;18326:22;18305:53;:::i;:::-;18295:63;;18250:118;18407:3;18434:53;18479:7;18470:6;18459:9;18455:22;18434:53;:::i;:::-;18424:63;;18378:119;18536:3;18563:53;18608:7;18599:6;18588:9;18584:22;18563:53;:::i;:::-;18553:63;;18507:119;18665:3;18692:53;18737:7;18728:6;18717:9;18713:22;18692:53;:::i;:::-;18682:63;;18636:119;18794:3;18821:53;18866:7;18857:6;18846:9;18842:22;18821:53;:::i;:::-;18811:63;;18765:119;18923:3;18950:53;18995:7;18986:6;18975:9;18971:22;18950:53;:::i;:::-;18940:63;;18894:119;17497:1523;;;;;;;;;;;:::o;19026:117::-;19135:1;19132;19125:12;19149:117;19258:1;19255;19248:12;19272:180;19320:77;19317:1;19310:88;19417:4;19414:1;19407:15;19441:4;19438:1;19431:15;19458:281;19541:27;19563:4;19541:27;:::i;:::-;19533:6;19529:40;19671:6;19659:10;19656:22;19635:18;19623:10;19620:34;19617:62;19614:88;;;19682:18;;:::i;:::-;19614:88;19722:10;19718:2;19711:22;19501:238;19458:281;;:::o;19745:129::-;19779:6;19806:20;;:::i;:::-;19796:30;;19835:33;19863:4;19855:6;19835:33;:::i;:::-;19745:129;;;:::o;19880:307::-;19941:4;20031:18;20023:6;20020:30;20017:56;;;20053:18;;:::i;:::-;20017:56;20091:29;20113:6;20091:29;:::i;:::-;20083:37;;20175:4;20169;20165:15;20157:23;;19880:307;;;:::o;20193:148::-;20291:6;20286:3;20281;20268:30;20332:1;20323:6;20318:3;20314:16;20307:27;20193:148;;;:::o;20347:423::-;20424:5;20449:65;20465:48;20506:6;20465:48;:::i;:::-;20449:65;:::i;:::-;20440:74;;20537:6;20530:5;20523:21;20575:4;20568:5;20564:16;20613:3;20604:6;20599:3;20595:16;20592:25;20589:112;;;20620:79;;:::i;:::-;20589:112;20710:54;20757:6;20752:3;20747;20710:54;:::i;:::-;20430:340;20347:423;;;;;:::o;20789:338::-;20844:5;20893:3;20886:4;20878:6;20874:17;20870:27;20860:122;;20901:79;;:::i;:::-;20860:122;21018:6;21005:20;21043:78;21117:3;21109:6;21102:4;21094:6;21090:17;21043:78;:::i;:::-;21034:87;;20850:277;20789:338;;;;:::o;21133:943::-;21228:6;21236;21244;21252;21301:3;21289:9;21280:7;21276:23;21272:33;21269:120;;;21308:79;;:::i;:::-;21269:120;21428:1;21453:53;21498:7;21489:6;21478:9;21474:22;21453:53;:::i;:::-;21443:63;;21399:117;21555:2;21581:53;21626:7;21617:6;21606:9;21602:22;21581:53;:::i;:::-;21571:63;;21526:118;21683:2;21709:53;21754:7;21745:6;21734:9;21730:22;21709:53;:::i;:::-;21699:63;;21654:118;21839:2;21828:9;21824:18;21811:32;21870:18;21862:6;21859:30;21856:117;;;21892:79;;:::i;:::-;21856:117;21997:62;22051:7;22042:6;22031:9;22027:22;21997:62;:::i;:::-;21987:72;;21782:287;21133:943;;;;;;;:::o;22082:109::-;22118:7;22158:26;22151:5;22147:38;22136:49;;22082:109;;;:::o;22197:115::-;22282:23;22299:5;22282:23;:::i;:::-;22277:3;22270:36;22197:115;;:::o;22318:218::-;22409:4;22447:2;22436:9;22432:18;22424:26;;22460:69;22526:1;22515:9;22511:17;22502:6;22460:69;:::i;:::-;22318:218;;;;:::o;22542:120::-;22614:23;22631:5;22614:23;:::i;:::-;22607:5;22604:34;22594:62;;22652:1;22649;22642:12;22594:62;22542:120;:::o;22668:137::-;22713:5;22751:6;22738:20;22729:29;;22767:32;22793:5;22767:32;:::i;:::-;22668:137;;;;:::o;22811:472::-;22878:6;22886;22935:2;22923:9;22914:7;22910:23;22906:32;22903:119;;;22941:79;;:::i;:::-;22903:119;23061:1;23086:52;23130:7;23121:6;23110:9;23106:22;23086:52;:::i;:::-;23076:62;;23032:116;23187:2;23213:53;23258:7;23249:6;23238:9;23234:22;23213:53;:::i;:::-;23203:63;;23158:118;22811:472;;;;;:::o;23289:474::-;23357:6;23365;23414:2;23402:9;23393:7;23389:23;23385:32;23382:119;;;23420:79;;:::i;:::-;23382:119;23540:1;23565:53;23610:7;23601:6;23590:9;23586:22;23565:53;:::i;:::-;23555:63;;23511:117;23667:2;23693:53;23738:7;23729:6;23718:9;23714:22;23693:53;:::i;:::-;23683:63;;23638:118;23289:474;;;;;:::o;23769:222::-;23862:4;23900:2;23889:9;23885:18;23877:26;;23913:71;23981:1;23970:9;23966:17;23957:6;23913:71;:::i;:::-;23769:222;;;;:::o;23997:117::-;24106:1;24103;24096:12;24120:117;24229:1;24226;24219:12;24257:553;24315:8;24325:6;24375:3;24368:4;24360:6;24356:17;24352:27;24342:122;;24383:79;;:::i;:::-;24342:122;24496:6;24483:20;24473:30;;24526:18;24518:6;24515:30;24512:117;;;24548:79;;:::i;:::-;24512:117;24662:4;24654:6;24650:17;24638:29;;24716:3;24708:4;24700:6;24696:17;24686:8;24682:32;24679:41;24676:128;;;24723:79;;:::i;:::-;24676:128;24257:553;;;;;:::o;24829:552::-;24886:8;24896:6;24946:3;24939:4;24931:6;24927:17;24923:27;24913:122;;24954:79;;:::i;:::-;24913:122;25067:6;25054:20;25044:30;;25097:18;25089:6;25086:30;25083:117;;;25119:79;;:::i;:::-;25083:117;25233:4;25225:6;25221:17;25209:29;;25287:3;25279:4;25271:6;25267:17;25257:8;25253:32;25250:41;25247:128;;;25294:79;;:::i;:::-;25247:128;24829:552;;;;;:::o;25404:568::-;25477:8;25487:6;25537:3;25530:4;25522:6;25518:17;25514:27;25504:122;;25545:79;;:::i;:::-;25504:122;25658:6;25645:20;25635:30;;25688:18;25680:6;25677:30;25674:117;;;25710:79;;:::i;:::-;25674:117;25824:4;25816:6;25812:17;25800:29;;25878:3;25870:4;25862:6;25858:17;25848:8;25844:32;25841:41;25838:128;;;25885:79;;:::i;:::-;25838:128;25404:568;;;;;:::o;25978:1539::-;26123:6;26131;26139;26147;26155;26163;26171;26179;26228:3;26216:9;26207:7;26203:23;26199:33;26196:120;;;26235:79;;:::i;:::-;26196:120;26355:1;26380:53;26425:7;26416:6;26405:9;26401:22;26380:53;:::i;:::-;26370:63;;26326:117;26510:2;26499:9;26495:18;26482:32;26541:18;26533:6;26530:30;26527:117;;;26563:79;;:::i;:::-;26527:117;26676:65;26733:7;26724:6;26713:9;26709:22;26676:65;:::i;:::-;26658:83;;;;26453:298;26790:2;26816:53;26861:7;26852:6;26841:9;26837:22;26816:53;:::i;:::-;26806:63;;26761:118;26946:2;26935:9;26931:18;26918:32;26977:18;26969:6;26966:30;26963:117;;;26999:79;;:::i;:::-;26963:117;27112:64;27168:7;27159:6;27148:9;27144:22;27112:64;:::i;:::-;27094:82;;;;26889:297;27253:3;27242:9;27238:19;27225:33;27285:18;27277:6;27274:30;27271:117;;;27307:79;;:::i;:::-;27271:117;27420:80;27492:7;27483:6;27472:9;27468:22;27420:80;:::i;:::-;27402:98;;;;27196:314;25978:1539;;;;;;;;;;;:::o;27523:502::-;27605:6;27613;27662:2;27650:9;27641:7;27637:23;27633:32;27630:119;;;27668:79;;:::i;:::-;27630:119;27788:1;27813:53;27858:7;27849:6;27838:9;27834:22;27813:53;:::i;:::-;27803:63;;27759:117;27915:2;27941:67;28000:7;27991:6;27980:9;27976:22;27941:67;:::i;:::-;27931:77;;27886:132;27523:502;;;;;:::o;28031:180::-;28079:77;28076:1;28069:88;28176:4;28173:1;28166:15;28200:4;28197:1;28190:15;28217:320;28261:6;28298:1;28292:4;28288:12;28278:22;;28345:1;28339:4;28335:12;28366:18;28356:81;;28422:4;28414:6;28410:17;28400:27;;28356:81;28484:2;28476:6;28473:14;28453:18;28450:38;28447:84;;28503:18;;:::i;:::-;28447:84;28268:269;28217:320;;;:::o;28543:180::-;28591:77;28588:1;28581:88;28688:4;28685:1;28678:15;28712:4;28709:1;28702:15;28729:442;28878:4;28916:2;28905:9;28901:18;28893:26;;28929:71;28997:1;28986:9;28982:17;28973:6;28929:71;:::i;:::-;29010:72;29078:2;29067:9;29063:18;29054:6;29010:72;:::i;:::-;29092;29160:2;29149:9;29145:18;29136:6;29092:72;:::i;:::-;28729:442;;;;;;:::o;29177:180::-;29225:77;29222:1;29215:88;29322:4;29319:1;29312:15;29346:4;29343:1;29336:15;29363:410;29403:7;29426:20;29444:1;29426:20;:::i;:::-;29421:25;;29460:20;29478:1;29460:20;:::i;:::-;29455:25;;29515:1;29512;29508:9;29537:30;29555:11;29537:30;:::i;:::-;29526:41;;29716:1;29707:7;29703:15;29700:1;29697:22;29677:1;29670:9;29650:83;29627:139;;29746:18;;:::i;:::-;29627:139;29411:362;29363:410;;;;:::o;29779:180::-;29827:77;29824:1;29817:88;29924:4;29921:1;29914:15;29948:4;29945:1;29938:15;29965:185;30005:1;30022:20;30040:1;30022:20;:::i;:::-;30017:25;;30056:20;30074:1;30056:20;:::i;:::-;30051:25;;30095:1;30085:35;;30100:18;;:::i;:::-;30085:35;30142:1;30139;30135:9;30130:14;;29965:185;;;;:::o;30156:172::-;30296:24;30292:1;30284:6;30280:14;30273:48;30156:172;:::o;30334:366::-;30476:3;30497:67;30561:2;30556:3;30497:67;:::i;:::-;30490:74;;30573:93;30662:3;30573:93;:::i;:::-;30691:2;30686:3;30682:12;30675:19;;30334:366;;;:::o;30706:419::-;30872:4;30910:2;30899:9;30895:18;30887:26;;30959:9;30953:4;30949:20;30945:1;30934:9;30930:17;30923:47;30987:131;31113:4;30987:131;:::i;:::-;30979:139;;30706:419;;;:::o;31131:147::-;31232:11;31269:3;31254:18;;31131:147;;;;:::o;31284:114::-;;:::o;31404:398::-;31563:3;31584:83;31665:1;31660:3;31584:83;:::i;:::-;31577:90;;31676:93;31765:3;31676:93;:::i;:::-;31794:1;31789:3;31785:11;31778:18;;31404:398;;;:::o;31808:379::-;31992:3;32014:147;32157:3;32014:147;:::i;:::-;32007:154;;32178:3;32171:10;;31808:379;;;:::o;32193:168::-;32333:20;32329:1;32321:6;32317:14;32310:44;32193:168;:::o;32367:366::-;32509:3;32530:67;32594:2;32589:3;32530:67;:::i;:::-;32523:74;;32606:93;32695:3;32606:93;:::i;:::-;32724:2;32719:3;32715:12;32708:19;;32367:366;;;:::o;32739:419::-;32905:4;32943:2;32932:9;32928:18;32920:26;;32992:9;32986:4;32982:20;32978:1;32967:9;32963:17;32956:47;33020:131;33146:4;33020:131;:::i;:::-;33012:139;;32739:419;;;:::o;33164:230::-;33304:34;33300:1;33292:6;33288:14;33281:58;33373:13;33368:2;33360:6;33356:15;33349:38;33164:230;:::o;33400:366::-;33542:3;33563:67;33627:2;33622:3;33563:67;:::i;:::-;33556:74;;33639:93;33728:3;33639:93;:::i;:::-;33757:2;33752:3;33748:12;33741:19;;33400:366;;;:::o;33772:419::-;33938:4;33976:2;33965:9;33961:18;33953:26;;34025:9;34019:4;34015:20;34011:1;34000:9;33996:17;33989:47;34053:131;34179:4;34053:131;:::i;:::-;34045:139;;33772:419;;;:::o;34197:234::-;34337:34;34333:1;34325:6;34321:14;34314:58;34406:17;34401:2;34393:6;34389:15;34382:42;34197:234;:::o;34437:366::-;34579:3;34600:67;34664:2;34659:3;34600:67;:::i;:::-;34593:74;;34676:93;34765:3;34676:93;:::i;:::-;34794:2;34789:3;34785:12;34778:19;;34437:366;;;:::o;34809:419::-;34975:4;35013:2;35002:9;34998:18;34990:26;;35062:9;35056:4;35052:20;35048:1;35037:9;35033:17;35026:47;35090:131;35216:4;35090:131;:::i;:::-;35082:139;;34809:419;;;:::o;35234:227::-;35374:34;35370:1;35362:6;35358:14;35351:58;35443:10;35438:2;35430:6;35426:15;35419:35;35234:227;:::o;35467:366::-;35609:3;35630:67;35694:2;35689:3;35630:67;:::i;:::-;35623:74;;35706:93;35795:3;35706:93;:::i;:::-;35824:2;35819:3;35815:12;35808:19;;35467:366;;;:::o;35839:419::-;36005:4;36043:2;36032:9;36028:18;36020:26;;36092:9;36086:4;36082:20;36078:1;36067:9;36063:17;36056:47;36120:131;36246:4;36120:131;:::i;:::-;36112:139;;35839:419;;;:::o;36264:1021::-;36565:4;36603:3;36592:9;36588:19;36580:27;;36617:83;36697:1;36686:9;36682:17;36673:6;36617:83;:::i;:::-;36710:72;36778:2;36767:9;36763:18;36754:6;36710:72;:::i;:::-;36792;36860:2;36849:9;36845:18;36836:6;36792:72;:::i;:::-;36874;36942:2;36931:9;36927:18;36918:6;36874:72;:::i;:::-;36956:73;37024:3;37013:9;37009:19;37000:6;36956:73;:::i;:::-;37039;37107:3;37096:9;37092:19;37083:6;37039:73;:::i;:::-;37122;37190:3;37179:9;37175:19;37166:6;37122:73;:::i;:::-;37205;37273:3;37262:9;37258:19;37249:6;37205:73;:::i;:::-;36264:1021;;;;;;;;;;;:::o;37291:180::-;37431:32;37427:1;37419:6;37415:14;37408:56;37291:180;:::o;37477:366::-;37619:3;37640:67;37704:2;37699:3;37640:67;:::i;:::-;37633:74;;37716:93;37805:3;37716:93;:::i;:::-;37834:2;37829:3;37825:12;37818:19;;37477:366;;;:::o;37849:419::-;38015:4;38053:2;38042:9;38038:18;38030:26;;38102:9;38096:4;38092:20;38088:1;38077:9;38073:17;38066:47;38130:131;38256:4;38130:131;:::i;:::-;38122:139;;37849:419;;;:::o;38274:171::-;38414:23;38410:1;38402:6;38398:14;38391:47;38274:171;:::o;38451:366::-;38593:3;38614:67;38678:2;38673:3;38614:67;:::i;:::-;38607:74;;38690:93;38779:3;38690:93;:::i;:::-;38808:2;38803:3;38799:12;38792:19;;38451:366;;;:::o;38823:419::-;38989:4;39027:2;39016:9;39012:18;39004:26;;39076:9;39070:4;39066:20;39062:1;39051:9;39047:17;39040:47;39104:131;39230:4;39104:131;:::i;:::-;39096:139;;38823:419;;;:::o;39248:328::-;39367:4;39405:2;39394:9;39390:18;39382:26;;39418:69;39484:1;39473:9;39469:17;39460:6;39418:69;:::i;:::-;39497:72;39565:2;39554:9;39550:18;39541:6;39497:72;:::i;:::-;39248:328;;;;;:::o;39582:94::-;39615:8;39663:5;39659:2;39655:14;39634:35;;39582:94;;;:::o;39682:::-;39721:7;39750:20;39764:5;39750:20;:::i;:::-;39739:31;;39682:94;;;:::o;39782:100::-;39821:7;39850:26;39870:5;39850:26;:::i;:::-;39839:37;;39782:100;;;:::o;39888:157::-;39993:45;40013:24;40031:5;40013:24;:::i;:::-;39993:45;:::i;:::-;39988:3;39981:58;39888:157;;:::o;40051:256::-;40163:3;40178:75;40249:3;40240:6;40178:75;:::i;:::-;40278:2;40273:3;40269:12;40262:19;;40298:3;40291:10;;40051:256;;;;:::o;40335:327::-;40449:3;40470:88;40551:6;40546:3;40470:88;:::i;:::-;40463:95;;40568:56;40617:6;40612:3;40605:5;40568:56;:::i;:::-;40649:6;40644:3;40640:16;40633:23;;40335:327;;;;;:::o;40668:291::-;40808:3;40830:103;40929:3;40920:6;40912;40830:103;:::i;:::-;40823:110;;40950:3;40943:10;;40668:291;;;;;:::o;40965:233::-;41004:3;41027:24;41045:5;41027:24;:::i;:::-;41018:33;;41073:66;41066:5;41063:77;41060:103;;41143:18;;:::i;:::-;41060:103;41190:1;41183:5;41179:13;41172:20;;40965:233;;;:::o;41204:997::-;41493:4;41531:3;41520:9;41516:19;41508:27;;41545:71;41613:1;41602:9;41598:17;41589:6;41545:71;:::i;:::-;41626:72;41694:2;41683:9;41679:18;41670:6;41626:72;:::i;:::-;41708;41776:2;41765:9;41761:18;41752:6;41708:72;:::i;:::-;41790;41858:2;41847:9;41843:18;41834:6;41790:72;:::i;:::-;41872:73;41940:3;41929:9;41925:19;41916:6;41872:73;:::i;:::-;41955;42023:3;42012:9;42008:19;41999:6;41955:73;:::i;:::-;42038;42106:3;42095:9;42091:19;42082:6;42038:73;:::i;:::-;42121;42189:3;42178:9;42174:19;42165:6;42121:73;:::i;:::-;41204:997;;;;;;;;;;;:::o;42207:194::-;42247:4;42267:20;42285:1;42267:20;:::i;:::-;42262:25;;42301:20;42319:1;42301:20;:::i;:::-;42296:25;;42345:1;42342;42338:9;42330:17;;42369:1;42363:4;42360:11;42357:37;;;42374:18;;:::i;:::-;42357:37;42207:194;;;;:::o;42407:246::-;42512:4;42550:2;42539:9;42535:18;42527:26;;42563:83;42643:1;42632:9;42628:17;42619:6;42563:83;:::i;:::-;42407:246;;;;:::o;42659:98::-;42710:6;42744:5;42738:12;42728:22;;42659:98;;;:::o;42763:168::-;42846:11;42880:6;42875:3;42868:19;42920:4;42915:3;42911:14;42896:29;;42763:168;;;;:::o;42937:373::-;43023:3;43051:38;43083:5;43051:38;:::i;:::-;43105:70;43168:6;43163:3;43105:70;:::i;:::-;43098:77;;43184:65;43242:6;43237:3;43230:4;43223:5;43219:16;43184:65;:::i;:::-;43274:29;43296:6;43274:29;:::i;:::-;43269:3;43265:39;43258:46;;43027:283;42937:373;;;;:::o;43316:640::-;43511:4;43549:3;43538:9;43534:19;43526:27;;43563:71;43631:1;43620:9;43616:17;43607:6;43563:71;:::i;:::-;43644:72;43712:2;43701:9;43697:18;43688:6;43644:72;:::i;:::-;43726;43794:2;43783:9;43779:18;43770:6;43726:72;:::i;:::-;43845:9;43839:4;43835:20;43830:2;43819:9;43815:18;43808:48;43873:76;43944:4;43935:6;43873:76;:::i;:::-;43865:84;;43316:640;;;;;;;:::o;43962:141::-;44018:5;44049:6;44043:13;44034:22;;44065:32;44091:5;44065:32;:::i;:::-;43962:141;;;;:::o;44109:349::-;44178:6;44227:2;44215:9;44206:7;44202:23;44198:32;44195:119;;;44233:79;;:::i;:::-;44195:119;44353:1;44378:63;44433:7;44424:6;44413:9;44409:22;44378:63;:::i;:::-;44368:73;;44324:127;44109:349;;;;:::o;44464:148::-;44566:11;44603:3;44588:18;;44464:148;;;;:::o;44618:390::-;44724:3;44752:39;44785:5;44752:39;:::i;:::-;44807:89;44889:6;44884:3;44807:89;:::i;:::-;44800:96;;44905:65;44963:6;44958:3;44951:4;44944:5;44940:16;44905:65;:::i;:::-;44995:6;44990:3;44986:16;44979:23;;44728:280;44618:390;;;;:::o;45014:435::-;45194:3;45216:95;45307:3;45298:6;45216:95;:::i;:::-;45209:102;;45328:95;45419:3;45410:6;45328:95;:::i;:::-;45321:102;;45440:3;45433:10;;45014:435;;;;;:::o;45455:141::-;45504:4;45527:3;45519:11;;45550:3;45547:1;45540:14;45584:4;45581:1;45571:18;45563:26;;45455:141;;;:::o;45602:93::-;45639:6;45686:2;45681;45674:5;45670:14;45666:23;45656:33;;45602:93;;;:::o;45701:107::-;45745:8;45795:5;45789:4;45785:16;45764:37;;45701:107;;;;:::o;45814:393::-;45883:6;45933:1;45921:10;45917:18;45956:97;45986:66;45975:9;45956:97;:::i;:::-;46074:39;46104:8;46093:9;46074:39;:::i;:::-;46062:51;;46146:4;46142:9;46135:5;46131:21;46122:30;;46195:4;46185:8;46181:19;46174:5;46171:30;46161:40;;45890:317;;45814:393;;;;;:::o;46213:60::-;46241:3;46262:5;46255:12;;46213:60;;;:::o;46279:142::-;46329:9;46362:53;46380:34;46389:24;46407:5;46389:24;:::i;:::-;46380:34;:::i;:::-;46362:53;:::i;:::-;46349:66;;46279:142;;;:::o;46427:75::-;46470:3;46491:5;46484:12;;46427:75;;;:::o;46508:269::-;46618:39;46649:7;46618:39;:::i;:::-;46679:91;46728:41;46752:16;46728:41;:::i;:::-;46720:6;46713:4;46707:11;46679:91;:::i;:::-;46673:4;46666:105;46584:193;46508:269;;;:::o;46783:73::-;46828:3;46783:73;:::o;46862:189::-;46939:32;;:::i;:::-;46980:65;47038:6;47030;47024:4;46980:65;:::i;:::-;46915:136;46862:189;;:::o;47057:186::-;47117:120;47134:3;47127:5;47124:14;47117:120;;;47188:39;47225:1;47218:5;47188:39;:::i;:::-;47161:1;47154:5;47150:13;47141:22;;47117:120;;;47057:186;;:::o;47249:543::-;47350:2;47345:3;47342:11;47339:446;;;47384:38;47416:5;47384:38;:::i;:::-;47468:29;47486:10;47468:29;:::i;:::-;47458:8;47454:44;47651:2;47639:10;47636:18;47633:49;;;47672:8;47657:23;;47633:49;47695:80;47751:22;47769:3;47751:22;:::i;:::-;47741:8;47737:37;47724:11;47695:80;:::i;:::-;47354:431;;47339:446;47249:543;;;:::o;47798:117::-;47852:8;47902:5;47896:4;47892:16;47871:37;;47798:117;;;;:::o;47921:169::-;47965:6;47998:51;48046:1;48042:6;48034:5;48031:1;48027:13;47998:51;:::i;:::-;47994:56;48079:4;48073;48069:15;48059:25;;47972:118;47921:169;;;;:::o;48095:295::-;48171:4;48317:29;48342:3;48336:4;48317:29;:::i;:::-;48309:37;;48379:3;48376:1;48372:11;48366:4;48363:21;48355:29;;48095:295;;;;:::o;48395:1395::-;48512:37;48545:3;48512:37;:::i;:::-;48614:18;48606:6;48603:30;48600:56;;;48636:18;;:::i;:::-;48600:56;48680:38;48712:4;48706:11;48680:38;:::i;:::-;48765:67;48825:6;48817;48811:4;48765:67;:::i;:::-;48859:1;48883:4;48870:17;;48915:2;48907:6;48904:14;48932:1;48927:618;;;;49589:1;49606:6;49603:77;;;49655:9;49650:3;49646:19;49640:26;49631:35;;49603:77;49706:67;49766:6;49759:5;49706:67;:::i;:::-;49700:4;49693:81;49562:222;48897:887;;48927:618;48979:4;48975:9;48967:6;48963:22;49013:37;49045:4;49013:37;:::i;:::-;49072:1;49086:208;49100:7;49097:1;49094:14;49086:208;;;49179:9;49174:3;49170:19;49164:26;49156:6;49149:42;49230:1;49222:6;49218:14;49208:24;;49277:2;49266:9;49262:18;49249:31;;49123:4;49120:1;49116:12;49111:17;;49086:208;;;49322:6;49313:7;49310:19;49307:179;;;49380:9;49375:3;49371:19;49365:26;49423:48;49465:4;49457:6;49453:17;49442:9;49423:48;:::i;:::-;49415:6;49408:64;49330:156;49307:179;49532:1;49528;49520:6;49516:14;49512:22;49506:4;49499:36;48934:611;;;48897:887;;48487:1303;;;48395:1395;;:::o;49796:664::-;50001:4;50039:3;50028:9;50024:19;50016:27;;50053:71;50121:1;50110:9;50106:17;50097:6;50053:71;:::i;:::-;50134:72;50202:2;50191:9;50187:18;50178:6;50134:72;:::i;:::-;50216;50284:2;50273:9;50269:18;50260:6;50216:72;:::i;:::-;50298;50366:2;50355:9;50351:18;50342:6;50298:72;:::i;:::-;50380:73;50448:3;50437:9;50433:19;50424:6;50380:73;:::i;:::-;49796:664;;;;;;;;:::o;50466:180::-;50514:77;50511:1;50504:88;50611:4;50608:1;50601:15;50635:4;50632:1;50625:15;50652:86;50687:7;50727:4;50720:5;50716:16;50705:27;;50652:86;;;:::o;50744:112::-;50827:22;50843:5;50827:22;:::i;:::-;50822:3;50815:35;50744:112;;:::o;50862:545::-;51035:4;51073:3;51062:9;51058:19;51050:27;;51087:71;51155:1;51144:9;51140:17;51131:6;51087:71;:::i;:::-;51168:68;51232:2;51221:9;51217:18;51208:6;51168:68;:::i;:::-;51246:72;51314:2;51303:9;51299:18;51290:6;51246:72;:::i;:::-;51328;51396:2;51385:9;51381:18;51372:6;51328:72;:::i;:::-;50862:545;;;;;;;:::o"},"methodIdentifiers":{"addPhase(uint8,uint256,uint256,uint256,uint256,uint256,uint256,bytes32)":"7a989281","approve(address,uint256)":"095ea7b3","backendSigner()":"65d65e86","balanceOf(address)":"70a08231","eip712Domain()":"84b0196e","getActivePhase()":"1ce97fd1","getApproved(uint256)":"081812fc","getDomainSeparator()":"ed24911d","getMintedInPhase(address,uint8)":"f7330c2d","getNonce(address)":"2d0335ab","getPhaseCount()":"db5e0063","isActivePhasePresent()":"072a1319","isApprovedForAll(address,address)":"e985e9c5","mint(uint256,string,uint256,bytes,bytes32[])":"ee5f4f13","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","phases(uint256)":"2e37eef6","platformFeePercentage()":"cdd78cfc","platformFeeRecipient()":"eb13554f","renounceOwnership()":"715018a6","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setPlatformFee(uint96,address)":"decc4a6a","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","updatePhase(uint256,uint8,uint256,uint256,uint256,uint256,uint256,uint256,bytes32)":"a4836c11","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint96\",\"name\":\"_royaltyFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_platformFee\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backendSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsPhaseSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsWalletLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPhaseConfiguration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPhaseIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoActivePhase\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OverlappingPhases\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PhaseNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"phaseIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum LaunchNFTV2.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxMintPerPhase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"PhaseAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"phaseIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum LaunchNFTV2.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxMintPerPhase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"PhaseUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newPercentage\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum LaunchNFTV2.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawCompleted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum LaunchNFTV2.PhaseType\",\"name\":\"_phaseType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMintPerPhase\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"addPhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backendSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivePhase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"phaseIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum LaunchNFTV2.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMintPerPhase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintedInPhase\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct LaunchNFTV2.Phase\",\"name\":\"phase\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum LaunchNFTV2.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"}],\"name\":\"getMintedInPhase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPhaseCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActivePhasePresent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"phases\",\"outputs\":[{\"internalType\":\"enum LaunchNFTV2.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMintPerPhase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintedInPhase\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercentage\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_feePercentage\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_phaseIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum LaunchNFTV2.PhaseType\",\"name\":\"_phaseType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMintPerPhase\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"updatePhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/blockchain/evm/contracts/DirectMintNFTV2.sol\":\"LaunchNFTV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00\",\"dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x01818908219f73eecfbbe8999ac583ee3fcbfe8e39e8e0a823199737d0ed8052\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://674bafb0a373297befe1b5fe4f5a02cc18a305d8f9a4577deddc2030a611433e\",\"dweb:/ipfs/QmPq5sBp1upRbBVdU5kd1VyG4tHAbv9z6V1NSPuPs8vAtd\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/blockchain/evm/contracts/DirectMintNFTV2.sol\":{\"keccak256\":\"0x26105b5b3325dc594461ba303c8e8d894ea3803ff0b9483323ab201835e6d4c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79d89e32b1b408505fe005dee6dee957993af67eabfcfd38faf7a1d22bd5eb5f\",\"dweb:/ipfs/QmYhhhVQcz8XmWYX32GuP8oWQSVvRu3ZC5ijsa3BoP7qGb\"]}},\"version\":1}"}}}}}