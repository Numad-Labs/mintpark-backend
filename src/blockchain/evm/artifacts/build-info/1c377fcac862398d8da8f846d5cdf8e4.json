{"id":"1c377fcac862398d8da8f846d5cdf8e4","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     *\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/common/ERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC2981} from \"../../interfaces/IERC2981.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The default royalty receiver is invalid.\n     */\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\n\n    /**\n     * @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The royalty receiver for `tokenId` is invalid.\n     */\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) public view virtual returns (address receiver, uint256 amount) {\n        RoyaltyInfo storage _royaltyInfo = _tokenRoyaltyInfo[tokenId];\n        address royaltyReceiver = _royaltyInfo.receiver;\n        uint96 royaltyFraction = _royaltyInfo.royaltyFraction;\n\n        if (royaltyReceiver == address(0)) {\n            royaltyReceiver = _defaultRoyaltyInfo.receiver;\n            royaltyFraction = _defaultRoyaltyInfo.royaltyFraction;\n        }\n\n        uint256 royaltyAmount = (salePrice * royaltyFraction) / _feeDenominator();\n\n        return (royaltyReceiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\n        }\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\n        }\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\n * interfere with enumerability and should not be used together with {ERC721Enumerable}.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        mapping(uint256 index => uint256) storage _ownedTokensByOwner = _ownedTokens[from];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokensByOwner[lastTokenIndex];\n\n            _ownedTokensByOwner[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokensByOwner[lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientKeccak256(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"src/blockchain/evm/contracts/DirectMintNFTV3.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/common/ERC2981.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"; // Added for Merkle proof verification\n\ncontract LaunchNFTV3 is\n  ERC721,\n  ERC721Enumerable,\n  ERC721URIStorage,\n  ERC2981,\n  Ownable,\n  EIP712\n{\n  using ECDSA for bytes32;\n\n  enum PhaseType {\n    NOT_STARTED,\n    WHITELIST,\n    PUBLIC,\n    FCFS\n  }\n\n  struct Phase {\n    PhaseType phaseType;\n    uint256 price;\n    uint256 startTime;\n    uint256 endTime;\n    uint256 maxSupply;\n    uint256 maxPerWallet;\n    uint256 mintedInPhase;\n    bytes32 merkleRoot;\n  }\n\n  uint256 private _totalSupply;\n\n  address public immutable backendSigner;\n  bytes32 private constant MINT_TYPEHASH =\n    keccak256(\n      \"MintRequest(address minter,uint256 tokenId,string uri,uint256 price,uint256 phaseIndex,bytes32 uniqueId,uint256 timestamp)\"\n    );\n\n  // Track used uniqueIds to prevent replay\n  mapping(bytes32 => bool) private usedUniqueIds;\n\n  // mapping(address => uint256) private nonces;\n  Phase[] public phases;\n  mapping(address => mapping(PhaseType => uint256))\n    private mintedPerWalletInPhase;\n\n  bool public isPaused;\n\n  // Track all token IDs minted by an address\n  mapping(address => uint256[]) private _ownedTokens;\n\n  function tokensOfOwner(address owner) public view returns (uint256[] memory) {\n    return _ownedTokens[owner];\n  }\n\n  uint96 private immutable royaltyFeePercentage;\n  uint96 public platformFeePercentage;\n  address public platformFeeRecipient;\n\n  event TokenMinted(\n    uint256 indexed tokenId,\n    address indexed recipient,\n    PhaseType phaseType\n  );\n  event PhaseAdded(\n    uint256 indexed phaseIndex,\n    PhaseType phaseType,\n    uint256 price\n  );\n  event PhaseUpdated(\n    uint256 indexed phaseIndex,\n    PhaseType phaseType,\n    uint256 price\n  );\n  event PlatformFeeUpdated(uint96 newPercentage, address newRecipient);\n  event WithdrawCompleted(address indexed recipient, uint256 amount);\n\n  constructor(\n    address initialOwner,\n    string memory name,\n    string memory symbol,\n    uint96 _royaltyFee,\n    uint96 _platformFee,\n    address _platformFeeRecipient,\n    address _backendSigner\n  ) ERC721(name, symbol) Ownable(initialOwner) EIP712(\"UnifiedNFT\", \"1\") {\n    require(\n      _royaltyFee <= 1000 &&\n        _platformFee <= 1000 &&\n        _platformFeeRecipient != address(0) &&\n        _backendSigner != address(0)\n    );\n\n    backendSigner = _backendSigner;\n    royaltyFeePercentage = _royaltyFee;\n    platformFeePercentage = _platformFee;\n    platformFeeRecipient = _platformFeeRecipient;\n\n    _setDefaultRoyalty(initialOwner, royaltyFeePercentage);\n\n    phases.push(\n      Phase({\n        phaseType: PhaseType.NOT_STARTED,\n        price: 0,\n        startTime: 0,\n        endTime: 0,\n        maxSupply: 0,\n        maxPerWallet: 0,\n        mintedInPhase: 0,\n        merkleRoot: bytes32(0)\n      })\n    );\n  }\n\n  modifier whenNotPaused() {\n    require(!isPaused, \"Contract is paused\");\n    _;\n  }\n\n  function setPaused(bool _isPaused) external onlyOwner {\n    isPaused = _isPaused;\n  }\n\n  function mint(\n    uint256 tokenId,\n    string calldata uri,\n    bytes32 uniqueId,\n    uint256 timestamp,\n    bytes calldata signature,\n    bytes32[] calldata merkleProof\n  ) external payable whenNotPaused {\n    (uint256 phaseIndex, Phase storage currentPhase) = _getActivePhase();\n\n    if (currentPhase.phaseType == PhaseType.WHITELIST) {\n      require(\n        MerkleProof.verify(\n          merkleProof,\n          currentPhase.merkleRoot,\n          keccak256(abi.encodePacked(msg.sender))\n        ),\n        \"Not whitelisted for this phase\"\n      );\n    }\n\n    // Verify timestamp is recent (e.g., within last hour)\n    require(\n      timestamp + 1 hours >= block.timestamp && timestamp <= block.timestamp,\n      \"Signature expired\"\n    );\n\n    require(!usedUniqueIds[uniqueId], \"Signature already used\");\n\n    // Verify signature\n    bytes32 structHash = keccak256(\n      abi.encode(\n        MINT_TYPEHASH,\n        msg.sender,\n        tokenId,\n        keccak256(bytes(uri)),\n        currentPhase.price,\n        phaseIndex,\n        uniqueId,\n        timestamp\n      )\n    );\n\n    require(\n      _hashTypedDataV4(structHash).recover(signature) == backendSigner,\n      \"Invalid signature\"\n    );\n\n    require(msg.value == currentPhase.price, \"Incorrect payment amount\");\n\n    require(\n      currentPhase.maxSupply == 0 ||\n        currentPhase.mintedInPhase < currentPhase.maxSupply,\n      \"Phase supply limit reached\"\n    );\n\n    require(\n      (currentPhase.phaseType == PhaseType.PUBLIC &&\n        currentPhase.maxPerWallet == 0) ||\n        mintedPerWalletInPhase[msg.sender][currentPhase.phaseType] <\n        currentPhase.maxPerWallet,\n      \"Wallet limit reached for this phase\"\n    );\n    usedUniqueIds[uniqueId] = true;\n\n    _processFees(msg.value);\n    _updatePhaseStats(currentPhase, msg.sender);\n    _mintToken(msg.sender, tokenId, uri);\n\n    emit TokenMinted(tokenId, msg.sender, currentPhase.phaseType);\n  }\n\n  // Internal helper functions to break up the mint function\n\n  function _processFees(uint256 amount) internal {\n    uint256 platformFeeAmount = (amount * platformFeePercentage) / 10000;\n    if (platformFeeAmount > 0) {\n      (bool success, ) = platformFeeRecipient.call{value: platformFeeAmount}(\n        \"\"\n      );\n      require(success, \"Platform fee transfer failed\");\n    }\n\n    uint256 remainingAmount = amount - platformFeeAmount;\n    if (remainingAmount > 0) {\n      (bool success, ) = owner().call{value: remainingAmount}(\"\");\n      require(success, \"Owner fee transfer failed\");\n    }\n  }\n\n  function _updatePhaseStats(Phase storage phase, address minter) internal {\n    phase.mintedInPhase++;\n    mintedPerWalletInPhase[minter][phase.phaseType]++;\n  }\n\n  function _mintToken(\n    address to,\n    uint256 tokenId,\n    string calldata uri\n  ) internal {\n    _safeMint(to, tokenId);\n    if (bytes(uri).length > 0) {\n      _setTokenURI(tokenId, uri);\n    }\n  }\n\n  function addPhase(\n    PhaseType _phaseType,\n    uint256 _price,\n    uint256 _startTime,\n    uint256 _endTime,\n    uint256 _maxSupply,\n    uint256 _maxPerWallet,\n    bytes32 _merkleRoot\n  ) external onlyOwner {\n    require(_startTime < _endTime, \"Invalid time range\");\n\n    if (_phaseType != PhaseType.PUBLIC) {\n      require(_maxPerWallet > 0, \"Invalid max per wallet for non-public phase\");\n      require(\n        _merkleRoot != bytes32(0),\n        \"Merkle root required for whitelist phase\"\n      );\n    }\n\n    // Check for overlapping phases\n    for (uint256 i = 0; i < phases.length; i++) {\n      Phase memory existingPhase = phases[i];\n      if (existingPhase.phaseType == PhaseType.NOT_STARTED) continue;\n\n      require(\n        !(_startTime <= existingPhase.endTime &&\n          _endTime >= existingPhase.startTime),\n        \"Phase time overlaps with existing phase\"\n      );\n    }\n\n    Phase memory newPhase = Phase({\n      phaseType: _phaseType,\n      price: _price,\n      startTime: _startTime,\n      endTime: _endTime,\n      maxSupply: _maxSupply,\n      maxPerWallet: _maxPerWallet,\n      mintedInPhase: 0,\n      merkleRoot: _merkleRoot\n    });\n\n    uint256 phaseIndex = phases.length;\n    phases.push(newPhase);\n\n    emit PhaseAdded(phaseIndex, _phaseType, _price);\n  }\n\n  // Required overrides\n  function supportsInterface(\n    bytes4 interfaceId\n  )\n    public\n    view\n    override(ERC721, ERC721URIStorage, ERC2981, ERC721Enumerable)\n    returns (bool)\n  {\n    return super.supportsInterface(interfaceId);\n  }\n\n  function tokenURI(\n    uint256 tokenId\n  ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n    return super.tokenURI(tokenId);\n  }\n\n  function _update(\n    address to,\n    uint256 tokenId,\n    address auth\n  ) internal override(ERC721, ERC721Enumerable) returns (address) {\n    return super._update(to, tokenId, auth);\n  }\n\n  function _increaseBalance(\n    address account,\n    uint128 value\n  ) internal override(ERC721, ERC721Enumerable) {\n    super._increaseBalance(account, value);\n  }\n\n  // View functions\n  function getDomainSeparator() external view returns (bytes32) {\n    return _domainSeparatorV4();\n  }\n\n  // function getNonce(address user) external view returns (uint256) {\n  //   return nonces[user];\n  // }\n\n  function _getActivePhase()\n    internal\n    view\n    returns (uint256 phaseIndex, Phase storage phase)\n  {\n    uint256 timestamp = block.timestamp;\n\n    for (uint256 i = 0; i < phases.length; i++) {\n      if (\n        phases[i].phaseType != PhaseType.NOT_STARTED &&\n        timestamp >= phases[i].startTime &&\n        timestamp <= phases[i].endTime\n      ) {\n        return (i, phases[i]);\n      }\n    }\n\n    revert(\"No active phase\");\n  }\n\n  function getActivePhase()\n    external\n    view\n    returns (uint256 phaseIndex, Phase memory phase)\n  {\n    return _getActivePhase();\n  }\n\n  function getMintedInPhase(\n    address user,\n    PhaseType phaseType\n  ) external view returns (uint256) {\n    return mintedPerWalletInPhase[user][phaseType];\n  }\n\n  function getPhaseCount() external view returns (uint256) {\n    return phases.length;\n  }\n\n  function isActivePhasePresent() public view returns (bool) {\n    uint256 timestamp = block.timestamp;\n\n    for (uint256 i = 0; i < phases.length; i++) {\n      if (\n        phases[i].phaseType != PhaseType.NOT_STARTED &&\n        timestamp >= phases[i].startTime &&\n        timestamp <= phases[i].endTime\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2399],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2400,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2399],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4910]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":4911,"src":"132:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[4910],"IERC2981":[171]},"id":172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":172,"sourceUnit":4911,"src":"133:59:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":157,"name":"IERC165","nameLocations":["476:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"476:7:2"},"id":158,"nodeType":"InheritanceSpecifier","src":"476:7:2"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"194:259:2","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."},"fullyImplemented":false,"id":171,"linearizedBaseContracts":[171,4910],"name":"IERC2981","nameLocation":"464:8:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"490:473:2","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."},"functionSelector":"2a55205a","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"977:11:2","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:2","nodeType":"VariableDeclaration","scope":170,"src":"998:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"salePrice","nameLocation":"1031:9:2","nodeType":"VariableDeclaration","scope":170,"src":"1023:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:58:2"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"receiver","nameLocation":"1078:8:2","nodeType":"VariableDeclaration","scope":170,"src":"1070:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1096:13:2","nodeType":"VariableDeclaration","scope":170,"src":"1088:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:41:2"},"scope":171,"src":"968:143:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":172,"src":"454:659:2","usedErrors":[],"usedEvents":[]}],"src":"107:1007:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[4910],"IERC4906":[195],"IERC721":[1435]},"id":196,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":173,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":196,"sourceUnit":152,"src":"133:38:3","symbolAliases":[{"foreign":{"id":174,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":196,"sourceUnit":225,"src":"172:38:3","symbolAliases":[{"foreign":{"id":176,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"180:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":179,"name":"IERC165","nameLocations":["279:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"279:7:3"},"id":180,"nodeType":"InheritanceSpecifier","src":"279:7:3"},{"baseName":{"id":181,"name":"IERC721","nameLocations":["288:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"288:7:3"},"id":182,"nodeType":"InheritanceSpecifier","src":"288:7:3"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"212:45:3","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":195,"linearizedBaseContracts":[195,1435,4910],"name":"IERC4906","nameLocation":"267:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"302:201:3","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":187,"name":"MetadataUpdate","nameLocation":"514:14:3","nodeType":"EventDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:3","nodeType":"VariableDeclaration","scope":187,"src":"529:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:3"},"src":"508:39:3"},{"anonymous":false,"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"553:212:3","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":194,"name":"BatchMetadataUpdate","nameLocation":"776:19:3","nodeType":"EventDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:3","nodeType":"VariableDeclaration","scope":194,"src":"796:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":192,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:3","nodeType":"VariableDeclaration","scope":194,"src":"818:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:3"},"src":"770:68:3"}],"scope":196,"src":"257:583:3","usedErrors":[],"usedEvents":[187,194,1334,1343,1352]}],"src":"107:734:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[220]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":197,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":220,"linearizedBaseContracts":[220],"name":"IERC5267","nameLocation":"143:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"158:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":200,"name":"EIP712DomainChanged","nameLocation":"253:19:4","nodeType":"EventDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"272:2:4"},"src":"247:28:4"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"281:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:4","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"447:2:4"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"fields","nameLocation":"517:6:4","nodeType":"VariableDeclaration","scope":219,"src":"510:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":203,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"name","nameLocation":"551:4:4","nodeType":"VariableDeclaration","scope":219,"src":"537:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":205,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"version","nameLocation":"583:7:4","nodeType":"VariableDeclaration","scope":219,"src":"569:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":207,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"chainId","nameLocation":"612:7:4","nodeType":"VariableDeclaration","scope":219,"src":"604:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:4","nodeType":"VariableDeclaration","scope":219,"src":"633:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"salt","nameLocation":"680:4:4","nodeType":"VariableDeclaration","scope":219,"src":"672:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"extensions","nameLocation":"715:10:4","nodeType":"VariableDeclaration","scope":219,"src":"698:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":216,"nodeType":"ArrayTypeName","src":"698:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:4"},"scope":220,"src":"426:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":221,"src":"133:605:4","usedErrors":[],"usedEvents":[200]}],"src":"107:632:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1435]},"id":225,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":225,"sourceUnit":1436,"src":"132:52:5","symbolAliases":[{"foreign":{"id":223,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"140:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[361],"IERC20Errors":[266],"IERC721Errors":[314]},"id":362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":226,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":266,"linearizedBaseContracts":[266],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":236,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":236,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":236,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":236,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":241,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":241,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":246,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":246,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":255,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":255,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":255,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":255,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":260,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":260,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":265,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":265,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":362,"src":"280:1764:6","usedErrors":[236,241,246,255,260,265],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":314,"linearizedBaseContracts":[314],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":272,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":272,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":277,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":277,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":286,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":286,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":286,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":286,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":291,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":291,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":296,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":296,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":303,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":303,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":303,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":308,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":308,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":313,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":313,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":362,"src":"2190:2092:6","usedErrors":[272,277,286,291,296,303,308,313],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":361,"linearizedBaseContracts":[361],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":326,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":326,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":326,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":326,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":326,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":331,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":331,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":336,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":336,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":343,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":343,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":343,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":348,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":348,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":353,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":353,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":360,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":360,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":360,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":362,"src":"4430:2107:6","usedErrors":[326,331,336,343,348,353,360],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2399],"ERC165":[4898],"ERC721":[1318],"ERC721Utils":[2102],"IERC165":[4910],"IERC721":[1435],"IERC721Errors":[314],"IERC721Metadata":[2025],"Strings":[3112]},"id":1319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":363,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":1436,"src":"133:38:7","symbolAliases":[{"foreign":{"id":364,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"141:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":2026,"src":"172:65:7","symbolAliases":[{"foreign":{"id":366,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"180:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":2103,"src":"238:52:7","symbolAliases":[{"foreign":{"id":368,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"246:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":2400,"src":"291:48:7","symbolAliases":[{"foreign":{"id":370,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"299:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":373,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":3113,"src":"340:48:7","symbolAliases":[{"foreign":{"id":372,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"348:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":4899,"src":"389:69:7","symbolAliases":[{"foreign":{"id":374,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"397:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":375,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"406:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":362,"src":"459:66:7","symbolAliases":[{"foreign":{"id":377,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"467:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":380,"name":"Context","nameLocations":["803:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"803:7:7"},"id":381,"nodeType":"InheritanceSpecifier","src":"803:7:7"},{"baseName":{"id":382,"name":"ERC165","nameLocations":["812:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"812:6:7"},"id":383,"nodeType":"InheritanceSpecifier","src":"812:6:7"},{"baseName":{"id":384,"name":"IERC721","nameLocations":["820:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"820:7:7"},"id":385,"nodeType":"InheritanceSpecifier","src":"820:7:7"},{"baseName":{"id":386,"name":"IERC721Metadata","nameLocations":["829:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":2025,"src":"829:15:7"},"id":387,"nodeType":"InheritanceSpecifier","src":"829:15:7"},{"baseName":{"id":388,"name":"IERC721Errors","nameLocations":["846:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":314,"src":"846:13:7"},"id":389,"nodeType":"InheritanceSpecifier","src":"846:13:7"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"527:247:7","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1318,"linearizedBaseContracts":[1318,314,2025,1435,4898,4910,2399],"name":"ERC721","nameLocation":"793:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":392,"libraryName":{"id":390,"name":"Strings","nameLocations":["872:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"872:7:7"},"nodeType":"UsingForDirective","src":"866:26:7","typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":394,"mutability":"mutable","name":"_name","nameLocation":"931:5:7","nodeType":"VariableDeclaration","scope":1318,"src":"916:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":393,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":396,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:7","nodeType":"VariableDeclaration","scope":1318,"src":"963:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":395,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":400,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":1318,"src":"992:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":399,"keyName":"tokenId","keyNameLocation":"1008:7:7","keyType":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":404,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:7","nodeType":"VariableDeclaration","scope":1318,"src":"1050:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":403,"keyName":"owner","keyNameLocation":"1066:5:7","keyType":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":408,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:7","nodeType":"VariableDeclaration","scope":1318,"src":"1108:59:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":407,"keyName":"tokenId","keyNameLocation":"1124:7:7","keyType":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":414,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:7","nodeType":"VariableDeclaration","scope":1318,"src":"1174:86:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":413,"keyName":"owner","keyNameLocation":"1190:5:7","keyType":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":412,"keyName":"operator","keyNameLocation":"1215:8:7","keyType":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":411,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":430,"nodeType":"Block","src":"1436:57:7","statements":[{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":422,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"1446:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":423,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"1454:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":425,"nodeType":"ExpressionStatement","src":"1446:13:7"},{"expression":{"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":426,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1469:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":427,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"1479:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":429,"nodeType":"ExpressionStatement","src":"1469:17:7"}]},"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"1267:108:7","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":431,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"name_","nameLocation":"1406:5:7","nodeType":"VariableDeclaration","scope":431,"src":"1392:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":416,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:7","nodeType":"VariableDeclaration","scope":431,"src":"1413:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":418,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:7"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"1436:0:7"},"scope":1318,"src":"1380:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4897,4909],"body":{"id":461,"nodeType":"Block","src":"1668:192:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1697:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":444,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"1717:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1435_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1435_$","typeString":"type(contract IERC721)"}],"id":443,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1435","typeString":"type(contract IERC721)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":448,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1753:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":450,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"1773:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2025_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2025_$","typeString":"type(contract IERC721Metadata)"}],"id":449,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2025","typeString":"type(contract IERC721Metadata)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":457,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1841:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":455,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1318_$","typeString":"type(contract super ERC721)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4897,"src":"1817:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":441,"id":460,"nodeType":"Return","src":"1678:175:7"}]},"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"1499:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":462,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:7","nodeType":"FunctionDefinition","overrides":{"id":438,"nodeType":"OverrideSpecifier","overrides":[{"id":436,"name":"ERC165","nameLocations":["1636:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"1636:6:7"},{"id":437,"name":"IERC165","nameLocations":["1644:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"1644:7:7"}],"src":"1627:25:7"},"parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:7","nodeType":"VariableDeclaration","scope":462,"src":"1587:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":433,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:7"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":462,"src":"1662:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":439,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:7"},"scope":1318,"src":"1560:300:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1360],"body":{"id":489,"nodeType":"Block","src":"1991:136:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2005:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:7","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":484,"nodeType":"IfStatement","src":"2001:87:7","trueBody":{"id":483,"nodeType":"Block","src":"2026:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:7","typeDescriptions":{}}},"id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":476,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2047:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":482,"nodeType":"RevertStatement","src":"2040:37:7"}]}},{"expression":{"baseExpression":{"id":485,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2104:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":487,"indexExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2114:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":469,"id":488,"nodeType":"Return","src":"2097:23:7"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"1866:48:7","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:7","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"owner","nameLocation":"1946:5:7","nodeType":"VariableDeclaration","scope":490,"src":"1938:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:7"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":490,"src":"1982:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:7"},"scope":1318,"src":"1919:208:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1368],"body":{"id":502,"nodeType":"Block","src":"2256:46:7","statements":[{"expression":{"arguments":[{"id":499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2287:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2273:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":497,"id":501,"nodeType":"Return","src":"2266:29:7"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"2133:46:7","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":503,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:7","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:7","nodeType":"VariableDeclaration","scope":503,"src":"2201:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:7"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":503,"src":"2247:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:7"},"scope":1318,"src":"2184:118:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2010],"body":{"id":511,"nodeType":"Block","src":"2424:29:7","statements":[{"expression":{"id":509,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2441:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":508,"id":510,"nodeType":"Return","src":"2434:12:7"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"2308:51:7","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":512,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:7","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"2377:2:7"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":512,"src":"2409:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":506,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:7"},"scope":1318,"src":"2364:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2016],"body":{"id":520,"nodeType":"Block","src":"2579:31:7","statements":[{"expression":{"id":518,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2596:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":517,"id":519,"nodeType":"Return","src":"2589:14:7"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2459:53:7","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":521,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:7","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"2532:2:7"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"2564:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":515,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:7"},"scope":1318,"src":"2517:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2024],"body":{"id":556,"nodeType":"Block","src":"2755:176:7","statements":[{"expression":{"arguments":[{"id":530,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":529,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2765:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":532,"nodeType":"ExpressionStatement","src":"2765:22:7"},{"assignments":[534],"declarations":[{"constant":false,"id":534,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:7","nodeType":"VariableDeclaration","scope":556,"src":"2798:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":533,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":537,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":535,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2822:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:7"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":540,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2855:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":538,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:7","typeDescriptions":{}}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:7","memberName":"length","nodeType":"MemberAccess","src":"2849:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:7","trueExpression":{"arguments":[{"id":548,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2891:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2900:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2860,"src":"2900:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":545,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:7","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:7","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":528,"id":555,"nodeType":"Return","src":"2842:82:7"}]},"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"2616:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":557,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:7","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:7","nodeType":"VariableDeclaration","scope":557,"src":"2694:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:7"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":557,"src":"2740:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":526,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:7"},"scope":1318,"src":"2676:255:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":565,"nodeType":"Block","src":"3239:26:7","statements":[{"expression":{"hexValue":"","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":562,"id":564,"nodeType":"Return","src":"3249:9:7"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"2937:231:7","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":566,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:7","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"3190:2:7"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"3224:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":560,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:7"},"scope":1318,"src":"3173:92:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1408],"body":{"id":581,"nodeType":"Block","src":"3383:52:7","statements":[{"expression":{"arguments":[{"id":575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3402:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"3406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":577,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3415:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":574,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1185,1251],"referencedDeclaration":1185,"src":"3393:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"ExpressionStatement","src":"3393:35:7"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"3271:46:7","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":582,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:7","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"to","nameLocation":"3347:2:7","nodeType":"VariableDeclaration","scope":582,"src":"3339:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:7","nodeType":"VariableDeclaration","scope":582,"src":"3351:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:7"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[],"src":"3383:0:7"},"scope":1318,"src":"3322:113:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1424],"body":{"id":598,"nodeType":"Block","src":"3572:78:7","statements":[{"expression":{"arguments":[{"id":591,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3596:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":590,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3582:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":593,"nodeType":"ExpressionStatement","src":"3582:22:7"},{"expression":{"arguments":[{"id":595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3635:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":594,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"3622:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":589,"id":597,"nodeType":"Return","src":"3615:28:7"}]},"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"3441:50:7","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":599,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:7","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:7","nodeType":"VariableDeclaration","scope":599,"src":"3517:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:7"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":599,"src":"3563:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:7"},"scope":1318,"src":"3496:154:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1416],"body":{"id":614,"nodeType":"Block","src":"3792:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":608,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3821:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"3835:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"3845:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":607,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"3802:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"3802:52:7"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"3656:56:7","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":615,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:7","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"operator","nameLocation":"3752:8:7","nodeType":"VariableDeclaration","scope":615,"src":"3744:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"approved","nameLocation":"3767:8:7","nodeType":"VariableDeclaration","scope":615,"src":"3762:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":603,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:7"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"3792:0:7"},"scope":1318,"src":"3717:144:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1434],"body":{"id":631,"nodeType":"Block","src":"4021:59:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":625,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"4038:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":627,"indexExpression":{"id":626,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4057:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":629,"indexExpression":{"id":628,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4064:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":624,"id":630,"nodeType":"Return","src":"4031:42:7"}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"3867:55:7","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":632,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:7","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"owner","nameLocation":"3961:5:7","nodeType":"VariableDeclaration","scope":632,"src":"3953:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"operator","nameLocation":"3976:8:7","nodeType":"VariableDeclaration","scope":632,"src":"3968:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:7"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"4015:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":622,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:7"},"scope":1318,"src":"3927:153:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1400],"body":{"id":677,"nodeType":"Block","src":"4222:498:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4236:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:7","typeDescriptions":{}}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"4232:87:7","trueBody":{"id":655,"nodeType":"Block","src":"4254:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:7","typeDescriptions":{}}},"id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":648,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"4275:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":654,"nodeType":"RevertStatement","src":"4268:40:7"}]}},{"assignments":[658],"declarations":[{"constant":false,"id":658,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:7","nodeType":"VariableDeclaration","scope":677,"src":"4537:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":665,"initialValue":{"arguments":[{"id":660,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4569:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":661,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4573:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":662,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"4582:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":659,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"4561:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":666,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4609:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4626:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":676,"nodeType":"IfStatement","src":"4605:109:7","trueBody":{"id":675,"nodeType":"Block","src":"4632:82:7","statements":[{"errorCall":{"arguments":[{"id":670,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4674:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4680:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":672,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4689:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":669,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"4653:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":674,"nodeType":"RevertStatement","src":"4646:57:7"}]}}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"4086:51:7","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":678,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:7","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"from","nameLocation":"4172:4:7","nodeType":"VariableDeclaration","scope":678,"src":"4164:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"to","nameLocation":"4186:2:7","nodeType":"VariableDeclaration","scope":678,"src":"4178:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:7","nodeType":"VariableDeclaration","scope":678,"src":"4190:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:7"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"4222:0:7"},"scope":1318,"src":"4142:578:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1390],"body":{"id":695,"nodeType":"Block","src":"4862:56:7","statements":[{"expression":{"arguments":[{"id":689,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"4889:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"4895:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4899:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":688,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[696,726],"referencedDeclaration":726,"src":"4872:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"4872:39:7"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"4726:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":696,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:7","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"from","nameLocation":"4820:4:7","nodeType":"VariableDeclaration","scope":696,"src":"4812:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"to","nameLocation":"4834:2:7","nodeType":"VariableDeclaration","scope":696,"src":"4826:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:7","nodeType":"VariableDeclaration","scope":696,"src":"4838:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:7"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"4862:0:7"},"scope":1318,"src":"4786:132:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1380],"body":{"id":725,"nodeType":"Block","src":"5087:130:7","statements":[{"expression":{"arguments":[{"id":709,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5110:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5116:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":711,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5120:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":708,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"5097:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"5097:31:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":717,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"5172:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5186:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5192:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5196:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":722,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"5205:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":714,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"5138:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2102_$","typeString":"type(library ERC721Utils)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"5138:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"5138:72:7"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"4924:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":726,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:7","nodeType":"FunctionDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"from","nameLocation":"5018:4:7","nodeType":"VariableDeclaration","scope":726,"src":"5010:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"to","nameLocation":"5032:2:7","nodeType":"VariableDeclaration","scope":726,"src":"5024:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:7","nodeType":"VariableDeclaration","scope":726,"src":"5036:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"data","nameLocation":"5066:4:7","nodeType":"VariableDeclaration","scope":726,"src":"5053:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":704,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:7"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"5087:0:7"},"scope":1318,"src":"4984:233:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":738,"nodeType":"Block","src":"5807:40:7","statements":[{"expression":{"baseExpression":{"id":734,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5824:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":736,"indexExpression":{"id":735,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"5832:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":733,"id":737,"nodeType":"Return","src":"5817:23:7"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"5223:504:7","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":739,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:7","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:7","nodeType":"VariableDeclaration","scope":739,"src":"5750:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:7"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"5798:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:7"},"scope":1318,"src":"5732:115:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":751,"nodeType":"Block","src":"6042:48:7","statements":[{"expression":{"baseExpression":{"id":747,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"6059:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":749,"indexExpression":{"id":748,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"6075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":746,"id":750,"nodeType":"Return","src":"6052:31:7"}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"5853:105:7","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":752,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:7","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:7","nodeType":"VariableDeclaration","scope":752,"src":"5985:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:7"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":752,"src":"6033:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:7"},"scope":1318,"src":"5963:127:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":787,"nodeType":"Block","src":"6510:163:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6539:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:7","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6577:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":771,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6586:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":774,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6614:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6621:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":773,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"6597:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"6646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"6633:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":781,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6658:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":763,"id":786,"nodeType":"Return","src":"6520:146:7"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"6096:300:7","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:7","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"owner","nameLocation":"6432:5:7","nodeType":"VariableDeclaration","scope":788,"src":"6424:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"spender","nameLocation":"6447:7:7","nodeType":"VariableDeclaration","scope":788,"src":"6439:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:7","nodeType":"VariableDeclaration","scope":788,"src":"6456:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:7"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"6504:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:7"},"scope":1318,"src":"6401:272:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":824,"nodeType":"Block","src":"7202:271:7","statements":[{"condition":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:7","subExpression":{"arguments":[{"id":799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"7231:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7238:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":798,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7217:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"7212:255:7","trueBody":{"id":822,"nodeType":"Block","src":"7257:210:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":804,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"7275:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:7","typeDescriptions":{}}},"id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":820,"nodeType":"Block","src":"7373:84:7","statements":[{"errorCall":{"arguments":[{"id":816,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7425:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7434:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"7398:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":819,"nodeType":"RevertStatement","src":"7391:51:7"}]},"id":821,"nodeType":"IfStatement","src":"7271:186:7","trueBody":{"id":814,"nodeType":"Block","src":"7296:71:7","statements":[{"errorCall":{"arguments":[{"id":811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"7321:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":813,"nodeType":"RevertStatement","src":"7314:38:7"}]}}]}}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"6679:421:7","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:7","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"owner","nameLocation":"7139:5:7","nodeType":"VariableDeclaration","scope":825,"src":"7131:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"spender","nameLocation":"7154:7:7","nodeType":"VariableDeclaration","scope":825,"src":"7146:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:7","nodeType":"VariableDeclaration","scope":825,"src":"7163:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:7"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"7202:0:7"},"scope":1318,"src":"7105:368:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"8190:78:7","statements":[{"id":839,"nodeType":"UncheckedBlock","src":"8200:62:7","statements":[{"expression":{"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":833,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8224:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":835,"indexExpression":{"id":834,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8234:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8246:5:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":838,"nodeType":"ExpressionStatement","src":"8224:27:7"}]}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"7479:631:7","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:7","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"account","nameLocation":"8149:7:7","nodeType":"VariableDeclaration","scope":841,"src":"8141:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"value","nameLocation":"8166:5:7","nodeType":"VariableDeclaration","scope":841,"src":"8158:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":829,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"8190:0:7"},"scope":1318,"src":"8115:153:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":930,"nodeType":"Block","src":"8956:700:7","statements":[{"assignments":[854],"declarations":[{"constant":false,"id":854,"mutability":"mutable","name":"from","nameLocation":"8974:4:7","nodeType":"VariableDeclaration","scope":930,"src":"8966:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":858,"initialValue":{"arguments":[{"id":856,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"8990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":855,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"8981:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"9058:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:7","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":872,"nodeType":"IfStatement","src":"9054:86:7","trueBody":{"id":871,"nodeType":"Block","src":"9078:62:7","statements":[{"expression":{"arguments":[{"id":866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9109:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":867,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"9115:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":865,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9092:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"ExpressionStatement","src":"9092:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":873,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9184:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:7","typeDescriptions":{}}},"id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"9180:256:7","trueBody":{"id":899,"nodeType":"Block","src":"9204:232:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:7","typeDescriptions":{}}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9321:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:7","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":879,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1185,1251],"referencedDeclaration":1251,"src":"9300:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"9300:48:7"},{"id":898,"nodeType":"UncheckedBlock","src":"9363:63:7","statements":[{"expression":{"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":892,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"9391:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":894,"indexExpression":{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9401:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":897,"nodeType":"ExpressionStatement","src":"9391:20:7"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9450:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:7","typeDescriptions":{}}},"id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":915,"nodeType":"IfStatement","src":"9446:107:7","trueBody":{"id":914,"nodeType":"Block","src":"9468:85:7","statements":[{"id":913,"nodeType":"UncheckedBlock","src":"9482:61:7","statements":[{"expression":{"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":907,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"9510:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":909,"indexExpression":{"id":908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9520:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":912,"nodeType":"ExpressionStatement","src":"9510:18:7"}]}]}},{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":916,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"9563:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":918,"indexExpression":{"id":917,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9571:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9582:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":921,"nodeType":"ExpressionStatement","src":"9563:21:7"},{"eventCall":{"arguments":[{"id":923,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9609:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9615:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":922,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"9600:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"EmitStatement","src":"9595:32:7"},{"expression":{"id":928,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9645:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":852,"id":929,"nodeType":"Return","src":"9638:11:7"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"8274:582:7","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":931,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:7","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"to","nameLocation":"8886:2:7","nodeType":"VariableDeclaration","scope":931,"src":"8878:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:7","nodeType":"VariableDeclaration","scope":931,"src":"8890:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"auth","nameLocation":"8915:4:7","nodeType":"VariableDeclaration","scope":931,"src":"8907:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:7"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"8947:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:7"},"scope":1318,"src":"8861:795:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"10031:274:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10045:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:7","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":953,"nodeType":"IfStatement","src":"10041:87:7","trueBody":{"id":952,"nodeType":"Block","src":"10063:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:7","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":945,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"10084:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":951,"nodeType":"RevertStatement","src":"10077:40:7"}]}},{"assignments":[955],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:7","nodeType":"VariableDeclaration","scope":980,"src":"10137:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":964,"initialValue":{"arguments":[{"id":957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10169:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":958,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"10173:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:7","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":956,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"10161:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":965,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"10207:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:7","typeDescriptions":{}}},"id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":979,"nodeType":"IfStatement","src":"10203:96:7","trueBody":{"id":978,"nodeType":"Block","src":"10236:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:7","typeDescriptions":{}}},"id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":971,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"10257:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":977,"nodeType":"RevertStatement","src":"10250:38:7"}]}}]},"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"9662:311:7","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:7","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"to","nameLocation":"10001:2:7","nodeType":"VariableDeclaration","scope":981,"src":"9993:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:7","nodeType":"VariableDeclaration","scope":981,"src":"10005:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:7"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"10031:0:7"},"scope":1318,"src":"9978:327:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":995,"nodeType":"Block","src":"10713:43:7","statements":[{"expression":{"arguments":[{"id":990,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10733:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"10737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":989,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[996,1026],"referencedDeclaration":1026,"src":"10723:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"10723:26:7"}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"10311:340:7","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":996,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:7","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"to","nameLocation":"10683:2:7","nodeType":"VariableDeclaration","scope":996,"src":"10675:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:7","nodeType":"VariableDeclaration","scope":996,"src":"10687:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:7"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"10713:0:7"},"scope":1318,"src":"10656:100:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1025,"nodeType":"Block","src":"11061:123:7","statements":[{"expression":{"arguments":[{"id":1007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"11077:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"11081:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1006,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11071:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"ExpressionStatement","src":"11071:18:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1014,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"11133:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:7","typeDescriptions":{}}},"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1020,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"11159:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"11163:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1022,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"11172:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1011,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"11099:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2102_$","typeString":"type(library ERC721Utils)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"11099:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"ExpressionStatement","src":"11099:78:7"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"10762:210:7","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:7","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"to","nameLocation":"11004:2:7","nodeType":"VariableDeclaration","scope":1026,"src":"10996:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:7","nodeType":"VariableDeclaration","scope":1026,"src":"11008:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"data","nameLocation":"11038:4:7","nodeType":"VariableDeclaration","scope":1026,"src":"11025:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1002,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:7"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"11061:0:7"},"scope":1318,"src":"10977:207:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1058,"nodeType":"Block","src":"11551:186:7","statements":[{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:7","nodeType":"VariableDeclaration","scope":1058,"src":"11561:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1045,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:7","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"11605:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:7","typeDescriptions":{}}},"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"11585:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1046,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11639:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:7","typeDescriptions":{}}},"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1057,"nodeType":"IfStatement","src":"11635:96:7","trueBody":{"id":1056,"nodeType":"Block","src":"11668:63:7","statements":[{"errorCall":{"arguments":[{"id":1053,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"11712:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1052,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"11689:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1055,"nodeType":"RevertStatement","src":"11682:38:7"}]}}]},"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"11190:315:7","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:7","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:7","nodeType":"VariableDeclaration","scope":1059,"src":"11525:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:7"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"11551:0:7"},"scope":1318,"src":"11510:227:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1118,"nodeType":"Block","src":"12132:389:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12146:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:7","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1083,"nodeType":"IfStatement","src":"12142:87:7","trueBody":{"id":1082,"nodeType":"Block","src":"12164:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:7","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1075,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"12185:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1081,"nodeType":"RevertStatement","src":"12178:40:7"}]}},{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:7","nodeType":"VariableDeclaration","scope":1118,"src":"12238:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1094,"initialValue":{"arguments":[{"id":1087,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"12270:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1088,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12274:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:7","typeDescriptions":{}}},"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1086,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"12262:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12308:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:7","typeDescriptions":{}}},"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12410:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1107,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12427:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1116,"nodeType":"IfStatement","src":"12406:109:7","trueBody":{"id":1115,"nodeType":"Block","src":"12433:82:7","statements":[{"errorCall":{"arguments":[{"id":1110,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12475:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12481:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1112,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12490:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1109,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"12454:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1114,"nodeType":"RevertStatement","src":"12447:57:7"}]}},"id":1117,"nodeType":"IfStatement","src":"12304:211:7","trueBody":{"id":1105,"nodeType":"Block","src":"12337:63:7","statements":[{"errorCall":{"arguments":[{"id":1102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12381:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1101,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"12358:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1104,"nodeType":"RevertStatement","src":"12351:38:7"}]}}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"11743:313:7","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:7","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"from","nameLocation":"12088:4:7","nodeType":"VariableDeclaration","scope":1119,"src":"12080:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"to","nameLocation":"12102:2:7","nodeType":"VariableDeclaration","scope":1119,"src":"12094:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:7","nodeType":"VariableDeclaration","scope":1119,"src":"12106:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:7"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"12132:0:7"},"scope":1318,"src":"12061:460:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"13530:53:7","statements":[{"expression":{"arguments":[{"id":1130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"13554:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"13560:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"13564:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1129,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1137,1167],"referencedDeclaration":1167,"src":"13540:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1135,"nodeType":"ExpressionStatement","src":"13540:36:7"}]},"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"12527:923:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:7","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"from","nameLocation":"13486:4:7","nodeType":"VariableDeclaration","scope":1137,"src":"13478:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"to","nameLocation":"13500:2:7","nodeType":"VariableDeclaration","scope":1137,"src":"13492:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:7","nodeType":"VariableDeclaration","scope":1137,"src":"13504:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:7"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[],"src":"13530:0:7"},"scope":1318,"src":"13455:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1166,"nodeType":"Block","src":"13922:127:7","statements":[{"expression":{"arguments":[{"id":1150,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"13942:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1151,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"13948:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1152,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"13952:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1149,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"13932:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"13932:28:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1158,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"14004:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"14018:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1161,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"14024:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1162,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"14028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1163,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"14037:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1155,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"13970:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2102_$","typeString":"type(library ERC721Utils)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"13970:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1165,"nodeType":"ExpressionStatement","src":"13970:72:7"}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"13589:226:7","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:7","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"from","nameLocation":"13851:4:7","nodeType":"VariableDeclaration","scope":1167,"src":"13843:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"to","nameLocation":"13865:2:7","nodeType":"VariableDeclaration","scope":1167,"src":"13857:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:7","nodeType":"VariableDeclaration","scope":1167,"src":"13869:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"data","nameLocation":"13899:4:7","nodeType":"VariableDeclaration","scope":1167,"src":"13886:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1145,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:7"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"13922:0:7"},"scope":1318,"src":"13820:229:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1184,"nodeType":"Block","src":"14562:50:7","statements":[{"expression":{"arguments":[{"id":1178,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"14581:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"14585:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"14594:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1177,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1185,1251],"referencedDeclaration":1251,"src":"14572:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"14572:33:7"}]},"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"14055:432:7","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1185,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:7","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"to","nameLocation":"14518:2:7","nodeType":"VariableDeclaration","scope":1185,"src":"14510:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:7","nodeType":"VariableDeclaration","scope":1185,"src":"14522:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"auth","nameLocation":"14547:4:7","nodeType":"VariableDeclaration","scope":1185,"src":"14539:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:7"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"14562:0:7"},"scope":1318,"src":"14492:120:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"14888:568:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"14954:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"14967:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:7","typeDescriptions":{}}},"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1243,"nodeType":"IfStatement","src":"14950:460:7","trueBody":{"id":1242,"nodeType":"Block","src":"14987:423:7","statements":[{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"owner","nameLocation":"15009:5:7","nodeType":"VariableDeclaration","scope":1242,"src":"15001:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1210,"initialValue":{"arguments":[{"id":1208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"15031:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"15017:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15167:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:7","typeDescriptions":{}}},"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15189:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1218,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15198:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:7","subExpression":{"arguments":[{"id":1222,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15224:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1223,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15231:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1221,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"15207:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"15163:142:7","trueBody":{"id":1231,"nodeType":"Block","src":"15238:67:7","statements":[{"errorCall":{"arguments":[{"id":1228,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"15285:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1227,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"15263:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1230,"nodeType":"RevertStatement","src":"15256:34:7"}]}},{"condition":{"id":1233,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"15323:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1241,"nodeType":"IfStatement","src":"15319:81:7","trueBody":{"id":1240,"nodeType":"Block","src":"15334:66:7","statements":[{"eventCall":{"arguments":[{"id":1235,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15366:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1236,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"15373:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1237,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"15377:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1234,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"15357:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1239,"nodeType":"EmitStatement","src":"15352:33:7"}]}}]}},{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1244,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"15420:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1246,"indexExpression":{"id":1245,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"15436:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1247,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"15447:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1249,"nodeType":"ExpressionStatement","src":"15420:29:7"}]},"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"14618:171:7","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:7","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"to","nameLocation":"14820:2:7","nodeType":"VariableDeclaration","scope":1251,"src":"14812:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:7","nodeType":"VariableDeclaration","scope":1251,"src":"14824:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"auth","nameLocation":"14849:4:7","nodeType":"VariableDeclaration","scope":1251,"src":"14841:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:7","nodeType":"VariableDeclaration","scope":1251,"src":"14855:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1193,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:7"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"14888:0:7"},"scope":1318,"src":"14794:662:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1287,"nodeType":"Block","src":"15758:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15772:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:7","typeDescriptions":{}}},"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1272,"nodeType":"IfStatement","src":"15768:91:7","trueBody":{"id":1271,"nodeType":"Block","src":"15796:63:7","statements":[{"errorCall":{"arguments":[{"id":1268,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15839:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1267,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"15817:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1270,"nodeType":"RevertStatement","src":"15810:38:7"}]}},{"expression":{"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1273,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"15868:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1276,"indexExpression":{"id":1274,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"15887:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1277,"indexExpression":{"id":1275,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15894:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1278,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15906:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1280,"nodeType":"ExpressionStatement","src":"15868:46:7"},{"eventCall":{"arguments":[{"id":1282,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"15944:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1283,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"15951:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1284,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15961:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1281,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"15929:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"EmitStatement","src":"15924:46:7"}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"15462:198:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:7","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"owner","nameLocation":"15701:5:7","nodeType":"VariableDeclaration","scope":1288,"src":"15693:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"operator","nameLocation":"15716:8:7","nodeType":"VariableDeclaration","scope":1288,"src":"15708:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"approved","nameLocation":"15731:8:7","nodeType":"VariableDeclaration","scope":1288,"src":"15726:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1257,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:7"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[],"src":"15758:0:7"},"scope":1318,"src":"15665:312:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1316,"nodeType":"Block","src":"16284:169:7","statements":[{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"owner","nameLocation":"16302:5:7","nodeType":"VariableDeclaration","scope":1316,"src":"16294:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1301,"initialValue":{"arguments":[{"id":1299,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"16319:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1298,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"16310:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1302,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"16341:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:7","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1313,"nodeType":"IfStatement","src":"16337:88:7","trueBody":{"id":1312,"nodeType":"Block","src":"16362:63:7","statements":[{"errorCall":{"arguments":[{"id":1309,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"16406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1308,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"16383:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1311,"nodeType":"RevertStatement","src":"16376:38:7"}]}},{"expression":{"id":1314,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"16441:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1295,"id":1315,"nodeType":"Return","src":"16434:12:7"}]},"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"15983:224:7","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1317,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:7","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:7","nodeType":"VariableDeclaration","scope":1317,"src":"16235:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:7"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"16275:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:7"},"scope":1318,"src":"16212:241:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1319,"src":"775:15680:7","usedErrors":[272,277,286,291,296,303,308,313],"usedEvents":[1334,1343,1352]}],"src":"107:16349:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4910],"IERC721":[1435]},"id":1436,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1436,"sourceUnit":4911,"src":"134:62:8","symbolAliases":[{"foreign":{"id":1321,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"142:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1324,"name":"IERC165","nameLocations":["288:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"288:7:8"},"id":1325,"nodeType":"InheritanceSpecifier","src":"288:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"198:68:8","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1435,"linearizedBaseContracts":[1435,4910],"name":"IERC721","nameLocation":"277:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"302:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1334,"name":"Transfer","nameLocation":"401:8:8","nodeType":"EventDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"410:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"432:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:8","nodeType":"VariableDeclaration","scope":1334,"src":"452:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:8"},"src":"395:82:8"},{"anonymous":false,"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"483:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1343,"name":"Approval","nameLocation":"588:8:8","nodeType":"EventDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:8","nodeType":"VariableDeclaration","scope":1343,"src":"597:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:8","nodeType":"VariableDeclaration","scope":1343,"src":"620:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:8","nodeType":"VariableDeclaration","scope":1343,"src":"646:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:8"},"src":"582:89:8"},{"anonymous":false,"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"677:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1352,"name":"ApprovalForAll","nameLocation":"805:14:8","nodeType":"EventDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:8","nodeType":"VariableDeclaration","scope":1352,"src":"820:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:8","nodeType":"VariableDeclaration","scope":1352,"src":"843:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:8","nodeType":"VariableDeclaration","scope":1352,"src":"869:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1349,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:8"},"src":"799:85:8"},{"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"890:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1360,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:8","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"owner","nameLocation":"998:5:8","nodeType":"VariableDeclaration","scope":1360,"src":"990:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:8"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"balance","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":1360,"src":"1028:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:8"},"scope":1435,"src":"971:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"1051:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1368,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:8","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:8","nodeType":"VariableDeclaration","scope":1368,"src":"1204:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:8"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"owner","nameLocation":"1252:5:8","nodeType":"VariableDeclaration","scope":1368,"src":"1244:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:8"},"scope":1435,"src":"1187:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"1265:565:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1380,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:8","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"from","nameLocation":"1869:4:8","nodeType":"VariableDeclaration","scope":1380,"src":"1861:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"to","nameLocation":"1883:2:8","nodeType":"VariableDeclaration","scope":1380,"src":"1875:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:8","nodeType":"VariableDeclaration","scope":1380,"src":"1887:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"data","nameLocation":"1919:4:8","nodeType":"VariableDeclaration","scope":1380,"src":"1904:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1376,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:8"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"1933:0:8"},"scope":1435,"src":"1835:99:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"1940:706:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1390,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:8","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":1390,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"to","nameLocation":"2699:2:8","nodeType":"VariableDeclaration","scope":1390,"src":"2691:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:8","nodeType":"VariableDeclaration","scope":1390,"src":"2703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:8"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"2728:0:8"},"scope":1435,"src":"2651:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"2735:733:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1400,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:8","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"from","nameLocation":"3503:4:8","nodeType":"VariableDeclaration","scope":1400,"src":"3495:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"to","nameLocation":"3517:2:8","nodeType":"VariableDeclaration","scope":1400,"src":"3509:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:8","nodeType":"VariableDeclaration","scope":1400,"src":"3521:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:8"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"3546:0:8"},"scope":1435,"src":"3473:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"3553:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1408,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:8","nodeType":"FunctionDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"to","nameLocation":"4035:2:8","nodeType":"VariableDeclaration","scope":1408,"src":"4027:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:8","nodeType":"VariableDeclaration","scope":1408,"src":"4039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:8"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"4064:0:8"},"scope":1435,"src":"4010:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"4071:315:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1416,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:8","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"operator","nameLocation":"4426:8:8","nodeType":"VariableDeclaration","scope":1416,"src":"4418:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"approved","nameLocation":"4441:8:8","nodeType":"VariableDeclaration","scope":1416,"src":"4436:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:8"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"4459:0:8"},"scope":1435,"src":"4391:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"4466:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1424,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:8","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:8","nodeType":"VariableDeclaration","scope":1424,"src":"4631:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:8"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"operator","nameLocation":"4679:8:8","nodeType":"VariableDeclaration","scope":1424,"src":"4671:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:8"},"scope":1435,"src":"4610:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"4695:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1434,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:8","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"owner","nameLocation":"4872:5:8","nodeType":"VariableDeclaration","scope":1434,"src":"4864:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"operator","nameLocation":"4887:8:8","nodeType":"VariableDeclaration","scope":1434,"src":"4879:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:8"},"returnParameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1434,"src":"4920:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1431,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:8"},"scope":1435,"src":"4838:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1436,"src":"267:4661:8","usedErrors":[],"usedEvents":[1334,1343,1352]}],"src":"108:4821:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1453]},"id":1454,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1437,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"142:154:9","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1453,"linearizedBaseContracts":[1453],"name":"IERC721Receiver","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"329:500:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1452,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:9","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"operator","nameLocation":"877:8:9","nodeType":"VariableDeclaration","scope":1452,"src":"869:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"from","nameLocation":"903:4:9","nodeType":"VariableDeclaration","scope":1452,"src":"895:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:9","nodeType":"VariableDeclaration","scope":1452,"src":"917:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"data","nameLocation":"957:4:9","nodeType":"VariableDeclaration","scope":1452,"src":"942:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1446,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:9"},"returnParameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"986:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1449,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:9"},"scope":1453,"src":"834:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1454,"src":"297:699:9","usedErrors":[],"usedEvents":[]}],"src":"116:881:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"ERC721":[1318],"ERC721Enumerable":[1839],"IERC165":[4910],"IERC721Enumerable":[1997]},"id":1840,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1455,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1840,"sourceUnit":1319,"src":"154:37:10","symbolAliases":[{"foreign":{"id":1456,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"162:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":1459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1840,"sourceUnit":1998,"src":"192:58:10","symbolAliases":[{"foreign":{"id":1458,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"200:17:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":1461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1840,"sourceUnit":4899,"src":"251:64:10","symbolAliases":[{"foreign":{"id":1460,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"259:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1463,"name":"ERC721","nameLocations":["746:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"746:6:10"},"id":1464,"nodeType":"InheritanceSpecifier","src":"746:6:10"},{"baseName":{"id":1465,"name":"IERC721Enumerable","nameLocations":["754:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":1997,"src":"754:17:10"},"id":1466,"nodeType":"InheritanceSpecifier","src":"754:17:10"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"317:390:10","text":" @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\n interfere with enumerability and should not be used together with {ERC721Enumerable}."},"fullyImplemented":true,"id":1839,"linearizedBaseContracts":[1839,1997,1318,314,2025,1435,4898,4910,2399],"name":"ERC721Enumerable","nameLocation":"726:16:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1472,"mutability":"mutable","name":"_ownedTokens","nameLocation":"846:12:10","nodeType":"VariableDeclaration","scope":1839,"src":"778:80:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1471,"keyName":"owner","keyNameLocation":"794:5:10","keyType":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"778:59:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1470,"keyName":"index","keyNameLocation":"819:5:10","keyType":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"803:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1476,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"908:17:10","nodeType":"VariableDeclaration","scope":1839,"src":"864:61:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1475,"keyName":"tokenId","keyNameLocation":"880:7:10","keyType":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"864:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1479,"mutability":"mutable","name":"_allTokens","nameLocation":"950:10:10","nodeType":"VariableDeclaration","scope":1839,"src":"932:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ArrayTypeName","src":"932:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1483,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"1010:15:10","nodeType":"VariableDeclaration","scope":1839,"src":"966:59:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1482,"keyName":"tokenId","keyNameLocation":"982:7:10","keyType":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"966:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"1032:168:10","text":" @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."},"errorSelector":"a57d13dc","id":1490,"name":"ERC721OutOfBoundsIndex","nameLocation":"1211:22:10","nodeType":"ErrorDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"owner","nameLocation":"1242:5:10","nodeType":"VariableDeclaration","scope":1490,"src":"1234:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"index","nameLocation":"1257:5:10","nodeType":"VariableDeclaration","scope":1490,"src":"1249:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1233:30:10"},"src":"1205:59:10"},{"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"1270:50:10","text":" @dev Batch mint is not allowed."},"errorSelector":"59171fc1","id":1493,"name":"ERC721EnumerableForbiddenBatchMint","nameLocation":"1331:34:10","nodeType":"ErrorDefinition","parameters":{"id":1492,"nodeType":"ParameterList","parameters":[],"src":"1365:2:10"},"src":"1325:43:10"},{"baseFunctions":[462,4909],"body":{"id":1516,"nodeType":"Block","src":"1543:114:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1560:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1506,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"1580:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1997_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1997_$","typeString":"type(contract IERC721Enumerable)"}],"id":1505,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1575:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1575:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$1997","typeString":"type(contract IERC721Enumerable)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1599:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1575:35:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1560:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1512,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1638:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1510,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1614:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1839_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":462,"src":"1614:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1614:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1560:90:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1503,"id":1515,"nodeType":"Return","src":"1553:97:10"}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"1374:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1444:17:10","nodeType":"FunctionDefinition","overrides":{"id":1500,"nodeType":"OverrideSpecifier","overrides":[{"id":1498,"name":"IERC165","nameLocations":["1511:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"1511:7:10"},{"id":1499,"name":"ERC721","nameLocations":["1520:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"1520:6:10"}],"src":"1502:25:10"},"parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"interfaceId","nameLocation":"1469:11:10","nodeType":"VariableDeclaration","scope":1517,"src":"1462:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1495,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1462:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1461:20:10"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"1537:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1501,"name":"bool","nodeType":"ElementaryTypeName","src":"1537:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1536:6:10"},"scope":1839,"src":"1435:222:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1988],"body":{"id":1545,"nodeType":"Block","src":"1833:158:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1527,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1847:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1529,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1866:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1528,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"1856:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1847:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1538,"nodeType":"IfStatement","src":"1843:99:10","trueBody":{"id":1537,"nodeType":"Block","src":"1874:68:10","statements":[{"errorCall":{"arguments":[{"id":1533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1918:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1534,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1925:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1532,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1895:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1536,"nodeType":"RevertStatement","src":"1888:43:10"}]}},{"expression":{"baseExpression":{"baseExpression":{"id":1539,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"1958:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1541,"indexExpression":{"id":1540,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1971:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1958:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1543,"indexExpression":{"id":1542,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1978:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1958:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1526,"id":1544,"nodeType":"Return","src":"1951:33:10"}]},"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"1663:68:10","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1745:19:10","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"owner","nameLocation":"1773:5:10","nodeType":"VariableDeclaration","scope":1546,"src":"1765:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"1765:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"index","nameLocation":"1788:5:10","nodeType":"VariableDeclaration","scope":1546,"src":"1780:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1764:30:10"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"1824:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:9:10"},"scope":1839,"src":"1736:255:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1978],"body":{"id":1555,"nodeType":"Block","src":"2123:41:10","statements":[{"expression":{"expression":{"id":1552,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2140:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2151:6:10","memberName":"length","nodeType":"MemberAccess","src":"2140:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1551,"id":1554,"nodeType":"Return","src":"2133:24:10"}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1997:60:10","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2071:11:10","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"2082:2:10"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1556,"src":"2114:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2113:9:10"},"scope":1839,"src":"2062:102:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1996],"body":{"id":1582,"nodeType":"Block","src":"2311:151:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2325:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1565,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"2334:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1577,"nodeType":"IfStatement","src":"2321:101:10","trueBody":{"id":1576,"nodeType":"Block","src":"2349:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2401:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2393:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"2393:7:10","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1573,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2405:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1568,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"2370:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1575,"nodeType":"RevertStatement","src":"2363:48:10"}]}},{"expression":{"baseExpression":{"id":1578,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2438:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1580,"indexExpression":{"id":1579,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2449:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2438:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1563,"id":1581,"nodeType":"Return","src":"2431:24:10"}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"2170:61:10","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":1583,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"2245:12:10","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"index","nameLocation":"2266:5:10","nodeType":"VariableDeclaration","scope":1583,"src":"2258:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2258:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2257:15:10"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1583,"src":"2302:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2302:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:9:10"},"scope":1839,"src":"2236:226:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[931],"body":{"id":1651,"nodeType":"Block","src":"2622:521:10","statements":[{"assignments":[1597],"declarations":[{"constant":false,"id":1597,"mutability":"mutable","name":"previousOwner","nameLocation":"2640:13:10","nodeType":"VariableDeclaration","scope":1651,"src":"2632:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1604,"initialValue":{"arguments":[{"id":1600,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2670:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1601,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"2674:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1602,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"2683:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1598,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2656:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1839_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2662:7:10","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":931,"src":"2656:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2656:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2632:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2703:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2728:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2720:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"2720:7:10","typeDescriptions":{}}},"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2720:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2703:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1616,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2807:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1617,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2824:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2807:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1625,"nodeType":"IfStatement","src":"2803:106:10","trueBody":{"id":1624,"nodeType":"Block","src":"2828:81:10","statements":[{"expression":{"arguments":[{"id":1620,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2875:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1621,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"2890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1619,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"2842:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"ExpressionStatement","src":"2842:56:10"}]}},"id":1626,"nodeType":"IfStatement","src":"2699:210:10","trueBody":{"id":1615,"nodeType":"Block","src":"2732:65:10","statements":[{"expression":{"arguments":[{"id":1612,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"2778:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1611,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"2746:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1614,"nodeType":"ExpressionStatement","src":"2746:40:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2922:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2928:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"2928:7:10","typeDescriptions":{}}},"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2922:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1638,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"3020:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3037:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1647,"nodeType":"IfStatement","src":"3016:90:10","trueBody":{"id":1646,"nodeType":"Block","src":"3041:65:10","statements":[{"expression":{"arguments":[{"id":1642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3083:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1643,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"3087:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1641,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"3055:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"3055:40:10"}]}},"id":1648,"nodeType":"IfStatement","src":"2918:188:10","trueBody":{"id":1637,"nodeType":"Block","src":"2940:70:10","statements":[{"expression":{"arguments":[{"id":1634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"2991:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1633,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"2954:36:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1636,"nodeType":"ExpressionStatement","src":"2954:45:10"}]}},{"expression":{"id":1649,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"3123:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1595,"id":1650,"nodeType":"Return","src":"3116:20:10"}]},"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"2468:45:10","text":" @dev See {ERC721-_update}."},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2527:7:10","nodeType":"FunctionDefinition","overrides":{"id":1592,"nodeType":"OverrideSpecifier","overrides":[],"src":"2595:8:10"},"parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"to","nameLocation":"2543:2:10","nodeType":"VariableDeclaration","scope":1652,"src":"2535:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"2535:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:10","nodeType":"VariableDeclaration","scope":1652,"src":"2547:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"auth","nameLocation":"2572:4:10","nodeType":"VariableDeclaration","scope":1652,"src":"2564:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2534:43:10"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"2613:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"2613:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2612:9:10"},"scope":1839,"src":"2518:625:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1682,"nodeType":"Block","src":"3511:140:10","statements":[{"assignments":[1661],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"length","nameLocation":"3529:6:10","nodeType":"VariableDeclaration","scope":1682,"src":"3521:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3548:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1662,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3538:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3554:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3538:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3521:34:10"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1668,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"3565:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1671,"indexExpression":{"id":1669,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3578:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3565:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1672,"indexExpression":{"id":1670,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3582:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3565:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3592:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3565:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"3565:34:10"},{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1676,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"3609:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1678,"indexExpression":{"id":1677,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3627:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3609:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1679,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3638:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3609:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ExpressionStatement","src":"3609:35:10"}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"3149:283:10","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":1683,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3446:27:10","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"to","nameLocation":"3482:2:10","nodeType":"VariableDeclaration","scope":1683,"src":"3474:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"tokenId","nameLocation":"3494:7:10","nodeType":"VariableDeclaration","scope":1683,"src":"3486:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3473:29:10"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"3511:0:10"},"scope":1839,"src":"3437:214:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1702,"nodeType":"Block","src":"3912:95:10","statements":[{"expression":{"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1689,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"3922:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1691,"indexExpression":{"id":1690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3938:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3922:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1692,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3949:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3960:6:10","memberName":"length","nodeType":"MemberAccess","src":"3949:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3922:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1695,"nodeType":"ExpressionStatement","src":"3922:44:10"},{"expression":{"arguments":[{"id":1699,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3992:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1696,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3976:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3987:4:10","memberName":"push","nodeType":"MemberAccess","src":"3976:15:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3976:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1701,"nodeType":"ExpressionStatement","src":"3976:24:10"}]},"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"3657:184:10","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3855:31:10","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"tokenId","nameLocation":"3895:7:10","nodeType":"VariableDeclaration","scope":1703,"src":"3887:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"3887:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3886:17:10"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[],"src":"3912:0:10"},"scope":1839,"src":"3846:161:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1764,"nodeType":"Block","src":"4705:974:10","statements":[{"assignments":[1712],"declarations":[{"constant":false,"id":1712,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4894:14:10","nodeType":"VariableDeclaration","scope":1764,"src":"4886:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"4886:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1716,"initialValue":{"arguments":[{"id":1714,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4921:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1713,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"4911:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4886:40:10"},{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"tokenIndex","nameLocation":"4944:10:10","nodeType":"VariableDeclaration","scope":1764,"src":"4936:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"4936:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1722,"initialValue":{"baseExpression":{"id":1719,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"4957:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1721,"indexExpression":{"id":1720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4975:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4957:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4936:47:10"},{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"_ownedTokensByOwner","nameLocation":"5036:19:10","nodeType":"VariableDeclaration","scope":1764,"src":"4994:61:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1725,"keyName":"index","keyNameLocation":"5010:5:10","keyType":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"5002:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4994:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"5019:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"id":1730,"initialValue":{"baseExpression":{"id":1727,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"5058:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1729,"indexExpression":{"id":1728,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"5071:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5058:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4994:82:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1731,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5180:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1732,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5194:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5180:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1753,"nodeType":"IfStatement","src":"5176:325:10","trueBody":{"id":1752,"nodeType":"Block","src":"5210:291:10","statements":[{"assignments":[1735],"declarations":[{"constant":false,"id":1735,"mutability":"mutable","name":"lastTokenId","nameLocation":"5232:11:10","nodeType":"VariableDeclaration","scope":1752,"src":"5224:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"5224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1739,"initialValue":{"baseExpression":{"id":1736,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5246:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1738,"indexExpression":{"id":1737,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5266:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5246:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5224:57:10"},{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1740,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5296:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1742,"indexExpression":{"id":1741,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5316:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5296:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1743,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"5330:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5296:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"nodeType":"ExpressionStatement","src":"5296:45:10"},{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1746,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"5413:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1748,"indexExpression":{"id":1747,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"5431:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5413:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1749,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5446:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5413:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"nodeType":"ExpressionStatement","src":"5413:43:10"}]}},{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5587:33:10","subExpression":{"baseExpression":{"id":1754,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"5594:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1756,"indexExpression":{"id":1755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"5612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5594:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"ExpressionStatement","src":"5587:33:10"},{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5630:42:10","subExpression":{"baseExpression":{"id":1759,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5637:19:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1761,"indexExpression":{"id":1760,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5657:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5637:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"ExpressionStatement","src":"5630:42:10"}]},"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"4013:606:10","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4633:32:10","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"from","nameLocation":"4674:4:10","nodeType":"VariableDeclaration","scope":1765,"src":"4666:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"4666:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"tokenId","nameLocation":"4688:7:10","nodeType":"VariableDeclaration","scope":1765,"src":"4680:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"4680:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4665:31:10"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[],"src":"4705:0:10"},"scope":1839,"src":"4624:1055:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1812,"nodeType":"Block","src":"6038:990:10","statements":[{"assignments":[1772],"declarations":[{"constant":false,"id":1772,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6224:14:10","nodeType":"VariableDeclaration","scope":1812,"src":"6216:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1777,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1773,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6241:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6252:6:10","memberName":"length","nodeType":"MemberAccess","src":"6241:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6261:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6241:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:46:10"},{"assignments":[1779],"declarations":[{"constant":false,"id":1779,"mutability":"mutable","name":"tokenIndex","nameLocation":"6280:10:10","nodeType":"VariableDeclaration","scope":1812,"src":"6272:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"6272:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1783,"initialValue":{"baseExpression":{"id":1780,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"6293:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1782,"indexExpression":{"id":1781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"6309:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6293:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6272:45:10"},{"assignments":[1785],"declarations":[{"constant":false,"id":1785,"mutability":"mutable","name":"lastTokenId","nameLocation":"6647:11:10","nodeType":"VariableDeclaration","scope":1812,"src":"6639:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"6639:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1789,"initialValue":{"baseExpression":{"id":1786,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6661:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1788,"indexExpression":{"id":1787,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"6672:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6661:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6639:48:10"},{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1790,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6698:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1792,"indexExpression":{"id":1791,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"6709:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6698:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1793,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"6723:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6698:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1795,"nodeType":"ExpressionStatement","src":"6698:36:10"},{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1796,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"6802:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1798,"indexExpression":{"id":1797,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"6818:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6802:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1799,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"6833:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6802:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1801,"nodeType":"ExpressionStatement","src":"6802:41:10"},{"expression":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6964:31:10","subExpression":{"baseExpression":{"id":1802,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"6971:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1804,"indexExpression":{"id":1803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"6987:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6971:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"ExpressionStatement","src":"6964:31:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1807,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"7005:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7016:3:10","memberName":"pop","nodeType":"MemberAccess","src":"7005:14:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7005:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1811,"nodeType":"ExpressionStatement","src":"7005:16:10"}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"5685:277:10","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5976:36:10","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"tokenId","nameLocation":"6021:7:10","nodeType":"VariableDeclaration","scope":1813,"src":"6013:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6012:17:10"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"6038:0:10"},"scope":1839,"src":"5967:1061:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[841],"body":{"id":1837,"nodeType":"Block","src":"7230:149:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7244:6:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7253:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7244:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1829,"nodeType":"IfStatement","src":"7240:84:10","trueBody":{"id":1828,"nodeType":"Block","src":"7256:68:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1825,"name":"ERC721EnumerableForbiddenBatchMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"7277:34:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7277:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1827,"nodeType":"RevertStatement","src":"7270:43:10"}]}},{"expression":{"arguments":[{"id":1833,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"7356:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1834,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7365:6:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1830,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7333:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1839_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7339:16:10","memberName":"_increaseBalance","nodeType":"MemberAccess","referencedDeclaration":841,"src":"7333:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$","typeString":"function (address,uint128)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7333:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"7333:39:10"}]},"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"7034:106:10","text":" See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"},"id":1838,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7154:16:10","nodeType":"FunctionDefinition","overrides":{"id":1820,"nodeType":"OverrideSpecifier","overrides":[],"src":"7221:8:10"},"parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"account","nameLocation":"7179:7:10","nodeType":"VariableDeclaration","scope":1838,"src":"7171:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"7171:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"amount","nameLocation":"7196:6:10","nodeType":"VariableDeclaration","scope":1838,"src":"7188:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1817,"name":"uint128","nodeType":"ElementaryTypeName","src":"7188:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7170:33:10"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[],"src":"7230:0:10"},"scope":1839,"src":"7145:234:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1840,"src":"708:6673:10","usedErrors":[272,277,286,291,296,303,308,313,1490,1493],"usedEvents":[1334,1343,1352]}],"src":"128:7254:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1318],"ERC721URIStorage":[1965],"IERC165":[4910],"IERC4906":[195],"Strings":[3112]},"id":1966,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1841,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1966,"sourceUnit":1319,"src":"154:37:11","symbolAliases":[{"foreign":{"id":1842,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"162:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1966,"sourceUnit":3113,"src":"192:51:11","symbolAliases":[{"foreign":{"id":1844,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"200:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1966,"sourceUnit":196,"src":"244:58:11","symbolAliases":[{"foreign":{"id":1846,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"252:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1966,"sourceUnit":152,"src":"303:56:11","symbolAliases":[{"foreign":{"id":1848,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"311:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1851,"name":"IERC4906","nameLocations":["470:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":195,"src":"470:8:11"},"id":1852,"nodeType":"InheritanceSpecifier","src":"470:8:11"},{"baseName":{"id":1853,"name":"ERC721","nameLocations":["480:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"480:6:11"},"id":1854,"nodeType":"InheritanceSpecifier","src":"480:6:11"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"361:70:11","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1965,"linearizedBaseContracts":[1965,1318,314,2025,195,1435,4898,4910,2399],"name":"ERC721URIStorage","nameLocation":"450:16:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1857,"libraryName":{"id":1855,"name":"Strings","nameLocations":["499:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"499:7:11"},"nodeType":"UsingForDirective","src":"493:26:11","typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1863,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:11","nodeType":"VariableDeclaration","scope":1965,"src":"707:65:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1858,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:11","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1859,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:11","typeDescriptions":{}}},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1867,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:11","nodeType":"VariableDeclaration","scope":1965,"src":"818:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1866,"keyName":"tokenId","keyNameLocation":"834:7:11","keyType":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1865,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[462,4909],"body":{"id":1887,"nodeType":"Block","src":"1046:99:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1063:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1879,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"1078:20:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1883,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1126:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1881,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1965_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":462,"src":"1102:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1877,"id":1886,"nodeType":"Return","src":"1056:82:11"}]},"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"878:55:11","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":1888,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:11","nodeType":"FunctionDefinition","overrides":{"id":1874,"nodeType":"OverrideSpecifier","overrides":[{"id":1872,"name":"ERC721","nameLocations":["1014:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"1014:6:11"},{"id":1873,"name":"IERC165","nameLocations":["1022:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"1022:7:11"}],"src":"1005:25:11"},"parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:11","nodeType":"VariableDeclaration","scope":1888,"src":"965:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1869,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:11"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1888,"src":"1040:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1875,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:11"},"scope":1965,"src":"938:207:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[557],"body":{"id":1944,"nodeType":"Block","src":"1299:505:11","statements":[{"expression":{"arguments":[{"id":1898,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1897,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"1309:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1900,"nodeType":"ExpressionStatement","src":"1309:22:11"},{"assignments":[1902],"declarations":[{"constant":false,"id":1902,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:11","nodeType":"VariableDeclaration","scope":1944,"src":"1342:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1901,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1906,"initialValue":{"baseExpression":{"id":1903,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1368:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1905,"indexExpression":{"id":1904,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1379:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:11"},{"assignments":[1908],"declarations":[{"constant":false,"id":1908,"mutability":"mutable","name":"base","nameLocation":"1411:4:11","nodeType":"VariableDeclaration","scope":1944,"src":"1397:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1907,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1911,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1909,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"1418:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1914,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1507:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1912,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:11","typeDescriptions":{}}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:11","memberName":"length","nodeType":"MemberAccess","src":"1501:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1922,"nodeType":"IfStatement","src":"1497:70:11","trueBody":{"id":1921,"nodeType":"Block","src":"1526:41:11","statements":[{"expression":{"id":1919,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"1547:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1896,"id":1920,"nodeType":"Return","src":"1540:16:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1925,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"1672:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:11","typeDescriptions":{}}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:11","memberName":"length","nodeType":"MemberAccess","src":"1666:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1938,"nodeType":"IfStatement","src":"1662:95:11","trueBody":{"id":1937,"nodeType":"Block","src":"1695:62:11","statements":[{"expression":{"arguments":[{"id":1933,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1730:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1934,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"1736:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1930,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:11","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:11","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1896,"id":1936,"nodeType":"Return","src":"1709:37:11"}]}},{"expression":{"arguments":[{"id":1941,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1789:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1939,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1965_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:11","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":557,"src":"1774:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1896,"id":1943,"nodeType":"Return","src":"1767:30:11"}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"1151:55:11","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:11","nodeType":"FunctionDefinition","overrides":{"id":1893,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:11"},"parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:11","nodeType":"VariableDeclaration","scope":1945,"src":"1229:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:11"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"1284:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1894,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:11"},"scope":1965,"src":"1211:593:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1963,"nodeType":"Block","src":"2004:86:11","statements":[{"expression":{"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1953,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"2014:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1955,"indexExpression":{"id":1954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"2025:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2014:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1956,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2036:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2014:31:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1958,"nodeType":"ExpressionStatement","src":"2014:31:11"},{"eventCall":{"arguments":[{"id":1960,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"2075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1959,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2060:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1962,"nodeType":"EmitStatement","src":"2055:28:11"}]},"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"1810:108:11","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1932:12:11","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:11","nodeType":"VariableDeclaration","scope":1964,"src":"1945:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1950,"mutability":"mutable","name":"_tokenURI","nameLocation":"1976:9:11","nodeType":"VariableDeclaration","scope":1964,"src":"1962:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1944:42:11"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[],"src":"2004:0:11"},"scope":1965,"src":"1923:167:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1966,"src":"432:1660:11","usedErrors":[272,277,286,291,296,303,308,313],"usedEvents":[187,194,1334,1343,1352]}],"src":"128:1965:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC721":[1435],"IERC721Enumerable":[1997]},"id":1998,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1967,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1998,"sourceUnit":1436,"src":"155:39:12","symbolAliases":[{"foreign":{"id":1968,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"163:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1971,"name":"IERC721","nameLocations":["364:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"364:7:12"},"id":1972,"nodeType":"InheritanceSpecifier","src":"364:7:12"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1970,"nodeType":"StructuredDocumentation","src":"196:136:12","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1997,"linearizedBaseContracts":[1997,1435,4910],"name":"IERC721Enumerable","nameLocation":"343:17:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"378:82:12","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1978,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"474:11:12","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[],"src":"485:2:12"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1978,"src":"511:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"510:9:12"},"scope":1997,"src":"465:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"526:171:12","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1988,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"711:19:12","nodeType":"FunctionDefinition","parameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"owner","nameLocation":"739:5:12","nodeType":"VariableDeclaration","scope":1988,"src":"731:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"index","nameLocation":"754:5:12","nodeType":"VariableDeclaration","scope":1988,"src":"746:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"730:30:12"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"784:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:9:12"},"scope":1997,"src":"702:91:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"799:164:12","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1996,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"977:12:12","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"index","nameLocation":"998:5:12","nodeType":"VariableDeclaration","scope":1996,"src":"990:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"989:15:12"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1996,"src":"1028:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:9:12"},"scope":1997,"src":"968:69:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1998,"src":"333:706:12","usedErrors":[],"usedEvents":[1334,1343,1352]}],"src":"129:911:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1435],"IERC721Metadata":[2025]},"id":2026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1999,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2026,"sourceUnit":1436,"src":"153:39:13","symbolAliases":[{"foreign":{"id":2000,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"161:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2003,"name":"IERC721","nameLocations":["357:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"357:7:13"},"id":2004,"nodeType":"InheritanceSpecifier","src":"357:7:13"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"194:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2025,"linearizedBaseContracts":[2025,1435,4910],"name":"IERC721Metadata","nameLocation":"338:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"371:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2010,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:13","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[],"src":"447:2:13"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2010,"src":"473:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2007,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:13"},"scope":2025,"src":"434:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"494:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2016,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:13","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"574:2:13"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2016,"src":"600:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:13"},"scope":2025,"src":"559:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"621:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2024,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:13","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:13","nodeType":"VariableDeclaration","scope":2024,"src":"734:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:13"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"774:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2021,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:13"},"scope":2025,"src":"716:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2026,"src":"328:463:13","usedErrors":[],"usedEvents":[1334,1343,1352]}],"src":"127:665:13"},"id":13},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2102],"IERC721Errors":[314],"IERC721Receiver":[1453]},"id":2103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2027,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2103,"sourceUnit":1454,"src":"144:55:14","symbolAliases":[{"foreign":{"id":2028,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"152:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2031,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2103,"sourceUnit":362,"src":"200:69:14","symbolAliases":[{"foreign":{"id":2030,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"208:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"271:159:14","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2102,"linearizedBaseContracts":[2102],"name":"ERC721Utils","nameLocation":"439:11:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2100,"nodeType":"Block","src":"1151:758:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2046,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1165:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:14","memberName":"code","nodeType":"MemberAccess","src":"1165:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:14","memberName":"length","nodeType":"MemberAccess","src":"1165:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"1161:742:14","trueBody":{"id":2098,"nodeType":"Block","src":"1185:718:14","statements":[{"clauses":[{"block":{"id":2076,"nodeType":"Block","src":"1295:214:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2063,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"1317:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2064,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1327:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1453_$","typeString":"type(contract IERC721Receiver)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1452,"src":"1327:32:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:14","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2075,"nodeType":"IfStatement","src":"1313:182:14","trueBody":{"id":2074,"nodeType":"Block","src":"1370:125:14","statements":[{"errorCall":{"arguments":[{"id":2071,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1473:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2068,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1437:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$314_$","typeString":"type(contract IERC721Errors)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":296,"src":"1437:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2073,"nodeType":"RevertStatement","src":"1430:46:14"}]}}]},"errorName":"","id":2077,"nodeType":"TryCatchClause","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"retval","nameLocation":"1287:6:14","nodeType":"VariableDeclaration","scope":2077,"src":"1280:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2060,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:14"},"src":"1271:238:14"},{"block":{"id":2095,"nodeType":"Block","src":"1538:355:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2081,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1560:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:14","memberName":"length","nodeType":"MemberAccess","src":"1560:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2093,"nodeType":"Block","src":"1728:151:14","statements":[{"AST":{"nativeSrc":"1775:86:14","nodeType":"YulBlock","src":"1775:86:14","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1812:2:14","nodeType":"YulLiteral","src":"1812:2:14","type":"","value":"32"},{"name":"reason","nativeSrc":"1816:6:14","nodeType":"YulIdentifier","src":"1816:6:14"}],"functionName":{"name":"add","nativeSrc":"1808:3:14","nodeType":"YulIdentifier","src":"1808:3:14"},"nativeSrc":"1808:15:14","nodeType":"YulFunctionCall","src":"1808:15:14"},{"arguments":[{"name":"reason","nativeSrc":"1831:6:14","nodeType":"YulIdentifier","src":"1831:6:14"}],"functionName":{"name":"mload","nativeSrc":"1825:5:14","nodeType":"YulIdentifier","src":"1825:5:14"},"nativeSrc":"1825:13:14","nodeType":"YulFunctionCall","src":"1825:13:14"}],"functionName":{"name":"revert","nativeSrc":"1801:6:14","nodeType":"YulIdentifier","src":"1801:6:14"},"nativeSrc":"1801:38:14","nodeType":"YulFunctionCall","src":"1801:38:14"},"nativeSrc":"1801:38:14","nodeType":"YulExpressionStatement","src":"1801:38:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2079,"isOffset":false,"isSlot":false,"src":"1816:6:14","valueSize":1},{"declaration":2079,"isOffset":false,"isSlot":false,"src":"1831:6:14","valueSize":1}],"flags":["memory-safe"],"id":2092,"nodeType":"InlineAssembly","src":"1750:111:14"}]},"id":2094,"nodeType":"IfStatement","src":"1556:323:14","trueBody":{"id":2091,"nodeType":"Block","src":"1580:142:14","statements":[{"errorCall":{"arguments":[{"id":2088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1700:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2085,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1664:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$314_$","typeString":"type(contract IERC721Errors)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":296,"src":"1664:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2090,"nodeType":"RevertStatement","src":"1657:46:14"}]}}]},"errorName":"","id":2096,"nodeType":"TryCatchClause","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"reason","nameLocation":"1530:6:14","nodeType":"VariableDeclaration","scope":2096,"src":"1517:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2078,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:14"},"src":"1510:383:14"}],"externalCall":{"arguments":[{"id":2055,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"1240:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2056,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1250:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2057,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2058,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1265:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2052,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1219:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2051,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1203:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1453_$","typeString":"type(contract IERC721Receiver)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1453","typeString":"contract IERC721Receiver"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1452,"src":"1203:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2097,"nodeType":"TryStatement","src":"1199:694:14"}]}}]},"documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"457:523:14","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2101,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:14","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"operator","nameLocation":"1033:8:14","nodeType":"VariableDeclaration","scope":2101,"src":"1025:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"from","nameLocation":"1059:4:14","nodeType":"VariableDeclaration","scope":2101,"src":"1051:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"to","nameLocation":"1081:2:14","nodeType":"VariableDeclaration","scope":2101,"src":"1073:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:14","nodeType":"VariableDeclaration","scope":2101,"src":"1093:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"data","nameLocation":"1131:4:14","nodeType":"VariableDeclaration","scope":2101,"src":"1118:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2042,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:14"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[],"src":"1151:0:14"},"scope":2102,"src":"985:924:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2103,"src":"431:1480:14","usedErrors":[],"usedEvents":[]}],"src":"118:1794:14"},"id":14},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","exportedSymbols":{"ERC165":[4898],"ERC2981":[2369],"IERC165":[4910],"IERC2981":[171]},"id":2370,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2104,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:15"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"../../interfaces/IERC2981.sol","id":2106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2370,"sourceUnit":172,"src":"134:55:15","symbolAliases":[{"foreign":{"id":2105,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"142:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":2109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2370,"sourceUnit":4899,"src":"190:69:15","symbolAliases":[{"foreign":{"id":2107,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"198:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2108,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"207:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2111,"name":"IERC2981","nameLocations":["1135:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":171,"src":"1135:8:15"},"id":2112,"nodeType":"InheritanceSpecifier","src":"1135:8:15"},{"baseName":{"id":2113,"name":"ERC165","nameLocations":["1145:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"1145:6:15"},"id":2114,"nodeType":"InheritanceSpecifier","src":"1145:6:15"}],"canonicalName":"ERC2981","contractDependencies":[],"contractKind":"contract","documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"261:844:15","text":" @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."},"fullyImplemented":true,"id":2369,"linearizedBaseContracts":[2369,4898,171,4910],"name":"ERC2981","nameLocation":"1124:7:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC2981.RoyaltyInfo","id":2119,"members":[{"constant":false,"id":2116,"mutability":"mutable","name":"receiver","nameLocation":"1195:8:15","nodeType":"VariableDeclaration","scope":2119,"src":"1187:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"royaltyFraction","nameLocation":"1220:15:15","nodeType":"VariableDeclaration","scope":2119,"src":"1213:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2117,"name":"uint96","nodeType":"ElementaryTypeName","src":"1213:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RoyaltyInfo","nameLocation":"1165:11:15","nodeType":"StructDefinition","scope":2369,"src":"1158:84:15","visibility":"public"},{"constant":false,"id":2122,"mutability":"mutable","name":"_defaultRoyaltyInfo","nameLocation":"1268:19:15","nodeType":"VariableDeclaration","scope":2369,"src":"1248:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":2121,"nodeType":"UserDefinedTypeName","pathNode":{"id":2120,"name":"RoyaltyInfo","nameLocations":["1248:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"1248:11:15"},"referencedDeclaration":2119,"src":"1248:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"private"},{"constant":false,"id":2127,"mutability":"mutable","name":"_tokenRoyaltyInfo","nameLocation":"1341:17:15","nodeType":"VariableDeclaration","scope":2369,"src":"1293:65:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"typeName":{"id":2126,"keyName":"tokenId","keyNameLocation":"1309:7:15","keyType":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1293:39:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2125,"nodeType":"UserDefinedTypeName","pathNode":{"id":2124,"name":"RoyaltyInfo","nameLocations":["1320:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"1320:11:15"},"referencedDeclaration":2119,"src":"1320:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}}},"visibility":"private"},{"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"1365:96:15","text":" @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"6f483d09","id":2134,"name":"ERC2981InvalidDefaultRoyalty","nameLocation":"1472:28:15","nodeType":"ErrorDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"numerator","nameLocation":"1509:9:15","nodeType":"VariableDeclaration","scope":2134,"src":"1501:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"denominator","nameLocation":"1528:11:15","nodeType":"VariableDeclaration","scope":2134,"src":"1520:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1500:40:15"},"src":"1466:75:15"},{"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"1547:64:15","text":" @dev The default royalty receiver is invalid."},"errorSelector":"b6d9900a","id":2139,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nameLocation":"1622:36:15","nodeType":"ErrorDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"receiver","nameLocation":"1667:8:15","nodeType":"VariableDeclaration","scope":2139,"src":"1659:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"1659:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1658:18:15"},"src":"1616:61:15"},{"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"1683:114:15","text":" @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"dfd1fc1b","id":2148,"name":"ERC2981InvalidTokenRoyalty","nameLocation":"1808:26:15","nodeType":"ErrorDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"tokenId","nameLocation":"1843:7:15","nodeType":"VariableDeclaration","scope":2148,"src":"1835:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"numerator","nameLocation":"1860:9:15","nodeType":"VariableDeclaration","scope":2148,"src":"1852:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"denominator","nameLocation":"1879:11:15","nodeType":"VariableDeclaration","scope":2148,"src":"1871:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1871:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1834:57:15"},"src":"1802:90:15"},{"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"1898:70:15","text":" @dev The royalty receiver for `tokenId` is invalid."},"errorSelector":"969f0852","id":2155,"name":"ERC2981InvalidTokenRoyaltyReceiver","nameLocation":"1979:34:15","nodeType":"ErrorDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"tokenId","nameLocation":"2022:7:15","nodeType":"VariableDeclaration","scope":2155,"src":"2014:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"receiver","nameLocation":"2039:8:15","nodeType":"VariableDeclaration","scope":2155,"src":"2031:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2152,"name":"address","nodeType":"ElementaryTypeName","src":"2031:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:35:15"},"src":"1973:76:15"},{"baseFunctions":[4897,4909],"body":{"id":2178,"nodeType":"Block","src":"2224:105:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2241:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2168,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2261:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$171_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$171_$","typeString":"type(contract IERC2981)"}],"id":2167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2256:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2256:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$171","typeString":"type(contract IERC2981)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2271:11:15","memberName":"interfaceId","nodeType":"MemberAccess","src":"2256:26:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2241:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2174,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2310:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2172,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2286:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2981_$2369_$","typeString":"type(contract super ERC2981)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2292:17:15","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4897,"src":"2286:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2241:81:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2165,"id":2177,"nodeType":"Return","src":"2234:88:15"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"2055:56:15","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2125:17:15","nodeType":"FunctionDefinition","overrides":{"id":2162,"nodeType":"OverrideSpecifier","overrides":[{"id":2160,"name":"IERC165","nameLocations":["2192:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"2192:7:15"},{"id":2161,"name":"ERC165","nameLocations":["2201:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"2201:6:15"}],"src":"2183:25:15"},"parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"interfaceId","nameLocation":"2150:11:15","nodeType":"VariableDeclaration","scope":2179,"src":"2143:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2157,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2143:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2142:20:15"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2179,"src":"2218:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2163,"name":"bool","nodeType":"ElementaryTypeName","src":"2218:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2217:6:15"},"scope":2369,"src":"2116:213:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[170],"body":{"id":2240,"nodeType":"Block","src":"2521:515:15","statements":[{"assignments":[2193],"declarations":[{"constant":false,"id":2193,"mutability":"mutable","name":"_royaltyInfo","nameLocation":"2551:12:15","nodeType":"VariableDeclaration","scope":2240,"src":"2531:32:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":2192,"nodeType":"UserDefinedTypeName","pathNode":{"id":2191,"name":"RoyaltyInfo","nameLocations":["2531:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2531:11:15"},"referencedDeclaration":2119,"src":"2531:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"internal"}],"id":2197,"initialValue":{"baseExpression":{"id":2194,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2566:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2196,"indexExpression":{"id":2195,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"2584:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2566:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2531:61:15"},{"assignments":[2199],"declarations":[{"constant":false,"id":2199,"mutability":"mutable","name":"royaltyReceiver","nameLocation":"2610:15:15","nodeType":"VariableDeclaration","scope":2240,"src":"2602:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2202,"initialValue":{"expression":{"id":2200,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2628:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":2201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2641:8:15","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2628:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2602:47:15"},{"assignments":[2204],"declarations":[{"constant":false,"id":2204,"mutability":"mutable","name":"royaltyFraction","nameLocation":"2666:15:15","nodeType":"VariableDeclaration","scope":2240,"src":"2659:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2203,"name":"uint96","nodeType":"ElementaryTypeName","src":"2659:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2207,"initialValue":{"expression":{"id":2205,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2684:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":2206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2697:15:15","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2684:28:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2659:53:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2727:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2754:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2746:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:15","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2727:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2225,"nodeType":"IfStatement","src":"2723:173:15","trueBody":{"id":2224,"nodeType":"Block","src":"2758:138:15","statements":[{"expression":{"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2214,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2772:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2215,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2790:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2810:8:15","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2790:28:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2772:46:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2218,"nodeType":"ExpressionStatement","src":"2772:46:15"},{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2219,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2832:15:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2220,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2850:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2870:15:15","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2850:35:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2832:53:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2223,"nodeType":"ExpressionStatement","src":"2832:53:15"}]}},{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"royaltyAmount","nameLocation":"2914:13:15","nodeType":"VariableDeclaration","scope":2240,"src":"2906:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"2906:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2235,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"2931:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2229,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2943:15:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2931:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2930:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2232,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"2962:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2962:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2930:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2906:73:15"},{"expression":{"components":[{"id":2236,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2998:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2237,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"3015:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2997:32:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":2190,"id":2239,"nodeType":"Return","src":"2990:39:15"}]},"documentation":{"id":2180,"nodeType":"StructuredDocumentation","src":"2335:39:15","text":" @inheritdoc IERC2981"},"functionSelector":"2a55205a","id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"2388:11:15","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"tokenId","nameLocation":"2417:7:15","nodeType":"VariableDeclaration","scope":2241,"src":"2409:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"salePrice","nameLocation":"2442:9:15","nodeType":"VariableDeclaration","scope":2241,"src":"2434:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2434:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2399:58:15"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"receiver","nameLocation":"2495:8:15","nodeType":"VariableDeclaration","scope":2241,"src":"2487:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"amount","nameLocation":"2513:6:15","nodeType":"VariableDeclaration","scope":2241,"src":"2505:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2486:34:15"},"scope":2369,"src":"2379:657:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2249,"nodeType":"Block","src":"3377:29:15","statements":[{"expression":{"hexValue":"3130303030","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3394:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"functionReturnParameters":2246,"id":2248,"nodeType":"Return","src":"3387:12:15"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"3042:264:15","text":" @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"_feeDenominator","nameLocation":"3320:15:15","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[],"src":"3335:2:15"},"returnParameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"3369:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2244,"name":"uint96","nodeType":"ElementaryTypeName","src":"3369:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3368:8:15"},"scope":2369,"src":"3311:95:15","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":2295,"nodeType":"Block","src":"3751:423:15","statements":[{"assignments":[2259],"declarations":[{"constant":false,"id":2259,"mutability":"mutable","name":"denominator","nameLocation":"3769:11:15","nodeType":"VariableDeclaration","scope":2295,"src":"3761:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3761:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2262,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2260,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"3783:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3783:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3761:39:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3814:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2264,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"3829:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3814:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2272,"nodeType":"IfStatement","src":"3810:173:15","trueBody":{"id":2271,"nodeType":"Block","src":"3842:141:15","statements":[{"errorCall":{"arguments":[{"id":2267,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3946:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2268,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"3960:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2266,"name":"ERC2981InvalidDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"3917:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2270,"nodeType":"RevertStatement","src":"3910:62:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2273,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"3996:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4016:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4008:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:15","typeDescriptions":{}}},"id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4008:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3996:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2287,"nodeType":"IfStatement","src":"3992:108:15","trueBody":{"id":2286,"nodeType":"Block","src":"4020:80:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4086:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4078:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2280,"name":"address","nodeType":"ElementaryTypeName","src":"4078:7:15","typeDescriptions":{}}},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4078:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2279,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"4041:36:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4041:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2285,"nodeType":"RevertStatement","src":"4034:55:15"}]}},{"expression":{"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2288,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4110:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2290,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"4144:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2291,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"4154:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2289,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"4132:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$2119_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"4110:57:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2294,"nodeType":"ExpressionStatement","src":"4110:57:15"}]},"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"3412:250:15","text":" @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":2296,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultRoyalty","nameLocation":"3676:18:15","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"receiver","nameLocation":"3703:8:15","nodeType":"VariableDeclaration","scope":2296,"src":"3695:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"feeNumerator","nameLocation":"3720:12:15","nodeType":"VariableDeclaration","scope":2296,"src":"3713:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2254,"name":"uint96","nodeType":"ElementaryTypeName","src":"3713:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3694:39:15"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[],"src":"3751:0:15"},"scope":2369,"src":"3667:507:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2303,"nodeType":"Block","src":"4295:43:15","statements":[{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4305:26:15","subExpression":{"id":2300,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4312:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2302,"nodeType":"ExpressionStatement","src":"4305:26:15"}]},"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"4180:60:15","text":" @dev Removes default royalty information."},"id":2304,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteDefaultRoyalty","nameLocation":"4254:21:15","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"4275:2:15"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"4295:0:15"},"scope":2369,"src":"4245:93:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2355,"nodeType":"Block","src":"4707:444:15","statements":[{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"denominator","nameLocation":"4725:11:15","nodeType":"VariableDeclaration","scope":2355,"src":"4717:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"4717:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2316,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4739:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4739:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4717:39:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4770:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2320,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"4785:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4770:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2329,"nodeType":"IfStatement","src":"4766:180:15","trueBody":{"id":2328,"nodeType":"Block","src":"4798:148:15","statements":[{"errorCall":{"arguments":[{"id":2323,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"4900:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2324,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4909:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2325,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"4923:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2322,"name":"ERC2981InvalidTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"4873:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256,uint256) pure returns (error)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2327,"nodeType":"RevertStatement","src":"4866:69:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"4959:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4979:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4971:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"4971:7:15","typeDescriptions":{}}},"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4971:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4959:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2345,"nodeType":"IfStatement","src":"4955:115:15","trueBody":{"id":2344,"nodeType":"Block","src":"4983:87:15","statements":[{"errorCall":{"arguments":[{"id":2337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"5039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5056:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5048:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"5048:7:15","typeDescriptions":{}}},"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5048:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2336,"name":"ERC2981InvalidTokenRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"5004:34:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (uint256,address) pure returns (error)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5004:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2343,"nodeType":"RevertStatement","src":"4997:62:15"}]}},{"expression":{"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2346,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"5080:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2348,"indexExpression":{"id":2347,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"5098:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5080:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2350,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"5121:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2351,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"5131:12:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2349,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"5109:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$2119_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5109:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"5080:64:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2354,"nodeType":"ExpressionStatement","src":"5080:64:15"}]},"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"4344:259:15","text":" @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":2356,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenRoyalty","nameLocation":"4617:16:15","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"tokenId","nameLocation":"4642:7:15","nodeType":"VariableDeclaration","scope":2356,"src":"4634:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"4634:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"receiver","nameLocation":"4659:8:15","nodeType":"VariableDeclaration","scope":2356,"src":"4651:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"4651:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"feeNumerator","nameLocation":"4676:12:15","nodeType":"VariableDeclaration","scope":2356,"src":"4669:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2310,"name":"uint96","nodeType":"ElementaryTypeName","src":"4669:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4633:56:15"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"4707:0:15"},"scope":2369,"src":"4608:543:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2367,"nodeType":"Block","src":"5319:50:15","statements":[{"expression":{"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5329:33:15","subExpression":{"baseExpression":{"id":2362,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"5336:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2119_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2364,"indexExpression":{"id":2363,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"5354:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5336:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$2119_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2366,"nodeType":"ExpressionStatement","src":"5329:33:15"}]},"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"5157:95:15","text":" @dev Resets royalty information for the token id back to the global default."},"id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTokenRoyalty","nameLocation":"5266:18:15","nodeType":"FunctionDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"tokenId","nameLocation":"5293:7:15","nodeType":"VariableDeclaration","scope":2368,"src":"5285:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"5285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:17:15"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[],"src":"5319:0:15"},"scope":2369,"src":"5257:112:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2370,"src":"1106:4265:15","usedErrors":[2134,2139,2148,2155],"usedEvents":[]}],"src":"108:5264:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2399]},"id":2400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2371,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"127:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2399,"linearizedBaseContracts":[2399],"name":"Context","nameLocation":"642:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2380,"nodeType":"Block","src":"718:34:16","statements":[{"expression":{"expression":{"id":2377,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:16","memberName":"sender","nodeType":"MemberAccess","src":"735:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2376,"id":2379,"nodeType":"Return","src":"728:17:16"}]},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:16","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[],"src":"675:2:16"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"709:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:16"},"scope":2399,"src":"656:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2389,"nodeType":"Block","src":"825:32:16","statements":[{"expression":{"expression":{"id":2386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:16","memberName":"data","nodeType":"MemberAccess","src":"842:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2385,"id":2388,"nodeType":"Return","src":"835:15:16"}]},"id":2390,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:16","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[],"src":"775:2:16"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2390,"src":"809:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2383,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:16"},"scope":2399,"src":"758:99:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2397,"nodeType":"Block","src":"935:25:16","statements":[{"expression":{"hexValue":"30","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2394,"id":2396,"nodeType":"Return","src":"945:8:16"}]},"id":2398,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:16","nodeType":"FunctionDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[],"src":"892:2:16"},"returnParameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2398,"src":"926:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:16"},"scope":2399,"src":"863:97:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2400,"src":"624:338:16","usedErrors":[],"usedEvents":[]}],"src":"101:862:16"},"id":16},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2451]},"id":2452,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"125:489:17","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2451,"linearizedBaseContracts":[2451],"name":"Panic","nameLocation":"665:5:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"677:36:17","text":"@dev generic / unspecified error"},"id":2406,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:17","nodeType":"VariableDeclaration","scope":2451,"src":"718:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"764:37:17","text":"@dev used by the assert() builtin"},"id":2410,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:17","nodeType":"VariableDeclaration","scope":2451,"src":"806:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"851:41:17","text":"@dev arithmetic underflow or overflow"},"id":2414,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:17","nodeType":"VariableDeclaration","scope":2451,"src":"897:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:17","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"950:35:17","text":"@dev division or modulo by zero"},"id":2418,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:17","nodeType":"VariableDeclaration","scope":2451,"src":"990:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"1045:30:17","text":"@dev enum conversion error"},"id":2422,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:17","nodeType":"VariableDeclaration","scope":2451,"src":"1080:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:17","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"1140:36:17","text":"@dev invalid encoding in storage"},"id":2426,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:17","nodeType":"VariableDeclaration","scope":2451,"src":"1181:55:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"1242:24:17","text":"@dev empty array pop"},"id":2430,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:17","nodeType":"VariableDeclaration","scope":2451,"src":"1271:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:17","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"1325:35:17","text":"@dev array out of bounds access"},"id":2434,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:17","nodeType":"VariableDeclaration","scope":2451,"src":"1365:52:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"1423:65:17","text":"@dev resource error (too large allocation or too large array)"},"id":2438,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:17","nodeType":"VariableDeclaration","scope":2451,"src":"1493:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"1546:42:17","text":"@dev calling invalid internal function"},"id":2442,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:17","nodeType":"VariableDeclaration","scope":2451,"src":"1593:58:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:17","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2449,"nodeType":"Block","src":"1819:151:17","statements":[{"AST":{"nativeSrc":"1854:110:17","nodeType":"YulBlock","src":"1854:110:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:17","nodeType":"YulLiteral","src":"1875:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:17","nodeType":"YulLiteral","src":"1881:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:17","nodeType":"YulIdentifier","src":"1868:6:17"},"nativeSrc":"1868:24:17","nodeType":"YulFunctionCall","src":"1868:24:17"},"nativeSrc":"1868:24:17","nodeType":"YulExpressionStatement","src":"1868:24:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:17","nodeType":"YulLiteral","src":"1912:4:17","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:17","nodeType":"YulIdentifier","src":"1918:4:17"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:17","nodeType":"YulIdentifier","src":"1905:6:17"},"nativeSrc":"1905:18:17","nodeType":"YulFunctionCall","src":"1905:18:17"},"nativeSrc":"1905:18:17","nodeType":"YulExpressionStatement","src":"1905:18:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:17","nodeType":"YulLiteral","src":"1943:4:17","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:17","nodeType":"YulLiteral","src":"1949:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:17","nodeType":"YulIdentifier","src":"1936:6:17"},"nativeSrc":"1936:18:17","nodeType":"YulFunctionCall","src":"1936:18:17"},"nativeSrc":"1936:18:17","nodeType":"YulExpressionStatement","src":"1936:18:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2445,"isOffset":false,"isSlot":false,"src":"1918:4:17","valueSize":1}],"flags":["memory-safe"],"id":2448,"nodeType":"InlineAssembly","src":"1829:135:17"}]},"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"1658:113:17","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2450,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:17","nodeType":"FunctionDefinition","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"code","nameLocation":"1799:4:17","nodeType":"VariableDeclaration","scope":2450,"src":"1791:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:17"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[],"src":"1819:0:17"},"scope":2451,"src":"1776:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2452,"src":"657:1315:17","usedErrors":[],"usedEvents":[]}],"src":"99:1874:17"},"id":17},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2457],"ShortStrings":[2668],"StorageSlot":[2792]},"id":2669,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2453,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2669,"sourceUnit":2793,"src":"132:46:18","symbolAliases":[{"foreign":{"id":2454,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"140:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2457,"name":"ShortString","nameLocation":"353:11:18","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:18","underlyingType":{"id":2456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"378:876:18","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2668,"linearizedBaseContracts":[2668],"name":"ShortStrings","nameLocation":"1263:12:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2461,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:18","nodeType":"VariableDeclaration","scope":2668,"src":"1345:111:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2465,"name":"StringTooLong","nameLocation":"1469:13:18","nodeType":"ErrorDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"str","nameLocation":"1490:3:18","nodeType":"VariableDeclaration","scope":2465,"src":"1483:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2462,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:18"},"src":"1463:32:18"},{"errorSelector":"b3512b0c","id":2467,"name":"InvalidShortString","nameLocation":"1506:18:18","nodeType":"ErrorDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[],"src":"1524:2:18"},"src":"1500:27:18"},{"body":{"id":2510,"nodeType":"Block","src":"1786:208:18","statements":[{"assignments":[2477],"declarations":[{"constant":false,"id":2477,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:18","nodeType":"VariableDeclaration","scope":2510,"src":"1796:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2476,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2482,"initialValue":{"arguments":[{"id":2480,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"1822:3:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2478,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:18","typeDescriptions":{}}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2483,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1840:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:18","memberName":"length","nodeType":"MemberAccess","src":"1840:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:18","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2492,"nodeType":"IfStatement","src":"1836:72:18","trueBody":{"id":2491,"nodeType":"Block","src":"1858:50:18","statements":[{"errorCall":{"arguments":[{"id":2488,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"1893:3:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2487,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"1879:13:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2490,"nodeType":"RevertStatement","src":"1872:25:18"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2501,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1965:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:18","typeDescriptions":{}}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:18","typeDescriptions":{}}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2504,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1974:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:18","memberName":"length","nodeType":"MemberAccess","src":"1974:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:18","typeDescriptions":{}}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2493,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1924:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:18","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:18","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"functionReturnParameters":2475,"id":2509,"nodeType":"Return","src":"1917:70:18"}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"1533:170:18","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2511,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:18","nodeType":"FunctionDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"str","nameLocation":"1745:3:18","nodeType":"VariableDeclaration","scope":2511,"src":"1731:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2469,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:18"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2511,"src":"1773:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"ShortString","nameLocations":["1773:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"1773:11:18"},"referencedDeclaration":2457,"src":"1773:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:18"},"scope":2668,"src":"1708:286:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"2152:304:18","statements":[{"assignments":[2521],"declarations":[{"constant":false,"id":2521,"mutability":"mutable","name":"len","nameLocation":"2170:3:18","nodeType":"VariableDeclaration","scope":2536,"src":"2162:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2525,"initialValue":{"arguments":[{"id":2523,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"2187:4:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"id":2522,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"2176:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:18"},{"assignments":[2527],"declarations":[{"constant":false,"id":2527,"mutability":"mutable","name":"str","nameLocation":"2294:3:18","nodeType":"VariableDeclaration","scope":2536,"src":"2280:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2526,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2532,"initialValue":{"arguments":[{"hexValue":"3332","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2528,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:18"},{"AST":{"nativeSrc":"2349:81:18","nodeType":"YulBlock","src":"2349:81:18","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:18","nodeType":"YulIdentifier","src":"2370:3:18"},{"name":"len","nativeSrc":"2375:3:18","nodeType":"YulIdentifier","src":"2375:3:18"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:18","nodeType":"YulIdentifier","src":"2363:6:18"},"nativeSrc":"2363:16:18","nodeType":"YulFunctionCall","src":"2363:16:18"},"nativeSrc":"2363:16:18","nodeType":"YulExpressionStatement","src":"2363:16:18"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:18","nodeType":"YulIdentifier","src":"2403:3:18"},{"kind":"number","nativeSrc":"2408:4:18","nodeType":"YulLiteral","src":"2408:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:18","nodeType":"YulIdentifier","src":"2399:3:18"},"nativeSrc":"2399:14:18","nodeType":"YulFunctionCall","src":"2399:14:18"},{"name":"sstr","nativeSrc":"2415:4:18","nodeType":"YulIdentifier","src":"2415:4:18"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:18","nodeType":"YulIdentifier","src":"2392:6:18"},"nativeSrc":"2392:28:18","nodeType":"YulFunctionCall","src":"2392:28:18"},"nativeSrc":"2392:28:18","nodeType":"YulExpressionStatement","src":"2392:28:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2521,"isOffset":false,"isSlot":false,"src":"2375:3:18","valueSize":1},{"declaration":2515,"isOffset":false,"isSlot":false,"src":"2415:4:18","valueSize":1},{"declaration":2527,"isOffset":false,"isSlot":false,"src":"2370:3:18","valueSize":1},{"declaration":2527,"isOffset":false,"isSlot":false,"src":"2403:3:18","valueSize":1}],"flags":["memory-safe"],"id":2533,"nodeType":"InlineAssembly","src":"2324:106:18"},{"expression":{"id":2534,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"2446:3:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2519,"id":2535,"nodeType":"Return","src":"2439:10:18"}]},"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"2000:73:18","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:18","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:18","nodeType":"VariableDeclaration","scope":2537,"src":"2096:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2514,"nodeType":"UserDefinedTypeName","pathNode":{"id":2513,"name":"ShortString","nameLocations":["2096:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2096:11:18"},"referencedDeclaration":2457,"src":"2096:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:18"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"2137:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2517,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:18"},"scope":2668,"src":"2078:378:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2568,"nodeType":"Block","src":"2598:175:18","statements":[{"assignments":[2547],"declarations":[{"constant":false,"id":2547,"mutability":"mutable","name":"result","nameLocation":"2616:6:18","nodeType":"VariableDeclaration","scope":2568,"src":"2608:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2557,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2552,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"2652:4:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"expression":{"id":2550,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"2633:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:18","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:18","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:18","typeDescriptions":{}}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2679:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:18","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2565,"nodeType":"IfStatement","src":"2675:69:18","trueBody":{"id":2564,"nodeType":"Block","src":"2692:52:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2561,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2713:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2563,"nodeType":"RevertStatement","src":"2706:27:18"}]}},{"expression":{"id":2566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2760:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2545,"id":2567,"nodeType":"Return","src":"2753:13:18"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"2462:61:18","text":" @dev Return the length of a `ShortString`."},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:18","nodeType":"FunctionDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:18","nodeType":"VariableDeclaration","scope":2569,"src":"2548:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2540,"nodeType":"UserDefinedTypeName","pathNode":{"id":2539,"name":"ShortString","nameLocations":["2548:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2548:11:18"},"referencedDeclaration":2457,"src":"2548:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:18"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"2589:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:18"},"scope":2668,"src":"2528:245:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"2996:231:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3016:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2580,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:18","typeDescriptions":{}}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:18","memberName":"length","nodeType":"MemberAccess","src":"3010:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2606,"nodeType":"Block","src":"3094:127:18","statements":[{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2595,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"3134:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2592,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"3108:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2792_$","typeString":"type(library StorageSlot)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:18","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"3108:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2689_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2688,"src":"3108:38:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3149:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2600,"nodeType":"ExpressionStatement","src":"3108:46:18"},{"expression":{"arguments":[{"id":2603,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"3192:17:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2601,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"3175:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:18","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:18","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"functionReturnParameters":2579,"id":2605,"nodeType":"Return","src":"3168:42:18"}]},"id":2607,"nodeType":"IfStatement","src":"3006:215:18","trueBody":{"id":2591,"nodeType":"Block","src":"3036:52:18","statements":[{"expression":{"arguments":[{"id":2588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3071:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2587,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3057:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"functionReturnParameters":2579,"id":2590,"nodeType":"Return","src":"3050:27:18"}]}}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"2779:103:18","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:18","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"value","nameLocation":"2936:5:18","nodeType":"VariableDeclaration","scope":2609,"src":"2922:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2571,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"store","nameLocation":"2958:5:18","nodeType":"VariableDeclaration","scope":2609,"src":"2943:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2573,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:18"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"2983:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2577,"nodeType":"UserDefinedTypeName","pathNode":{"id":2576,"name":"ShortString","nameLocations":["2983:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2983:11:18"},"referencedDeclaration":2457,"src":"2983:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:18"},"scope":2668,"src":"2887:340:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2635,"nodeType":"Block","src":"3467:158:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3500:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"expression":{"id":2620,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"3481:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:18","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:18","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2624,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"3510:17:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2633,"nodeType":"Block","src":"3582:37:18","statements":[{"expression":{"id":2631,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3603:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2619,"id":2632,"nodeType":"Return","src":"3596:12:18"}]},"id":2634,"nodeType":"IfStatement","src":"3477:142:18","trueBody":{"id":2630,"nodeType":"Block","src":"3529:47:18","statements":[{"expression":{"arguments":[{"id":2627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3559:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"id":2626,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"3550:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2619,"id":2629,"nodeType":"Return","src":"3543:22:18"}]}}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"3233:120:18","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2636,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:18","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"value","nameLocation":"3400:5:18","nodeType":"VariableDeclaration","scope":2636,"src":"3388:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2612,"nodeType":"UserDefinedTypeName","pathNode":{"id":2611,"name":"ShortString","nameLocations":["3388:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"3388:11:18"},"referencedDeclaration":2457,"src":"3388:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"store","nameLocation":"3422:5:18","nodeType":"VariableDeclaration","scope":2636,"src":"3407:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2614,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:18"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2636,"src":"3452:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2617,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:18"},"scope":2668,"src":"3358:267:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2666,"nodeType":"Block","src":"4105:174:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"4138:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"expression":{"id":2647,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4119:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"type(ShortString)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:18","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:18","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2651,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"4148:17:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2664,"nodeType":"Block","src":"4222:51:18","statements":[{"expression":{"expression":{"arguments":[{"id":2660,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4249:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2658,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:18","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:18","memberName":"length","nodeType":"MemberAccess","src":"4243:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2646,"id":2663,"nodeType":"Return","src":"4236:26:18"}]},"id":2665,"nodeType":"IfStatement","src":"4115:158:18","trueBody":{"id":2657,"nodeType":"Block","src":"4167:49:18","statements":[{"expression":{"arguments":[{"id":2654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"4199:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}],"id":2653,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"4188:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2646,"id":2656,"nodeType":"Return","src":"4181:24:18"}]}}]},"documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"3631:364:18","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:18","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"value","nameLocation":"4044:5:18","nodeType":"VariableDeclaration","scope":2667,"src":"4032:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":2639,"nodeType":"UserDefinedTypeName","pathNode":{"id":2638,"name":"ShortString","nameLocations":["4032:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"4032:11:18"},"referencedDeclaration":2457,"src":"4032:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"store","nameLocation":"4066:5:18","nodeType":"VariableDeclaration","scope":2667,"src":"4051:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2641,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:18"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2667,"src":"4096:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:18"},"scope":2668,"src":"4000:279:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2669,"src":"1255:3026:18","usedErrors":[2465,2467],"usedEvents":[]}],"src":"106:4176:18"},"id":18},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2792]},"id":2793,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2670,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"219:1187:19","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2792,"linearizedBaseContracts":[2792],"name":"StorageSlot","nameLocation":"1415:11:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2674,"members":[{"constant":false,"id":2673,"mutability":"mutable","name":"value","nameLocation":"1470:5:19","nodeType":"VariableDeclaration","scope":2674,"src":"1462:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2672,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:19","nodeType":"StructDefinition","scope":2792,"src":"1433:49:19","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2677,"members":[{"constant":false,"id":2676,"mutability":"mutable","name":"value","nameLocation":"1522:5:19","nodeType":"VariableDeclaration","scope":2677,"src":"1517:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2675,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:19","nodeType":"StructDefinition","scope":2792,"src":"1488:46:19","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2680,"members":[{"constant":false,"id":2679,"mutability":"mutable","name":"value","nameLocation":"1577:5:19","nodeType":"VariableDeclaration","scope":2680,"src":"1569:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:19","nodeType":"StructDefinition","scope":2792,"src":"1540:49:19","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2683,"members":[{"constant":false,"id":2682,"mutability":"mutable","name":"value","nameLocation":"1632:5:19","nodeType":"VariableDeclaration","scope":2683,"src":"1624:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:19","nodeType":"StructDefinition","scope":2792,"src":"1595:49:19","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2686,"members":[{"constant":false,"id":2685,"mutability":"mutable","name":"value","nameLocation":"1685:5:19","nodeType":"VariableDeclaration","scope":2686,"src":"1678:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2684,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:19","nodeType":"StructDefinition","scope":2792,"src":"1650:47:19","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2689,"members":[{"constant":false,"id":2688,"mutability":"mutable","name":"value","nameLocation":"1738:5:19","nodeType":"VariableDeclaration","scope":2689,"src":"1731:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2687,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:19","nodeType":"StructDefinition","scope":2792,"src":"1703:47:19","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2692,"members":[{"constant":false,"id":2691,"mutability":"mutable","name":"value","nameLocation":"1789:5:19","nodeType":"VariableDeclaration","scope":2692,"src":"1783:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2690,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:19","nodeType":"StructDefinition","scope":2792,"src":"1756:45:19","visibility":"public"},{"body":{"id":2702,"nodeType":"Block","src":"1983:79:19","statements":[{"AST":{"nativeSrc":"2018:38:19","nodeType":"YulBlock","src":"2018:38:19","statements":[{"nativeSrc":"2032:14:19","nodeType":"YulAssignment","src":"2032:14:19","value":{"name":"slot","nativeSrc":"2042:4:19","nodeType":"YulIdentifier","src":"2042:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:19","nodeType":"YulIdentifier","src":"2032:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2699,"isOffset":false,"isSlot":true,"src":"2032:6:19","suffix":"slot","valueSize":1},{"declaration":2695,"isOffset":false,"isSlot":false,"src":"2042:4:19","valueSize":1}],"flags":["memory-safe"],"id":2701,"nodeType":"InlineAssembly","src":"1993:63:19"}]},"documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"1807:87:19","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2703,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:19","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"slot","nameLocation":"1931:4:19","nodeType":"VariableDeclaration","scope":2703,"src":"1923:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:19"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"r","nameLocation":"1980:1:19","nodeType":"VariableDeclaration","scope":2703,"src":"1960:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2674_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2698,"nodeType":"UserDefinedTypeName","pathNode":{"id":2697,"name":"AddressSlot","nameLocations":["1960:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2674,"src":"1960:11:19"},"referencedDeclaration":2674,"src":"1960:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2674_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:19"},"scope":2792,"src":"1899:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"2243:79:19","statements":[{"AST":{"nativeSrc":"2278:38:19","nodeType":"YulBlock","src":"2278:38:19","statements":[{"nativeSrc":"2292:14:19","nodeType":"YulAssignment","src":"2292:14:19","value":{"name":"slot","nativeSrc":"2302:4:19","nodeType":"YulIdentifier","src":"2302:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:19","nodeType":"YulIdentifier","src":"2292:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2710,"isOffset":false,"isSlot":true,"src":"2292:6:19","suffix":"slot","valueSize":1},{"declaration":2706,"isOffset":false,"isSlot":false,"src":"2302:4:19","valueSize":1}],"flags":["memory-safe"],"id":2712,"nodeType":"InlineAssembly","src":"2253:63:19"}]},"documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"2068:86:19","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2714,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:19","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"slot","nameLocation":"2191:4:19","nodeType":"VariableDeclaration","scope":2714,"src":"2183:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:19"},"returnParameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"r","nameLocation":"2240:1:19","nodeType":"VariableDeclaration","scope":2714,"src":"2220:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2677_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2709,"nodeType":"UserDefinedTypeName","pathNode":{"id":2708,"name":"BooleanSlot","nameLocations":["2220:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"2220:11:19"},"referencedDeclaration":2677,"src":"2220:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2677_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:19"},"scope":2792,"src":"2159:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2724,"nodeType":"Block","src":"2503:79:19","statements":[{"AST":{"nativeSrc":"2538:38:19","nodeType":"YulBlock","src":"2538:38:19","statements":[{"nativeSrc":"2552:14:19","nodeType":"YulAssignment","src":"2552:14:19","value":{"name":"slot","nativeSrc":"2562:4:19","nodeType":"YulIdentifier","src":"2562:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:19","nodeType":"YulIdentifier","src":"2552:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2721,"isOffset":false,"isSlot":true,"src":"2552:6:19","suffix":"slot","valueSize":1},{"declaration":2717,"isOffset":false,"isSlot":false,"src":"2562:4:19","valueSize":1}],"flags":["memory-safe"],"id":2723,"nodeType":"InlineAssembly","src":"2513:63:19"}]},"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"2328:86:19","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:19","nodeType":"FunctionDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"slot","nameLocation":"2451:4:19","nodeType":"VariableDeclaration","scope":2725,"src":"2443:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:19"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"r","nameLocation":"2500:1:19","nodeType":"VariableDeclaration","scope":2725,"src":"2480:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2680_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2720,"nodeType":"UserDefinedTypeName","pathNode":{"id":2719,"name":"Bytes32Slot","nameLocations":["2480:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2680,"src":"2480:11:19"},"referencedDeclaration":2680,"src":"2480:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2680_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:19"},"scope":2792,"src":"2419:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2735,"nodeType":"Block","src":"2763:79:19","statements":[{"AST":{"nativeSrc":"2798:38:19","nodeType":"YulBlock","src":"2798:38:19","statements":[{"nativeSrc":"2812:14:19","nodeType":"YulAssignment","src":"2812:14:19","value":{"name":"slot","nativeSrc":"2822:4:19","nodeType":"YulIdentifier","src":"2822:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:19","nodeType":"YulIdentifier","src":"2812:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2732,"isOffset":false,"isSlot":true,"src":"2812:6:19","suffix":"slot","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"2822:4:19","valueSize":1}],"flags":["memory-safe"],"id":2734,"nodeType":"InlineAssembly","src":"2773:63:19"}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"2588:86:19","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:19","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"slot","nameLocation":"2711:4:19","nodeType":"VariableDeclaration","scope":2736,"src":"2703:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:19"},"returnParameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"r","nameLocation":"2760:1:19","nodeType":"VariableDeclaration","scope":2736,"src":"2740:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2683_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2731,"nodeType":"UserDefinedTypeName","pathNode":{"id":2730,"name":"Uint256Slot","nameLocations":["2740:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2683,"src":"2740:11:19"},"referencedDeclaration":2683,"src":"2740:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2683_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:19"},"scope":2792,"src":"2679:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"3020:79:19","statements":[{"AST":{"nativeSrc":"3055:38:19","nodeType":"YulBlock","src":"3055:38:19","statements":[{"nativeSrc":"3069:14:19","nodeType":"YulAssignment","src":"3069:14:19","value":{"name":"slot","nativeSrc":"3079:4:19","nodeType":"YulIdentifier","src":"3079:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:19","nodeType":"YulIdentifier","src":"3069:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2743,"isOffset":false,"isSlot":true,"src":"3069:6:19","suffix":"slot","valueSize":1},{"declaration":2739,"isOffset":false,"isSlot":false,"src":"3079:4:19","valueSize":1}],"flags":["memory-safe"],"id":2745,"nodeType":"InlineAssembly","src":"3030:63:19"}]},"documentation":{"id":2737,"nodeType":"StructuredDocumentation","src":"2848:85:19","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:19","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"slot","nameLocation":"2969:4:19","nodeType":"VariableDeclaration","scope":2747,"src":"2961:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:19"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"r","nameLocation":"3017:1:19","nodeType":"VariableDeclaration","scope":2747,"src":"2998:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2686_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2742,"nodeType":"UserDefinedTypeName","pathNode":{"id":2741,"name":"Int256Slot","nameLocations":["2998:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2686,"src":"2998:10:19"},"referencedDeclaration":2686,"src":"2998:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2686_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:19"},"scope":2792,"src":"2938:161:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2757,"nodeType":"Block","src":"3277:79:19","statements":[{"AST":{"nativeSrc":"3312:38:19","nodeType":"YulBlock","src":"3312:38:19","statements":[{"nativeSrc":"3326:14:19","nodeType":"YulAssignment","src":"3326:14:19","value":{"name":"slot","nativeSrc":"3336:4:19","nodeType":"YulIdentifier","src":"3336:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:19","nodeType":"YulIdentifier","src":"3326:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2754,"isOffset":false,"isSlot":true,"src":"3326:6:19","suffix":"slot","valueSize":1},{"declaration":2750,"isOffset":false,"isSlot":false,"src":"3336:4:19","valueSize":1}],"flags":["memory-safe"],"id":2756,"nodeType":"InlineAssembly","src":"3287:63:19"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"3105:85:19","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:19","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"slot","nameLocation":"3226:4:19","nodeType":"VariableDeclaration","scope":2758,"src":"3218:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:19"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"r","nameLocation":"3274:1:19","nodeType":"VariableDeclaration","scope":2758,"src":"3255:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2753,"nodeType":"UserDefinedTypeName","pathNode":{"id":2752,"name":"StringSlot","nameLocations":["3255:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2689,"src":"3255:10:19"},"referencedDeclaration":2689,"src":"3255:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:19"},"scope":2792,"src":"3195:161:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2768,"nodeType":"Block","src":"3558:85:19","statements":[{"AST":{"nativeSrc":"3593:44:19","nodeType":"YulBlock","src":"3593:44:19","statements":[{"nativeSrc":"3607:20:19","nodeType":"YulAssignment","src":"3607:20:19","value":{"name":"store.slot","nativeSrc":"3617:10:19","nodeType":"YulIdentifier","src":"3617:10:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:19","nodeType":"YulIdentifier","src":"3607:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2765,"isOffset":false,"isSlot":true,"src":"3607:6:19","suffix":"slot","valueSize":1},{"declaration":2761,"isOffset":false,"isSlot":true,"src":"3617:10:19","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2767,"nodeType":"InlineAssembly","src":"3568:69:19"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"3362:101:19","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:19","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"store","nameLocation":"3506:5:19","nodeType":"VariableDeclaration","scope":2769,"src":"3491:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2760,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:19"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"r","nameLocation":"3555:1:19","nodeType":"VariableDeclaration","scope":2769,"src":"3536:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2764,"nodeType":"UserDefinedTypeName","pathNode":{"id":2763,"name":"StringSlot","nameLocations":["3536:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2689,"src":"3536:10:19"},"referencedDeclaration":2689,"src":"3536:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2689_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:19"},"scope":2792,"src":"3468:175:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2779,"nodeType":"Block","src":"3818:79:19","statements":[{"AST":{"nativeSrc":"3853:38:19","nodeType":"YulBlock","src":"3853:38:19","statements":[{"nativeSrc":"3867:14:19","nodeType":"YulAssignment","src":"3867:14:19","value":{"name":"slot","nativeSrc":"3877:4:19","nodeType":"YulIdentifier","src":"3877:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:19","nodeType":"YulIdentifier","src":"3867:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2776,"isOffset":false,"isSlot":true,"src":"3867:6:19","suffix":"slot","valueSize":1},{"declaration":2772,"isOffset":false,"isSlot":false,"src":"3877:4:19","valueSize":1}],"flags":["memory-safe"],"id":2778,"nodeType":"InlineAssembly","src":"3828:63:19"}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"3649:84:19","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:19","nodeType":"FunctionDefinition","parameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"slot","nameLocation":"3768:4:19","nodeType":"VariableDeclaration","scope":2780,"src":"3760:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:19"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"r","nameLocation":"3815:1:19","nodeType":"VariableDeclaration","scope":2780,"src":"3797:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2775,"nodeType":"UserDefinedTypeName","pathNode":{"id":2774,"name":"BytesSlot","nameLocations":["3797:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2692,"src":"3797:9:19"},"referencedDeclaration":2692,"src":"3797:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:19"},"scope":2792,"src":"3738:159:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2790,"nodeType":"Block","src":"4094:85:19","statements":[{"AST":{"nativeSrc":"4129:44:19","nodeType":"YulBlock","src":"4129:44:19","statements":[{"nativeSrc":"4143:20:19","nodeType":"YulAssignment","src":"4143:20:19","value":{"name":"store.slot","nativeSrc":"4153:10:19","nodeType":"YulIdentifier","src":"4153:10:19"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:19","nodeType":"YulIdentifier","src":"4143:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2787,"isOffset":false,"isSlot":true,"src":"4143:6:19","suffix":"slot","valueSize":1},{"declaration":2783,"isOffset":false,"isSlot":true,"src":"4153:10:19","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2789,"nodeType":"InlineAssembly","src":"4104:69:19"}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"3903:99:19","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2791,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:19","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"store","nameLocation":"4043:5:19","nodeType":"VariableDeclaration","scope":2791,"src":"4029:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2782,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:19"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"r","nameLocation":"4091:1:19","nodeType":"VariableDeclaration","scope":2791,"src":"4073:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2786,"nodeType":"UserDefinedTypeName","pathNode":{"id":2785,"name":"BytesSlot","nameLocations":["4073:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2692,"src":"4073:9:19"},"referencedDeclaration":2692,"src":"4073:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2692_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:19"},"scope":2792,"src":"4007:172:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2793,"src":"1407:2774:19","usedErrors":[],"usedEvents":[]}],"src":"193:3989:19"},"id":19},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6516],"SignedMath":[8425],"Strings":[3112]},"id":3113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2794,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":6517,"src":"127:37:20","symbolAliases":[{"foreign":{"id":2795,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"135:4:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":8426,"src":"165:49:20","symbolAliases":[{"foreign":{"id":2797,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8425,"src":"173:10:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"216:34:20","text":" @dev String operations."},"fullyImplemented":true,"id":3112,"linearizedBaseContracts":[3112],"name":"Strings","nameLocation":"259:7:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2802,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:20","nodeType":"VariableDeclaration","scope":3112,"src":"273:56:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2800,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2805,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:20","nodeType":"VariableDeclaration","scope":3112,"src":"335:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2803,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:20","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"384:81:20","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2812,"name":"StringsInsufficientHexLength","nameLocation":"476:28:20","nodeType":"ErrorDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"value","nameLocation":"513:5:20","nodeType":"VariableDeclaration","scope":2812,"src":"505:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"length","nameLocation":"528:6:20","nodeType":"VariableDeclaration","scope":2812,"src":"520:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:20"},"src":"470:66:20"},{"body":{"id":2859,"nodeType":"Block","src":"708:561:20","statements":[{"id":2858,"nodeType":"UncheckedBlock","src":"718:545:20","statements":[{"assignments":[2821],"declarations":[{"constant":false,"id":2821,"mutability":"mutable","name":"length","nameLocation":"750:6:20","nodeType":"VariableDeclaration","scope":2858,"src":"742:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2828,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"770:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2822,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"759:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6516_$","typeString":"type(library Math)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:20","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6288,"src":"759:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:20"},{"assignments":[2830],"declarations":[{"constant":false,"id":2830,"mutability":"mutable","name":"buffer","nameLocation":"808:6:20","nodeType":"VariableDeclaration","scope":2858,"src":"794:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2829,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2835,"initialValue":{"arguments":[{"id":2833,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"828:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2831,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:20"},{"assignments":[2837],"declarations":[{"constant":false,"id":2837,"mutability":"mutable","name":"ptr","nameLocation":"857:3:20","nodeType":"VariableDeclaration","scope":2858,"src":"849:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"nodeType":"VariableDeclarationStatement","src":"849:11:20"},{"AST":{"nativeSrc":"899:67:20","nodeType":"YulBlock","src":"899:67:20","statements":[{"nativeSrc":"917:35:20","nodeType":"YulAssignment","src":"917:35:20","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:20","nodeType":"YulIdentifier","src":"928:6:20"},{"arguments":[{"kind":"number","nativeSrc":"940:2:20","nodeType":"YulLiteral","src":"940:2:20","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:20","nodeType":"YulIdentifier","src":"944:6:20"}],"functionName":{"name":"add","nativeSrc":"936:3:20","nodeType":"YulIdentifier","src":"936:3:20"},"nativeSrc":"936:15:20","nodeType":"YulFunctionCall","src":"936:15:20"}],"functionName":{"name":"add","nativeSrc":"924:3:20","nodeType":"YulIdentifier","src":"924:3:20"},"nativeSrc":"924:28:20","nodeType":"YulFunctionCall","src":"924:28:20"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:20","nodeType":"YulIdentifier","src":"917:3:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2830,"isOffset":false,"isSlot":false,"src":"928:6:20","valueSize":1},{"declaration":2821,"isOffset":false,"isSlot":false,"src":"944:6:20","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"917:3:20","valueSize":1}],"flags":["memory-safe"],"id":2839,"nodeType":"InlineAssembly","src":"874:92:20"},{"body":{"id":2854,"nodeType":"Block","src":"992:234:20","statements":[{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:20","subExpression":{"id":2841,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1010:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2843,"nodeType":"ExpressionStatement","src":"1010:5:20"},{"AST":{"nativeSrc":"1058:86:20","nodeType":"YulBlock","src":"1058:86:20","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:20","nodeType":"YulIdentifier","src":"1088:3:20"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:20","nodeType":"YulIdentifier","src":"1102:5:20"},{"kind":"number","nativeSrc":"1109:2:20","nodeType":"YulLiteral","src":"1109:2:20","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:20","nodeType":"YulIdentifier","src":"1098:3:20"},"nativeSrc":"1098:14:20","nodeType":"YulFunctionCall","src":"1098:14:20"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:20","nodeType":"YulIdentifier","src":"1114:10:20"}],"functionName":{"name":"byte","nativeSrc":"1093:4:20","nodeType":"YulIdentifier","src":"1093:4:20"},"nativeSrc":"1093:32:20","nodeType":"YulFunctionCall","src":"1093:32:20"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:20","nodeType":"YulIdentifier","src":"1080:7:20"},"nativeSrc":"1080:46:20","nodeType":"YulFunctionCall","src":"1080:46:20"},"nativeSrc":"1080:46:20","nodeType":"YulExpressionStatement","src":"1080:46:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":2802,"isOffset":false,"isSlot":false,"src":"1114:10:20","valueSize":1},{"declaration":2837,"isOffset":false,"isSlot":false,"src":"1088:3:20","valueSize":1},{"declaration":2815,"isOffset":false,"isSlot":false,"src":"1102:5:20","valueSize":1}],"flags":["memory-safe"],"id":2844,"nodeType":"InlineAssembly","src":"1033:111:20"},{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"1161:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"1161:11:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"1194:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2853,"nodeType":"IfStatement","src":"1190:21:20","trueBody":{"id":2852,"nodeType":"Break","src":"1206:5:20"}}]},"condition":{"hexValue":"74727565","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2855,"nodeType":"WhileStatement","src":"979:247:20"},{"expression":{"id":2856,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1246:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2819,"id":2857,"nodeType":"Return","src":"1239:13:20"}]}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"542:90:20","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:20","nodeType":"FunctionDefinition","parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"value","nameLocation":"663:5:20","nodeType":"VariableDeclaration","scope":2860,"src":"655:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:20"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2860,"src":"693:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2817,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:20"},"scope":3112,"src":"637:632:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2885,"nodeType":"Block","src":"1445:92:20","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"1476:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:20","trueExpression":{"hexValue":"2d","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"1522:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2878,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8425,"src":"1507:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8425_$","typeString":"type(library SignedMath)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:20","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8424,"src":"1507:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2877,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"1498:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2868,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:20","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:20","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:20","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2867,"id":2884,"nodeType":"Return","src":"1455:75:20"}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"1275:89:20","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:20","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"value","nameLocation":"1400:5:20","nodeType":"VariableDeclaration","scope":2886,"src":"1393:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2862,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:20"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"1430:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2865,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:20"},"scope":3112,"src":"1369:168:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2905,"nodeType":"Block","src":"1716:100:20","statements":[{"id":2904,"nodeType":"UncheckedBlock","src":"1726:84:20","statements":[{"expression":{"arguments":[{"id":2895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"1769:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"1788:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2896,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"1776:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6516_$","typeString":"type(library Math)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:20","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6459,"src":"1776:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2894,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2906,2989,3009],"referencedDeclaration":2989,"src":"1757:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2893,"id":2903,"nodeType":"Return","src":"1750:49:20"}]}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"1543:94:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2906,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:20","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"value","nameLocation":"1671:5:20","nodeType":"VariableDeclaration","scope":2906,"src":"1663:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:20"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2906,"src":"1701:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2891,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:20"},"scope":3112,"src":"1642:174:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2988,"nodeType":"Block","src":"2029:435:20","statements":[{"assignments":[2917],"declarations":[{"constant":false,"id":2917,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:20","nodeType":"VariableDeclaration","scope":2988,"src":"2039:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2919,"initialValue":{"id":2918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"2060:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:20"},{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:20","nodeType":"VariableDeclaration","scope":2988,"src":"2075:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2920,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2930,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2925,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2111:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2922,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:20"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2931,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2132:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2933,"indexExpression":{"hexValue":"30","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2936,"nodeType":"ExpressionStatement","src":"2132:15:20"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2937,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2157:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2939,"indexExpression":{"hexValue":"31","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2942,"nodeType":"ExpressionStatement","src":"2157:15:20"},{"body":{"id":2971,"nodeType":"Block","src":"2227:95:20","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2957,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2241:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2959,"indexExpression":{"id":2958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2248:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2960,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2253:10:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2964,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2264:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2966,"nodeType":"ExpressionStatement","src":"2241:40:20"},{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2967,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2295:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2970,"nodeType":"ExpressionStatement","src":"2295:16:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2215:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"initializationExpression":{"assignments":[2944],"declarations":[{"constant":false,"id":2944,"mutability":"mutable","name":"i","nameLocation":"2195:1:20","nodeType":"VariableDeclaration","scope":2972,"src":"2187:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2950,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2946,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2203:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:20"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:20","subExpression":{"id":2954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2224:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"2222:3:20"},"nodeType":"ForStatement","src":"2182:140:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2335:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"2331:96:20","trueBody":{"id":2981,"nodeType":"Block","src":"2352:75:20","statements":[{"errorCall":{"arguments":[{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"2402:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2978,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2409:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2976,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"2373:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2980,"nodeType":"RevertStatement","src":"2366:50:20"}]}},{"expression":{"arguments":[{"id":2985,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2450:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2983,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:20","typeDescriptions":{}}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2915,"id":2987,"nodeType":"Return","src":"2436:21:20"}]},"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"1822:112:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2989,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:20","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"value","nameLocation":"1968:5:20","nodeType":"VariableDeclaration","scope":2989,"src":"1960:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"length","nameLocation":"1983:6:20","nodeType":"VariableDeclaration","scope":2989,"src":"1975:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:20"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2989,"src":"2014:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2913,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:20"},"scope":3112,"src":"1939:525:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3008,"nodeType":"Block","src":"2696:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3002,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"2741:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3000,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:20","typeDescriptions":{}}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:20","typeDescriptions":{}}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3005,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"2749:14:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2997,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2906,2989,3009],"referencedDeclaration":2989,"src":"2713:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2996,"id":3007,"nodeType":"Return","src":"2706:58:20"}]},"documentation":{"id":2990,"nodeType":"StructuredDocumentation","src":"2470:148:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3009,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:20","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"addr","nameLocation":"2652:4:20","nodeType":"VariableDeclaration","scope":3009,"src":"2644:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2991,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:20"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3009,"src":"2681:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2994,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:20"},"scope":3112,"src":"2623:148:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3073,"nodeType":"Block","src":"3028:642:20","statements":[{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:20","nodeType":"VariableDeclaration","scope":3073,"src":"3038:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3017,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3025,"initialValue":{"arguments":[{"arguments":[{"id":3022,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"3078:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3021,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2906,2989,3009],"referencedDeclaration":3009,"src":"3066:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3019,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:20","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:20"},{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:20","nodeType":"VariableDeclaration","scope":3073,"src":"3169:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3028,"nodeType":"VariableDeclarationStatement","src":"3169:17:20"},{"AST":{"nativeSrc":"3221:78:20","nodeType":"YulBlock","src":"3221:78:20","statements":[{"nativeSrc":"3235:54:20","nodeType":"YulAssignment","src":"3235:54:20","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:20","nodeType":"YulLiteral","src":"3252:2:20","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:20","nodeType":"YulIdentifier","src":"3270:6:20"},{"kind":"number","nativeSrc":"3278:4:20","nodeType":"YulLiteral","src":"3278:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:20","nodeType":"YulIdentifier","src":"3266:3:20"},"nativeSrc":"3266:17:20","nodeType":"YulFunctionCall","src":"3266:17:20"},{"kind":"number","nativeSrc":"3285:2:20","nodeType":"YulLiteral","src":"3285:2:20","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:20","nodeType":"YulIdentifier","src":"3256:9:20"},"nativeSrc":"3256:32:20","nodeType":"YulFunctionCall","src":"3256:32:20"}],"functionName":{"name":"shr","nativeSrc":"3248:3:20","nodeType":"YulIdentifier","src":"3248:3:20"},"nativeSrc":"3248:41:20","nodeType":"YulFunctionCall","src":"3248:41:20"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:20","nodeType":"YulIdentifier","src":"3235:9:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3018,"isOffset":false,"isSlot":false,"src":"3270:6:20","valueSize":1},{"declaration":3027,"isOffset":false,"isSlot":false,"src":"3235:9:20","valueSize":1}],"flags":["memory-safe"],"id":3029,"nodeType":"InlineAssembly","src":"3196:103:20"},{"body":{"id":3066,"nodeType":"Block","src":"3342:291:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3448:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:20","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3047,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3477:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3049,"indexExpression":{"id":3048,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3484:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3045,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:20","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3061,"nodeType":"IfStatement","src":"3444:150:20","trueBody":{"id":3060,"nodeType":"Block","src":"3494:100:20","statements":[{"expression":{"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3054,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3562:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3056,"indexExpression":{"id":3055,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3569:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3059,"nodeType":"ExpressionStatement","src":"3562:17:20"}]}},{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3062,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3607:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"3607:15:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3330:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3067,"initializationExpression":{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"i","nameLocation":"3322:1:20","nodeType":"VariableDeclaration","scope":3067,"src":"3314:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3033,"initialValue":{"hexValue":"3431","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:20","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:20"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:20","subExpression":{"id":3037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3339:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"3337:3:20"},"nodeType":"ForStatement","src":"3309:324:20"},{"expression":{"arguments":[{"id":3070,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3656:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3068,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:20","typeDescriptions":{}}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3016,"id":3072,"nodeType":"Return","src":"3642:21:20"}]},"documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"2777:165:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3074,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:20","nodeType":"FunctionDefinition","parameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"addr","nameLocation":"2984:4:20","nodeType":"VariableDeclaration","scope":3074,"src":"2976:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:20"},"returnParameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3074,"src":"3013:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3014,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:20"},"scope":3112,"src":"2947:723:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"3825:104:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3086,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"3848:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3084,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:20","typeDescriptions":{}}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:20","memberName":"length","nodeType":"MemberAccess","src":"3842:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"3867:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3089,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:20","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:20","memberName":"length","nodeType":"MemberAccess","src":"3861:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"3896:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3096,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:20","typeDescriptions":{}}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"3919:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3102,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:20","typeDescriptions":{}}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3101,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3083,"id":3109,"nodeType":"Return","src":"3835:87:20"}]},"documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"3676:66:20","text":" @dev Returns true if the two strings are equal."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:20","nodeType":"FunctionDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"a","nameLocation":"3776:1:20","nodeType":"VariableDeclaration","scope":3111,"src":"3762:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3076,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"b","nameLocation":"3793:1:20","nodeType":"VariableDeclaration","scope":3111,"src":"3779:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3078,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:20"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"3819:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3081,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:20"},"scope":3112,"src":"3747:182:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3113,"src":"251:3680:20","usedErrors":[2812],"usedEvents":[]}],"src":"101:3831:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3460]},"id":3461,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3114,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"138:205:21","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3460,"linearizedBaseContracts":[3460],"name":"ECDSA","nameLocation":"352:5:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3120,"members":[{"id":3116,"name":"NoError","nameLocation":"392:7:21","nodeType":"EnumValue","src":"392:7:21"},{"id":3117,"name":"InvalidSignature","nameLocation":"409:16:21","nodeType":"EnumValue","src":"409:16:21"},{"id":3118,"name":"InvalidSignatureLength","nameLocation":"435:22:21","nodeType":"EnumValue","src":"435:22:21"},{"id":3119,"name":"InvalidSignatureS","nameLocation":"467:17:21","nodeType":"EnumValue","src":"467:17:21"}],"name":"RecoverError","nameLocation":"369:12:21","nodeType":"EnumDefinition","src":"364:126:21"},{"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"496:63:21","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3123,"name":"ECDSAInvalidSignature","nameLocation":"570:21:21","nodeType":"ErrorDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[],"src":"591:2:21"},"src":"564:30:21"},{"documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"600:60:21","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3128,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:21","nodeType":"ErrorDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"length","nameLocation":"707:6:21","nodeType":"VariableDeclaration","scope":3128,"src":"699:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:21"},"src":"665:50:21"},{"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"721:85:21","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3133,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:21","nodeType":"ErrorDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"s","nameLocation":"848:1:21","nodeType":"VariableDeclaration","scope":3133,"src":"840:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:21"},"src":"811:40:21"},{"body":{"id":3185,"nodeType":"Block","src":"2285:622:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3148,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"2299:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:21","memberName":"length","nodeType":"MemberAccess","src":"2299:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3183,"nodeType":"Block","src":"2793:108:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:21","typeDescriptions":{}}},"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3174,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"2827:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:21","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3118,"src":"2827:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3178,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"2872:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:21","memberName":"length","nodeType":"MemberAccess","src":"2872:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:21","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3147,"id":3182,"nodeType":"Return","src":"2807:83:21"}]},"id":3184,"nodeType":"IfStatement","src":"2295:606:21","trueBody":{"id":3169,"nodeType":"Block","src":"2323:464:21","statements":[{"assignments":[3153],"declarations":[{"constant":false,"id":3153,"mutability":"mutable","name":"r","nameLocation":"2345:1:21","nodeType":"VariableDeclaration","scope":3169,"src":"2337:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3154,"nodeType":"VariableDeclarationStatement","src":"2337:9:21"},{"assignments":[3156],"declarations":[{"constant":false,"id":3156,"mutability":"mutable","name":"s","nameLocation":"2368:1:21","nodeType":"VariableDeclaration","scope":3169,"src":"2360:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3157,"nodeType":"VariableDeclarationStatement","src":"2360:9:21"},{"assignments":[3159],"declarations":[{"constant":false,"id":3159,"mutability":"mutable","name":"v","nameLocation":"2389:1:21","nodeType":"VariableDeclaration","scope":3169,"src":"2383:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3158,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3160,"nodeType":"VariableDeclarationStatement","src":"2383:7:21"},{"AST":{"nativeSrc":"2560:171:21","nodeType":"YulBlock","src":"2560:171:21","statements":[{"nativeSrc":"2578:32:21","nodeType":"YulAssignment","src":"2578:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:21","nodeType":"YulIdentifier","src":"2593:9:21"},{"kind":"number","nativeSrc":"2604:4:21","nodeType":"YulLiteral","src":"2604:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:21","nodeType":"YulIdentifier","src":"2589:3:21"},"nativeSrc":"2589:20:21","nodeType":"YulFunctionCall","src":"2589:20:21"}],"functionName":{"name":"mload","nativeSrc":"2583:5:21","nodeType":"YulIdentifier","src":"2583:5:21"},"nativeSrc":"2583:27:21","nodeType":"YulFunctionCall","src":"2583:27:21"},"variableNames":[{"name":"r","nativeSrc":"2578:1:21","nodeType":"YulIdentifier","src":"2578:1:21"}]},{"nativeSrc":"2627:32:21","nodeType":"YulAssignment","src":"2627:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:21","nodeType":"YulIdentifier","src":"2642:9:21"},{"kind":"number","nativeSrc":"2653:4:21","nodeType":"YulLiteral","src":"2653:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:21","nodeType":"YulIdentifier","src":"2638:3:21"},"nativeSrc":"2638:20:21","nodeType":"YulFunctionCall","src":"2638:20:21"}],"functionName":{"name":"mload","nativeSrc":"2632:5:21","nodeType":"YulIdentifier","src":"2632:5:21"},"nativeSrc":"2632:27:21","nodeType":"YulFunctionCall","src":"2632:27:21"},"variableNames":[{"name":"s","nativeSrc":"2627:1:21","nodeType":"YulIdentifier","src":"2627:1:21"}]},{"nativeSrc":"2676:41:21","nodeType":"YulAssignment","src":"2676:41:21","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:21","nodeType":"YulLiteral","src":"2686:1:21","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:21","nodeType":"YulIdentifier","src":"2699:9:21"},{"kind":"number","nativeSrc":"2710:4:21","nodeType":"YulLiteral","src":"2710:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:21","nodeType":"YulIdentifier","src":"2695:3:21"},"nativeSrc":"2695:20:21","nodeType":"YulFunctionCall","src":"2695:20:21"}],"functionName":{"name":"mload","nativeSrc":"2689:5:21","nodeType":"YulIdentifier","src":"2689:5:21"},"nativeSrc":"2689:27:21","nodeType":"YulFunctionCall","src":"2689:27:21"}],"functionName":{"name":"byte","nativeSrc":"2681:4:21","nodeType":"YulIdentifier","src":"2681:4:21"},"nativeSrc":"2681:36:21","nodeType":"YulFunctionCall","src":"2681:36:21"},"variableNames":[{"name":"v","nativeSrc":"2676:1:21","nodeType":"YulIdentifier","src":"2676:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3153,"isOffset":false,"isSlot":false,"src":"2578:1:21","valueSize":1},{"declaration":3156,"isOffset":false,"isSlot":false,"src":"2627:1:21","valueSize":1},{"declaration":3138,"isOffset":false,"isSlot":false,"src":"2593:9:21","valueSize":1},{"declaration":3138,"isOffset":false,"isSlot":false,"src":"2642:9:21","valueSize":1},{"declaration":3138,"isOffset":false,"isSlot":false,"src":"2699:9:21","valueSize":1},{"declaration":3159,"isOffset":false,"isSlot":false,"src":"2676:1:21","valueSize":1}],"flags":["memory-safe"],"id":3161,"nodeType":"InlineAssembly","src":"2535:196:21"},{"expression":{"arguments":[{"id":3163,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"2762:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3164,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"2768:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3165,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"2771:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3166,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"2774:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3162,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3374,"src":"2751:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3147,"id":3168,"nodeType":"Return","src":"2744:32:21"}]}}]},"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"857:1267:21","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:21","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"hash","nameLocation":"2166:4:21","nodeType":"VariableDeclaration","scope":3186,"src":"2158:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"signature","nameLocation":"2193:9:21","nodeType":"VariableDeclaration","scope":3186,"src":"2180:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3137,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:21"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:21","nodeType":"VariableDeclaration","scope":3186,"src":"2232:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"err","nameLocation":"2264:3:21","nodeType":"VariableDeclaration","scope":3186,"src":"2251:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3143,"nodeType":"UserDefinedTypeName","pathNode":{"id":3142,"name":"RecoverError","nameLocations":["2251:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"2251:12:21"},"referencedDeclaration":3120,"src":"2251:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:21","nodeType":"VariableDeclaration","scope":3186,"src":"2269:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:21"},"scope":3460,"src":"2129:778:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3215,"nodeType":"Block","src":"3801:168:21","statements":[{"assignments":[3197,3200,3202],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:21","nodeType":"VariableDeclaration","scope":3215,"src":"3812:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3196,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"error","nameLocation":"3844:5:21","nodeType":"VariableDeclaration","scope":3215,"src":"3831:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3199,"nodeType":"UserDefinedTypeName","pathNode":{"id":3198,"name":"RecoverError","nameLocations":["3831:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"3831:12:21"},"referencedDeclaration":3120,"src":"3831:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3202,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:21","nodeType":"VariableDeclaration","scope":3215,"src":"3851:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3207,"initialValue":{"arguments":[{"id":3204,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"3882:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3205,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"3888:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3203,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3186,"src":"3871:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:21"},{"expression":{"arguments":[{"id":3209,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"3920:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"id":3210,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"3927:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3208,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"3908:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3120_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3212,"nodeType":"ExpressionStatement","src":"3908:28:21"},{"expression":{"id":3213,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"3953:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3195,"id":3214,"nodeType":"Return","src":"3946:16:21"}]},"documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"2913:796:21","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:21","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"hash","nameLocation":"3739:4:21","nodeType":"VariableDeclaration","scope":3216,"src":"3731:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"signature","nameLocation":"3758:9:21","nodeType":"VariableDeclaration","scope":3216,"src":"3745:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3190,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:21"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"3792:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:21"},"scope":3460,"src":"3714:255:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3265,"nodeType":"Block","src":"4348:342:21","statements":[{"id":3264,"nodeType":"UncheckedBlock","src":"4358:326:21","statements":[{"assignments":[3234],"declarations":[{"constant":false,"id":3234,"mutability":"mutable","name":"s","nameLocation":"4390:1:21","nodeType":"VariableDeclaration","scope":3264,"src":"4382:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3241,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"4394:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:21","typeDescriptions":{}}},"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:21"},{"assignments":[3243],"declarations":[{"constant":false,"id":3243,"mutability":"mutable","name":"v","nameLocation":"4591:1:21","nodeType":"VariableDeclaration","scope":3264,"src":"4585:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3242,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3256,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3248,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"4610:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:21","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:21","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3244,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:21","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:21"},{"expression":{"arguments":[{"id":3258,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"4659:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3259,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"4665:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3260,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"4668:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3261,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"4671:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3257,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3374,"src":"4648:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3232,"id":3263,"nodeType":"Return","src":"4641:32:21"}]}]},"documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"3975:205:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3266,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:21","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"hash","nameLocation":"4222:4:21","nodeType":"VariableDeclaration","scope":3266,"src":"4214:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"r","nameLocation":"4244:1:21","nodeType":"VariableDeclaration","scope":3266,"src":"4236:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"vs","nameLocation":"4263:2:21","nodeType":"VariableDeclaration","scope":3266,"src":"4255:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:21"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:21","nodeType":"VariableDeclaration","scope":3266,"src":"4295:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3225,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"err","nameLocation":"4327:3:21","nodeType":"VariableDeclaration","scope":3266,"src":"4314:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3228,"nodeType":"UserDefinedTypeName","pathNode":{"id":3227,"name":"RecoverError","nameLocations":["4314:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"4314:12:21"},"referencedDeclaration":3120,"src":"4314:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:21","nodeType":"VariableDeclaration","scope":3266,"src":"4332:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:21"},"scope":3460,"src":"4185:505:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3298,"nodeType":"Block","src":"4903:164:21","statements":[{"assignments":[3279,3282,3284],"declarations":[{"constant":false,"id":3279,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:21","nodeType":"VariableDeclaration","scope":3298,"src":"4914:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3278,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"error","nameLocation":"4946:5:21","nodeType":"VariableDeclaration","scope":3298,"src":"4933:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3281,"nodeType":"UserDefinedTypeName","pathNode":{"id":3280,"name":"RecoverError","nameLocations":["4933:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"4933:12:21"},"referencedDeclaration":3120,"src":"4933:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:21","nodeType":"VariableDeclaration","scope":3298,"src":"4953:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3290,"initialValue":{"arguments":[{"id":3286,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"4984:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3287,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"4990:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3288,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"4993:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3285,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3266,"src":"4973:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:21"},{"expression":{"arguments":[{"id":3292,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"5018:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"id":3293,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"5025:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3291,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5006:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3120_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3295,"nodeType":"ExpressionStatement","src":"5006:28:21"},{"expression":{"id":3296,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"5051:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3277,"id":3297,"nodeType":"Return","src":"5044:16:21"}]},"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"4696:116:21","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3299,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:21","nodeType":"FunctionDefinition","parameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"hash","nameLocation":"4842:4:21","nodeType":"VariableDeclaration","scope":3299,"src":"4834:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"r","nameLocation":"4856:1:21","nodeType":"VariableDeclaration","scope":3299,"src":"4848:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"vs","nameLocation":"4867:2:21","nodeType":"VariableDeclaration","scope":3299,"src":"4859:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:21"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3299,"src":"4894:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3275,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:21"},"scope":3460,"src":"4817:250:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3373,"nodeType":"Block","src":"5382:1372:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3320,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"6278:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:21","typeDescriptions":{}}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3334,"nodeType":"IfStatement","src":"6266:164:21","trueBody":{"id":3333,"nodeType":"Block","src":"6351:79:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:21","typeDescriptions":{}}},"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3328,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"6385:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:21","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3119,"src":"6385:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"id":3330,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"6417:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3317,"id":3332,"nodeType":"Return","src":"6365:54:21"}]}},{"assignments":[3336],"declarations":[{"constant":false,"id":3336,"mutability":"mutable","name":"signer","nameLocation":"6532:6:21","nodeType":"VariableDeclaration","scope":3373,"src":"6524:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3335,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3343,"initialValue":{"arguments":[{"id":3338,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"6551:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3339,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6557:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3340,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"6560:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3341,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"6563:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3337,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:21","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"6579:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3345,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:21","typeDescriptions":{}}},"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3363,"nodeType":"IfStatement","src":"6575:113:21","trueBody":{"id":3362,"nodeType":"Block","src":"6601:87:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3350,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:21","typeDescriptions":{}}},"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3354,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"6635:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:21","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3117,"src":"6635:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:21","typeDescriptions":{}}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3317,"id":3361,"nodeType":"Return","src":"6615:62:21"}]}},{"expression":{"components":[{"id":3364,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"6706:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3365,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"6714:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:21","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3116,"src":"6714:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:21","typeDescriptions":{}}},"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3317,"id":3372,"nodeType":"Return","src":"6698:49:21"}]},"documentation":{"id":3300,"nodeType":"StructuredDocumentation","src":"5073:125:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3374,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:21","nodeType":"FunctionDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"hash","nameLocation":"5240:4:21","nodeType":"VariableDeclaration","scope":3374,"src":"5232:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"v","nameLocation":"5260:1:21","nodeType":"VariableDeclaration","scope":3374,"src":"5254:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3303,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"r","nameLocation":"5279:1:21","nodeType":"VariableDeclaration","scope":3374,"src":"5271:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"s","nameLocation":"5298:1:21","nodeType":"VariableDeclaration","scope":3374,"src":"5290:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:21"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:21","nodeType":"VariableDeclaration","scope":3374,"src":"5329:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3310,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"err","nameLocation":"5361:3:21","nodeType":"VariableDeclaration","scope":3374,"src":"5348:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3313,"nodeType":"UserDefinedTypeName","pathNode":{"id":3312,"name":"RecoverError","nameLocations":["5348:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"5348:12:21"},"referencedDeclaration":3120,"src":"5348:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:21","nodeType":"VariableDeclaration","scope":3374,"src":"5366:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:21"},"scope":3460,"src":"5203:1551:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"6981:166:21","statements":[{"assignments":[3389,3392,3394],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:21","nodeType":"VariableDeclaration","scope":3409,"src":"6992:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3388,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"error","nameLocation":"7024:5:21","nodeType":"VariableDeclaration","scope":3409,"src":"7011:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3391,"nodeType":"UserDefinedTypeName","pathNode":{"id":3390,"name":"RecoverError","nameLocations":["7011:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"7011:12:21"},"referencedDeclaration":3120,"src":"7011:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3394,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:21","nodeType":"VariableDeclaration","scope":3409,"src":"7031:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3401,"initialValue":{"arguments":[{"id":3396,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"7062:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3397,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"7068:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3398,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"7071:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3399,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"7074:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3395,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3186,3266,3374],"referencedDeclaration":3374,"src":"7051:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3120_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:21"},{"expression":{"arguments":[{"id":3403,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"7098:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},{"id":3404,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"7105:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3402,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"7086:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3120_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3406,"nodeType":"ExpressionStatement","src":"7086:28:21"},{"expression":{"id":3407,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"7131:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3387,"id":3408,"nodeType":"Return","src":"7124:16:21"}]},"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"6760:122:21","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:21","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"hash","nameLocation":"6912:4:21","nodeType":"VariableDeclaration","scope":3410,"src":"6904:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"v","nameLocation":"6924:1:21","nodeType":"VariableDeclaration","scope":3410,"src":"6918:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3378,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"r","nameLocation":"6935:1:21","nodeType":"VariableDeclaration","scope":3410,"src":"6927:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"s","nameLocation":"6946:1:21","nodeType":"VariableDeclaration","scope":3410,"src":"6938:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:21"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3410,"src":"6972:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:21"},"scope":3460,"src":"6887:260:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3458,"nodeType":"Block","src":"7352:460:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3419,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"7366:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3420,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"7375:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:21","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3116,"src":"7375:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"7462:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3426,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"7471:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:21","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3117,"src":"7471:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"7567:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3434,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"7576:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:21","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3118,"src":"7576:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3445,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"7701:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3446,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"7710:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3120_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:21","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3119,"src":"7710:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3454,"nodeType":"IfStatement","src":"7697:109:21","trueBody":{"id":3453,"nodeType":"Block","src":"7742:64:21","statements":[{"errorCall":{"arguments":[{"id":3450,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"7786:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3449,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"7763:22:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3452,"nodeType":"RevertStatement","src":"7756:39:21"}]}},"id":3455,"nodeType":"IfStatement","src":"7563:243:21","trueBody":{"id":3444,"nodeType":"Block","src":"7613:78:21","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3440,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"7670:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:21","typeDescriptions":{}}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3437,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"7634:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3443,"nodeType":"RevertStatement","src":"7627:53:21"}]}},"id":3456,"nodeType":"IfStatement","src":"7458:348:21","trueBody":{"id":3432,"nodeType":"Block","src":"7502:55:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3429,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"7523:21:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3431,"nodeType":"RevertStatement","src":"7516:30:21"}]}},"id":3457,"nodeType":"IfStatement","src":"7362:444:21","trueBody":{"id":3424,"nodeType":"Block","src":"7397:55:21","statements":[{"functionReturnParameters":3418,"id":3423,"nodeType":"Return","src":"7411:7:21"}]}}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"7153:122:21","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3459,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:21","nodeType":"FunctionDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"error","nameLocation":"7314:5:21","nodeType":"VariableDeclaration","scope":3459,"src":"7301:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3413,"nodeType":"UserDefinedTypeName","pathNode":{"id":3412,"name":"RecoverError","nameLocations":["7301:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3120,"src":"7301:12:21"},"referencedDeclaration":3120,"src":"7301:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3120","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:21","nodeType":"VariableDeclaration","scope":3459,"src":"7321:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:21"},"returnParameters":{"id":3418,"nodeType":"ParameterList","parameters":[],"src":"7352:0:21"},"scope":3460,"src":"7280:532:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3461,"src":"344:7470:21","usedErrors":[3123,3128,3133],"usedEvents":[]}],"src":"112:7703:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3687],"IERC5267":[220],"MessageHashUtils":[4874],"ShortString":[2457],"ShortStrings":[2668]},"id":3688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3462,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":4875,"src":"139:56:22","symbolAliases":[{"foreign":{"id":3463,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"147:16:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":2669,"src":"196:62:22","symbolAliases":[{"foreign":{"id":3465,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"204:12:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3466,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"218:11:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":221,"src":"259:55:22","symbolAliases":[{"foreign":{"id":3468,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"267:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3471,"name":"IERC5267","nameLocations":["1988:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":220,"src":"1988:8:22"},"id":3472,"nodeType":"InheritanceSpecifier","src":"1988:8:22"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"316:1643:22","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3687,"linearizedBaseContracts":[3687,220],"name":"EIP712","nameLocation":"1978:6:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3474,"libraryName":{"id":3473,"name":"ShortStrings","nameLocations":["2009:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2668,"src":"2009:12:22"},"nodeType":"UsingForDirective","src":"2003:25:22"},{"constant":true,"id":3479,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:22","nodeType":"VariableDeclaration","scope":3687,"src":"2034:140:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3476,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3481,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:22","nodeType":"VariableDeclaration","scope":3687,"src":"2373:48:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3483,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:22","nodeType":"VariableDeclaration","scope":3687,"src":"2427:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3485,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:22","nodeType":"VariableDeclaration","scope":3687,"src":"2473:37:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3487,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:22","nodeType":"VariableDeclaration","scope":3687,"src":"2517:37:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3489,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:22","nodeType":"VariableDeclaration","scope":3687,"src":"2560:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3492,"mutability":"immutable","name":"_name","nameLocation":"2637:5:22","nodeType":"VariableDeclaration","scope":3687,"src":"2607:35:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":3491,"nodeType":"UserDefinedTypeName","pathNode":{"id":3490,"name":"ShortString","nameLocations":["2607:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2607:11:22"},"referencedDeclaration":2457,"src":"2607:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3495,"mutability":"immutable","name":"_version","nameLocation":"2678:8:22","nodeType":"VariableDeclaration","scope":3687,"src":"2648:38:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"},"typeName":{"id":3494,"nodeType":"UserDefinedTypeName","pathNode":{"id":3493,"name":"ShortString","nameLocations":["2648:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":2457,"src":"2648:11:22"},"referencedDeclaration":2457,"src":"2648:11:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3497,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:22","nodeType":"VariableDeclaration","scope":3687,"src":"2692:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3496,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3499,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:22","nodeType":"VariableDeclaration","scope":3687,"src":"2726:31:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3498,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3556,"nodeType":"Block","src":"3383:376:22","statements":[{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3507,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"3393:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3510,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"3432:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3508,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"3401:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:22","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2609,"src":"3401:30:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2457_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"src":"3393:53:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"id":3513,"nodeType":"ExpressionStatement","src":"3393:53:22"},{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3514,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"3456:8:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3517,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"3501:16:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3515,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"3467:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:22","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2609,"src":"3467:33:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2457_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"src":"3456:62:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"id":3520,"nodeType":"ExpressionStatement","src":"3456:62:22"},{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3521,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"3528:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3525,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"3558:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3523,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:22","typeDescriptions":{}}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3522,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3529,"nodeType":"ExpressionStatement","src":"3528:36:22"},{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3530,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"3574:14:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3534,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"3607:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3532,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:22","typeDescriptions":{}}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3531,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3538,"nodeType":"ExpressionStatement","src":"3574:42:22"},{"expression":{"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3539,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"3627:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3540,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:22","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3543,"nodeType":"ExpressionStatement","src":"3627:30:22"},{"expression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3544,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"3667:22:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3545,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"3692:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3548,"nodeType":"ExpressionStatement","src":"3667:48:22"},{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3549,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"3725:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3552,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}],"id":3551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:22","typeDescriptions":{}}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3555,"nodeType":"ExpressionStatement","src":"3725:27:22"}]},"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"2764:559:22","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3557,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"name","nameLocation":"3354:4:22","nodeType":"VariableDeclaration","scope":3557,"src":"3340:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3501,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"version","nameLocation":"3374:7:22","nodeType":"VariableDeclaration","scope":3557,"src":"3360:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3503,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:22"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[],"src":"3383:0:22"},"scope":3687,"src":"3328:431:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3582,"nodeType":"Block","src":"3907:200:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3565,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}],"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3563,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:22","typeDescriptions":{}}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3567,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"3938:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3569,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:22","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3571,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"3970:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3580,"nodeType":"Block","src":"4046:55:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3577,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"4067:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3562,"id":3579,"nodeType":"Return","src":"4060:30:22"}]},"id":3581,"nodeType":"IfStatement","src":"3917:184:22","trueBody":{"id":3576,"nodeType":"Block","src":"3986:54:22","statements":[{"expression":{"id":3574,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"4007:22:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3562,"id":3575,"nodeType":"Return","src":"4000:29:22"}]}}]},"documentation":{"id":3558,"nodeType":"StructuredDocumentation","src":"3765:75:22","text":" @dev Returns the domain separator for the current chain."},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:22","nodeType":"FunctionDefinition","parameters":{"id":3559,"nodeType":"ParameterList","parameters":[],"src":"3872:2:22"},"returnParameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"3898:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:22"},"scope":3687,"src":"3845:262:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3603,"nodeType":"Block","src":"4177:115:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":3591,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"4215:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3592,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"4226:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3593,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"4239:14:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3594,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:22","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3598,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3596,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:22","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3589,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:22","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:22","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3588,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3587,"id":3602,"nodeType":"Return","src":"4187:98:22"}]},"id":3604,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:22","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[],"src":"4143:2:22"},"returnParameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3604,"src":"4168:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:22"},"scope":3687,"src":"4113:179:22","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3619,"nodeType":"Block","src":"5003:90:22","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3614,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"5053:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3616,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"5075:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3612,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"5020:16:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4874_$","typeString":"type(library MessageHashUtils)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:22","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4873,"src":"5020:32:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3611,"id":3618,"nodeType":"Return","src":"5013:73:22"}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"4298:614:22","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:22","nodeType":"FunctionDefinition","parameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:22","nodeType":"VariableDeclaration","scope":3620,"src":"4943:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:22"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3620,"src":"4994:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:22"},"scope":3687,"src":"4917:176:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[219],"body":{"id":3661,"nodeType":"Block","src":"5472:229:22","statements":[{"expression":{"components":[{"hexValue":"0f","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3640,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"5533:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3642,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"5560:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3644,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:22","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3648,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3687","typeString":"contract EIP712"}],"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:22","typeDescriptions":{}}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:22","typeDescriptions":{}}},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ArrayTypeName","src":"5672:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3638,"id":3660,"nodeType":"Return","src":"5482:212:22"}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"5099:40:22","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:22","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[],"src":"5165:2:22"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"fields","nameLocation":"5249:6:22","nodeType":"VariableDeclaration","scope":3662,"src":"5242:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3623,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"name","nameLocation":"5283:4:22","nodeType":"VariableDeclaration","scope":3662,"src":"5269:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3625,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"version","nameLocation":"5315:7:22","nodeType":"VariableDeclaration","scope":3662,"src":"5301:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3627,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:22","nodeType":"VariableDeclaration","scope":3662,"src":"5336:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:22","nodeType":"VariableDeclaration","scope":3662,"src":"5365:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3631,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"salt","nameLocation":"5412:4:22","nodeType":"VariableDeclaration","scope":3662,"src":"5404:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:22","nodeType":"VariableDeclaration","scope":3662,"src":"5430:27:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3636,"nodeType":"ArrayTypeName","src":"5430:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:22"},"scope":3687,"src":"5144:557:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3673,"nodeType":"Block","src":"6082:65:22","statements":[{"expression":{"arguments":[{"id":3670,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"6126:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3668,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6099:5:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:22","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2636,"src":"6099:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3667,"id":3672,"nodeType":"Return","src":"6092:48:22"}]},"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"5707:256:22","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3674,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:22","nodeType":"FunctionDefinition","parameters":{"id":3664,"nodeType":"ParameterList","parameters":[],"src":"6041:2:22"},"returnParameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3674,"src":"6067:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3665,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:22"},"scope":3687,"src":"6021:126:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3685,"nodeType":"Block","src":"6537:71:22","statements":[{"expression":{"arguments":[{"id":3682,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"6584:16:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3680,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"6554:8:22","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2457","typeString":"ShortString"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:22","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2636,"src":"6554:29:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2457_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2457_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3679,"id":3684,"nodeType":"Return","src":"6547:54:22"}]},"documentation":{"id":3675,"nodeType":"StructuredDocumentation","src":"6153:262:22","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:22","nodeType":"FunctionDefinition","parameters":{"id":3676,"nodeType":"ParameterList","parameters":[],"src":"6496:2:22"},"returnParameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3686,"src":"6522:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3677,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:22"},"scope":3687,"src":"6473:135:22","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3688,"src":"1960:4650:22","usedErrors":[2465,2467],"usedEvents":[200]}],"src":"113:6498:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[3727]},"id":3728,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3689,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"139:81:23","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":3727,"linearizedBaseContracts":[3727],"name":"Hashes","nameLocation":"229:6:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":3713,"nodeType":"Block","src":"588:85:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"605:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3701,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"609:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3708,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"661:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"664:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3707,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"641:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"641:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:61:23","trueExpression":{"arguments":[{"id":3704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"633:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"636:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3703,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"613:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3699,"id":3712,"nodeType":"Return","src":"598:68:23"}]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"242:257:23","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":3714,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:23","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"a","nameLocation":"542:1:23","nodeType":"VariableDeclaration","scope":3714,"src":"534:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"b","nameLocation":"553:1:23","nodeType":"VariableDeclaration","scope":3714,"src":"545:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:23"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3714,"src":"579:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:23"},"scope":3727,"src":"504:169:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3725,"nodeType":"Block","src":"881:151:23","statements":[{"AST":{"nativeSrc":"916:110:23","nodeType":"YulBlock","src":"916:110:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"937:4:23","nodeType":"YulLiteral","src":"937:4:23","type":"","value":"0x00"},{"name":"a","nativeSrc":"943:1:23","nodeType":"YulIdentifier","src":"943:1:23"}],"functionName":{"name":"mstore","nativeSrc":"930:6:23","nodeType":"YulIdentifier","src":"930:6:23"},"nativeSrc":"930:15:23","nodeType":"YulFunctionCall","src":"930:15:23"},"nativeSrc":"930:15:23","nodeType":"YulExpressionStatement","src":"930:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"965:4:23","nodeType":"YulLiteral","src":"965:4:23","type":"","value":"0x20"},{"name":"b","nativeSrc":"971:1:23","nodeType":"YulIdentifier","src":"971:1:23"}],"functionName":{"name":"mstore","nativeSrc":"958:6:23","nodeType":"YulIdentifier","src":"958:6:23"},"nativeSrc":"958:15:23","nodeType":"YulFunctionCall","src":"958:15:23"},"nativeSrc":"958:15:23","nodeType":"YulExpressionStatement","src":"958:15:23"},{"nativeSrc":"986:30:23","nodeType":"YulAssignment","src":"986:30:23","value":{"arguments":[{"kind":"number","nativeSrc":"1005:4:23","nodeType":"YulLiteral","src":"1005:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1011:4:23","nodeType":"YulLiteral","src":"1011:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"995:9:23","nodeType":"YulIdentifier","src":"995:9:23"},"nativeSrc":"995:21:23","nodeType":"YulFunctionCall","src":"995:21:23"},"variableNames":[{"name":"value","nativeSrc":"986:5:23","nodeType":"YulIdentifier","src":"986:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3717,"isOffset":false,"isSlot":false,"src":"943:1:23","valueSize":1},{"declaration":3719,"isOffset":false,"isSlot":false,"src":"971:1:23","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"986:5:23","valueSize":1}],"flags":["memory-safe"],"id":3724,"nodeType":"InlineAssembly","src":"891:135:23"}]},"documentation":{"id":3715,"nodeType":"StructuredDocumentation","src":"679:109:23","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientKeccak256","nameLocation":"802:19:23","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"a","nameLocation":"830:1:23","nodeType":"VariableDeclaration","scope":3726,"src":"822:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"822:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"b","nameLocation":"841:1:23","nodeType":"VariableDeclaration","scope":3726,"src":"833:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"833:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"821:22:23"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"value","nameLocation":"874:5:23","nodeType":"VariableDeclaration","scope":3726,"src":"866:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"866:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"865:15:23"},"scope":3727,"src":"793:239:23","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3728,"src":"221:813:23","usedErrors":[],"usedEvents":[]}],"src":"113:922:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[3727],"MerkleProof":[4800]},"id":4801,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3729,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":3731,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4801,"sourceUnit":3728,"src":"232:36:24","symbolAliases":[{"foreign":{"id":3730,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"240:6:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":3732,"nodeType":"StructuredDocumentation","src":"270:1082:24","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":4800,"linearizedBaseContracts":[4800],"name":"MerkleProof","nameLocation":"1361:11:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3733,"nodeType":"StructuredDocumentation","src":"1379:60:24","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":3735,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:24","nodeType":"ErrorDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[],"src":"1478:2:24"},"src":"1444:37:24"},{"body":{"id":3755,"nodeType":"Block","src":"1999:57:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3749,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"2029:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3750,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"2036:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3748,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[3797,3879],"referencedDeclaration":3797,"src":"2016:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3752,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"2045:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3747,"id":3754,"nodeType":"Return","src":"2009:40:24"}]},"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"1487:410:24","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":3756,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:24","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"proof","nameLocation":"1935:5:24","nodeType":"VariableDeclaration","scope":3756,"src":"1918:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3738,"nodeType":"ArrayTypeName","src":"1918:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"root","nameLocation":"1950:4:24","nodeType":"VariableDeclaration","scope":3756,"src":"1942:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:24","nodeType":"VariableDeclaration","scope":3756,"src":"1956:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:24"},"returnParameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3756,"src":"1993:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3745,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:24"},"scope":4800,"src":"1902:154:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3796,"nodeType":"Block","src":"2549:216:24","statements":[{"assignments":[3768],"declarations":[{"constant":false,"id":3768,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:24","nodeType":"VariableDeclaration","scope":3796,"src":"2559:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3770,"initialValue":{"id":3769,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"2582:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:24"},{"body":{"id":3792,"nodeType":"Block","src":"2639:91:24","statements":[{"expression":{"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3782,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2653:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3785,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2696:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3786,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"2710:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3788,"indexExpression":{"id":3787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2716:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3783,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"2668:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3727_$","typeString":"type(library Hashes)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:24","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"2668:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3791,"nodeType":"ExpressionStatement","src":"2653:66:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2616:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3776,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"2620:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:24","memberName":"length","nodeType":"MemberAccess","src":"2620:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3793,"initializationExpression":{"assignments":[3772],"declarations":[{"constant":false,"id":3772,"mutability":"mutable","name":"i","nameLocation":"2609:1:24","nodeType":"VariableDeclaration","scope":3793,"src":"2601:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3774,"initialValue":{"hexValue":"30","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:24","subExpression":{"id":3779,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2634:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3781,"nodeType":"ExpressionStatement","src":"2634:3:24"},"nodeType":"ForStatement","src":"2596:134:24"},{"expression":{"id":3794,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2746:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3766,"id":3795,"nodeType":"Return","src":"2739:19:24"}]},"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"2062:390:24","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":3797,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:24","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"proof","nameLocation":"2496:5:24","nodeType":"VariableDeclaration","scope":3797,"src":"2479:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3759,"nodeType":"ArrayTypeName","src":"2479:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:24","nodeType":"VariableDeclaration","scope":3797,"src":"2503:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:24"},"returnParameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3797,"src":"2540:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:24"},"scope":4800,"src":"2457:308:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3828,"nodeType":"Block","src":"3376:65:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3821,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"3406:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3822,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"3413:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3823,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"3419:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":3820,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[3797,3879],"referencedDeclaration":3879,"src":"3393:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3825,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"3430:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3819,"id":3827,"nodeType":"Return","src":"3386:48:24"}]},"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"2771:407:24","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:24","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"proof","nameLocation":"3225:5:24","nodeType":"VariableDeclaration","scope":3829,"src":"3208:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3800,"nodeType":"ArrayTypeName","src":"3208:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"root","nameLocation":"3248:4:24","nodeType":"VariableDeclaration","scope":3829,"src":"3240:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:24","nodeType":"VariableDeclaration","scope":3829,"src":"3262:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:24","nodeType":"VariableDeclaration","scope":3829,"src":"3284:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3814,"nodeType":"FunctionTypeName","parameterTypes":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"3293:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"3302:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:24"},"returnParameterTypes":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"3325:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:24"},"src":"3284:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:24"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"3370:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3817,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:24"},"scope":4800,"src":"3183:258:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3878,"nodeType":"Block","src":"4019:195:24","statements":[{"assignments":[3851],"declarations":[{"constant":false,"id":3851,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:24","nodeType":"VariableDeclaration","scope":3878,"src":"4029:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3853,"initialValue":{"id":3852,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"4052:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:24"},{"body":{"id":3874,"nodeType":"Block","src":"4109:70:24","statements":[{"expression":{"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3865,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4123:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3867,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4145:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3868,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"4159:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3870,"indexExpression":{"id":3869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"4165:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3866,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"4138:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3873,"nodeType":"ExpressionStatement","src":"4123:45:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"4086:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3859,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"4090:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:24","memberName":"length","nodeType":"MemberAccess","src":"4090:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3875,"initializationExpression":{"assignments":[3855],"declarations":[{"constant":false,"id":3855,"mutability":"mutable","name":"i","nameLocation":"4079:1:24","nodeType":"VariableDeclaration","scope":3875,"src":"4071:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3857,"initialValue":{"hexValue":"30","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:24","subExpression":{"id":3862,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"4104:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3864,"nodeType":"ExpressionStatement","src":"4104:3:24"},"nodeType":"ForStatement","src":"4066:113:24"},{"expression":{"id":3876,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4195:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3849,"id":3877,"nodeType":"Return","src":"4188:19:24"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"3447:387:24","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":3879,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:24","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"proof","nameLocation":"3887:5:24","nodeType":"VariableDeclaration","scope":3879,"src":"3870:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3832,"nodeType":"ArrayTypeName","src":"3870:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:24","nodeType":"VariableDeclaration","scope":3879,"src":"3902:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:24","nodeType":"VariableDeclaration","scope":3879,"src":"3924:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3844,"nodeType":"FunctionTypeName","parameterTypes":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"3933:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"3942:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:24"},"returnParameterTypes":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"3965:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:24"},"src":"3924:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:24"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3879,"src":"4010:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:24"},"scope":4800,"src":"3839:375:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3899,"nodeType":"Block","src":"4744:65:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3893,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"4782:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3894,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4789:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3892,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[3941,4023],"referencedDeclaration":3941,"src":"4761:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3896,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"4798:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3891,"id":3898,"nodeType":"Return","src":"4754:48:24"}]},"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"4220:412:24","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":3900,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:24","nodeType":"FunctionDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"proof","nameLocation":"4680:5:24","nodeType":"VariableDeclaration","scope":3900,"src":"4661:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3882,"nodeType":"ArrayTypeName","src":"4661:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"root","nameLocation":"4695:4:24","nodeType":"VariableDeclaration","scope":3900,"src":"4687:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3887,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:24","nodeType":"VariableDeclaration","scope":3900,"src":"4701:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:24"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3900,"src":"4738:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3889,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:24"},"scope":4800,"src":"4637:172:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3940,"nodeType":"Block","src":"5314:216:24","statements":[{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:24","nodeType":"VariableDeclaration","scope":3940,"src":"5324:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3914,"initialValue":{"id":3913,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"5347:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:24"},{"body":{"id":3936,"nodeType":"Block","src":"5404:91:24","statements":[{"expression":{"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3926,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5418:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3929,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5461:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3930,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"5475:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3932,"indexExpression":{"id":3931,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5481:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3927,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"5433:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3727_$","typeString":"type(library Hashes)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:24","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"5433:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3935,"nodeType":"ExpressionStatement","src":"5418:66:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3919,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5381:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3920,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"5385:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:24","memberName":"length","nodeType":"MemberAccess","src":"5385:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3937,"initializationExpression":{"assignments":[3916],"declarations":[{"constant":false,"id":3916,"mutability":"mutable","name":"i","nameLocation":"5374:1:24","nodeType":"VariableDeclaration","scope":3937,"src":"5366:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3918,"initialValue":{"hexValue":"30","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:24","subExpression":{"id":3923,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5399:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3925,"nodeType":"ExpressionStatement","src":"5399:3:24"},"nodeType":"ForStatement","src":"5361:134:24"},{"expression":{"id":3938,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5511:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3910,"id":3939,"nodeType":"Return","src":"5504:19:24"}]},"documentation":{"id":3901,"nodeType":"StructuredDocumentation","src":"4815:392:24","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":3941,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:24","nodeType":"FunctionDefinition","parameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"proof","nameLocation":"5261:5:24","nodeType":"VariableDeclaration","scope":3941,"src":"5242:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3903,"nodeType":"ArrayTypeName","src":"5242:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3906,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:24","nodeType":"VariableDeclaration","scope":3941,"src":"5268:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:24"},"returnParameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3941,"src":"5305:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:24"},"scope":4800,"src":"5212:318:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3972,"nodeType":"Block","src":"6153:73:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3965,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"6191:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3966,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"6198:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3967,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"6204:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":3964,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[3941,4023],"referencedDeclaration":4023,"src":"6170:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3969,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"6215:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3963,"id":3971,"nodeType":"Return","src":"6163:56:24"}]},"documentation":{"id":3942,"nodeType":"StructuredDocumentation","src":"5536:409:24","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":3973,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:24","nodeType":"FunctionDefinition","parameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"proof","nameLocation":"6002:5:24","nodeType":"VariableDeclaration","scope":3973,"src":"5983:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3944,"nodeType":"ArrayTypeName","src":"5983:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"root","nameLocation":"6025:4:24","nodeType":"VariableDeclaration","scope":3973,"src":"6017:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:24","nodeType":"VariableDeclaration","scope":3973,"src":"6039:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:24","nodeType":"VariableDeclaration","scope":3973,"src":"6061:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3958,"nodeType":"FunctionTypeName","parameterTypes":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"6070:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"6079:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:24"},"returnParameterTypes":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"6102:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:24"},"src":"6061:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:24"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"6147:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3961,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:24"},"scope":4800,"src":"5950:276:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4022,"nodeType":"Block","src":"6816:195:24","statements":[{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:24","nodeType":"VariableDeclaration","scope":4022,"src":"6826:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3997,"initialValue":{"id":3996,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"6849:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:24"},{"body":{"id":4018,"nodeType":"Block","src":"6906:70:24","statements":[{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4009,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"6920:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4011,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"6942:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4012,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"6956:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4014,"indexExpression":{"id":4013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6962:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4010,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"6935:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4017,"nodeType":"ExpressionStatement","src":"6920:45:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6883:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4003,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"6887:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:24","memberName":"length","nodeType":"MemberAccess","src":"6887:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4019,"initializationExpression":{"assignments":[3999],"declarations":[{"constant":false,"id":3999,"mutability":"mutable","name":"i","nameLocation":"6876:1:24","nodeType":"VariableDeclaration","scope":4019,"src":"6868:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4001,"initialValue":{"hexValue":"30","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:24","subExpression":{"id":4006,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6901:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"6901:3:24"},"nodeType":"ForStatement","src":"6863:113:24"},{"expression":{"id":4020,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"6992:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3993,"id":4021,"nodeType":"Return","src":"6985:19:24"}]},"documentation":{"id":3974,"nodeType":"StructuredDocumentation","src":"6232:389:24","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:24","nodeType":"FunctionDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"proof","nameLocation":"6684:5:24","nodeType":"VariableDeclaration","scope":4023,"src":"6665:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3976,"nodeType":"ArrayTypeName","src":"6665:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:24","nodeType":"VariableDeclaration","scope":4023,"src":"6699:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:24","nodeType":"VariableDeclaration","scope":4023,"src":"6721:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":3988,"nodeType":"FunctionTypeName","parameterTypes":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"6730:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"6739:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:24"},"returnParameterTypes":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"6762:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:24"},"src":"6721:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:24"},"returnParameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4023,"src":"6807:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:24"},"scope":4800,"src":"6626:385:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"7797:76:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4041,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"7832:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4042,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"7839:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":4043,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"7851:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4040,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[4207,4411],"referencedDeclaration":4207,"src":"7814:17:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4045,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"7862:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4039,"id":4047,"nodeType":"Return","src":"7807:59:24"}]},"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"7017:593:24","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:24","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"proof","nameLocation":"7667:5:24","nodeType":"VariableDeclaration","scope":4049,"src":"7650:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4026,"nodeType":"ArrayTypeName","src":"7650:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4030,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:24","nodeType":"VariableDeclaration","scope":4049,"src":"7682:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4028,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4029,"nodeType":"ArrayTypeName","src":"7682:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"root","nameLocation":"7724:4:24","nodeType":"VariableDeclaration","scope":4049,"src":"7716:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:24","nodeType":"VariableDeclaration","scope":4049,"src":"7738:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4034,"nodeType":"ArrayTypeName","src":"7738:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:24"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"7791:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4037,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:24"},"scope":4800,"src":"7615:258:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4206,"nodeType":"Block","src":"9159:2104:24","statements":[{"assignments":[4065],"declarations":[{"constant":false,"id":4065,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:24","nodeType":"VariableDeclaration","scope":4206,"src":"9543:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4064,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4068,"initialValue":{"expression":{"id":4066,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"9563:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:24","memberName":"length","nodeType":"MemberAccess","src":"9563:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:24"},{"assignments":[4070],"declarations":[{"constant":false,"id":4070,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:24","nodeType":"VariableDeclaration","scope":4206,"src":"9586:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4073,"initialValue":{"expression":{"id":4071,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"9610:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:24","memberName":"length","nodeType":"MemberAccess","src":"9610:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"9675:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4075,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"9687:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:24","memberName":"length","nodeType":"MemberAccess","src":"9687:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4078,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"9703:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4086,"nodeType":"IfStatement","src":"9671:113:24","trueBody":{"id":4085,"nodeType":"Block","src":"9722:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4082,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"9743:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4084,"nodeType":"RevertStatement","src":"9736:37:24"}]}},{"assignments":[4091],"declarations":[{"constant":false,"id":4091,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:24","nodeType":"VariableDeclaration","scope":4206,"src":"10028:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4090,"nodeType":"ArrayTypeName","src":"10028:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4097,"initialValue":{"arguments":[{"id":4095,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10068:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4093,"nodeType":"ArrayTypeName","src":"10058:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:24"},{"assignments":[4099],"declarations":[{"constant":false,"id":4099,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:24","nodeType":"VariableDeclaration","scope":4206,"src":"10092:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4098,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4101,"initialValue":{"hexValue":"30","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:24"},{"assignments":[4103],"declarations":[{"constant":false,"id":4103,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:24","nodeType":"VariableDeclaration","scope":4206,"src":"10121:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4105,"initialValue":{"hexValue":"30","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:24"},{"assignments":[4107],"declarations":[{"constant":false,"id":4107,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:24","nodeType":"VariableDeclaration","scope":4206,"src":"10150:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4109,"initialValue":{"hexValue":"30","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:24"},{"body":{"id":4169,"nodeType":"Block","src":"10590:310:24","statements":[{"assignments":[4121],"declarations":[{"constant":false,"id":4121,"mutability":"mutable","name":"a","nameLocation":"10612:1:24","nodeType":"VariableDeclaration","scope":4169,"src":"10604:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4134,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10616:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4123,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"10626:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4129,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"10658:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4132,"indexExpression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:24","subExpression":{"id":4130,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"10665:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:24","trueExpression":{"baseExpression":{"id":4125,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"10638:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4128,"indexExpression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:24","subExpression":{"id":4126,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10645:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:24"},{"assignments":[4136],"declarations":[{"constant":false,"id":4136,"mutability":"mutable","name":"b","nameLocation":"10697:1:24","nodeType":"VariableDeclaration","scope":4169,"src":"10689:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4158,"initialValue":{"condition":{"baseExpression":{"id":4137,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"10701:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4139,"indexExpression":{"id":4138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10712:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4153,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"10813:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4156,"indexExpression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:24","subExpression":{"id":4154,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"10819:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:24","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10734:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4141,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"10744:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4147,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"10776:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4150,"indexExpression":{"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:24","subExpression":{"id":4148,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"10783:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:24","trueExpression":{"baseExpression":{"id":4143,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"10756:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4146,"indexExpression":{"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:24","subExpression":{"id":4144,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10763:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:24"},{"expression":{"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4159,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"10844:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4161,"indexExpression":{"id":4160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10851:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"10884:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4165,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"10887:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4162,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"10856:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3727_$","typeString":"type(library Hashes)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:24","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"10856:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4168,"nodeType":"ExpressionStatement","src":"10844:45:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10566:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4115,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10570:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4170,"initializationExpression":{"assignments":[4111],"declarations":[{"constant":false,"id":4111,"mutability":"mutable","name":"i","nameLocation":"10559:1:24","nodeType":"VariableDeclaration","scope":4170,"src":"10551:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4113,"initialValue":{"hexValue":"30","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:24","subExpression":{"id":4117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10585:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4119,"nodeType":"ExpressionStatement","src":"10585:3:24"},"nodeType":"ForStatement","src":"10546:354:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4171,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10914:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4191,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"11155:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4203,"nodeType":"Block","src":"11217:40:24","statements":[{"expression":{"baseExpression":{"id":4199,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"11238:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4201,"indexExpression":{"hexValue":"30","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4063,"id":4202,"nodeType":"Return","src":"11231:15:24"}]},"id":4204,"nodeType":"IfStatement","src":"11151:106:24","trueBody":{"id":4198,"nodeType":"Block","src":"11170:41:24","statements":[{"expression":{"baseExpression":{"id":4194,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"11191:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4196,"indexExpression":{"hexValue":"30","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4063,"id":4197,"nodeType":"Return","src":"11184:16:24"}]}},"id":4205,"nodeType":"IfStatement","src":"10910:347:24","trueBody":{"id":4190,"nodeType":"Block","src":"10933:212:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"10951:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4175,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"10963:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:24","memberName":"length","nodeType":"MemberAccess","src":"10963:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4182,"nodeType":"IfStatement","src":"10947:100:24","trueBody":{"id":4181,"nodeType":"Block","src":"10977:70:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4178,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"11002:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4180,"nodeType":"RevertStatement","src":"10995:37:24"}]}},{"id":4189,"nodeType":"UncheckedBlock","src":"11060:75:24","statements":[{"expression":{"baseExpression":{"id":4183,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"11095:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4187,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"11102:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4063,"id":4188,"nodeType":"Return","src":"11088:32:24"}]}]}}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"7879:1100:24","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4207,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:24","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"proof","nameLocation":"9037:5:24","nodeType":"VariableDeclaration","scope":4207,"src":"9020:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4052,"nodeType":"ArrayTypeName","src":"9020:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:24","nodeType":"VariableDeclaration","scope":4207,"src":"9052:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4054,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4055,"nodeType":"ArrayTypeName","src":"9052:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:24","nodeType":"VariableDeclaration","scope":4207,"src":"9086:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4058,"nodeType":"ArrayTypeName","src":"9086:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:24"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:24","nodeType":"VariableDeclaration","scope":4207,"src":"9139:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:24"},"scope":4800,"src":"8984:2279:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"12112:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4235,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"12147:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4236,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"12154:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":4237,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"12166:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4238,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"12174:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4234,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[4207,4411],"referencedDeclaration":4411,"src":"12129:17:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4240,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"12185:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4233,"id":4242,"nodeType":"Return","src":"12122:67:24"}]},"documentation":{"id":4208,"nodeType":"StructuredDocumentation","src":"11269:590:24","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:24","nodeType":"FunctionDefinition","parameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"proof","nameLocation":"11916:5:24","nodeType":"VariableDeclaration","scope":4244,"src":"11899:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4210,"nodeType":"ArrayTypeName","src":"11899:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4214,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:24","nodeType":"VariableDeclaration","scope":4244,"src":"11931:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4212,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4213,"nodeType":"ArrayTypeName","src":"11931:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4216,"mutability":"mutable","name":"root","nameLocation":"11973:4:24","nodeType":"VariableDeclaration","scope":4244,"src":"11965:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:24","nodeType":"VariableDeclaration","scope":4244,"src":"11987:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4218,"nodeType":"ArrayTypeName","src":"11987:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:24","nodeType":"VariableDeclaration","scope":4244,"src":"12020:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4228,"nodeType":"FunctionTypeName","parameterTypes":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4228,"src":"12029:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4228,"src":"12038:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:24"},"returnParameterTypes":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4228,"src":"12061:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:24"},"src":"12020:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:24"},"returnParameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"12106:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4231,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:24"},"scope":4800,"src":"11864:332:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4410,"nodeType":"Block","src":"13545:2083:24","statements":[{"assignments":[4270],"declarations":[{"constant":false,"id":4270,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:24","nodeType":"VariableDeclaration","scope":4410,"src":"13929:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4273,"initialValue":{"expression":{"id":4271,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"13949:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:24","memberName":"length","nodeType":"MemberAccess","src":"13949:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:24"},{"assignments":[4275],"declarations":[{"constant":false,"id":4275,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:24","nodeType":"VariableDeclaration","scope":4410,"src":"13972:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4278,"initialValue":{"expression":{"id":4276,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"13996:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:24","memberName":"length","nodeType":"MemberAccess","src":"13996:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"14061:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4280,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"14073:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:24","memberName":"length","nodeType":"MemberAccess","src":"14073:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4283,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"14089:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4291,"nodeType":"IfStatement","src":"14057:113:24","trueBody":{"id":4290,"nodeType":"Block","src":"14108:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4287,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"14129:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4289,"nodeType":"RevertStatement","src":"14122:37:24"}]}},{"assignments":[4296],"declarations":[{"constant":false,"id":4296,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:24","nodeType":"VariableDeclaration","scope":4410,"src":"14414:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4295,"nodeType":"ArrayTypeName","src":"14414:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4302,"initialValue":{"arguments":[{"id":4300,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"14454:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4298,"nodeType":"ArrayTypeName","src":"14444:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:24"},{"assignments":[4304],"declarations":[{"constant":false,"id":4304,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:24","nodeType":"VariableDeclaration","scope":4410,"src":"14478:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4306,"initialValue":{"hexValue":"30","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:24"},{"assignments":[4308],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:24","nodeType":"VariableDeclaration","scope":4410,"src":"14507:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4310,"initialValue":{"hexValue":"30","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:24"},{"assignments":[4312],"declarations":[{"constant":false,"id":4312,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:24","nodeType":"VariableDeclaration","scope":4410,"src":"14536:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4311,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4314,"initialValue":{"hexValue":"30","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:24"},{"body":{"id":4373,"nodeType":"Block","src":"14976:289:24","statements":[{"assignments":[4326],"declarations":[{"constant":false,"id":4326,"mutability":"mutable","name":"a","nameLocation":"14998:1:24","nodeType":"VariableDeclaration","scope":4373,"src":"14990:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4339,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"15002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4328,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"15012:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4334,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15044:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4337,"indexExpression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:24","subExpression":{"id":4335,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"15051:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:24","trueExpression":{"baseExpression":{"id":4330,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"15024:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4333,"indexExpression":{"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:24","subExpression":{"id":4331,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"15031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:24"},{"assignments":[4341],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"b","nameLocation":"15083:1:24","nodeType":"VariableDeclaration","scope":4373,"src":"15075:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4363,"initialValue":{"condition":{"baseExpression":{"id":4342,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"15087:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4344,"indexExpression":{"id":4343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"15098:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4358,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"15199:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4361,"indexExpression":{"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:24","subExpression":{"id":4359,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"15205:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:24","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"15120:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4346,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"15130:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4352,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15162:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4355,"indexExpression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:24","subExpression":{"id":4353,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"15169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:24","trueExpression":{"baseExpression":{"id":4348,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"15142:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4351,"indexExpression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:24","subExpression":{"id":4349,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"15149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:24"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4364,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15230:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4366,"indexExpression":{"id":4365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"15237:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"15249:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"15252:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4367,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"15242:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4372,"nodeType":"ExpressionStatement","src":"15230:24:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"14952:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4320,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"14956:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"initializationExpression":{"assignments":[4316],"declarations":[{"constant":false,"id":4316,"mutability":"mutable","name":"i","nameLocation":"14945:1:24","nodeType":"VariableDeclaration","scope":4374,"src":"14937:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4318,"initialValue":{"hexValue":"30","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:24","subExpression":{"id":4322,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"14971:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"14971:3:24"},"nodeType":"ForStatement","src":"14932:333:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"15279:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4395,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"15520:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4407,"nodeType":"Block","src":"15582:40:24","statements":[{"expression":{"baseExpression":{"id":4403,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"15603:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4405,"indexExpression":{"hexValue":"30","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4268,"id":4406,"nodeType":"Return","src":"15596:15:24"}]},"id":4408,"nodeType":"IfStatement","src":"15516:106:24","trueBody":{"id":4402,"nodeType":"Block","src":"15535:41:24","statements":[{"expression":{"baseExpression":{"id":4398,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"15556:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4400,"indexExpression":{"hexValue":"30","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4268,"id":4401,"nodeType":"Return","src":"15549:16:24"}]}},"id":4409,"nodeType":"IfStatement","src":"15275:347:24","trueBody":{"id":4394,"nodeType":"Block","src":"15298:212:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"15316:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4379,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"15328:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:24","memberName":"length","nodeType":"MemberAccess","src":"15328:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4386,"nodeType":"IfStatement","src":"15312:100:24","trueBody":{"id":4385,"nodeType":"Block","src":"15342:70:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4382,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"15367:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4384,"nodeType":"RevertStatement","src":"15360:37:24"}]}},{"id":4393,"nodeType":"UncheckedBlock","src":"15425:75:24","statements":[{"expression":{"baseExpression":{"id":4387,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15460:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4391,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"15467:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4268,"id":4392,"nodeType":"Return","src":"15453:32:24"}]}]}}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"12202:1097:24","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4411,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:24","nodeType":"FunctionDefinition","parameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"proof","nameLocation":"13357:5:24","nodeType":"VariableDeclaration","scope":4411,"src":"13340:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4247,"nodeType":"ArrayTypeName","src":"13340:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:24","nodeType":"VariableDeclaration","scope":4411,"src":"13372:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4249,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4250,"nodeType":"ArrayTypeName","src":"13372:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:24","nodeType":"VariableDeclaration","scope":4411,"src":"13406:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4253,"nodeType":"ArrayTypeName","src":"13406:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4264,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:24","nodeType":"VariableDeclaration","scope":4411,"src":"13439:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4263,"nodeType":"FunctionTypeName","parameterTypes":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"13448:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"13457:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:24"},"returnParameterTypes":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"13480:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:24"},"src":"13439:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:24"},"returnParameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:24","nodeType":"VariableDeclaration","scope":4411,"src":"13525:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:24"},"scope":4800,"src":"13304:2324:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4436,"nodeType":"Block","src":"16436:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4429,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"16479:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4430,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"16486:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4431,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"16498:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4428,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4595,4799],"referencedDeclaration":4595,"src":"16453:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4433,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"16509:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4427,"id":4435,"nodeType":"Return","src":"16446:67:24"}]},"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"15634:603:24","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":4437,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:24","nodeType":"FunctionDefinition","parameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"proof","nameLocation":"16304:5:24","nodeType":"VariableDeclaration","scope":4437,"src":"16285:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4414,"nodeType":"ArrayTypeName","src":"16285:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:24","nodeType":"VariableDeclaration","scope":4437,"src":"16319:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4416,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4417,"nodeType":"ArrayTypeName","src":"16319:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"root","nameLocation":"16363:4:24","nodeType":"VariableDeclaration","scope":4437,"src":"16355:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4423,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:24","nodeType":"VariableDeclaration","scope":4437,"src":"16377:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4422,"nodeType":"ArrayTypeName","src":"16377:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:24"},"returnParameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4437,"src":"16430:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4425,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:24"},"scope":4800,"src":"16242:278:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4594,"nodeType":"Block","src":"17820:2104:24","statements":[{"assignments":[4453],"declarations":[{"constant":false,"id":4453,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:24","nodeType":"VariableDeclaration","scope":4594,"src":"18204:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4456,"initialValue":{"expression":{"id":4454,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"18224:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:24","memberName":"length","nodeType":"MemberAccess","src":"18224:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:24"},{"assignments":[4458],"declarations":[{"constant":false,"id":4458,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:24","nodeType":"VariableDeclaration","scope":4594,"src":"18247:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4461,"initialValue":{"expression":{"id":4459,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"18271:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:24","memberName":"length","nodeType":"MemberAccess","src":"18271:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4462,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"18336:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4463,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"18348:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:24","memberName":"length","nodeType":"MemberAccess","src":"18348:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4466,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"18364:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4474,"nodeType":"IfStatement","src":"18332:113:24","trueBody":{"id":4473,"nodeType":"Block","src":"18383:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4470,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"18404:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4472,"nodeType":"RevertStatement","src":"18397:37:24"}]}},{"assignments":[4479],"declarations":[{"constant":false,"id":4479,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:24","nodeType":"VariableDeclaration","scope":4594,"src":"18689:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4478,"nodeType":"ArrayTypeName","src":"18689:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4485,"initialValue":{"arguments":[{"id":4483,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"18729:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4481,"nodeType":"ArrayTypeName","src":"18719:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:24"},{"assignments":[4487],"declarations":[{"constant":false,"id":4487,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:24","nodeType":"VariableDeclaration","scope":4594,"src":"18753:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4486,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4489,"initialValue":{"hexValue":"30","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:24"},{"assignments":[4491],"declarations":[{"constant":false,"id":4491,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:24","nodeType":"VariableDeclaration","scope":4594,"src":"18782:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4493,"initialValue":{"hexValue":"30","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:24"},{"assignments":[4495],"declarations":[{"constant":false,"id":4495,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:24","nodeType":"VariableDeclaration","scope":4594,"src":"18811:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4497,"initialValue":{"hexValue":"30","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:24"},{"body":{"id":4557,"nodeType":"Block","src":"19251:310:24","statements":[{"assignments":[4509],"declarations":[{"constant":false,"id":4509,"mutability":"mutable","name":"a","nameLocation":"19273:1:24","nodeType":"VariableDeclaration","scope":4557,"src":"19265:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4522,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19277:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4511,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"19287:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4517,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"19319:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4520,"indexExpression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:24","subExpression":{"id":4518,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"19326:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:24","trueExpression":{"baseExpression":{"id":4513,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"19299:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4516,"indexExpression":{"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:24","subExpression":{"id":4514,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19306:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:24"},{"assignments":[4524],"declarations":[{"constant":false,"id":4524,"mutability":"mutable","name":"b","nameLocation":"19358:1:24","nodeType":"VariableDeclaration","scope":4557,"src":"19350:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4546,"initialValue":{"condition":{"baseExpression":{"id":4525,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"19362:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4527,"indexExpression":{"id":4526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"19373:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4541,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19474:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4544,"indexExpression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:24","subExpression":{"id":4542,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"19480:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:24","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19395:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4529,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"19405:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4535,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"19437:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4538,"indexExpression":{"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:24","subExpression":{"id":4536,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"19444:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:24","trueExpression":{"baseExpression":{"id":4531,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"19417:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4534,"indexExpression":{"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:24","subExpression":{"id":4532,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19424:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:24"},{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4547,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"19505:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4549,"indexExpression":{"id":4548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"19512:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"19545:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"19548:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4550,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"19517:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$3727_$","typeString":"type(library Hashes)"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:24","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"19517:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4556,"nodeType":"ExpressionStatement","src":"19505:45:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"19227:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4503,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"19231:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4558,"initializationExpression":{"assignments":[4499],"declarations":[{"constant":false,"id":4499,"mutability":"mutable","name":"i","nameLocation":"19220:1:24","nodeType":"VariableDeclaration","scope":4558,"src":"19212:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4501,"initialValue":{"hexValue":"30","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:24","subExpression":{"id":4505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"19246:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4507,"nodeType":"ExpressionStatement","src":"19246:3:24"},"nodeType":"ForStatement","src":"19207:354:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"19575:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"19816:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4591,"nodeType":"Block","src":"19878:40:24","statements":[{"expression":{"baseExpression":{"id":4587,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19899:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4589,"indexExpression":{"hexValue":"30","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4451,"id":4590,"nodeType":"Return","src":"19892:15:24"}]},"id":4592,"nodeType":"IfStatement","src":"19812:106:24","trueBody":{"id":4586,"nodeType":"Block","src":"19831:41:24","statements":[{"expression":{"baseExpression":{"id":4582,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"19852:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4584,"indexExpression":{"hexValue":"30","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4451,"id":4585,"nodeType":"Return","src":"19845:16:24"}]}},"id":4593,"nodeType":"IfStatement","src":"19571:347:24","trueBody":{"id":4578,"nodeType":"Block","src":"19594:212:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"19612:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4563,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19624:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:24","memberName":"length","nodeType":"MemberAccess","src":"19624:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"nodeType":"IfStatement","src":"19608:100:24","trueBody":{"id":4569,"nodeType":"Block","src":"19638:70:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4566,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19663:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4568,"nodeType":"RevertStatement","src":"19656:37:24"}]}},{"id":4577,"nodeType":"UncheckedBlock","src":"19721:75:24","statements":[{"expression":{"baseExpression":{"id":4571,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"19756:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4575,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"19763:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4451,"id":4576,"nodeType":"Return","src":"19749:32:24"}]}]}}]},"documentation":{"id":4438,"nodeType":"StructuredDocumentation","src":"16526:1102:24","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4595,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:24","nodeType":"FunctionDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"proof","nameLocation":"17696:5:24","nodeType":"VariableDeclaration","scope":4595,"src":"17677:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4440,"nodeType":"ArrayTypeName","src":"17677:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4444,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:24","nodeType":"VariableDeclaration","scope":4595,"src":"17711:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4442,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4443,"nodeType":"ArrayTypeName","src":"17711:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4447,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:24","nodeType":"VariableDeclaration","scope":4595,"src":"17747:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4446,"nodeType":"ArrayTypeName","src":"17747:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:24"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:24","nodeType":"VariableDeclaration","scope":4595,"src":"17800:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:24"},"scope":4800,"src":"17633:2291:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4631,"nodeType":"Block","src":"20795:92:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4623,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"20838:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4624,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"20845:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4625,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"20857:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4626,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"20865:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4622,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4595,4799],"referencedDeclaration":4799,"src":"20812:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4628,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"20876:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4621,"id":4630,"nodeType":"Return","src":"20805:75:24"}]},"documentation":{"id":4596,"nodeType":"StructuredDocumentation","src":"19930:600:24","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":4632,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:24","nodeType":"FunctionDefinition","parameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"proof","nameLocation":"20597:5:24","nodeType":"VariableDeclaration","scope":4632,"src":"20578:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4598,"nodeType":"ArrayTypeName","src":"20578:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:24","nodeType":"VariableDeclaration","scope":4632,"src":"20612:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4600,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4601,"nodeType":"ArrayTypeName","src":"20612:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"root","nameLocation":"20656:4:24","nodeType":"VariableDeclaration","scope":4632,"src":"20648:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:24","nodeType":"VariableDeclaration","scope":4632,"src":"20670:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4606,"nodeType":"ArrayTypeName","src":"20670:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4617,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:24","nodeType":"VariableDeclaration","scope":4632,"src":"20703:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4616,"nodeType":"FunctionTypeName","parameterTypes":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4616,"src":"20712:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4616,"src":"20721:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:24"},"returnParameterTypes":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4616,"src":"20744:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:24"},"src":"20703:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:24"},"returnParameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4632,"src":"20789:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4619,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:24"},"scope":4800,"src":"20535:352:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4798,"nodeType":"Block","src":"22250:2083:24","statements":[{"assignments":[4658],"declarations":[{"constant":false,"id":4658,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:24","nodeType":"VariableDeclaration","scope":4798,"src":"22634:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4661,"initialValue":{"expression":{"id":4659,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"22654:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:24","memberName":"length","nodeType":"MemberAccess","src":"22654:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:24"},{"assignments":[4663],"declarations":[{"constant":false,"id":4663,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:24","nodeType":"VariableDeclaration","scope":4798,"src":"22677:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4666,"initialValue":{"expression":{"id":4664,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"22701:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:24","memberName":"length","nodeType":"MemberAccess","src":"22701:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"22766:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4668,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"22778:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:24","memberName":"length","nodeType":"MemberAccess","src":"22778:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"22794:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4679,"nodeType":"IfStatement","src":"22762:113:24","trueBody":{"id":4678,"nodeType":"Block","src":"22813:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4675,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"22834:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4677,"nodeType":"RevertStatement","src":"22827:37:24"}]}},{"assignments":[4684],"declarations":[{"constant":false,"id":4684,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:24","nodeType":"VariableDeclaration","scope":4798,"src":"23119:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4683,"nodeType":"ArrayTypeName","src":"23119:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4690,"initialValue":{"arguments":[{"id":4688,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"23159:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4686,"nodeType":"ArrayTypeName","src":"23149:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:24"},{"assignments":[4692],"declarations":[{"constant":false,"id":4692,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:24","nodeType":"VariableDeclaration","scope":4798,"src":"23183:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4694,"initialValue":{"hexValue":"30","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:24"},{"assignments":[4696],"declarations":[{"constant":false,"id":4696,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:24","nodeType":"VariableDeclaration","scope":4798,"src":"23212:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4698,"initialValue":{"hexValue":"30","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:24"},{"assignments":[4700],"declarations":[{"constant":false,"id":4700,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:24","nodeType":"VariableDeclaration","scope":4798,"src":"23241:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4702,"initialValue":{"hexValue":"30","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:24"},{"body":{"id":4761,"nodeType":"Block","src":"23681:289:24","statements":[{"assignments":[4714],"declarations":[{"constant":false,"id":4714,"mutability":"mutable","name":"a","nameLocation":"23703:1:24","nodeType":"VariableDeclaration","scope":4761,"src":"23695:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4727,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23707:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4716,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"23717:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4722,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"23749:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4725,"indexExpression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:24","subExpression":{"id":4723,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"23756:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:24","trueExpression":{"baseExpression":{"id":4718,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"23729:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4721,"indexExpression":{"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:24","subExpression":{"id":4719,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23736:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:24"},{"assignments":[4729],"declarations":[{"constant":false,"id":4729,"mutability":"mutable","name":"b","nameLocation":"23788:1:24","nodeType":"VariableDeclaration","scope":4761,"src":"23780:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4751,"initialValue":{"condition":{"baseExpression":{"id":4730,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"23792:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4732,"indexExpression":{"id":4731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"23803:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4746,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"23904:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4749,"indexExpression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:24","subExpression":{"id":4747,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"23910:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:24","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23825:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4734,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"23835:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4740,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"23867:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4743,"indexExpression":{"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:24","subExpression":{"id":4741,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"23874:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:24","trueExpression":{"baseExpression":{"id":4736,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"23847:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4739,"indexExpression":{"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:24","subExpression":{"id":4737,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23854:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:24"},{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4752,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"23935:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4754,"indexExpression":{"id":4753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"23942:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4756,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"23954:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4757,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"23957:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4755,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"23947:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4760,"nodeType":"ExpressionStatement","src":"23935:24:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"23657:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4708,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"23661:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4762,"initializationExpression":{"assignments":[4704],"declarations":[{"constant":false,"id":4704,"mutability":"mutable","name":"i","nameLocation":"23650:1:24","nodeType":"VariableDeclaration","scope":4762,"src":"23642:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4706,"initialValue":{"hexValue":"30","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:24","subExpression":{"id":4710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"23676:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"23676:3:24"},"nodeType":"ForStatement","src":"23637:333:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"23984:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4783,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"24225:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4795,"nodeType":"Block","src":"24287:40:24","statements":[{"expression":{"baseExpression":{"id":4791,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"24308:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4793,"indexExpression":{"hexValue":"30","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4656,"id":4794,"nodeType":"Return","src":"24301:15:24"}]},"id":4796,"nodeType":"IfStatement","src":"24221:106:24","trueBody":{"id":4790,"nodeType":"Block","src":"24240:41:24","statements":[{"expression":{"baseExpression":{"id":4786,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"24261:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4788,"indexExpression":{"hexValue":"30","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4656,"id":4789,"nodeType":"Return","src":"24254:16:24"}]}},"id":4797,"nodeType":"IfStatement","src":"23980:347:24","trueBody":{"id":4782,"nodeType":"Block","src":"24003:212:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4766,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"24021:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4767,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"24033:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:24","memberName":"length","nodeType":"MemberAccess","src":"24033:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4774,"nodeType":"IfStatement","src":"24017:100:24","trueBody":{"id":4773,"nodeType":"Block","src":"24047:70:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4770,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"24072:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4772,"nodeType":"RevertStatement","src":"24065:37:24"}]}},{"id":4781,"nodeType":"UncheckedBlock","src":"24130:75:24","statements":[{"expression":{"baseExpression":{"id":4775,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"24165:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4779,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"24172:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4656,"id":4780,"nodeType":"Return","src":"24158:32:24"}]}]}}]},"documentation":{"id":4633,"nodeType":"StructuredDocumentation","src":"20893:1099:24","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4799,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:24","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"proof","nameLocation":"22060:5:24","nodeType":"VariableDeclaration","scope":4799,"src":"22041:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4635,"nodeType":"ArrayTypeName","src":"22041:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4639,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:24","nodeType":"VariableDeclaration","scope":4799,"src":"22075:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4637,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4638,"nodeType":"ArrayTypeName","src":"22075:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:24","nodeType":"VariableDeclaration","scope":4799,"src":"22111:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4641,"nodeType":"ArrayTypeName","src":"22111:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:24","nodeType":"VariableDeclaration","scope":4799,"src":"22144:56:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4651,"nodeType":"FunctionTypeName","parameterTypes":{"id":4647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"22153:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"22162:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:24"},"returnParameterTypes":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"22185:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:24"},"src":"22144:56:24","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:24"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:24","nodeType":"VariableDeclaration","scope":4799,"src":"22230:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:24"},"scope":4800,"src":"21997:2336:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4801,"src":"1353:22982:24","usedErrors":[3735],"usedEvents":[]}],"src":"206:24130:24"},"id":24},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4874],"Strings":[3112]},"id":4875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4802,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4875,"sourceUnit":3113,"src":"149:39:25","symbolAliases":[{"foreign":{"id":4803,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"157:7:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4805,"nodeType":"StructuredDocumentation","src":"190:330:25","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4874,"linearizedBaseContracts":[4874],"name":"MessageHashUtils","nameLocation":"529:16:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":4814,"nodeType":"Block","src":"1314:341:25","statements":[{"AST":{"nativeSrc":"1349:300:25","nodeType":"YulBlock","src":"1349:300:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:25","nodeType":"YulLiteral","src":"1370:4:25","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:25","nodeType":"YulLiteral","src":"1376:34:25","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:25","nodeType":"YulIdentifier","src":"1363:6:25"},"nativeSrc":"1363:48:25","nodeType":"YulFunctionCall","src":"1363:48:25"},"nativeSrc":"1363:48:25","nodeType":"YulExpressionStatement","src":"1363:48:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:25","nodeType":"YulLiteral","src":"1472:4:25","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:25","nodeType":"YulIdentifier","src":"1478:11:25"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:25","nodeType":"YulIdentifier","src":"1465:6:25"},"nativeSrc":"1465:25:25","nodeType":"YulFunctionCall","src":"1465:25:25"},"nativeSrc":"1465:25:25","nodeType":"YulExpressionStatement","src":"1465:25:25"},{"nativeSrc":"1544:31:25","nodeType":"YulAssignment","src":"1544:31:25","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:25","nodeType":"YulLiteral","src":"1564:4:25","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:25","nodeType":"YulLiteral","src":"1570:4:25","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:25","nodeType":"YulIdentifier","src":"1554:9:25"},"nativeSrc":"1554:21:25","nodeType":"YulFunctionCall","src":"1554:21:25"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:25","nodeType":"YulIdentifier","src":"1544:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4811,"isOffset":false,"isSlot":false,"src":"1544:6:25","valueSize":1},{"declaration":4808,"isOffset":false,"isSlot":false,"src":"1478:11:25","valueSize":1}],"flags":["memory-safe"],"id":4813,"nodeType":"InlineAssembly","src":"1324:325:25"}]},"documentation":{"id":4806,"nodeType":"StructuredDocumentation","src":"552:665:25","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4815,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:25","nodeType":"FunctionDefinition","parameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:25","nodeType":"VariableDeclaration","scope":4815,"src":"1254:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:25"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"digest","nameLocation":"1306:6:25","nodeType":"VariableDeclaration","scope":4815,"src":"1298:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:25"},"scope":4874,"src":"1222:433:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4840,"nodeType":"Block","src":"2207:143:25","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4832,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"2316:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:25","memberName":"length","nodeType":"MemberAccess","src":"2316:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4830,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"2299:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3112_$","typeString":"type(library Strings)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:25","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2860,"src":"2299:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4828,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:25","typeDescriptions":{}}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4836,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"2334:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4824,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:25","typeDescriptions":{}}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:25","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4823,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4822,"id":4839,"nodeType":"Return","src":"2217:126:25"}]},"documentation":{"id":4816,"nodeType":"StructuredDocumentation","src":"1661:455:25","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4841,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:25","nodeType":"FunctionDefinition","parameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"message","nameLocation":"2166:7:25","nodeType":"VariableDeclaration","scope":4841,"src":"2153:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4817,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:25"},"returnParameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4841,"src":"2198:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:25"},"scope":4874,"src":"2121:229:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4860,"nodeType":"Block","src":"2804:80:25","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4855,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"2860:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4856,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"2871:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4852,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4851,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4850,"id":4859,"nodeType":"Return","src":"2814:63:25"}]},"documentation":{"id":4842,"nodeType":"StructuredDocumentation","src":"2356:332:25","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4861,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:25","nodeType":"FunctionDefinition","parameters":{"id":4847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"validator","nameLocation":"2742:9:25","nodeType":"VariableDeclaration","scope":4861,"src":"2734:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4843,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4846,"mutability":"mutable","name":"data","nameLocation":"2766:4:25","nodeType":"VariableDeclaration","scope":4861,"src":"2753:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4845,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:25"},"returnParameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4861,"src":"2795:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:25"},"scope":4874,"src":"2693:191:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4872,"nodeType":"Block","src":"3435:265:25","statements":[{"AST":{"nativeSrc":"3470:224:25","nodeType":"YulBlock","src":"3470:224:25","statements":[{"nativeSrc":"3484:22:25","nodeType":"YulVariableDeclaration","src":"3484:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:25","nodeType":"YulLiteral","src":"3501:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:25","nodeType":"YulIdentifier","src":"3495:5:25"},"nativeSrc":"3495:11:25","nodeType":"YulFunctionCall","src":"3495:11:25"},"variables":[{"name":"ptr","nativeSrc":"3488:3:25","nodeType":"YulTypedName","src":"3488:3:25","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:25","nodeType":"YulIdentifier","src":"3526:3:25"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:25","nodeType":"YulLiteral","src":"3531:10:25","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:25","nodeType":"YulIdentifier","src":"3519:6:25"},"nativeSrc":"3519:23:25","nodeType":"YulFunctionCall","src":"3519:23:25"},"nativeSrc":"3519:23:25","nodeType":"YulExpressionStatement","src":"3519:23:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:25","nodeType":"YulIdentifier","src":"3566:3:25"},{"kind":"number","nativeSrc":"3571:4:25","nodeType":"YulLiteral","src":"3571:4:25","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:25","nodeType":"YulIdentifier","src":"3562:3:25"},"nativeSrc":"3562:14:25","nodeType":"YulFunctionCall","src":"3562:14:25"},{"name":"domainSeparator","nativeSrc":"3578:15:25","nodeType":"YulIdentifier","src":"3578:15:25"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:25","nodeType":"YulIdentifier","src":"3555:6:25"},"nativeSrc":"3555:39:25","nodeType":"YulFunctionCall","src":"3555:39:25"},"nativeSrc":"3555:39:25","nodeType":"YulExpressionStatement","src":"3555:39:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:25","nodeType":"YulIdentifier","src":"3618:3:25"},{"kind":"number","nativeSrc":"3623:4:25","nodeType":"YulLiteral","src":"3623:4:25","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:25","nodeType":"YulIdentifier","src":"3614:3:25"},"nativeSrc":"3614:14:25","nodeType":"YulFunctionCall","src":"3614:14:25"},{"name":"structHash","nativeSrc":"3630:10:25","nodeType":"YulIdentifier","src":"3630:10:25"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:25","nodeType":"YulIdentifier","src":"3607:6:25"},"nativeSrc":"3607:34:25","nodeType":"YulFunctionCall","src":"3607:34:25"},"nativeSrc":"3607:34:25","nodeType":"YulExpressionStatement","src":"3607:34:25"},{"nativeSrc":"3654:30:25","nodeType":"YulAssignment","src":"3654:30:25","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:25","nodeType":"YulIdentifier","src":"3674:3:25"},{"kind":"number","nativeSrc":"3679:4:25","nodeType":"YulLiteral","src":"3679:4:25","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:25","nodeType":"YulIdentifier","src":"3664:9:25"},"nativeSrc":"3664:20:25","nodeType":"YulFunctionCall","src":"3664:20:25"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:25","nodeType":"YulIdentifier","src":"3654:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4869,"isOffset":false,"isSlot":false,"src":"3654:6:25","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"3578:15:25","valueSize":1},{"declaration":4866,"isOffset":false,"isSlot":false,"src":"3630:10:25","valueSize":1}],"flags":["memory-safe"],"id":4871,"nodeType":"InlineAssembly","src":"3445:249:25"}]},"documentation":{"id":4862,"nodeType":"StructuredDocumentation","src":"2890:431:25","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4873,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:25","nodeType":"FunctionDefinition","parameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:25","nodeType":"VariableDeclaration","scope":4873,"src":"3351:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:25","nodeType":"VariableDeclaration","scope":4873,"src":"3376:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:25"},"returnParameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"digest","nameLocation":"3427:6:25","nodeType":"VariableDeclaration","scope":4873,"src":"3419:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:25"},"scope":4874,"src":"3326:374:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4875,"src":"521:3181:25","usedErrors":[],"usedEvents":[]}],"src":"123:3580:25"},"id":25},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4898],"IERC165":[4910]},"id":4899,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4876,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4878,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4899,"sourceUnit":4911,"src":"140:38:26","symbolAliases":[{"foreign":{"id":4877,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"148:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4880,"name":"IERC165","nameLocations":["688:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":4910,"src":"688:7:26"},"id":4881,"nodeType":"InheritanceSpecifier","src":"688:7:26"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4879,"nodeType":"StructuredDocumentation","src":"180:479:26","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4898,"linearizedBaseContracts":[4898,4910],"name":"ERC165","nameLocation":"678:6:26","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4909],"body":{"id":4896,"nodeType":"Block","src":"845:64:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4889,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"862:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4891,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"882:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4910_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4910_$","typeString":"type(contract IERC165)"}],"id":4890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4910","typeString":"type(contract IERC165)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:26","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4888,"id":4895,"nodeType":"Return","src":"855:47:26"}]},"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"702:56:26","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4897,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:26","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:26","nodeType":"VariableDeclaration","scope":4897,"src":"790:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4883,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:26"},"returnParameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4897,"src":"839:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4886,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:26"},"scope":4898,"src":"763:146:26","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4899,"src":"660:251:26","usedErrors":[],"usedEvents":[]}],"src":"114:798:26"},"id":26},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4910]},"id":4911,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4900,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"141:280:27","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4910,"linearizedBaseContracts":[4910],"name":"IERC165","nameLocation":"432:7:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4902,"nodeType":"StructuredDocumentation","src":"446:340:27","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4909,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:27","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:27","nodeType":"VariableDeclaration","scope":4909,"src":"818:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4903,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:27"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4909,"src":"861:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4906,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:27"},"scope":4910,"src":"791:76:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4911,"src":"422:447:27","usedErrors":[],"usedEvents":[]}],"src":"115:755:27"},"id":27},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6516],"Panic":[2451],"SafeCast":[8281]},"id":6517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4912,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6517,"sourceUnit":2452,"src":"129:35:28","symbolAliases":[{"foreign":{"id":4913,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"137:5:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6517,"sourceUnit":8282,"src":"165:40:28","symbolAliases":[{"foreign":{"id":4915,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"173:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4917,"nodeType":"StructuredDocumentation","src":"207:73:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6516,"linearizedBaseContracts":[6516],"name":"Math","nameLocation":"289:4:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4922,"members":[{"id":4918,"name":"Floor","nameLocation":"324:5:28","nodeType":"EnumValue","src":"324:5:28"},{"id":4919,"name":"Ceil","nameLocation":"367:4:28","nodeType":"EnumValue","src":"367:4:28"},{"id":4920,"name":"Trunc","nameLocation":"409:5:28","nodeType":"EnumValue","src":"409:5:28"},{"id":4921,"name":"Expand","nameLocation":"439:6:28","nodeType":"EnumValue","src":"439:6:28"}],"name":"Rounding","nameLocation":"305:8:28","nodeType":"EnumDefinition","src":"300:169:28"},{"body":{"id":4953,"nodeType":"Block","src":"677:140:28","statements":[{"id":4952,"nodeType":"UncheckedBlock","src":"687:124:28","statements":[{"assignments":[4935],"declarations":[{"constant":false,"id":4935,"mutability":"mutable","name":"c","nameLocation":"719:1:28","nodeType":"VariableDeclaration","scope":4952,"src":"711:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4939,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"723:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4937,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"727:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"746:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"750:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4947,"nodeType":"IfStatement","src":"742:28:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4933,"id":4946,"nodeType":"Return","src":"753:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4949,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"798:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4933,"id":4951,"nodeType":"Return","src":"784:16:28"}]}]},"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"475:106:28","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:28","nodeType":"FunctionDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"a","nameLocation":"610:1:28","nodeType":"VariableDeclaration","scope":4954,"src":"602:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"b","nameLocation":"621:1:28","nodeType":"VariableDeclaration","scope":4954,"src":"613:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:28"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"success","nameLocation":"652:7:28","nodeType":"VariableDeclaration","scope":4954,"src":"647:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4929,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4932,"mutability":"mutable","name":"result","nameLocation":"669:6:28","nodeType":"VariableDeclaration","scope":4954,"src":"661:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:28"},"scope":6516,"src":"586:231:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4981,"nodeType":"Block","src":"1028:113:28","statements":[{"id":4980,"nodeType":"UncheckedBlock","src":"1038:97:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"1066:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"1070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4973,"nodeType":"IfStatement","src":"1062:28:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4965,"id":4972,"nodeType":"Return","src":"1073:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"1118:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4976,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"1122:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4965,"id":4979,"nodeType":"Return","src":"1104:20:28"}]}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"823:109:28","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4982,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:28","nodeType":"FunctionDefinition","parameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"a","nameLocation":"961:1:28","nodeType":"VariableDeclaration","scope":4982,"src":"953:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4959,"mutability":"mutable","name":"b","nameLocation":"972:1:28","nodeType":"VariableDeclaration","scope":4982,"src":"964:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:28"},"returnParameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"success","nameLocation":"1003:7:28","nodeType":"VariableDeclaration","scope":4982,"src":"998:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4961,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4964,"mutability":"mutable","name":"result","nameLocation":"1020:6:28","nodeType":"VariableDeclaration","scope":4982,"src":"1012:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:28"},"scope":6516,"src":"937:204:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5023,"nodeType":"Block","src":"1355:417:28","statements":[{"id":5022,"nodeType":"UncheckedBlock","src":"1365:401:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"1623:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5001,"nodeType":"IfStatement","src":"1619:28:28","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4993,"id":5000,"nodeType":"Return","src":"1631:16:28"}},{"assignments":[5003],"declarations":[{"constant":false,"id":5003,"mutability":"mutable","name":"c","nameLocation":"1669:1:28","nodeType":"VariableDeclaration","scope":5022,"src":"1661:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5007,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"1673:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"1677:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"1696:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"1700:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"1705:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"IfStatement","src":"1692:33:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4993,"id":5016,"nodeType":"Return","src":"1708:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5019,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"1753:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4993,"id":5021,"nodeType":"Return","src":"1739:16:28"}]}]},"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"1147:112:28","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":5024,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:28","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"a","nameLocation":"1288:1:28","nodeType":"VariableDeclaration","scope":5024,"src":"1280:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4987,"mutability":"mutable","name":"b","nameLocation":"1299:1:28","nodeType":"VariableDeclaration","scope":5024,"src":"1291:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:28"},"returnParameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"success","nameLocation":"1330:7:28","nodeType":"VariableDeclaration","scope":5024,"src":"1325:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4989,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"result","nameLocation":"1347:6:28","nodeType":"VariableDeclaration","scope":5024,"src":"1339:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:28"},"scope":6516,"src":"1264:508:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5051,"nodeType":"Block","src":"1987:114:28","statements":[{"id":5050,"nodeType":"UncheckedBlock","src":"1997:98:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"2025:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"2021:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5035,"id":5042,"nodeType":"Return","src":"2033:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"2078:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"2082:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5035,"id":5049,"nodeType":"Return","src":"2064:20:28"}]}]},"documentation":{"id":5025,"nodeType":"StructuredDocumentation","src":"1778:113:28","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5052,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:28","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"a","nameLocation":"1920:1:28","nodeType":"VariableDeclaration","scope":5052,"src":"1912:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"b","nameLocation":"1931:1:28","nodeType":"VariableDeclaration","scope":5052,"src":"1923:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:28"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"success","nameLocation":"1962:7:28","nodeType":"VariableDeclaration","scope":5052,"src":"1957:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5031,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5034,"mutability":"mutable","name":"result","nameLocation":"1979:6:28","nodeType":"VariableDeclaration","scope":5052,"src":"1971:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:28"},"scope":6516,"src":"1896:205:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5079,"nodeType":"Block","src":"2326:114:28","statements":[{"id":5078,"nodeType":"UncheckedBlock","src":"2336:98:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"2364:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5071,"nodeType":"IfStatement","src":"2360:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5063,"id":5070,"nodeType":"Return","src":"2372:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"2417:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"2421:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5063,"id":5077,"nodeType":"Return","src":"2403:20:28"}]}]},"documentation":{"id":5053,"nodeType":"StructuredDocumentation","src":"2107:123:28","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5080,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:28","nodeType":"FunctionDefinition","parameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"a","nameLocation":"2259:1:28","nodeType":"VariableDeclaration","scope":5080,"src":"2251:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5057,"mutability":"mutable","name":"b","nameLocation":"2270:1:28","nodeType":"VariableDeclaration","scope":5080,"src":"2262:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:28"},"returnParameters":{"id":5063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"success","nameLocation":"2301:7:28","nodeType":"VariableDeclaration","scope":5080,"src":"2296:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5059,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5062,"mutability":"mutable","name":"result","nameLocation":"2318:6:28","nodeType":"VariableDeclaration","scope":5080,"src":"2310:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:28"},"scope":6516,"src":"2235:205:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"2912:207:28","statements":[{"id":5105,"nodeType":"UncheckedBlock","src":"2922:191:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"3060:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"3066:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5094,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"3070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5099,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"3091:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5097,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"3075:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"3075:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5091,"id":5104,"nodeType":"Return","src":"3053:49:28"}]}]},"documentation":{"id":5081,"nodeType":"StructuredDocumentation","src":"2446:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:28","nodeType":"FunctionDefinition","parameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"condition","nameLocation":"2847:9:28","nodeType":"VariableDeclaration","scope":5107,"src":"2842:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5082,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"a","nameLocation":"2866:1:28","nodeType":"VariableDeclaration","scope":5107,"src":"2858:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5084,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"b","nameLocation":"2877:1:28","nodeType":"VariableDeclaration","scope":5107,"src":"2869:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:28"},"returnParameters":{"id":5091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"2903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:28"},"scope":6516,"src":"2825:294:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5125,"nodeType":"Block","src":"3256:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5118,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"3281:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5119,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"3285:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"3288:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"3291:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5117,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"3273:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5116,"id":5124,"nodeType":"Return","src":"3266:27:28"}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"3125:59:28","text":" @dev Returns the largest of two numbers."},"id":5126,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:28","nodeType":"FunctionDefinition","parameters":{"id":5113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"a","nameLocation":"3210:1:28","nodeType":"VariableDeclaration","scope":5126,"src":"3202:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5112,"mutability":"mutable","name":"b","nameLocation":"3221:1:28","nodeType":"VariableDeclaration","scope":5126,"src":"3213:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5111,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:28"},"returnParameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5126,"src":"3247:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:28"},"scope":6516,"src":"3189:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5144,"nodeType":"Block","src":"3438:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5137,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"3463:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3467:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"3470:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5141,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3473:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5136,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"3455:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5135,"id":5143,"nodeType":"Return","src":"3448:27:28"}]},"documentation":{"id":5127,"nodeType":"StructuredDocumentation","src":"3306:60:28","text":" @dev Returns the smallest of two numbers."},"id":5145,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:28","nodeType":"FunctionDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"a","nameLocation":"3392:1:28","nodeType":"VariableDeclaration","scope":5145,"src":"3384:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5131,"mutability":"mutable","name":"b","nameLocation":"3403:1:28","nodeType":"VariableDeclaration","scope":5145,"src":"3395:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5130,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:28"},"returnParameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5145,"src":"3429:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5133,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:28"},"scope":6516,"src":"3371:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5167,"nodeType":"Block","src":"3666:82:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"3721:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5156,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"3725:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"3731:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5160,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"3735:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5154,"id":5166,"nodeType":"Return","src":"3713:28:28"}]},"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"3488:102:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5168,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:28","nodeType":"FunctionDefinition","parameters":{"id":5151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"a","nameLocation":"3620:1:28","nodeType":"VariableDeclaration","scope":5168,"src":"3612:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5150,"mutability":"mutable","name":"b","nameLocation":"3631:1:28","nodeType":"VariableDeclaration","scope":5168,"src":"3623:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5149,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:28"},"returnParameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5168,"src":"3657:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:28"},"scope":6516,"src":"3595:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5208,"nodeType":"Block","src":"4040:633:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"4054:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5189,"nodeType":"IfStatement","src":"4050:150:28","trueBody":{"id":5188,"nodeType":"Block","src":"4062:138:28","statements":[{"expression":{"arguments":[{"expression":{"id":5184,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"4166:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"4166:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5181,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"4154:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"4154:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5187,"nodeType":"ExpressionStatement","src":"4154:35:28"}]}},{"id":5207,"nodeType":"UncheckedBlock","src":"4583:84:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"4630:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5190,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"4614:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"4614:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"4641:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"4650:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5177,"id":5206,"nodeType":"Return","src":"4607:49:28"}]}]},"documentation":{"id":5169,"nodeType":"StructuredDocumentation","src":"3754:210:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5209,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:28","nodeType":"FunctionDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5171,"mutability":"mutable","name":"a","nameLocation":"3994:1:28","nodeType":"VariableDeclaration","scope":5209,"src":"3986:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5173,"mutability":"mutable","name":"b","nameLocation":"4005:1:28","nodeType":"VariableDeclaration","scope":5209,"src":"3997:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:28"},"returnParameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5209,"src":"4031:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:28"},"scope":6516,"src":"3969:704:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5345,"nodeType":"Block","src":"5094:4128:28","statements":[{"id":5344,"nodeType":"UncheckedBlock","src":"5104:4112:28","statements":[{"assignments":[5222],"declarations":[{"constant":false,"id":5222,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:28","nodeType":"VariableDeclaration","scope":5344,"src":"5433:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5226,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"5449:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5224,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"5453:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:28"},{"assignments":[5228],"declarations":[{"constant":false,"id":5228,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:28","nodeType":"VariableDeclaration","scope":5344,"src":"5513:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5227,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5229,"nodeType":"VariableDeclarationStatement","src":"5513:13:28"},{"AST":{"nativeSrc":"5593:122:28","nodeType":"YulBlock","src":"5593:122:28","statements":[{"nativeSrc":"5611:30:28","nodeType":"YulVariableDeclaration","src":"5611:30:28","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:28","nodeType":"YulIdentifier","src":"5628:1:28"},{"name":"y","nativeSrc":"5631:1:28","nodeType":"YulIdentifier","src":"5631:1:28"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:28","nodeType":"YulLiteral","src":"5638:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:28","nodeType":"YulIdentifier","src":"5634:3:28"},"nativeSrc":"5634:6:28","nodeType":"YulFunctionCall","src":"5634:6:28"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:28","nodeType":"YulIdentifier","src":"5621:6:28"},"nativeSrc":"5621:20:28","nodeType":"YulFunctionCall","src":"5621:20:28"},"variables":[{"name":"mm","nativeSrc":"5615:2:28","nodeType":"YulTypedName","src":"5615:2:28","type":""}]},{"nativeSrc":"5658:43:28","nodeType":"YulAssignment","src":"5658:43:28","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:28","nodeType":"YulIdentifier","src":"5675:2:28"},{"name":"prod0","nativeSrc":"5679:5:28","nodeType":"YulIdentifier","src":"5679:5:28"}],"functionName":{"name":"sub","nativeSrc":"5671:3:28","nodeType":"YulIdentifier","src":"5671:3:28"},"nativeSrc":"5671:14:28","nodeType":"YulFunctionCall","src":"5671:14:28"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:28","nodeType":"YulIdentifier","src":"5690:2:28"},{"name":"prod0","nativeSrc":"5694:5:28","nodeType":"YulIdentifier","src":"5694:5:28"}],"functionName":{"name":"lt","nativeSrc":"5687:2:28","nodeType":"YulIdentifier","src":"5687:2:28"},"nativeSrc":"5687:13:28","nodeType":"YulFunctionCall","src":"5687:13:28"}],"functionName":{"name":"sub","nativeSrc":"5667:3:28","nodeType":"YulIdentifier","src":"5667:3:28"},"nativeSrc":"5667:34:28","nodeType":"YulFunctionCall","src":"5667:34:28"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:28","nodeType":"YulIdentifier","src":"5658:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5222,"isOffset":false,"isSlot":false,"src":"5679:5:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"5694:5:28","valueSize":1},{"declaration":5228,"isOffset":false,"isSlot":false,"src":"5658:5:28","valueSize":1},{"declaration":5212,"isOffset":false,"isSlot":false,"src":"5628:1:28","valueSize":1},{"declaration":5214,"isOffset":false,"isSlot":false,"src":"5631:1:28","valueSize":1}],"id":5230,"nodeType":"InlineAssembly","src":"5584:131:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5231,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"5796:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5239,"nodeType":"IfStatement","src":"5792:368:28","trueBody":{"id":5238,"nodeType":"Block","src":"5808:352:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"6126:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5235,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"6134:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5220,"id":5237,"nodeType":"Return","src":"6119:26:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"6270:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5241,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"6285:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5258,"nodeType":"IfStatement","src":"6266:143:28","trueBody":{"id":5257,"nodeType":"Block","src":"6292:117:28","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5247,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"6330:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5250,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6348:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"6348:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5252,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6372:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2414,"src":"6372:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5246,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"6322:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5243,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6310:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"6310:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"ExpressionStatement","src":"6310:84:28"}]}},{"assignments":[5260],"declarations":[{"constant":false,"id":5260,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:28","nodeType":"VariableDeclaration","scope":5344,"src":"6664:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5261,"nodeType":"VariableDeclarationStatement","src":"6664:17:28"},{"AST":{"nativeSrc":"6704:291:28","nodeType":"YulBlock","src":"6704:291:28","statements":[{"nativeSrc":"6773:38:28","nodeType":"YulAssignment","src":"6773:38:28","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:28","nodeType":"YulIdentifier","src":"6793:1:28"},{"name":"y","nativeSrc":"6796:1:28","nodeType":"YulIdentifier","src":"6796:1:28"},{"name":"denominator","nativeSrc":"6799:11:28","nodeType":"YulIdentifier","src":"6799:11:28"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:28","nodeType":"YulIdentifier","src":"6786:6:28"},"nativeSrc":"6786:25:28","nodeType":"YulFunctionCall","src":"6786:25:28"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:28","nodeType":"YulIdentifier","src":"6773:9:28"}]},{"nativeSrc":"6893:41:28","nodeType":"YulAssignment","src":"6893:41:28","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:28","nodeType":"YulIdentifier","src":"6906:5:28"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:28","nodeType":"YulIdentifier","src":"6916:9:28"},{"name":"prod0","nativeSrc":"6927:5:28","nodeType":"YulIdentifier","src":"6927:5:28"}],"functionName":{"name":"gt","nativeSrc":"6913:2:28","nodeType":"YulIdentifier","src":"6913:2:28"},"nativeSrc":"6913:20:28","nodeType":"YulFunctionCall","src":"6913:20:28"}],"functionName":{"name":"sub","nativeSrc":"6902:3:28","nodeType":"YulIdentifier","src":"6902:3:28"},"nativeSrc":"6902:32:28","nodeType":"YulFunctionCall","src":"6902:32:28"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:28","nodeType":"YulIdentifier","src":"6893:5:28"}]},{"nativeSrc":"6951:30:28","nodeType":"YulAssignment","src":"6951:30:28","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:28","nodeType":"YulIdentifier","src":"6964:5:28"},{"name":"remainder","nativeSrc":"6971:9:28","nodeType":"YulIdentifier","src":"6971:9:28"}],"functionName":{"name":"sub","nativeSrc":"6960:3:28","nodeType":"YulIdentifier","src":"6960:3:28"},"nativeSrc":"6960:21:28","nodeType":"YulFunctionCall","src":"6960:21:28"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:28","nodeType":"YulIdentifier","src":"6951:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5216,"isOffset":false,"isSlot":false,"src":"6799:11:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"6927:5:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"6951:5:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"6964:5:28","valueSize":1},{"declaration":5228,"isOffset":false,"isSlot":false,"src":"6893:5:28","valueSize":1},{"declaration":5228,"isOffset":false,"isSlot":false,"src":"6906:5:28","valueSize":1},{"declaration":5260,"isOffset":false,"isSlot":false,"src":"6773:9:28","valueSize":1},{"declaration":5260,"isOffset":false,"isSlot":false,"src":"6916:9:28","valueSize":1},{"declaration":5260,"isOffset":false,"isSlot":false,"src":"6971:9:28","valueSize":1},{"declaration":5212,"isOffset":false,"isSlot":false,"src":"6793:1:28","valueSize":1},{"declaration":5214,"isOffset":false,"isSlot":false,"src":"6796:1:28","valueSize":1}],"id":5262,"nodeType":"InlineAssembly","src":"6695:300:28"},{"assignments":[5264],"declarations":[{"constant":false,"id":5264,"mutability":"mutable","name":"twos","nameLocation":"7207:4:28","nodeType":"VariableDeclaration","scope":5344,"src":"7199:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5271,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"7214:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5267,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"7233:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:28"},{"AST":{"nativeSrc":"7268:366:28","nodeType":"YulBlock","src":"7268:366:28","statements":[{"nativeSrc":"7333:37:28","nodeType":"YulAssignment","src":"7333:37:28","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:28","nodeType":"YulIdentifier","src":"7352:11:28"},{"name":"twos","nativeSrc":"7365:4:28","nodeType":"YulIdentifier","src":"7365:4:28"}],"functionName":{"name":"div","nativeSrc":"7348:3:28","nodeType":"YulIdentifier","src":"7348:3:28"},"nativeSrc":"7348:22:28","nodeType":"YulFunctionCall","src":"7348:22:28"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:28","nodeType":"YulIdentifier","src":"7333:11:28"}]},{"nativeSrc":"7437:25:28","nodeType":"YulAssignment","src":"7437:25:28","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:28","nodeType":"YulIdentifier","src":"7450:5:28"},{"name":"twos","nativeSrc":"7457:4:28","nodeType":"YulIdentifier","src":"7457:4:28"}],"functionName":{"name":"div","nativeSrc":"7446:3:28","nodeType":"YulIdentifier","src":"7446:3:28"},"nativeSrc":"7446:16:28","nodeType":"YulFunctionCall","src":"7446:16:28"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:28","nodeType":"YulIdentifier","src":"7437:5:28"}]},{"nativeSrc":"7581:39:28","nodeType":"YulAssignment","src":"7581:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:28","nodeType":"YulLiteral","src":"7601:1:28","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:28","nodeType":"YulIdentifier","src":"7604:4:28"}],"functionName":{"name":"sub","nativeSrc":"7597:3:28","nodeType":"YulIdentifier","src":"7597:3:28"},"nativeSrc":"7597:12:28","nodeType":"YulFunctionCall","src":"7597:12:28"},{"name":"twos","nativeSrc":"7611:4:28","nodeType":"YulIdentifier","src":"7611:4:28"}],"functionName":{"name":"div","nativeSrc":"7593:3:28","nodeType":"YulIdentifier","src":"7593:3:28"},"nativeSrc":"7593:23:28","nodeType":"YulFunctionCall","src":"7593:23:28"},{"kind":"number","nativeSrc":"7618:1:28","nodeType":"YulLiteral","src":"7618:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:28","nodeType":"YulIdentifier","src":"7589:3:28"},"nativeSrc":"7589:31:28","nodeType":"YulFunctionCall","src":"7589:31:28"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:28","nodeType":"YulIdentifier","src":"7581:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5216,"isOffset":false,"isSlot":false,"src":"7333:11:28","valueSize":1},{"declaration":5216,"isOffset":false,"isSlot":false,"src":"7352:11:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"7437:5:28","valueSize":1},{"declaration":5222,"isOffset":false,"isSlot":false,"src":"7450:5:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7365:4:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7457:4:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7581:4:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7604:4:28","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"7611:4:28","valueSize":1}],"id":5272,"nodeType":"InlineAssembly","src":"7259:375:28"},{"expression":{"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5273,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"7700:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"7709:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5275,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"7717:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5278,"nodeType":"ExpressionStatement","src":"7700:21:28"},{"assignments":[5280],"declarations":[{"constant":false,"id":5280,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:28","nodeType":"VariableDeclaration","scope":5344,"src":"8056:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5279,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5282,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8079:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:28"},{"expression":{"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5288,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8312:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8327:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5291,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8341:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5295,"nodeType":"ExpressionStatement","src":"8312:36:28"},{"expression":{"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5296,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8382:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8397:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5299,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8411:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5303,"nodeType":"ExpressionStatement","src":"8382:36:28"},{"expression":{"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5304,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8454:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5306,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8469:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5307,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8483:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5311,"nodeType":"ExpressionStatement","src":"8454:36:28"},{"expression":{"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5312,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8525:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8540:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5315,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8554:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5319,"nodeType":"ExpressionStatement","src":"8525:36:28"},{"expression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5320,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8598:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8613:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5323,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8627:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5327,"nodeType":"ExpressionStatement","src":"8598:36:28"},{"expression":{"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5328,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8672:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"8687:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5331,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"8701:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5335,"nodeType":"ExpressionStatement","src":"8672:36:28"},{"expression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"9154:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5337,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"9163:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5338,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"9171:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5341,"nodeType":"ExpressionStatement","src":"9154:24:28"},{"expression":{"id":5342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"9199:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5220,"id":5343,"nodeType":"Return","src":"9192:13:28"}]}]},"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"4679:312:28","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5346,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:28","nodeType":"FunctionDefinition","parameters":{"id":5217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"x","nameLocation":"5020:1:28","nodeType":"VariableDeclaration","scope":5346,"src":"5012:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5214,"mutability":"mutable","name":"y","nameLocation":"5031:1:28","nodeType":"VariableDeclaration","scope":5346,"src":"5023:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5213,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5216,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:28","nodeType":"VariableDeclaration","scope":5346,"src":"5034:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:28"},"returnParameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"result","nameLocation":"5086:6:28","nodeType":"VariableDeclaration","scope":5346,"src":"5078:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:28"},"scope":6516,"src":"4996:4226:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5382,"nodeType":"Block","src":"9461:128:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5362,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"9485:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5363,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"9488:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5364,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"9491:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5361,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5346,5383],"referencedDeclaration":5346,"src":"9478:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5369,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"9539:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":5368,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"9522:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5372,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"9559:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5373,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"9562:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5374,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"9565:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5371,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5366,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"9506:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"9506:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5360,"id":5381,"nodeType":"Return","src":"9471:111:28"}]},"documentation":{"id":5347,"nodeType":"StructuredDocumentation","src":"9228:118:28","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5383,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:28","nodeType":"FunctionDefinition","parameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5349,"mutability":"mutable","name":"x","nameLocation":"9375:1:28","nodeType":"VariableDeclaration","scope":5383,"src":"9367:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5348,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5351,"mutability":"mutable","name":"y","nameLocation":"9386:1:28","nodeType":"VariableDeclaration","scope":5383,"src":"9378:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:28","nodeType":"VariableDeclaration","scope":5383,"src":"9389:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5352,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5356,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:28","nodeType":"VariableDeclaration","scope":5383,"src":"9410:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":5355,"nodeType":"UserDefinedTypeName","pathNode":{"id":5354,"name":"Rounding","nameLocations":["9410:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"9410:8:28"},"referencedDeclaration":4922,"src":"9410:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:28"},"returnParameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5383,"src":"9452:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:28"},"scope":6516,"src":"9351:238:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5479,"nodeType":"Block","src":"10223:1849:28","statements":[{"id":5478,"nodeType":"UncheckedBlock","src":"10233:1833:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5393,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"10261:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"10257:20:28","trueBody":{"expression":{"hexValue":"30","id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5392,"id":5397,"nodeType":"Return","src":"10269:8:28"}},{"assignments":[5400],"declarations":[{"constant":false,"id":5400,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:28","nodeType":"VariableDeclaration","scope":5478,"src":"10748:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5399,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5404,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"10768:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5402,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"10772:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:28"},{"assignments":[5406],"declarations":[{"constant":false,"id":5406,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:28","nodeType":"VariableDeclaration","scope":5478,"src":"10787:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5405,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5408,"initialValue":{"id":5407,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"10801:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:28"},{"assignments":[5410],"declarations":[{"constant":false,"id":5410,"mutability":"mutable","name":"x","nameLocation":"10945:1:28","nodeType":"VariableDeclaration","scope":5478,"src":"10938:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5409,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5412,"initialValue":{"hexValue":"30","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:28"},{"assignments":[5414],"declarations":[{"constant":false,"id":5414,"mutability":"mutable","name":"y","nameLocation":"10971:1:28","nodeType":"VariableDeclaration","scope":5478,"src":"10964:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5413,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5416,"initialValue":{"hexValue":"31","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:28"},{"body":{"id":5453,"nodeType":"Block","src":"11014:882:28","statements":[{"assignments":[5421],"declarations":[{"constant":false,"id":5421,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:28","nodeType":"VariableDeclaration","scope":5453,"src":"11032:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5425,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5422,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11051:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5423,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"11057:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:28"},{"expression":{"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5426,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11086:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5427,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"11091:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5428,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5429,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"11191:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5430,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11436:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5431,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"11442:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5432,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"11454:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5437,"nodeType":"ExpressionStatement","src":"11085:395:28"},{"expression":{"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5438,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"11500:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5439,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11503:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5440,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5441,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11585:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"11839:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"11843:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5446,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"11854:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5444,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:28","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5452,"nodeType":"ExpressionStatement","src":"11499:382:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5417,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"10998:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5454,"nodeType":"WhileStatement","src":"10991:905:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5455,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11914:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5460,"nodeType":"IfStatement","src":"11910:22:28","trueBody":{"expression":{"hexValue":"30","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5392,"id":5459,"nodeType":"Return","src":"11924:8:28"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5462,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"11983:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5465,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"11990:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:28","subExpression":{"id":5468,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"12003:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:28","typeDescriptions":{}}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5474,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"12015:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:28","typeDescriptions":{}}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5461,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"11975:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5392,"id":5477,"nodeType":"Return","src":"11968:50:28"}]}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"9595:553:28","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5480,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:28","nodeType":"FunctionDefinition","parameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"a","nameLocation":"10177:1:28","nodeType":"VariableDeclaration","scope":5480,"src":"10169:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5388,"mutability":"mutable","name":"n","nameLocation":"10188:1:28","nodeType":"VariableDeclaration","scope":5480,"src":"10180:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:28"},"returnParameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5480,"src":"10214:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:28"},"scope":6516,"src":"10153:1919:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5500,"nodeType":"Block","src":"12672:82:28","statements":[{"id":5499,"nodeType":"UncheckedBlock","src":"12682:66:28","statements":[{"expression":{"arguments":[{"id":5492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"12725:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12728:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5496,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12735:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5490,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"12713:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6516_$","typeString":"type(library Math)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:28","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5537,"src":"12713:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5489,"id":5498,"nodeType":"Return","src":"12706:31:28"}]}]},"documentation":{"id":5481,"nodeType":"StructuredDocumentation","src":"12078:514:28","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5501,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:28","nodeType":"FunctionDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"a","nameLocation":"12626:1:28","nodeType":"VariableDeclaration","scope":5501,"src":"12618:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5485,"mutability":"mutable","name":"p","nameLocation":"12637:1:28","nodeType":"VariableDeclaration","scope":5501,"src":"12629:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:28"},"returnParameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5501,"src":"12663:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:28"},"scope":6516,"src":"12597:157:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5536,"nodeType":"Block","src":"13524:174:28","statements":[{"assignments":[5514,5516],"declarations":[{"constant":false,"id":5514,"mutability":"mutable","name":"success","nameLocation":"13540:7:28","nodeType":"VariableDeclaration","scope":5536,"src":"13535:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5513,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5516,"mutability":"mutable","name":"result","nameLocation":"13557:6:28","nodeType":"VariableDeclaration","scope":5536,"src":"13549:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5515,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5522,"initialValue":{"arguments":[{"id":5518,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"13577:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5519,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"13580:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5520,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"13583:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5517,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5561,5643],"referencedDeclaration":5561,"src":"13567:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:28"},{"condition":{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:28","subExpression":{"id":5523,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"13600:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5533,"nodeType":"IfStatement","src":"13595:74:28","trueBody":{"id":5532,"nodeType":"Block","src":"13609:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":5528,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"13635:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"13635:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5525,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"13623:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"13623:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5531,"nodeType":"ExpressionStatement","src":"13623:35:28"}]}},{"expression":{"id":5534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"13685:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5512,"id":5535,"nodeType":"Return","src":"13678:13:28"}]},"documentation":{"id":5502,"nodeType":"StructuredDocumentation","src":"12760:678:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5537,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:28","nodeType":"FunctionDefinition","parameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"b","nameLocation":"13467:1:28","nodeType":"VariableDeclaration","scope":5537,"src":"13459:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5506,"mutability":"mutable","name":"e","nameLocation":"13478:1:28","nodeType":"VariableDeclaration","scope":5537,"src":"13470:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5505,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5508,"mutability":"mutable","name":"m","nameLocation":"13489:1:28","nodeType":"VariableDeclaration","scope":5537,"src":"13481:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:28"},"returnParameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5537,"src":"13515:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:28"},"scope":6516,"src":"13443:255:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5560,"nodeType":"Block","src":"14552:1493:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"14566:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5558,"nodeType":"IfStatement","src":"14562:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5550,"id":5557,"nodeType":"Return","src":"14574:17:28"}},{"AST":{"nativeSrc":"14626:1413:28","nodeType":"YulBlock","src":"14626:1413:28","statements":[{"nativeSrc":"14640:22:28","nodeType":"YulVariableDeclaration","src":"14640:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:28","nodeType":"YulLiteral","src":"14657:4:28","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:28","nodeType":"YulIdentifier","src":"14651:5:28"},"nativeSrc":"14651:11:28","nodeType":"YulFunctionCall","src":"14651:11:28"},"variables":[{"name":"ptr","nativeSrc":"14644:3:28","nodeType":"YulTypedName","src":"14644:3:28","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:28","nodeType":"YulIdentifier","src":"15570:3:28"},{"kind":"number","nativeSrc":"15575:4:28","nodeType":"YulLiteral","src":"15575:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:28","nodeType":"YulIdentifier","src":"15563:6:28"},"nativeSrc":"15563:17:28","nodeType":"YulFunctionCall","src":"15563:17:28"},"nativeSrc":"15563:17:28","nodeType":"YulExpressionStatement","src":"15563:17:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:28","nodeType":"YulIdentifier","src":"15604:3:28"},{"kind":"number","nativeSrc":"15609:4:28","nodeType":"YulLiteral","src":"15609:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:28","nodeType":"YulIdentifier","src":"15600:3:28"},"nativeSrc":"15600:14:28","nodeType":"YulFunctionCall","src":"15600:14:28"},{"kind":"number","nativeSrc":"15616:4:28","nodeType":"YulLiteral","src":"15616:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:28","nodeType":"YulIdentifier","src":"15593:6:28"},"nativeSrc":"15593:28:28","nodeType":"YulFunctionCall","src":"15593:28:28"},"nativeSrc":"15593:28:28","nodeType":"YulExpressionStatement","src":"15593:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:28","nodeType":"YulIdentifier","src":"15645:3:28"},{"kind":"number","nativeSrc":"15650:4:28","nodeType":"YulLiteral","src":"15650:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:28","nodeType":"YulIdentifier","src":"15641:3:28"},"nativeSrc":"15641:14:28","nodeType":"YulFunctionCall","src":"15641:14:28"},{"kind":"number","nativeSrc":"15657:4:28","nodeType":"YulLiteral","src":"15657:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:28","nodeType":"YulIdentifier","src":"15634:6:28"},"nativeSrc":"15634:28:28","nodeType":"YulFunctionCall","src":"15634:28:28"},"nativeSrc":"15634:28:28","nodeType":"YulExpressionStatement","src":"15634:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:28","nodeType":"YulIdentifier","src":"15686:3:28"},{"kind":"number","nativeSrc":"15691:4:28","nodeType":"YulLiteral","src":"15691:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:28","nodeType":"YulIdentifier","src":"15682:3:28"},"nativeSrc":"15682:14:28","nodeType":"YulFunctionCall","src":"15682:14:28"},{"name":"b","nativeSrc":"15698:1:28","nodeType":"YulIdentifier","src":"15698:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:28","nodeType":"YulIdentifier","src":"15675:6:28"},"nativeSrc":"15675:25:28","nodeType":"YulFunctionCall","src":"15675:25:28"},"nativeSrc":"15675:25:28","nodeType":"YulExpressionStatement","src":"15675:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:28","nodeType":"YulIdentifier","src":"15724:3:28"},{"kind":"number","nativeSrc":"15729:4:28","nodeType":"YulLiteral","src":"15729:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:28","nodeType":"YulIdentifier","src":"15720:3:28"},"nativeSrc":"15720:14:28","nodeType":"YulFunctionCall","src":"15720:14:28"},{"name":"e","nativeSrc":"15736:1:28","nodeType":"YulIdentifier","src":"15736:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:28","nodeType":"YulIdentifier","src":"15713:6:28"},"nativeSrc":"15713:25:28","nodeType":"YulFunctionCall","src":"15713:25:28"},"nativeSrc":"15713:25:28","nodeType":"YulExpressionStatement","src":"15713:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:28","nodeType":"YulIdentifier","src":"15762:3:28"},{"kind":"number","nativeSrc":"15767:4:28","nodeType":"YulLiteral","src":"15767:4:28","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:28","nodeType":"YulIdentifier","src":"15758:3:28"},"nativeSrc":"15758:14:28","nodeType":"YulFunctionCall","src":"15758:14:28"},{"name":"m","nativeSrc":"15774:1:28","nodeType":"YulIdentifier","src":"15774:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:28","nodeType":"YulIdentifier","src":"15751:6:28"},"nativeSrc":"15751:25:28","nodeType":"YulFunctionCall","src":"15751:25:28"},"nativeSrc":"15751:25:28","nodeType":"YulExpressionStatement","src":"15751:25:28"},{"nativeSrc":"15938:57:28","nodeType":"YulAssignment","src":"15938:57:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:28","nodeType":"YulIdentifier","src":"15960:3:28"},"nativeSrc":"15960:5:28","nodeType":"YulFunctionCall","src":"15960:5:28"},{"kind":"number","nativeSrc":"15967:4:28","nodeType":"YulLiteral","src":"15967:4:28","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:28","nodeType":"YulIdentifier","src":"15973:3:28"},{"kind":"number","nativeSrc":"15978:4:28","nodeType":"YulLiteral","src":"15978:4:28","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:28","nodeType":"YulLiteral","src":"15984:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:28","nodeType":"YulLiteral","src":"15990:4:28","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:28","nodeType":"YulIdentifier","src":"15949:10:28"},"nativeSrc":"15949:46:28","nodeType":"YulFunctionCall","src":"15949:46:28"},"variableNames":[{"name":"success","nativeSrc":"15938:7:28","nodeType":"YulIdentifier","src":"15938:7:28"}]},{"nativeSrc":"16008:21:28","nodeType":"YulAssignment","src":"16008:21:28","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:28","nodeType":"YulLiteral","src":"16024:4:28","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:28","nodeType":"YulIdentifier","src":"16018:5:28"},"nativeSrc":"16018:11:28","nodeType":"YulFunctionCall","src":"16018:11:28"},"variableNames":[{"name":"result","nativeSrc":"16008:6:28","nodeType":"YulIdentifier","src":"16008:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5540,"isOffset":false,"isSlot":false,"src":"15698:1:28","valueSize":1},{"declaration":5542,"isOffset":false,"isSlot":false,"src":"15736:1:28","valueSize":1},{"declaration":5544,"isOffset":false,"isSlot":false,"src":"15774:1:28","valueSize":1},{"declaration":5549,"isOffset":false,"isSlot":false,"src":"16008:6:28","valueSize":1},{"declaration":5547,"isOffset":false,"isSlot":false,"src":"15938:7:28","valueSize":1}],"flags":["memory-safe"],"id":5559,"nodeType":"InlineAssembly","src":"14601:1438:28"}]},"documentation":{"id":5538,"nodeType":"StructuredDocumentation","src":"13704:738:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5561,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:28","nodeType":"FunctionDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"b","nameLocation":"14474:1:28","nodeType":"VariableDeclaration","scope":5561,"src":"14466:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5542,"mutability":"mutable","name":"e","nameLocation":"14485:1:28","nodeType":"VariableDeclaration","scope":5561,"src":"14477:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5544,"mutability":"mutable","name":"m","nameLocation":"14496:1:28","nodeType":"VariableDeclaration","scope":5561,"src":"14488:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5543,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:28"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"success","nameLocation":"14527:7:28","nodeType":"VariableDeclaration","scope":5561,"src":"14522:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5546,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5549,"mutability":"mutable","name":"result","nameLocation":"14544:6:28","nodeType":"VariableDeclaration","scope":5561,"src":"14536:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:28"},"scope":6516,"src":"14447:1598:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5596,"nodeType":"Block","src":"16242:179:28","statements":[{"assignments":[5574,5576],"declarations":[{"constant":false,"id":5574,"mutability":"mutable","name":"success","nameLocation":"16258:7:28","nodeType":"VariableDeclaration","scope":5596,"src":"16253:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5573,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5576,"mutability":"mutable","name":"result","nameLocation":"16280:6:28","nodeType":"VariableDeclaration","scope":5596,"src":"16267:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5575,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5582,"initialValue":{"arguments":[{"id":5578,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"16300:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5579,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"16303:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5580,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"16306:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5577,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5561,5643],"referencedDeclaration":5643,"src":"16290:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:28"},{"condition":{"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:28","subExpression":{"id":5583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"16323:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5593,"nodeType":"IfStatement","src":"16318:74:28","trueBody":{"id":5592,"nodeType":"Block","src":"16332:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":5588,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"16358:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"16358:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5585,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"16346:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2451_$","typeString":"type(library Panic)"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"16346:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5591,"nodeType":"ExpressionStatement","src":"16346:35:28"}]}},{"expression":{"id":5594,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"16408:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5572,"id":5595,"nodeType":"Return","src":"16401:13:28"}]},"documentation":{"id":5562,"nodeType":"StructuredDocumentation","src":"16051:85:28","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5597,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:28","nodeType":"FunctionDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"b","nameLocation":"16170:1:28","nodeType":"VariableDeclaration","scope":5597,"src":"16157:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5563,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5566,"mutability":"mutable","name":"e","nameLocation":"16186:1:28","nodeType":"VariableDeclaration","scope":5597,"src":"16173:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5565,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5568,"mutability":"mutable","name":"m","nameLocation":"16202:1:28","nodeType":"VariableDeclaration","scope":5597,"src":"16189:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5567,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:28"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5597,"src":"16228:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5570,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:28"},"scope":6516,"src":"16141:280:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"16675:771:28","statements":[{"condition":{"arguments":[{"id":5612,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"16700:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5611,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"16689:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5621,"nodeType":"IfStatement","src":"16685:47:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5615,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5610,"id":5620,"nodeType":"Return","src":"16704:28:28"}},{"assignments":[5623],"declarations":[{"constant":false,"id":5623,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:28","nodeType":"VariableDeclaration","scope":5642,"src":"16743:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5626,"initialValue":{"expression":{"id":5624,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"16758:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:28","memberName":"length","nodeType":"MemberAccess","src":"16758:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:28"},{"expression":{"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"16848:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5630,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"16874:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:28","memberName":"length","nodeType":"MemberAccess","src":"16874:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5632,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"16884:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:28","memberName":"length","nodeType":"MemberAccess","src":"16884:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5634,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"16894:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"16900:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5636,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"16903:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5637,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"16906:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5628,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5640,"nodeType":"ExpressionStatement","src":"16848:60:28"},{"AST":{"nativeSrc":"16944:496:28","nodeType":"YulBlock","src":"16944:496:28","statements":[{"nativeSrc":"16958:32:28","nodeType":"YulVariableDeclaration","src":"16958:32:28","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:28","nodeType":"YulIdentifier","src":"16977:6:28"},{"kind":"number","nativeSrc":"16985:4:28","nodeType":"YulLiteral","src":"16985:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:28","nodeType":"YulIdentifier","src":"16973:3:28"},"nativeSrc":"16973:17:28","nodeType":"YulFunctionCall","src":"16973:17:28"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:28","nodeType":"YulTypedName","src":"16962:7:28","type":""}]},{"nativeSrc":"17080:73:28","nodeType":"YulAssignment","src":"17080:73:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:28","nodeType":"YulIdentifier","src":"17102:3:28"},"nativeSrc":"17102:5:28","nodeType":"YulFunctionCall","src":"17102:5:28"},{"kind":"number","nativeSrc":"17109:4:28","nodeType":"YulLiteral","src":"17109:4:28","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:28","nodeType":"YulIdentifier","src":"17115:7:28"},{"arguments":[{"name":"result","nativeSrc":"17130:6:28","nodeType":"YulIdentifier","src":"17130:6:28"}],"functionName":{"name":"mload","nativeSrc":"17124:5:28","nodeType":"YulIdentifier","src":"17124:5:28"},"nativeSrc":"17124:13:28","nodeType":"YulFunctionCall","src":"17124:13:28"},{"name":"dataPtr","nativeSrc":"17139:7:28","nodeType":"YulIdentifier","src":"17139:7:28"},{"name":"mLen","nativeSrc":"17148:4:28","nodeType":"YulIdentifier","src":"17148:4:28"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:28","nodeType":"YulIdentifier","src":"17091:10:28"},"nativeSrc":"17091:62:28","nodeType":"YulFunctionCall","src":"17091:62:28"},"variableNames":[{"name":"success","nativeSrc":"17080:7:28","nodeType":"YulIdentifier","src":"17080:7:28"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:28","nodeType":"YulIdentifier","src":"17309:6:28"},{"name":"mLen","nativeSrc":"17317:4:28","nodeType":"YulIdentifier","src":"17317:4:28"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:28","nodeType":"YulIdentifier","src":"17302:6:28"},"nativeSrc":"17302:20:28","nodeType":"YulFunctionCall","src":"17302:20:28"},"nativeSrc":"17302:20:28","nodeType":"YulExpressionStatement","src":"17302:20:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:28","nodeType":"YulLiteral","src":"17405:4:28","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:28","nodeType":"YulIdentifier","src":"17415:7:28"},{"name":"mLen","nativeSrc":"17424:4:28","nodeType":"YulIdentifier","src":"17424:4:28"}],"functionName":{"name":"add","nativeSrc":"17411:3:28","nodeType":"YulIdentifier","src":"17411:3:28"},"nativeSrc":"17411:18:28","nodeType":"YulFunctionCall","src":"17411:18:28"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:28","nodeType":"YulIdentifier","src":"17398:6:28"},"nativeSrc":"17398:32:28","nodeType":"YulFunctionCall","src":"17398:32:28"},"nativeSrc":"17398:32:28","nodeType":"YulExpressionStatement","src":"17398:32:28"}]},"evmVersion":"paris","externalReferences":[{"declaration":5623,"isOffset":false,"isSlot":false,"src":"17148:4:28","valueSize":1},{"declaration":5623,"isOffset":false,"isSlot":false,"src":"17317:4:28","valueSize":1},{"declaration":5623,"isOffset":false,"isSlot":false,"src":"17424:4:28","valueSize":1},{"declaration":5609,"isOffset":false,"isSlot":false,"src":"16977:6:28","valueSize":1},{"declaration":5609,"isOffset":false,"isSlot":false,"src":"17130:6:28","valueSize":1},{"declaration":5609,"isOffset":false,"isSlot":false,"src":"17309:6:28","valueSize":1},{"declaration":5607,"isOffset":false,"isSlot":false,"src":"17080:7:28","valueSize":1}],"flags":["memory-safe"],"id":5641,"nodeType":"InlineAssembly","src":"16919:521:28"}]},"documentation":{"id":5598,"nodeType":"StructuredDocumentation","src":"16427:88:28","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5643,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:28","nodeType":"FunctionDefinition","parameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"b","nameLocation":"16561:1:28","nodeType":"VariableDeclaration","scope":5643,"src":"16548:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5599,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5602,"mutability":"mutable","name":"e","nameLocation":"16585:1:28","nodeType":"VariableDeclaration","scope":5643,"src":"16572:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5601,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5604,"mutability":"mutable","name":"m","nameLocation":"16609:1:28","nodeType":"VariableDeclaration","scope":5643,"src":"16596:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5603,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:28"},"returnParameters":{"id":5610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"success","nameLocation":"16645:7:28","nodeType":"VariableDeclaration","scope":5643,"src":"16640:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5606,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5609,"mutability":"mutable","name":"result","nameLocation":"16667:6:28","nodeType":"VariableDeclaration","scope":5643,"src":"16654:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5608,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:28"},"scope":6516,"src":"16520:926:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5675,"nodeType":"Block","src":"17601:176:28","statements":[{"body":{"id":5671,"nodeType":"Block","src":"17658:92:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5662,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"17676:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5664,"indexExpression":{"id":5663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"17686:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5670,"nodeType":"IfStatement","src":"17672:68:28","trueBody":{"id":5669,"nodeType":"Block","src":"17695:45:28","statements":[{"expression":{"hexValue":"66616c7365","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5650,"id":5668,"nodeType":"Return","src":"17713:12:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"17631:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5656,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"17635:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:28","memberName":"length","nodeType":"MemberAccess","src":"17635:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"initializationExpression":{"assignments":[5652],"declarations":[{"constant":false,"id":5652,"mutability":"mutable","name":"i","nameLocation":"17624:1:28","nodeType":"VariableDeclaration","scope":5672,"src":"17616:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5651,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5654,"initialValue":{"hexValue":"30","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:28","subExpression":{"id":5659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"17655:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5661,"nodeType":"ExpressionStatement","src":"17653:3:28"},"nodeType":"ForStatement","src":"17611:139:28"},{"expression":{"hexValue":"74727565","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5650,"id":5674,"nodeType":"Return","src":"17759:11:28"}]},"documentation":{"id":5644,"nodeType":"StructuredDocumentation","src":"17452:72:28","text":" @dev Returns whether the provided byte array is zero."},"id":5676,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:28","nodeType":"FunctionDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5646,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:28","nodeType":"VariableDeclaration","scope":5676,"src":"17549:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5645,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:28"},"returnParameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5676,"src":"17595:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5648,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:28"},"scope":6516,"src":"17529:248:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5894,"nodeType":"Block","src":"18137:5124:28","statements":[{"id":5893,"nodeType":"UncheckedBlock","src":"18147:5108:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"18241:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5690,"nodeType":"IfStatement","src":"18237:53:28","trueBody":{"id":5689,"nodeType":"Block","src":"18249:41:28","statements":[{"expression":{"id":5687,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"18274:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5683,"id":5688,"nodeType":"Return","src":"18267:8:28"}]}},{"assignments":[5692],"declarations":[{"constant":false,"id":5692,"mutability":"mutable","name":"aa","nameLocation":"19225:2:28","nodeType":"VariableDeclaration","scope":5893,"src":"19217:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5694,"initialValue":{"id":5693,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"19230:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:28"},{"assignments":[5696],"declarations":[{"constant":false,"id":5696,"mutability":"mutable","name":"xn","nameLocation":"19253:2:28","nodeType":"VariableDeclaration","scope":5893,"src":"19245:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5695,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5698,"initialValue":{"hexValue":"31","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5699,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19278:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5714,"nodeType":"IfStatement","src":"19274:92:28","trueBody":{"id":5713,"nodeType":"Block","src":"19296:70:28","statements":[{"expression":{"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5705,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19314:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5708,"nodeType":"ExpressionStatement","src":"19314:10:28"},{"expression":{"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5709,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19342:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5712,"nodeType":"ExpressionStatement","src":"19342:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19383:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5730,"nodeType":"IfStatement","src":"19379:90:28","trueBody":{"id":5729,"nodeType":"Block","src":"19400:69:28","statements":[{"expression":{"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5721,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19418:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5724,"nodeType":"ExpressionStatement","src":"19418:9:28"},{"expression":{"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5725,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19445:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5728,"nodeType":"ExpressionStatement","src":"19445:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19486:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5746,"nodeType":"IfStatement","src":"19482:90:28","trueBody":{"id":5745,"nodeType":"Block","src":"19503:69:28","statements":[{"expression":{"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5737,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19521:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5740,"nodeType":"ExpressionStatement","src":"19521:9:28"},{"expression":{"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5741,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19548:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5744,"nodeType":"ExpressionStatement","src":"19548:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5747,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19589:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5762,"nodeType":"IfStatement","src":"19585:89:28","trueBody":{"id":5761,"nodeType":"Block","src":"19606:68:28","statements":[{"expression":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5753,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19624:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5756,"nodeType":"ExpressionStatement","src":"19624:9:28"},{"expression":{"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5757,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19651:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5760,"nodeType":"ExpressionStatement","src":"19651:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19691:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5778,"nodeType":"IfStatement","src":"19687:87:28","trueBody":{"id":5777,"nodeType":"Block","src":"19707:67:28","statements":[{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5769,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19725:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5772,"nodeType":"ExpressionStatement","src":"19725:8:28"},{"expression":{"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19751:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5776,"nodeType":"ExpressionStatement","src":"19751:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5779,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19791:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5794,"nodeType":"IfStatement","src":"19787:87:28","trueBody":{"id":5793,"nodeType":"Block","src":"19807:67:28","statements":[{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19825:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5788,"nodeType":"ExpressionStatement","src":"19825:8:28"},{"expression":{"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5789,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19851:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5792,"nodeType":"ExpressionStatement","src":"19851:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5795,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"19891:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5806,"nodeType":"IfStatement","src":"19887:61:28","trueBody":{"id":5805,"nodeType":"Block","src":"19907:41:28","statements":[{"expression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5801,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"19925:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5804,"nodeType":"ExpressionStatement","src":"19925:8:28"}]}},{"expression":{"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5807,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"20368:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5809,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"20378:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5815,"nodeType":"ExpressionStatement","src":"20368:18:28"},{"expression":{"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5816,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22273:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5817,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22279:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22284:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5819,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22288:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5826,"nodeType":"ExpressionStatement","src":"22273:23:28"},{"expression":{"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5827,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22382:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5828,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22388:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22393:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5830,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22397:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5837,"nodeType":"ExpressionStatement","src":"22382:23:28"},{"expression":{"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5838,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22493:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5839,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22499:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22504:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5841,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22508:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5848,"nodeType":"ExpressionStatement","src":"22493:23:28"},{"expression":{"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5849,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22602:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5850,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22608:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22613:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5852,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22617:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5859,"nodeType":"ExpressionStatement","src":"22602:23:28"},{"expression":{"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5860,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22712:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22718:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22723:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5863,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22727:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5870,"nodeType":"ExpressionStatement","src":"22712:23:28"},{"expression":{"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5871,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22822:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5872,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22828:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"22833:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5874,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22837:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5881,"nodeType":"ExpressionStatement","src":"22822:23:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"23211:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5885,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"23232:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"23237:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5887,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"23241:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5883,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"23216:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"23216:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5683,"id":5892,"nodeType":"Return","src":"23204:40:28"}]}]},"documentation":{"id":5677,"nodeType":"StructuredDocumentation","src":"17783:292:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5895,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:28","nodeType":"FunctionDefinition","parameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"a","nameLocation":"18102:1:28","nodeType":"VariableDeclaration","scope":5895,"src":"18094:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:28"},"returnParameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5895,"src":"18128:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:28"},"scope":6516,"src":"18080:5181:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5928,"nodeType":"Block","src":"23434:171:28","statements":[{"id":5927,"nodeType":"UncheckedBlock","src":"23444:155:28","statements":[{"assignments":[5907],"declarations":[{"constant":false,"id":5907,"mutability":"mutable","name":"result","nameLocation":"23476:6:28","nodeType":"VariableDeclaration","scope":5927,"src":"23468:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5911,"initialValue":{"arguments":[{"id":5909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"23490:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5908,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5895,5929],"referencedDeclaration":5895,"src":"23485:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"23513:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5916,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"23555:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":5915,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"23538:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"23568:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"23577:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"23586:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5913,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"23522:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"23522:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5905,"id":5926,"nodeType":"Return","src":"23506:82:28"}]}]},"documentation":{"id":5896,"nodeType":"StructuredDocumentation","src":"23267:86:28","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5929,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:28","nodeType":"FunctionDefinition","parameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"a","nameLocation":"23380:1:28","nodeType":"VariableDeclaration","scope":5929,"src":"23372:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5897,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5901,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:28","nodeType":"VariableDeclaration","scope":5929,"src":"23383:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":5900,"nodeType":"UserDefinedTypeName","pathNode":{"id":5899,"name":"Rounding","nameLocations":["23383:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"23383:8:28"},"referencedDeclaration":4922,"src":"23383:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:28"},"returnParameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5929,"src":"23425:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5903,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:28"},"scope":6516,"src":"23358:247:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6124,"nodeType":"Block","src":"23796:981:28","statements":[{"assignments":[5938],"declarations":[{"constant":false,"id":5938,"mutability":"mutable","name":"result","nameLocation":"23814:6:28","nodeType":"VariableDeclaration","scope":6124,"src":"23806:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5940,"initialValue":{"hexValue":"30","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:28"},{"assignments":[5942],"declarations":[{"constant":false,"id":5942,"mutability":"mutable","name":"exp","nameLocation":"23842:3:28","nodeType":"VariableDeclaration","scope":6124,"src":"23834:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5943,"nodeType":"VariableDeclarationStatement","src":"23834:11:28"},{"id":6121,"nodeType":"UncheckedBlock","src":"23855:893:28","statements":[{"expression":{"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5944,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23879:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"23907:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5946,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"23891:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"23891:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5959,"nodeType":"ExpressionStatement","src":"23879:51:28"},{"expression":{"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"23944:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5961,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23954:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5963,"nodeType":"ExpressionStatement","src":"23944:13:28"},{"expression":{"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"23971:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5965,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23981:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5967,"nodeType":"ExpressionStatement","src":"23971:13:28"},{"expression":{"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5968,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23999:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24026:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5970,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24010:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24010:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5983,"nodeType":"ExpressionStatement","src":"23999:49:28"},{"expression":{"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24062:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5985,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24072:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5987,"nodeType":"ExpressionStatement","src":"24062:13:28"},{"expression":{"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24089:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5989,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24099:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5991,"nodeType":"ExpressionStatement","src":"24089:13:28"},{"expression":{"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5992,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24117:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24144:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5994,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24128:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24128:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6007,"nodeType":"ExpressionStatement","src":"24117:49:28"},{"expression":{"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24180:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6009,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24190:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6011,"nodeType":"ExpressionStatement","src":"24180:13:28"},{"expression":{"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24207:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6013,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24217:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6015,"nodeType":"ExpressionStatement","src":"24207:13:28"},{"expression":{"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6016,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24235:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24262:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6018,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24246:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24246:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6031,"nodeType":"ExpressionStatement","src":"24235:49:28"},{"expression":{"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24298:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6033,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24308:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6035,"nodeType":"ExpressionStatement","src":"24298:13:28"},{"expression":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24325:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6037,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24335:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6039,"nodeType":"ExpressionStatement","src":"24325:13:28"},{"expression":{"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6040,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24353:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24379:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6042,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24363:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24363:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6055,"nodeType":"ExpressionStatement","src":"24353:47:28"},{"expression":{"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24414:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6057,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24424:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6059,"nodeType":"ExpressionStatement","src":"24414:13:28"},{"expression":{"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24441:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6061,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24451:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6063,"nodeType":"ExpressionStatement","src":"24441:13:28"},{"expression":{"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6064,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24469:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24495:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:28","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6066,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24479:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24479:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6079,"nodeType":"ExpressionStatement","src":"24469:47:28"},{"expression":{"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24530:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6081,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24540:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6083,"nodeType":"ExpressionStatement","src":"24530:13:28"},{"expression":{"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24557:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6085,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24567:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6087,"nodeType":"ExpressionStatement","src":"24557:13:28"},{"expression":{"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6088,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24585:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24611:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6090,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24595:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24595:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6103,"nodeType":"ExpressionStatement","src":"24585:47:28"},{"expression":{"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24646:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6105,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24656:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6107,"nodeType":"ExpressionStatement","src":"24646:13:28"},{"expression":{"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24673:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6109,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24683:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6111,"nodeType":"ExpressionStatement","src":"24673:13:28"},{"expression":{"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24701:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"24727:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6113,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"24711:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"24711:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6120,"nodeType":"ExpressionStatement","src":"24701:36:28"}]},{"expression":{"id":6122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"24764:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5936,"id":6123,"nodeType":"Return","src":"24757:13:28"}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"23611:119:28","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6125,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:28","nodeType":"FunctionDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"value","nameLocation":"23757:5:28","nodeType":"VariableDeclaration","scope":6125,"src":"23749:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5931,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:28"},"returnParameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6125,"src":"23787:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5934,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:28"},"scope":6516,"src":"23735:1042:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6158,"nodeType":"Block","src":"25010:175:28","statements":[{"id":6157,"nodeType":"UncheckedBlock","src":"25020:159:28","statements":[{"assignments":[6137],"declarations":[{"constant":false,"id":6137,"mutability":"mutable","name":"result","nameLocation":"25052:6:28","nodeType":"VariableDeclaration","scope":6157,"src":"25044:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6141,"initialValue":{"arguments":[{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"25066:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6125,6159],"referencedDeclaration":6125,"src":"25061:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"25093:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6146,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"25135:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":6145,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"25118:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"25153:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"25162:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6143,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"25102:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"25102:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6135,"id":6156,"nodeType":"Return","src":"25086:82:28"}]}]},"documentation":{"id":6126,"nodeType":"StructuredDocumentation","src":"24783:142:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6159,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:28","nodeType":"FunctionDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"value","nameLocation":"24952:5:28","nodeType":"VariableDeclaration","scope":6159,"src":"24944:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6127,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6131,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:28","nodeType":"VariableDeclaration","scope":6159,"src":"24959:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":6130,"nodeType":"UserDefinedTypeName","pathNode":{"id":6129,"name":"Rounding","nameLocations":["24959:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"24959:8:28"},"referencedDeclaration":4922,"src":"24959:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:28"},"returnParameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6159,"src":"25001:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6133,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:28"},"scope":6516,"src":"24930:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6287,"nodeType":"Block","src":"25378:854:28","statements":[{"assignments":[6168],"declarations":[{"constant":false,"id":6168,"mutability":"mutable","name":"result","nameLocation":"25396:6:28","nodeType":"VariableDeclaration","scope":6287,"src":"25388:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6170,"initialValue":{"hexValue":"30","id":6169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:28"},{"id":6284,"nodeType":"UncheckedBlock","src":"25416:787:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25444:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6187,"nodeType":"IfStatement","src":"25440:103:28","trueBody":{"id":6186,"nodeType":"Block","src":"25463:80:28","statements":[{"expression":{"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25481:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6181,"nodeType":"ExpressionStatement","src":"25481:17:28"},{"expression":{"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25516:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6185,"nodeType":"ExpressionStatement","src":"25516:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25560:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6204,"nodeType":"IfStatement","src":"25556:103:28","trueBody":{"id":6203,"nodeType":"Block","src":"25579:80:28","statements":[{"expression":{"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25597:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6198,"nodeType":"ExpressionStatement","src":"25597:17:28"},{"expression":{"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25632:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6202,"nodeType":"ExpressionStatement","src":"25632:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25676:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6221,"nodeType":"IfStatement","src":"25672:103:28","trueBody":{"id":6220,"nodeType":"Block","src":"25695:80:28","statements":[{"expression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25713:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6215,"nodeType":"ExpressionStatement","src":"25713:17:28"},{"expression":{"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25748:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6219,"nodeType":"ExpressionStatement","src":"25748:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25792:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6238,"nodeType":"IfStatement","src":"25788:100:28","trueBody":{"id":6237,"nodeType":"Block","src":"25810:78:28","statements":[{"expression":{"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25828:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6232,"nodeType":"ExpressionStatement","src":"25828:16:28"},{"expression":{"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25862:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6236,"nodeType":"ExpressionStatement","src":"25862:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25905:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6255,"nodeType":"IfStatement","src":"25901:100:28","trueBody":{"id":6254,"nodeType":"Block","src":"25923:78:28","statements":[{"expression":{"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"25941:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6249,"nodeType":"ExpressionStatement","src":"25941:16:28"},{"expression":{"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25975:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6253,"nodeType":"ExpressionStatement","src":"25975:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"26018:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6272,"nodeType":"IfStatement","src":"26014:100:28","trueBody":{"id":6271,"nodeType":"Block","src":"26036:78:28","statements":[{"expression":{"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"26054:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6266,"nodeType":"ExpressionStatement","src":"26054:16:28"},{"expression":{"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"26088:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6270,"nodeType":"ExpressionStatement","src":"26088:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"26131:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6283,"nodeType":"IfStatement","src":"26127:66:28","trueBody":{"id":6282,"nodeType":"Block","src":"26149:44:28","statements":[{"expression":{"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"26167:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6281,"nodeType":"ExpressionStatement","src":"26167:11:28"}]}}]},{"expression":{"id":6285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"26219:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6166,"id":6286,"nodeType":"Return","src":"26212:13:28"}]},"documentation":{"id":6160,"nodeType":"StructuredDocumentation","src":"25191:120:28","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6288,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:28","nodeType":"FunctionDefinition","parameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"value","nameLocation":"25339:5:28","nodeType":"VariableDeclaration","scope":6288,"src":"25331:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6161,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:28"},"returnParameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6288,"src":"25369:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:28"},"scope":6516,"src":"25316:916:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6321,"nodeType":"Block","src":"26467:177:28","statements":[{"id":6320,"nodeType":"UncheckedBlock","src":"26477:161:28","statements":[{"assignments":[6300],"declarations":[{"constant":false,"id":6300,"mutability":"mutable","name":"result","nameLocation":"26509:6:28","nodeType":"VariableDeclaration","scope":6320,"src":"26501:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6299,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6304,"initialValue":{"arguments":[{"id":6302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"26524:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6301,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6288,6322],"referencedDeclaration":6288,"src":"26518:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"26551:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6309,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"26593:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":6308,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"26576:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"26612:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"26621:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6306,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"26560:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"26560:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6298,"id":6319,"nodeType":"Return","src":"26544:83:28"}]}]},"documentation":{"id":6289,"nodeType":"StructuredDocumentation","src":"26238:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6322,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:28","nodeType":"FunctionDefinition","parameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"value","nameLocation":"26409:5:28","nodeType":"VariableDeclaration","scope":6322,"src":"26401:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6290,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6294,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:28","nodeType":"VariableDeclaration","scope":6322,"src":"26416:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":6293,"nodeType":"UserDefinedTypeName","pathNode":{"id":6292,"name":"Rounding","nameLocations":["26416:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"26416:8:28"},"referencedDeclaration":4922,"src":"26416:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:28"},"returnParameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6322,"src":"26458:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6296,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:28"},"scope":6516,"src":"26386:258:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"26964:674:28","statements":[{"assignments":[6331],"declarations":[{"constant":false,"id":6331,"mutability":"mutable","name":"result","nameLocation":"26982:6:28","nodeType":"VariableDeclaration","scope":6458,"src":"26974:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6330,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6333,"initialValue":{"hexValue":"30","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:28"},{"assignments":[6335],"declarations":[{"constant":false,"id":6335,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:28","nodeType":"VariableDeclaration","scope":6458,"src":"27002:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6336,"nodeType":"VariableDeclarationStatement","src":"27002:12:28"},{"id":6455,"nodeType":"UncheckedBlock","src":"27024:585:28","statements":[{"expression":{"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6337,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27048:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27071:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6338,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27055:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27055:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6350,"nodeType":"ExpressionStatement","src":"27048:46:28"},{"expression":{"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27108:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6352,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27118:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6356,"nodeType":"ExpressionStatement","src":"27108:20:28"},{"expression":{"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27142:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6358,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27152:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6362,"nodeType":"ExpressionStatement","src":"27142:19:28"},{"expression":{"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6363,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27176:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27199:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":6372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6364,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27183:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27183:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6376,"nodeType":"ExpressionStatement","src":"27176:45:28"},{"expression":{"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27235:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6378,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27245:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6382,"nodeType":"ExpressionStatement","src":"27235:19:28"},{"expression":{"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27268:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6384,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27278:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6388,"nodeType":"ExpressionStatement","src":"27268:18:28"},{"expression":{"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6389,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27301:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27324:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6390,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27308:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27308:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6402,"nodeType":"ExpressionStatement","src":"27301:45:28"},{"expression":{"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27360:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27370:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6408,"nodeType":"ExpressionStatement","src":"27360:19:28"},{"expression":{"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27393:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6410,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27403:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6414,"nodeType":"ExpressionStatement","src":"27393:18:28"},{"expression":{"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6415,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27426:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27449:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6416,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27433:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27433:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6428,"nodeType":"ExpressionStatement","src":"27426:45:28"},{"expression":{"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27485:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6430,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27495:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6434,"nodeType":"ExpressionStatement","src":"27485:19:28"},{"expression":{"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27518:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6436,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"27528:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6440,"nodeType":"ExpressionStatement","src":"27518:18:28"},{"expression":{"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27551:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"27577:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6442,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27561:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27561:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6454,"nodeType":"ExpressionStatement","src":"27551:47:28"}]},{"expression":{"id":6456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"27625:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6329,"id":6457,"nodeType":"Return","src":"27618:13:28"}]},"documentation":{"id":6323,"nodeType":"StructuredDocumentation","src":"26650:246:28","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:28","nodeType":"FunctionDefinition","parameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"value","nameLocation":"26925:5:28","nodeType":"VariableDeclaration","scope":6459,"src":"26917:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6324,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:28"},"returnParameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6459,"src":"26955:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6327,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:28"},"scope":6516,"src":"26901:737:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6495,"nodeType":"Block","src":"27875:184:28","statements":[{"id":6494,"nodeType":"UncheckedBlock","src":"27885:168:28","statements":[{"assignments":[6471],"declarations":[{"constant":false,"id":6471,"mutability":"mutable","name":"result","nameLocation":"27917:6:28","nodeType":"VariableDeclaration","scope":6494,"src":"27909:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6470,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6475,"initialValue":{"arguments":[{"id":6473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"27933:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6472,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6459,6496],"referencedDeclaration":6459,"src":"27926:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"27960:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6480,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"28002:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":6479,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"27985:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4922_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"28021:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"28036:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6477,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"27969:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"27969:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6469,"id":6493,"nodeType":"Return","src":"27953:89:28"}]}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"27644:144:28","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6496,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:28","nodeType":"FunctionDefinition","parameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"27817:5:28","nodeType":"VariableDeclaration","scope":6496,"src":"27809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6461,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6465,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:28","nodeType":"VariableDeclaration","scope":6496,"src":"27824:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":6464,"nodeType":"UserDefinedTypeName","pathNode":{"id":6463,"name":"Rounding","nameLocations":["27824:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"27824:8:28"},"referencedDeclaration":4922,"src":"27824:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:28"},"returnParameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6496,"src":"27866:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6467,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:28"},"scope":6516,"src":"27793:266:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6514,"nodeType":"Block","src":"28257:48:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6507,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"28280:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}],"id":6506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6505,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:28","typeDescriptions":{}}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6504,"id":6513,"nodeType":"Return","src":"28267:31:28"}]},"documentation":{"id":6497,"nodeType":"StructuredDocumentation","src":"28065:113:28","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6515,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:28","nodeType":"FunctionDefinition","parameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:28","nodeType":"VariableDeclaration","scope":6515,"src":"28209:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"},"typeName":{"id":6499,"nodeType":"UserDefinedTypeName","pathNode":{"id":6498,"name":"Rounding","nameLocations":["28209:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":4922,"src":"28209:8:28"},"referencedDeclaration":4922,"src":"28209:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4922","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:28"},"returnParameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6515,"src":"28251:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6502,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:28"},"scope":6516,"src":"28183:122:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6517,"src":"281:28026:28","usedErrors":[],"usedEvents":[]}],"src":"103:28205:28"},"id":28},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8281]},"id":8282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6518,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6519,"nodeType":"StructuredDocumentation","src":"218:550:29","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8281,"linearizedBaseContracts":[8281],"name":"SafeCast","nameLocation":"777:8:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6520,"nodeType":"StructuredDocumentation","src":"792:68:29","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6526,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:29","nodeType":"ErrorDefinition","parameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"bits","nameLocation":"908:4:29","nodeType":"VariableDeclaration","scope":6526,"src":"902:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6521,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6524,"mutability":"mutable","name":"value","nameLocation":"922:5:29","nodeType":"VariableDeclaration","scope":6526,"src":"914:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6523,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:29"},"src":"865:64:29"},{"documentation":{"id":6527,"nodeType":"StructuredDocumentation","src":"935:75:29","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6531,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:29","nodeType":"ErrorDefinition","parameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"value","nameLocation":"1056:5:29","nodeType":"VariableDeclaration","scope":6531,"src":"1049:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6528,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:29"},"src":"1015:48:29"},{"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"1069:67:29","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6538,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:29","nodeType":"ErrorDefinition","parameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"bits","nameLocation":"1183:4:29","nodeType":"VariableDeclaration","scope":6538,"src":"1177:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6533,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6536,"mutability":"mutable","name":"value","nameLocation":"1196:5:29","nodeType":"VariableDeclaration","scope":6538,"src":"1189:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6535,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:29"},"src":"1141:62:29"},{"documentation":{"id":6539,"nodeType":"StructuredDocumentation","src":"1209:75:29","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6543,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:29","nodeType":"ErrorDefinition","parameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"value","nameLocation":"1331:5:29","nodeType":"VariableDeclaration","scope":6543,"src":"1323:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:29"},"src":"1289:49:29"},{"body":{"id":6570,"nodeType":"Block","src":"1695:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"1709:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6553,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:29","memberName":"max","nodeType":"MemberAccess","src":"1717:17:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6564,"nodeType":"IfStatement","src":"1705:105:29","trueBody":{"id":6563,"nodeType":"Block","src":"1736:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"1793:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6558,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"1757:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6562,"nodeType":"RevertStatement","src":"1750:49:29"}]}},{"expression":{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"1834:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6565,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:29","typeDescriptions":{}}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6550,"id":6569,"nodeType":"Return","src":"1819:21:29"}]},"documentation":{"id":6544,"nodeType":"StructuredDocumentation","src":"1344:280:29","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6571,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:29","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"value","nameLocation":"1656:5:29","nodeType":"VariableDeclaration","scope":6571,"src":"1648:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:29"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6571,"src":"1686:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6548,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:29"},"scope":8281,"src":"1629:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6598,"nodeType":"Block","src":"2204:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"2218:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6581,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:29","memberName":"max","nodeType":"MemberAccess","src":"2226:17:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6592,"nodeType":"IfStatement","src":"2214:105:29","trueBody":{"id":6591,"nodeType":"Block","src":"2245:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"2302:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6586,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"2266:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6590,"nodeType":"RevertStatement","src":"2259:49:29"}]}},{"expression":{"arguments":[{"id":6595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"2343:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6593,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:29","typeDescriptions":{}}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6578,"id":6597,"nodeType":"Return","src":"2328:21:29"}]},"documentation":{"id":6572,"nodeType":"StructuredDocumentation","src":"1853:280:29","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6599,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:29","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"value","nameLocation":"2165:5:29","nodeType":"VariableDeclaration","scope":6599,"src":"2157:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:29"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6599,"src":"2195:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6576,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:29"},"scope":8281,"src":"2138:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6626,"nodeType":"Block","src":"2713:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"2727:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6609,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:29","memberName":"max","nodeType":"MemberAccess","src":"2735:17:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6620,"nodeType":"IfStatement","src":"2723:105:29","trueBody":{"id":6619,"nodeType":"Block","src":"2754:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"2811:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6614,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"2775:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6618,"nodeType":"RevertStatement","src":"2768:49:29"}]}},{"expression":{"arguments":[{"id":6623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"2852:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6621,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:29","typeDescriptions":{}}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6606,"id":6625,"nodeType":"Return","src":"2837:21:29"}]},"documentation":{"id":6600,"nodeType":"StructuredDocumentation","src":"2362:280:29","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6627,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:29","nodeType":"FunctionDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"value","nameLocation":"2674:5:29","nodeType":"VariableDeclaration","scope":6627,"src":"2666:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:29"},"returnParameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6627,"src":"2704:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6604,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:29"},"scope":8281,"src":"2647:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6654,"nodeType":"Block","src":"3222:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"3236:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6637,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:29","memberName":"max","nodeType":"MemberAccess","src":"3244:17:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6648,"nodeType":"IfStatement","src":"3232:105:29","trueBody":{"id":6647,"nodeType":"Block","src":"3263:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"3320:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6642,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"3284:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6646,"nodeType":"RevertStatement","src":"3277:49:29"}]}},{"expression":{"arguments":[{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"3361:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6649,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:29","typeDescriptions":{}}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6634,"id":6653,"nodeType":"Return","src":"3346:21:29"}]},"documentation":{"id":6628,"nodeType":"StructuredDocumentation","src":"2871:280:29","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6655,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:29","nodeType":"FunctionDefinition","parameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"value","nameLocation":"3183:5:29","nodeType":"VariableDeclaration","scope":6655,"src":"3175:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:29"},"returnParameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6655,"src":"3213:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6632,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:29"},"scope":8281,"src":"3156:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6682,"nodeType":"Block","src":"3731:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"3745:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6665,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6664,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:29","memberName":"max","nodeType":"MemberAccess","src":"3753:17:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6676,"nodeType":"IfStatement","src":"3741:105:29","trueBody":{"id":6675,"nodeType":"Block","src":"3772:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"3829:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6670,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"3793:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6674,"nodeType":"RevertStatement","src":"3786:49:29"}]}},{"expression":{"arguments":[{"id":6679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"3870:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6677,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:29","typeDescriptions":{}}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6662,"id":6681,"nodeType":"Return","src":"3855:21:29"}]},"documentation":{"id":6656,"nodeType":"StructuredDocumentation","src":"3380:280:29","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6683,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:29","nodeType":"FunctionDefinition","parameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6658,"mutability":"mutable","name":"value","nameLocation":"3692:5:29","nodeType":"VariableDeclaration","scope":6683,"src":"3684:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:29"},"returnParameters":{"id":6662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6683,"src":"3722:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6660,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:29"},"scope":8281,"src":"3665:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6710,"nodeType":"Block","src":"4240:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4254:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6693,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6692,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:29","memberName":"max","nodeType":"MemberAccess","src":"4262:17:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6704,"nodeType":"IfStatement","src":"4250:105:29","trueBody":{"id":6703,"nodeType":"Block","src":"4281:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4338:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6698,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"4302:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6702,"nodeType":"RevertStatement","src":"4295:49:29"}]}},{"expression":{"arguments":[{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4379:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6705,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:29","typeDescriptions":{}}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6690,"id":6709,"nodeType":"Return","src":"4364:21:29"}]},"documentation":{"id":6684,"nodeType":"StructuredDocumentation","src":"3889:280:29","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6711,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:29","nodeType":"FunctionDefinition","parameters":{"id":6687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6686,"mutability":"mutable","name":"value","nameLocation":"4201:5:29","nodeType":"VariableDeclaration","scope":6711,"src":"4193:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6685,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:29"},"returnParameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6711,"src":"4231:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6688,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:29"},"scope":8281,"src":"4174:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6738,"nodeType":"Block","src":"4749:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"4763:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6721,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6720,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:29","memberName":"max","nodeType":"MemberAccess","src":"4771:17:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6732,"nodeType":"IfStatement","src":"4759:105:29","trueBody":{"id":6731,"nodeType":"Block","src":"4790:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"4847:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6726,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"4811:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6730,"nodeType":"RevertStatement","src":"4804:49:29"}]}},{"expression":{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"4888:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6733,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:29","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6718,"id":6737,"nodeType":"Return","src":"4873:21:29"}]},"documentation":{"id":6712,"nodeType":"StructuredDocumentation","src":"4398:280:29","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6739,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:29","nodeType":"FunctionDefinition","parameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6714,"mutability":"mutable","name":"value","nameLocation":"4710:5:29","nodeType":"VariableDeclaration","scope":6739,"src":"4702:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:29"},"returnParameters":{"id":6718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6739,"src":"4740:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6716,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:29"},"scope":8281,"src":"4683:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6766,"nodeType":"Block","src":"5258:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5272:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6749,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:29","memberName":"max","nodeType":"MemberAccess","src":"5280:17:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6760,"nodeType":"IfStatement","src":"5268:105:29","trueBody":{"id":6759,"nodeType":"Block","src":"5299:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5356:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6754,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"5320:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6758,"nodeType":"RevertStatement","src":"5313:49:29"}]}},{"expression":{"arguments":[{"id":6763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5397:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6761,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:29","typeDescriptions":{}}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6746,"id":6765,"nodeType":"Return","src":"5382:21:29"}]},"documentation":{"id":6740,"nodeType":"StructuredDocumentation","src":"4907:280:29","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:29","nodeType":"FunctionDefinition","parameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"value","nameLocation":"5219:5:29","nodeType":"VariableDeclaration","scope":6767,"src":"5211:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6741,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:29"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6767,"src":"5249:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6744,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:29"},"scope":8281,"src":"5192:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6794,"nodeType":"Block","src":"5767:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"5781:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6777,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:29","memberName":"max","nodeType":"MemberAccess","src":"5789:17:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6788,"nodeType":"IfStatement","src":"5777:105:29","trueBody":{"id":6787,"nodeType":"Block","src":"5808:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"5865:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6782,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"5829:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6786,"nodeType":"RevertStatement","src":"5822:49:29"}]}},{"expression":{"arguments":[{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"5906:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6789,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:29","typeDescriptions":{}}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6774,"id":6793,"nodeType":"Return","src":"5891:21:29"}]},"documentation":{"id":6768,"nodeType":"StructuredDocumentation","src":"5416:280:29","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6795,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:29","nodeType":"FunctionDefinition","parameters":{"id":6771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6770,"mutability":"mutable","name":"value","nameLocation":"5728:5:29","nodeType":"VariableDeclaration","scope":6795,"src":"5720:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6769,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:29"},"returnParameters":{"id":6774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6795,"src":"5758:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6772,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:29"},"scope":8281,"src":"5701:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6822,"nodeType":"Block","src":"6276:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"6290:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6805,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:29","memberName":"max","nodeType":"MemberAccess","src":"6298:17:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6816,"nodeType":"IfStatement","src":"6286:105:29","trueBody":{"id":6815,"nodeType":"Block","src":"6317:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"6374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6810,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"6338:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6814,"nodeType":"RevertStatement","src":"6331:49:29"}]}},{"expression":{"arguments":[{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"6415:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6817,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:29","typeDescriptions":{}}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6802,"id":6821,"nodeType":"Return","src":"6400:21:29"}]},"documentation":{"id":6796,"nodeType":"StructuredDocumentation","src":"5925:280:29","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6823,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:29","nodeType":"FunctionDefinition","parameters":{"id":6799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"mutability":"mutable","name":"value","nameLocation":"6237:5:29","nodeType":"VariableDeclaration","scope":6823,"src":"6229:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6797,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:29"},"returnParameters":{"id":6802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6823,"src":"6267:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6800,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:29"},"scope":8281,"src":"6210:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6850,"nodeType":"Block","src":"6785:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"6799:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6833,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6832,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:29","memberName":"max","nodeType":"MemberAccess","src":"6807:17:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6844,"nodeType":"IfStatement","src":"6795:105:29","trueBody":{"id":6843,"nodeType":"Block","src":"6826:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"6883:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6838,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"6847:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6842,"nodeType":"RevertStatement","src":"6840:49:29"}]}},{"expression":{"arguments":[{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"6924:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6845,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:29","typeDescriptions":{}}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6830,"id":6849,"nodeType":"Return","src":"6909:21:29"}]},"documentation":{"id":6824,"nodeType":"StructuredDocumentation","src":"6434:280:29","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6851,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:29","nodeType":"FunctionDefinition","parameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"value","nameLocation":"6746:5:29","nodeType":"VariableDeclaration","scope":6851,"src":"6738:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6825,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:29"},"returnParameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6851,"src":"6776:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6828,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:29"},"scope":8281,"src":"6719:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6878,"nodeType":"Block","src":"7294:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"7308:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6861,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:29","memberName":"max","nodeType":"MemberAccess","src":"7316:17:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6872,"nodeType":"IfStatement","src":"7304:105:29","trueBody":{"id":6871,"nodeType":"Block","src":"7335:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"7392:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6866,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"7356:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6870,"nodeType":"RevertStatement","src":"7349:49:29"}]}},{"expression":{"arguments":[{"id":6875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"7433:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6873,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:29","typeDescriptions":{}}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6858,"id":6877,"nodeType":"Return","src":"7418:21:29"}]},"documentation":{"id":6852,"nodeType":"StructuredDocumentation","src":"6943:280:29","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6879,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:29","nodeType":"FunctionDefinition","parameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"value","nameLocation":"7255:5:29","nodeType":"VariableDeclaration","scope":6879,"src":"7247:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6853,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:29"},"returnParameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6879,"src":"7285:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6856,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:29"},"scope":8281,"src":"7228:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6906,"nodeType":"Block","src":"7803:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"7817:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6889,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6888,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:29","memberName":"max","nodeType":"MemberAccess","src":"7825:17:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6900,"nodeType":"IfStatement","src":"7813:105:29","trueBody":{"id":6899,"nodeType":"Block","src":"7844:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"7901:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6894,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"7865:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6898,"nodeType":"RevertStatement","src":"7858:49:29"}]}},{"expression":{"arguments":[{"id":6903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"7942:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6901,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:29","typeDescriptions":{}}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6886,"id":6905,"nodeType":"Return","src":"7927:21:29"}]},"documentation":{"id":6880,"nodeType":"StructuredDocumentation","src":"7452:280:29","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6907,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:29","nodeType":"FunctionDefinition","parameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6882,"mutability":"mutable","name":"value","nameLocation":"7764:5:29","nodeType":"VariableDeclaration","scope":6907,"src":"7756:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6881,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:29"},"returnParameters":{"id":6886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6907,"src":"7794:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6884,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:29"},"scope":8281,"src":"7737:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6934,"nodeType":"Block","src":"8312:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"8326:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6917,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:29","memberName":"max","nodeType":"MemberAccess","src":"8334:17:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6928,"nodeType":"IfStatement","src":"8322:105:29","trueBody":{"id":6927,"nodeType":"Block","src":"8353:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"8410:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6922,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"8374:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6926,"nodeType":"RevertStatement","src":"8367:49:29"}]}},{"expression":{"arguments":[{"id":6931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"8451:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6929,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:29","typeDescriptions":{}}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6914,"id":6933,"nodeType":"Return","src":"8436:21:29"}]},"documentation":{"id":6908,"nodeType":"StructuredDocumentation","src":"7961:280:29","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6935,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:29","nodeType":"FunctionDefinition","parameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"value","nameLocation":"8273:5:29","nodeType":"VariableDeclaration","scope":6935,"src":"8265:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6909,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:29"},"returnParameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6935,"src":"8303:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6912,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:29"},"scope":8281,"src":"8246:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6962,"nodeType":"Block","src":"8821:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"8835:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6945,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6944,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:29","memberName":"max","nodeType":"MemberAccess","src":"8843:17:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6956,"nodeType":"IfStatement","src":"8831:105:29","trueBody":{"id":6955,"nodeType":"Block","src":"8862:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"8919:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6950,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"8883:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6954,"nodeType":"RevertStatement","src":"8876:49:29"}]}},{"expression":{"arguments":[{"id":6959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"8960:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6957,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:29","typeDescriptions":{}}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6942,"id":6961,"nodeType":"Return","src":"8945:21:29"}]},"documentation":{"id":6936,"nodeType":"StructuredDocumentation","src":"8470:280:29","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6963,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:29","nodeType":"FunctionDefinition","parameters":{"id":6939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"value","nameLocation":"8782:5:29","nodeType":"VariableDeclaration","scope":6963,"src":"8774:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6937,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:29"},"returnParameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6963,"src":"8812:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6940,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:29"},"scope":8281,"src":"8755:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6990,"nodeType":"Block","src":"9330:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"9344:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6973,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6972,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:29","memberName":"max","nodeType":"MemberAccess","src":"9352:17:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6984,"nodeType":"IfStatement","src":"9340:105:29","trueBody":{"id":6983,"nodeType":"Block","src":"9371:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"9428:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6978,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"9392:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6982,"nodeType":"RevertStatement","src":"9385:49:29"}]}},{"expression":{"arguments":[{"id":6987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"9469:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6985,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:29","typeDescriptions":{}}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6970,"id":6989,"nodeType":"Return","src":"9454:21:29"}]},"documentation":{"id":6964,"nodeType":"StructuredDocumentation","src":"8979:280:29","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6991,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:29","nodeType":"FunctionDefinition","parameters":{"id":6967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"value","nameLocation":"9291:5:29","nodeType":"VariableDeclaration","scope":6991,"src":"9283:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6965,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:29"},"returnParameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6991,"src":"9321:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6968,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:29"},"scope":8281,"src":"9264:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7018,"nodeType":"Block","src":"9839:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"9853:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7001,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7000,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:29","memberName":"max","nodeType":"MemberAccess","src":"9861:17:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7012,"nodeType":"IfStatement","src":"9849:105:29","trueBody":{"id":7011,"nodeType":"Block","src":"9880:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"9937:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7006,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"9901:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7010,"nodeType":"RevertStatement","src":"9894:49:29"}]}},{"expression":{"arguments":[{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"9978:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7013,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:29","typeDescriptions":{}}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6998,"id":7017,"nodeType":"Return","src":"9963:21:29"}]},"documentation":{"id":6992,"nodeType":"StructuredDocumentation","src":"9488:280:29","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7019,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:29","nodeType":"FunctionDefinition","parameters":{"id":6995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6994,"mutability":"mutable","name":"value","nameLocation":"9800:5:29","nodeType":"VariableDeclaration","scope":7019,"src":"9792:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6993,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:29"},"returnParameters":{"id":6998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7019,"src":"9830:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6996,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:29"},"scope":8281,"src":"9773:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7046,"nodeType":"Block","src":"10348:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"10362:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7029,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7028,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:29","memberName":"max","nodeType":"MemberAccess","src":"10370:17:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7040,"nodeType":"IfStatement","src":"10358:105:29","trueBody":{"id":7039,"nodeType":"Block","src":"10389:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"10446:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7034,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"10410:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7038,"nodeType":"RevertStatement","src":"10403:49:29"}]}},{"expression":{"arguments":[{"id":7043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"10487:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7041,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:29","typeDescriptions":{}}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7026,"id":7045,"nodeType":"Return","src":"10472:21:29"}]},"documentation":{"id":7020,"nodeType":"StructuredDocumentation","src":"9997:280:29","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7047,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:29","nodeType":"FunctionDefinition","parameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"value","nameLocation":"10309:5:29","nodeType":"VariableDeclaration","scope":7047,"src":"10301:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7021,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:29"},"returnParameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7047,"src":"10339:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7024,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:29"},"scope":8281,"src":"10282:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7074,"nodeType":"Block","src":"10857:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"10871:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7057,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7056,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:29","memberName":"max","nodeType":"MemberAccess","src":"10879:17:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7068,"nodeType":"IfStatement","src":"10867:105:29","trueBody":{"id":7067,"nodeType":"Block","src":"10898:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"10955:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7062,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"10919:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7066,"nodeType":"RevertStatement","src":"10912:49:29"}]}},{"expression":{"arguments":[{"id":7071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"10996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7069,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:29","typeDescriptions":{}}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7054,"id":7073,"nodeType":"Return","src":"10981:21:29"}]},"documentation":{"id":7048,"nodeType":"StructuredDocumentation","src":"10506:280:29","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7075,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:29","nodeType":"FunctionDefinition","parameters":{"id":7051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"mutability":"mutable","name":"value","nameLocation":"10818:5:29","nodeType":"VariableDeclaration","scope":7075,"src":"10810:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7049,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:29"},"returnParameters":{"id":7054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7075,"src":"10848:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7052,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:29"},"scope":8281,"src":"10791:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7102,"nodeType":"Block","src":"11360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"11374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7085,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7084,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:29","memberName":"max","nodeType":"MemberAccess","src":"11382:16:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7096,"nodeType":"IfStatement","src":"11370:103:29","trueBody":{"id":7095,"nodeType":"Block","src":"11400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"11456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7090,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"11421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7094,"nodeType":"RevertStatement","src":"11414:48:29"}]}},{"expression":{"arguments":[{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"11496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7097,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:29","typeDescriptions":{}}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7082,"id":7101,"nodeType":"Return","src":"11482:20:29"}]},"documentation":{"id":7076,"nodeType":"StructuredDocumentation","src":"11015:276:29","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7103,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"mutability":"mutable","name":"value","nameLocation":"11322:5:29","nodeType":"VariableDeclaration","scope":7103,"src":"11314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:29"},"returnParameters":{"id":7082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7103,"src":"11352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7080,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:29"},"scope":8281,"src":"11296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7130,"nodeType":"Block","src":"11860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"11874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7113,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:29","memberName":"max","nodeType":"MemberAccess","src":"11882:16:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7124,"nodeType":"IfStatement","src":"11870:103:29","trueBody":{"id":7123,"nodeType":"Block","src":"11900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"11956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7118,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"11921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7122,"nodeType":"RevertStatement","src":"11914:48:29"}]}},{"expression":{"arguments":[{"id":7127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"11996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7125,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:29","typeDescriptions":{}}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7110,"id":7129,"nodeType":"Return","src":"11982:20:29"}]},"documentation":{"id":7104,"nodeType":"StructuredDocumentation","src":"11515:276:29","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7131,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7106,"mutability":"mutable","name":"value","nameLocation":"11822:5:29","nodeType":"VariableDeclaration","scope":7131,"src":"11814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7105,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:29"},"returnParameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7131,"src":"11852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7108,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:29"},"scope":8281,"src":"11796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7158,"nodeType":"Block","src":"12360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"12374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7141,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7140,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:29","memberName":"max","nodeType":"MemberAccess","src":"12382:16:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7152,"nodeType":"IfStatement","src":"12370:103:29","trueBody":{"id":7151,"nodeType":"Block","src":"12400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"12456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7146,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"12421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7150,"nodeType":"RevertStatement","src":"12414:48:29"}]}},{"expression":{"arguments":[{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"12496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7153,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:29","typeDescriptions":{}}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7138,"id":7157,"nodeType":"Return","src":"12482:20:29"}]},"documentation":{"id":7132,"nodeType":"StructuredDocumentation","src":"12015:276:29","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7159,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7134,"mutability":"mutable","name":"value","nameLocation":"12322:5:29","nodeType":"VariableDeclaration","scope":7159,"src":"12314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7133,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:29"},"returnParameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7159,"src":"12352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7136,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:29"},"scope":8281,"src":"12296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7186,"nodeType":"Block","src":"12860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"12874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7169,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7168,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:29","memberName":"max","nodeType":"MemberAccess","src":"12882:16:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7180,"nodeType":"IfStatement","src":"12870:103:29","trueBody":{"id":7179,"nodeType":"Block","src":"12900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"12956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7174,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"12921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7178,"nodeType":"RevertStatement","src":"12914:48:29"}]}},{"expression":{"arguments":[{"id":7183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"12996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7181,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:29","typeDescriptions":{}}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7166,"id":7185,"nodeType":"Return","src":"12982:20:29"}]},"documentation":{"id":7160,"nodeType":"StructuredDocumentation","src":"12515:276:29","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7187,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7162,"mutability":"mutable","name":"value","nameLocation":"12822:5:29","nodeType":"VariableDeclaration","scope":7187,"src":"12814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7161,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:29"},"returnParameters":{"id":7166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7187,"src":"12852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7164,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:29"},"scope":8281,"src":"12796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7214,"nodeType":"Block","src":"13360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"13374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7197,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:29","memberName":"max","nodeType":"MemberAccess","src":"13382:16:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7208,"nodeType":"IfStatement","src":"13370:103:29","trueBody":{"id":7207,"nodeType":"Block","src":"13400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"13456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7202,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"13421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7206,"nodeType":"RevertStatement","src":"13414:48:29"}]}},{"expression":{"arguments":[{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"13496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7209,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:29","typeDescriptions":{}}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7194,"id":7213,"nodeType":"Return","src":"13482:20:29"}]},"documentation":{"id":7188,"nodeType":"StructuredDocumentation","src":"13015:276:29","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7215,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"value","nameLocation":"13322:5:29","nodeType":"VariableDeclaration","scope":7215,"src":"13314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7189,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:29"},"returnParameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7215,"src":"13352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7192,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:29"},"scope":8281,"src":"13296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7242,"nodeType":"Block","src":"13860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"13874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7225,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:29","memberName":"max","nodeType":"MemberAccess","src":"13882:16:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7236,"nodeType":"IfStatement","src":"13870:103:29","trueBody":{"id":7235,"nodeType":"Block","src":"13900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"13956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7230,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"13921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7234,"nodeType":"RevertStatement","src":"13914:48:29"}]}},{"expression":{"arguments":[{"id":7239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"13996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7237,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:29","typeDescriptions":{}}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7222,"id":7241,"nodeType":"Return","src":"13982:20:29"}]},"documentation":{"id":7216,"nodeType":"StructuredDocumentation","src":"13515:276:29","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7243,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7218,"mutability":"mutable","name":"value","nameLocation":"13822:5:29","nodeType":"VariableDeclaration","scope":7243,"src":"13814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7217,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:29"},"returnParameters":{"id":7222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7243,"src":"13852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7220,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:29"},"scope":8281,"src":"13796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7270,"nodeType":"Block","src":"14360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"14374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7253,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:29","memberName":"max","nodeType":"MemberAccess","src":"14382:16:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7264,"nodeType":"IfStatement","src":"14370:103:29","trueBody":{"id":7263,"nodeType":"Block","src":"14400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"14456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7258,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"14421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7262,"nodeType":"RevertStatement","src":"14414:48:29"}]}},{"expression":{"arguments":[{"id":7267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"14496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7265,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:29","typeDescriptions":{}}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7250,"id":7269,"nodeType":"Return","src":"14482:20:29"}]},"documentation":{"id":7244,"nodeType":"StructuredDocumentation","src":"14015:276:29","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"value","nameLocation":"14322:5:29","nodeType":"VariableDeclaration","scope":7271,"src":"14314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7245,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:29"},"returnParameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7271,"src":"14352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7248,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:29"},"scope":8281,"src":"14296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7298,"nodeType":"Block","src":"14860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"14874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7281,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7280,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:29","memberName":"max","nodeType":"MemberAccess","src":"14882:16:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7292,"nodeType":"IfStatement","src":"14870:103:29","trueBody":{"id":7291,"nodeType":"Block","src":"14900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"14956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7286,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"14921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7290,"nodeType":"RevertStatement","src":"14914:48:29"}]}},{"expression":{"arguments":[{"id":7295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"14996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7293,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:29","typeDescriptions":{}}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7278,"id":7297,"nodeType":"Return","src":"14982:20:29"}]},"documentation":{"id":7272,"nodeType":"StructuredDocumentation","src":"14515:276:29","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7299,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7274,"mutability":"mutable","name":"value","nameLocation":"14822:5:29","nodeType":"VariableDeclaration","scope":7299,"src":"14814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7273,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:29"},"returnParameters":{"id":7278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7299,"src":"14852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7276,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:29"},"scope":8281,"src":"14796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7326,"nodeType":"Block","src":"15360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"15374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7309,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7308,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:29","memberName":"max","nodeType":"MemberAccess","src":"15382:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7320,"nodeType":"IfStatement","src":"15370:103:29","trueBody":{"id":7319,"nodeType":"Block","src":"15400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"15456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7314,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"15421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7318,"nodeType":"RevertStatement","src":"15414:48:29"}]}},{"expression":{"arguments":[{"id":7323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"15496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7321,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:29","typeDescriptions":{}}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7306,"id":7325,"nodeType":"Return","src":"15482:20:29"}]},"documentation":{"id":7300,"nodeType":"StructuredDocumentation","src":"15015:276:29","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7302,"mutability":"mutable","name":"value","nameLocation":"15322:5:29","nodeType":"VariableDeclaration","scope":7327,"src":"15314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7301,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:29"},"returnParameters":{"id":7306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7327,"src":"15352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7304,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:29"},"scope":8281,"src":"15296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7354,"nodeType":"Block","src":"15860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"15874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7337,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7336,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:29","memberName":"max","nodeType":"MemberAccess","src":"15882:16:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7348,"nodeType":"IfStatement","src":"15870:103:29","trueBody":{"id":7347,"nodeType":"Block","src":"15900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"15956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7342,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"15921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7346,"nodeType":"RevertStatement","src":"15914:48:29"}]}},{"expression":{"arguments":[{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"15996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7349,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:29","typeDescriptions":{}}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7334,"id":7353,"nodeType":"Return","src":"15982:20:29"}]},"documentation":{"id":7328,"nodeType":"StructuredDocumentation","src":"15515:276:29","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7355,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:29","nodeType":"FunctionDefinition","parameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7330,"mutability":"mutable","name":"value","nameLocation":"15822:5:29","nodeType":"VariableDeclaration","scope":7355,"src":"15814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7329,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:29"},"returnParameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7355,"src":"15852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7332,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:29"},"scope":8281,"src":"15796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7382,"nodeType":"Block","src":"16360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"16374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7365,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:29","memberName":"max","nodeType":"MemberAccess","src":"16382:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7376,"nodeType":"IfStatement","src":"16370:103:29","trueBody":{"id":7375,"nodeType":"Block","src":"16400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"16456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7370,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"16421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7374,"nodeType":"RevertStatement","src":"16414:48:29"}]}},{"expression":{"arguments":[{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"16496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7377,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:29","typeDescriptions":{}}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7362,"id":7381,"nodeType":"Return","src":"16482:20:29"}]},"documentation":{"id":7356,"nodeType":"StructuredDocumentation","src":"16015:276:29","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7383,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:29","nodeType":"FunctionDefinition","parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7358,"mutability":"mutable","name":"value","nameLocation":"16322:5:29","nodeType":"VariableDeclaration","scope":7383,"src":"16314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7357,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:29"},"returnParameters":{"id":7362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7383,"src":"16352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7360,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:29"},"scope":8281,"src":"16296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7410,"nodeType":"Block","src":"16854:146:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"16868:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7393,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:29","memberName":"max","nodeType":"MemberAccess","src":"16876:15:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7404,"nodeType":"IfStatement","src":"16864:101:29","trueBody":{"id":7403,"nodeType":"Block","src":"16893:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"16948:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7398,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"16914:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7402,"nodeType":"RevertStatement","src":"16907:47:29"}]}},{"expression":{"arguments":[{"id":7407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"16987:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7405,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:29","typeDescriptions":{}}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7390,"id":7409,"nodeType":"Return","src":"16974:19:29"}]},"documentation":{"id":7384,"nodeType":"StructuredDocumentation","src":"16515:272:29","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7411,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:29","nodeType":"FunctionDefinition","parameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"value","nameLocation":"16817:5:29","nodeType":"VariableDeclaration","scope":7411,"src":"16809:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7385,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:29"},"returnParameters":{"id":7390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7411,"src":"16847:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7388,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:29"},"scope":8281,"src":"16792:208:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7433,"nodeType":"Block","src":"17236:128:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"17250:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7427,"nodeType":"IfStatement","src":"17246:81:29","trueBody":{"id":7426,"nodeType":"Block","src":"17261:66:29","statements":[{"errorCall":{"arguments":[{"id":7423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"17310:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7422,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"17282:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7425,"nodeType":"RevertStatement","src":"17275:41:29"}]}},{"expression":{"arguments":[{"id":7430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"17351:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7428,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:29","typeDescriptions":{}}},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7418,"id":7432,"nodeType":"Return","src":"17336:21:29"}]},"documentation":{"id":7412,"nodeType":"StructuredDocumentation","src":"17006:160:29","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7434,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:29","nodeType":"FunctionDefinition","parameters":{"id":7415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7414,"mutability":"mutable","name":"value","nameLocation":"17197:5:29","nodeType":"VariableDeclaration","scope":7434,"src":"17190:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7413,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:29"},"returnParameters":{"id":7418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7434,"src":"17227:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7416,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:29"},"scope":8281,"src":"17171:193:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7459,"nodeType":"Block","src":"17761:150:29","statements":[{"expression":{"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"17771:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"17791:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7443,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:29","typeDescriptions":{}}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7448,"nodeType":"ExpressionStatement","src":"17771:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"17811:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"17825:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7458,"nodeType":"IfStatement","src":"17807:98:29","trueBody":{"id":7457,"nodeType":"Block","src":"17832:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"17888:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7452,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"17853:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7456,"nodeType":"RevertStatement","src":"17846:48:29"}]}}]},"documentation":{"id":7435,"nodeType":"StructuredDocumentation","src":"17370:312:29","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7460,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:29","nodeType":"FunctionDefinition","parameters":{"id":7438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7437,"mutability":"mutable","name":"value","nameLocation":"17712:5:29","nodeType":"VariableDeclaration","scope":7460,"src":"17705:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7436,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:29"},"returnParameters":{"id":7441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7440,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:29","nodeType":"VariableDeclaration","scope":7460,"src":"17742:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7439,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:29"},"scope":8281,"src":"17687:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7485,"nodeType":"Block","src":"18308:150:29","statements":[{"expression":{"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"18318:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"18338:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7469,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:29","typeDescriptions":{}}},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7474,"nodeType":"ExpressionStatement","src":"18318:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"18358:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"18372:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7484,"nodeType":"IfStatement","src":"18354:98:29","trueBody":{"id":7483,"nodeType":"Block","src":"18379:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"18435:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7478,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"18400:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7482,"nodeType":"RevertStatement","src":"18393:48:29"}]}}]},"documentation":{"id":7461,"nodeType":"StructuredDocumentation","src":"17917:312:29","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7486,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:29","nodeType":"FunctionDefinition","parameters":{"id":7464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7463,"mutability":"mutable","name":"value","nameLocation":"18259:5:29","nodeType":"VariableDeclaration","scope":7486,"src":"18252:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7462,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:29"},"returnParameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7466,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:29","nodeType":"VariableDeclaration","scope":7486,"src":"18289:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7465,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:29"},"scope":8281,"src":"18234:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7511,"nodeType":"Block","src":"18855:150:29","statements":[{"expression":{"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"18865:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"18885:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7495,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:29","typeDescriptions":{}}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7500,"nodeType":"ExpressionStatement","src":"18865:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"18905:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"18919:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7510,"nodeType":"IfStatement","src":"18901:98:29","trueBody":{"id":7509,"nodeType":"Block","src":"18926:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"18982:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7504,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"18947:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7508,"nodeType":"RevertStatement","src":"18940:48:29"}]}}]},"documentation":{"id":7487,"nodeType":"StructuredDocumentation","src":"18464:312:29","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7512,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:29","nodeType":"FunctionDefinition","parameters":{"id":7490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7489,"mutability":"mutable","name":"value","nameLocation":"18806:5:29","nodeType":"VariableDeclaration","scope":7512,"src":"18799:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7488,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:29"},"returnParameters":{"id":7493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7492,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:29","nodeType":"VariableDeclaration","scope":7512,"src":"18836:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7491,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:29"},"scope":8281,"src":"18781:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7537,"nodeType":"Block","src":"19402:150:29","statements":[{"expression":{"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"19412:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"19432:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7521,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:29","typeDescriptions":{}}},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7526,"nodeType":"ExpressionStatement","src":"19412:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"19452:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"19466:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7536,"nodeType":"IfStatement","src":"19448:98:29","trueBody":{"id":7535,"nodeType":"Block","src":"19473:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"19529:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7530,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"19494:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7534,"nodeType":"RevertStatement","src":"19487:48:29"}]}}]},"documentation":{"id":7513,"nodeType":"StructuredDocumentation","src":"19011:312:29","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7538,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:29","nodeType":"FunctionDefinition","parameters":{"id":7516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7515,"mutability":"mutable","name":"value","nameLocation":"19353:5:29","nodeType":"VariableDeclaration","scope":7538,"src":"19346:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7514,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:29"},"returnParameters":{"id":7519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7518,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:29","nodeType":"VariableDeclaration","scope":7538,"src":"19383:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7517,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:29"},"scope":8281,"src":"19328:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7563,"nodeType":"Block","src":"19949:150:29","statements":[{"expression":{"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"19959:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"19979:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7547,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:29","typeDescriptions":{}}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7552,"nodeType":"ExpressionStatement","src":"19959:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"19999:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"20013:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7562,"nodeType":"IfStatement","src":"19995:98:29","trueBody":{"id":7561,"nodeType":"Block","src":"20020:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"20076:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7556,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"20041:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7560,"nodeType":"RevertStatement","src":"20034:48:29"}]}}]},"documentation":{"id":7539,"nodeType":"StructuredDocumentation","src":"19558:312:29","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7564,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:29","nodeType":"FunctionDefinition","parameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7541,"mutability":"mutable","name":"value","nameLocation":"19900:5:29","nodeType":"VariableDeclaration","scope":7564,"src":"19893:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7540,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:29"},"returnParameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7544,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:29","nodeType":"VariableDeclaration","scope":7564,"src":"19930:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7543,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:29"},"scope":8281,"src":"19875:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7589,"nodeType":"Block","src":"20496:150:29","statements":[{"expression":{"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"20506:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"20526:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7573,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:29","typeDescriptions":{}}},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7578,"nodeType":"ExpressionStatement","src":"20506:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"20546:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"20560:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7588,"nodeType":"IfStatement","src":"20542:98:29","trueBody":{"id":7587,"nodeType":"Block","src":"20567:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"20623:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7582,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"20588:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7586,"nodeType":"RevertStatement","src":"20581:48:29"}]}}]},"documentation":{"id":7565,"nodeType":"StructuredDocumentation","src":"20105:312:29","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7590,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:29","nodeType":"FunctionDefinition","parameters":{"id":7568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7567,"mutability":"mutable","name":"value","nameLocation":"20447:5:29","nodeType":"VariableDeclaration","scope":7590,"src":"20440:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7566,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:29"},"returnParameters":{"id":7571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7570,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:29","nodeType":"VariableDeclaration","scope":7590,"src":"20477:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7569,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:29"},"scope":8281,"src":"20422:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7615,"nodeType":"Block","src":"21043:150:29","statements":[{"expression":{"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"21053:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"21073:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7599,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:29","typeDescriptions":{}}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7604,"nodeType":"ExpressionStatement","src":"21053:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"21093:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"21107:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7614,"nodeType":"IfStatement","src":"21089:98:29","trueBody":{"id":7613,"nodeType":"Block","src":"21114:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"21170:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7608,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"21135:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7612,"nodeType":"RevertStatement","src":"21128:48:29"}]}}]},"documentation":{"id":7591,"nodeType":"StructuredDocumentation","src":"20652:312:29","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7616,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:29","nodeType":"FunctionDefinition","parameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"value","nameLocation":"20994:5:29","nodeType":"VariableDeclaration","scope":7616,"src":"20987:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7592,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:29"},"returnParameters":{"id":7597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7596,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:29","nodeType":"VariableDeclaration","scope":7616,"src":"21024:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7595,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:29"},"scope":8281,"src":"20969:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7641,"nodeType":"Block","src":"21590:150:29","statements":[{"expression":{"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"21600:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"21620:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7625,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:29","typeDescriptions":{}}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7630,"nodeType":"ExpressionStatement","src":"21600:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"21640:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"21654:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7640,"nodeType":"IfStatement","src":"21636:98:29","trueBody":{"id":7639,"nodeType":"Block","src":"21661:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"21717:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7634,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"21682:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7638,"nodeType":"RevertStatement","src":"21675:48:29"}]}}]},"documentation":{"id":7617,"nodeType":"StructuredDocumentation","src":"21199:312:29","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7642,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:29","nodeType":"FunctionDefinition","parameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"value","nameLocation":"21541:5:29","nodeType":"VariableDeclaration","scope":7642,"src":"21534:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7618,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:29"},"returnParameters":{"id":7623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:29","nodeType":"VariableDeclaration","scope":7642,"src":"21571:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7621,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:29"},"scope":8281,"src":"21516:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7667,"nodeType":"Block","src":"22137:150:29","statements":[{"expression":{"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"22147:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"22167:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7651,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:29","typeDescriptions":{}}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7656,"nodeType":"ExpressionStatement","src":"22147:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"22187:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"22201:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7666,"nodeType":"IfStatement","src":"22183:98:29","trueBody":{"id":7665,"nodeType":"Block","src":"22208:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"22264:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7660,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"22229:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7664,"nodeType":"RevertStatement","src":"22222:48:29"}]}}]},"documentation":{"id":7643,"nodeType":"StructuredDocumentation","src":"21746:312:29","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7668,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:29","nodeType":"FunctionDefinition","parameters":{"id":7646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7645,"mutability":"mutable","name":"value","nameLocation":"22088:5:29","nodeType":"VariableDeclaration","scope":7668,"src":"22081:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7644,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:29"},"returnParameters":{"id":7649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7648,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:29","nodeType":"VariableDeclaration","scope":7668,"src":"22118:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7647,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:29"},"scope":8281,"src":"22063:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7693,"nodeType":"Block","src":"22684:150:29","statements":[{"expression":{"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"22694:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"22714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7677,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:29","typeDescriptions":{}}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7682,"nodeType":"ExpressionStatement","src":"22694:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"22734:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"22748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7692,"nodeType":"IfStatement","src":"22730:98:29","trueBody":{"id":7691,"nodeType":"Block","src":"22755:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"22811:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7686,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"22776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7690,"nodeType":"RevertStatement","src":"22769:48:29"}]}}]},"documentation":{"id":7669,"nodeType":"StructuredDocumentation","src":"22293:312:29","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7694,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:29","nodeType":"FunctionDefinition","parameters":{"id":7672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7671,"mutability":"mutable","name":"value","nameLocation":"22635:5:29","nodeType":"VariableDeclaration","scope":7694,"src":"22628:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7670,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:29"},"returnParameters":{"id":7675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7674,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:29","nodeType":"VariableDeclaration","scope":7694,"src":"22665:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7673,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:29"},"scope":8281,"src":"22610:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7719,"nodeType":"Block","src":"23231:150:29","statements":[{"expression":{"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"23241:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"23261:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7703,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:29","typeDescriptions":{}}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7708,"nodeType":"ExpressionStatement","src":"23241:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"23281:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"23295:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7718,"nodeType":"IfStatement","src":"23277:98:29","trueBody":{"id":7717,"nodeType":"Block","src":"23302:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"23358:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7712,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"23323:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7716,"nodeType":"RevertStatement","src":"23316:48:29"}]}}]},"documentation":{"id":7695,"nodeType":"StructuredDocumentation","src":"22840:312:29","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7720,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:29","nodeType":"FunctionDefinition","parameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"value","nameLocation":"23182:5:29","nodeType":"VariableDeclaration","scope":7720,"src":"23175:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7696,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:29"},"returnParameters":{"id":7701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:29","nodeType":"VariableDeclaration","scope":7720,"src":"23212:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7699,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:29"},"scope":8281,"src":"23157:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7745,"nodeType":"Block","src":"23778:150:29","statements":[{"expression":{"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"23788:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"23808:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7729,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:29","typeDescriptions":{}}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7734,"nodeType":"ExpressionStatement","src":"23788:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"23828:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"23842:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7744,"nodeType":"IfStatement","src":"23824:98:29","trueBody":{"id":7743,"nodeType":"Block","src":"23849:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"23905:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7738,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"23870:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7742,"nodeType":"RevertStatement","src":"23863:48:29"}]}}]},"documentation":{"id":7721,"nodeType":"StructuredDocumentation","src":"23387:312:29","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7746,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:29","nodeType":"FunctionDefinition","parameters":{"id":7724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7723,"mutability":"mutable","name":"value","nameLocation":"23729:5:29","nodeType":"VariableDeclaration","scope":7746,"src":"23722:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7722,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:29"},"returnParameters":{"id":7727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:29","nodeType":"VariableDeclaration","scope":7746,"src":"23759:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7725,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:29"},"scope":8281,"src":"23704:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7771,"nodeType":"Block","src":"24325:150:29","statements":[{"expression":{"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"24335:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"24355:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7755,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:29","typeDescriptions":{}}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7760,"nodeType":"ExpressionStatement","src":"24335:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"24375:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"24389:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7770,"nodeType":"IfStatement","src":"24371:98:29","trueBody":{"id":7769,"nodeType":"Block","src":"24396:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"24452:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7764,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"24417:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7768,"nodeType":"RevertStatement","src":"24410:48:29"}]}}]},"documentation":{"id":7747,"nodeType":"StructuredDocumentation","src":"23934:312:29","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7772,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:29","nodeType":"FunctionDefinition","parameters":{"id":7750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"value","nameLocation":"24276:5:29","nodeType":"VariableDeclaration","scope":7772,"src":"24269:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7748,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:29"},"returnParameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7752,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:29","nodeType":"VariableDeclaration","scope":7772,"src":"24306:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7751,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:29"},"scope":8281,"src":"24251:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7797,"nodeType":"Block","src":"24872:150:29","statements":[{"expression":{"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"24882:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"24902:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7781,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:29","typeDescriptions":{}}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7786,"nodeType":"ExpressionStatement","src":"24882:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"24922:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"24936:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7796,"nodeType":"IfStatement","src":"24918:98:29","trueBody":{"id":7795,"nodeType":"Block","src":"24943:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"24999:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7790,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"24964:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7794,"nodeType":"RevertStatement","src":"24957:48:29"}]}}]},"documentation":{"id":7773,"nodeType":"StructuredDocumentation","src":"24481:312:29","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7798,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:29","nodeType":"FunctionDefinition","parameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"value","nameLocation":"24823:5:29","nodeType":"VariableDeclaration","scope":7798,"src":"24816:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7774,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:29"},"returnParameters":{"id":7779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7778,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:29","nodeType":"VariableDeclaration","scope":7798,"src":"24853:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7777,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:29"},"scope":8281,"src":"24798:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7823,"nodeType":"Block","src":"25419:150:29","statements":[{"expression":{"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"25429:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"25449:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7807,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:29","typeDescriptions":{}}},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7812,"nodeType":"ExpressionStatement","src":"25429:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"25469:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"25483:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7822,"nodeType":"IfStatement","src":"25465:98:29","trueBody":{"id":7821,"nodeType":"Block","src":"25490:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"25546:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7816,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"25511:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7820,"nodeType":"RevertStatement","src":"25504:48:29"}]}}]},"documentation":{"id":7799,"nodeType":"StructuredDocumentation","src":"25028:312:29","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7824,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:29","nodeType":"FunctionDefinition","parameters":{"id":7802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7801,"mutability":"mutable","name":"value","nameLocation":"25370:5:29","nodeType":"VariableDeclaration","scope":7824,"src":"25363:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7800,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:29"},"returnParameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:29","nodeType":"VariableDeclaration","scope":7824,"src":"25400:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7803,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:29"},"scope":8281,"src":"25345:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7849,"nodeType":"Block","src":"25966:150:29","statements":[{"expression":{"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"25976:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"25996:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7833,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:29","typeDescriptions":{}}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7838,"nodeType":"ExpressionStatement","src":"25976:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"26016:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"26030:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7848,"nodeType":"IfStatement","src":"26012:98:29","trueBody":{"id":7847,"nodeType":"Block","src":"26037:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"26093:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7842,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"26058:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7846,"nodeType":"RevertStatement","src":"26051:48:29"}]}}]},"documentation":{"id":7825,"nodeType":"StructuredDocumentation","src":"25575:312:29","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7850,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:29","nodeType":"FunctionDefinition","parameters":{"id":7828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7827,"mutability":"mutable","name":"value","nameLocation":"25917:5:29","nodeType":"VariableDeclaration","scope":7850,"src":"25910:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7826,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:29"},"returnParameters":{"id":7831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7830,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:29","nodeType":"VariableDeclaration","scope":7850,"src":"25947:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7829,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:29"},"scope":8281,"src":"25892:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7875,"nodeType":"Block","src":"26513:150:29","statements":[{"expression":{"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"26523:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"26543:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7859,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:29","typeDescriptions":{}}},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7864,"nodeType":"ExpressionStatement","src":"26523:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"26563:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"26577:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7874,"nodeType":"IfStatement","src":"26559:98:29","trueBody":{"id":7873,"nodeType":"Block","src":"26584:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"26640:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7868,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"26605:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7872,"nodeType":"RevertStatement","src":"26598:48:29"}]}}]},"documentation":{"id":7851,"nodeType":"StructuredDocumentation","src":"26122:312:29","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7876,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:29","nodeType":"FunctionDefinition","parameters":{"id":7854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7853,"mutability":"mutable","name":"value","nameLocation":"26464:5:29","nodeType":"VariableDeclaration","scope":7876,"src":"26457:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7852,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:29"},"returnParameters":{"id":7857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7856,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:29","nodeType":"VariableDeclaration","scope":7876,"src":"26494:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7855,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:29"},"scope":8281,"src":"26439:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7901,"nodeType":"Block","src":"27060:150:29","statements":[{"expression":{"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"27070:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"27090:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7885,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:29","typeDescriptions":{}}},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7890,"nodeType":"ExpressionStatement","src":"27070:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"27110:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"27124:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7900,"nodeType":"IfStatement","src":"27106:98:29","trueBody":{"id":7899,"nodeType":"Block","src":"27131:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"27187:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7894,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"27152:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7898,"nodeType":"RevertStatement","src":"27145:48:29"}]}}]},"documentation":{"id":7877,"nodeType":"StructuredDocumentation","src":"26669:312:29","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7902,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:29","nodeType":"FunctionDefinition","parameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7879,"mutability":"mutable","name":"value","nameLocation":"27011:5:29","nodeType":"VariableDeclaration","scope":7902,"src":"27004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7878,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:29"},"returnParameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:29","nodeType":"VariableDeclaration","scope":7902,"src":"27041:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7881,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:29"},"scope":8281,"src":"26986:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7927,"nodeType":"Block","src":"27607:150:29","statements":[{"expression":{"id":7915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"27617:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"27637:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7911,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:29","typeDescriptions":{}}},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7916,"nodeType":"ExpressionStatement","src":"27617:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"27657:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"27671:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7926,"nodeType":"IfStatement","src":"27653:98:29","trueBody":{"id":7925,"nodeType":"Block","src":"27678:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"27734:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7920,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"27699:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7924,"nodeType":"RevertStatement","src":"27692:48:29"}]}}]},"documentation":{"id":7903,"nodeType":"StructuredDocumentation","src":"27216:312:29","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7928,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:29","nodeType":"FunctionDefinition","parameters":{"id":7906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7905,"mutability":"mutable","name":"value","nameLocation":"27558:5:29","nodeType":"VariableDeclaration","scope":7928,"src":"27551:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7904,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:29"},"returnParameters":{"id":7909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7908,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:29","nodeType":"VariableDeclaration","scope":7928,"src":"27588:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7907,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:29"},"scope":8281,"src":"27533:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7953,"nodeType":"Block","src":"28147:148:29","statements":[{"expression":{"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"28157:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"28176:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7937,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:29","typeDescriptions":{}}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7942,"nodeType":"ExpressionStatement","src":"28157:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"28196:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"28210:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7952,"nodeType":"IfStatement","src":"28192:97:29","trueBody":{"id":7951,"nodeType":"Block","src":"28217:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"28272:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7946,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"28238:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7950,"nodeType":"RevertStatement","src":"28231:47:29"}]}}]},"documentation":{"id":7929,"nodeType":"StructuredDocumentation","src":"27763:307:29","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7954,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:29","nodeType":"FunctionDefinition","parameters":{"id":7932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7931,"mutability":"mutable","name":"value","nameLocation":"28099:5:29","nodeType":"VariableDeclaration","scope":7954,"src":"28092:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7930,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:29"},"returnParameters":{"id":7935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7934,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:29","nodeType":"VariableDeclaration","scope":7954,"src":"28129:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7933,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:29"},"scope":8281,"src":"28075:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7979,"nodeType":"Block","src":"28685:148:29","statements":[{"expression":{"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"28695:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"28714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7963,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:29","typeDescriptions":{}}},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7968,"nodeType":"ExpressionStatement","src":"28695:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"28734:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"28748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7978,"nodeType":"IfStatement","src":"28730:97:29","trueBody":{"id":7977,"nodeType":"Block","src":"28755:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"28810:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7972,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"28776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7976,"nodeType":"RevertStatement","src":"28769:47:29"}]}}]},"documentation":{"id":7955,"nodeType":"StructuredDocumentation","src":"28301:307:29","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7980,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:29","nodeType":"FunctionDefinition","parameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7957,"mutability":"mutable","name":"value","nameLocation":"28637:5:29","nodeType":"VariableDeclaration","scope":7980,"src":"28630:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7956,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:29"},"returnParameters":{"id":7961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7960,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:29","nodeType":"VariableDeclaration","scope":7980,"src":"28667:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7959,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:29"},"scope":8281,"src":"28613:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8005,"nodeType":"Block","src":"29223:148:29","statements":[{"expression":{"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"29233:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"29252:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7989,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:29","typeDescriptions":{}}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7994,"nodeType":"ExpressionStatement","src":"29233:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"29272:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"29286:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8004,"nodeType":"IfStatement","src":"29268:97:29","trueBody":{"id":8003,"nodeType":"Block","src":"29293:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"29348:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7998,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"29314:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8002,"nodeType":"RevertStatement","src":"29307:47:29"}]}}]},"documentation":{"id":7981,"nodeType":"StructuredDocumentation","src":"28839:307:29","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8006,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:29","nodeType":"FunctionDefinition","parameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"mutability":"mutable","name":"value","nameLocation":"29175:5:29","nodeType":"VariableDeclaration","scope":8006,"src":"29168:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7982,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:29"},"returnParameters":{"id":7987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7986,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:29","nodeType":"VariableDeclaration","scope":8006,"src":"29205:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7985,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:29"},"scope":8281,"src":"29151:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8031,"nodeType":"Block","src":"29761:148:29","statements":[{"expression":{"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"29771:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"29790:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8015,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:29","typeDescriptions":{}}},"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8020,"nodeType":"ExpressionStatement","src":"29771:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"29810:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"29824:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8030,"nodeType":"IfStatement","src":"29806:97:29","trueBody":{"id":8029,"nodeType":"Block","src":"29831:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"29886:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8024,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"29852:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8028,"nodeType":"RevertStatement","src":"29845:47:29"}]}}]},"documentation":{"id":8007,"nodeType":"StructuredDocumentation","src":"29377:307:29","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8032,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:29","nodeType":"FunctionDefinition","parameters":{"id":8010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8009,"mutability":"mutable","name":"value","nameLocation":"29713:5:29","nodeType":"VariableDeclaration","scope":8032,"src":"29706:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8008,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:29"},"returnParameters":{"id":8013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8012,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:29","nodeType":"VariableDeclaration","scope":8032,"src":"29743:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8011,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:29"},"scope":8281,"src":"29689:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8057,"nodeType":"Block","src":"30299:148:29","statements":[{"expression":{"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"30309:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"30328:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8041,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:29","typeDescriptions":{}}},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8046,"nodeType":"ExpressionStatement","src":"30309:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"30348:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"30362:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8056,"nodeType":"IfStatement","src":"30344:97:29","trueBody":{"id":8055,"nodeType":"Block","src":"30369:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"30424:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8050,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"30390:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8054,"nodeType":"RevertStatement","src":"30383:47:29"}]}}]},"documentation":{"id":8033,"nodeType":"StructuredDocumentation","src":"29915:307:29","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:29","nodeType":"FunctionDefinition","parameters":{"id":8036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8035,"mutability":"mutable","name":"value","nameLocation":"30251:5:29","nodeType":"VariableDeclaration","scope":8058,"src":"30244:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8034,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:29"},"returnParameters":{"id":8039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8038,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:29","nodeType":"VariableDeclaration","scope":8058,"src":"30281:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8037,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:29"},"scope":8281,"src":"30227:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8083,"nodeType":"Block","src":"30837:148:29","statements":[{"expression":{"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"30847:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"30866:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8067,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:29","typeDescriptions":{}}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8072,"nodeType":"ExpressionStatement","src":"30847:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"30886:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"30900:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8082,"nodeType":"IfStatement","src":"30882:97:29","trueBody":{"id":8081,"nodeType":"Block","src":"30907:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"30962:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8076,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"30928:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8080,"nodeType":"RevertStatement","src":"30921:47:29"}]}}]},"documentation":{"id":8059,"nodeType":"StructuredDocumentation","src":"30453:307:29","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8084,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:29","nodeType":"FunctionDefinition","parameters":{"id":8062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8061,"mutability":"mutable","name":"value","nameLocation":"30789:5:29","nodeType":"VariableDeclaration","scope":8084,"src":"30782:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8060,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:29"},"returnParameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8064,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:29","nodeType":"VariableDeclaration","scope":8084,"src":"30819:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8063,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:29"},"scope":8281,"src":"30765:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8109,"nodeType":"Block","src":"31375:148:29","statements":[{"expression":{"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"31385:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"31404:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8093,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:29","typeDescriptions":{}}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8098,"nodeType":"ExpressionStatement","src":"31385:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"31424:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"31438:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8108,"nodeType":"IfStatement","src":"31420:97:29","trueBody":{"id":8107,"nodeType":"Block","src":"31445:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"31500:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8102,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"31466:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8106,"nodeType":"RevertStatement","src":"31459:47:29"}]}}]},"documentation":{"id":8085,"nodeType":"StructuredDocumentation","src":"30991:307:29","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8110,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:29","nodeType":"FunctionDefinition","parameters":{"id":8088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8087,"mutability":"mutable","name":"value","nameLocation":"31327:5:29","nodeType":"VariableDeclaration","scope":8110,"src":"31320:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8086,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:29"},"returnParameters":{"id":8091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8090,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:29","nodeType":"VariableDeclaration","scope":8110,"src":"31357:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8089,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:29"},"scope":8281,"src":"31303:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8135,"nodeType":"Block","src":"31913:148:29","statements":[{"expression":{"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"31923:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"31942:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8119,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:29","typeDescriptions":{}}},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8124,"nodeType":"ExpressionStatement","src":"31923:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"31962:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"31976:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8134,"nodeType":"IfStatement","src":"31958:97:29","trueBody":{"id":8133,"nodeType":"Block","src":"31983:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"32038:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8128,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"32004:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8132,"nodeType":"RevertStatement","src":"31997:47:29"}]}}]},"documentation":{"id":8111,"nodeType":"StructuredDocumentation","src":"31529:307:29","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:29","nodeType":"FunctionDefinition","parameters":{"id":8114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8113,"mutability":"mutable","name":"value","nameLocation":"31865:5:29","nodeType":"VariableDeclaration","scope":8136,"src":"31858:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8112,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:29"},"returnParameters":{"id":8117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8116,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:29","nodeType":"VariableDeclaration","scope":8136,"src":"31895:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8115,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:29"},"scope":8281,"src":"31841:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8161,"nodeType":"Block","src":"32451:148:29","statements":[{"expression":{"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"32461:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"32480:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8145,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:29","typeDescriptions":{}}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8150,"nodeType":"ExpressionStatement","src":"32461:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"32500:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"32514:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8160,"nodeType":"IfStatement","src":"32496:97:29","trueBody":{"id":8159,"nodeType":"Block","src":"32521:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"32576:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8154,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"32542:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8158,"nodeType":"RevertStatement","src":"32535:47:29"}]}}]},"documentation":{"id":8137,"nodeType":"StructuredDocumentation","src":"32067:307:29","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:29","nodeType":"FunctionDefinition","parameters":{"id":8140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8139,"mutability":"mutable","name":"value","nameLocation":"32403:5:29","nodeType":"VariableDeclaration","scope":8162,"src":"32396:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8138,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:29"},"returnParameters":{"id":8143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:29","nodeType":"VariableDeclaration","scope":8162,"src":"32433:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8141,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:29"},"scope":8281,"src":"32379:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8187,"nodeType":"Block","src":"32989:148:29","statements":[{"expression":{"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"32999:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"33018:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8171,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:29","typeDescriptions":{}}},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8176,"nodeType":"ExpressionStatement","src":"32999:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"33038:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"33052:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8186,"nodeType":"IfStatement","src":"33034:97:29","trueBody":{"id":8185,"nodeType":"Block","src":"33059:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"33114:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8180,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"33080:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8184,"nodeType":"RevertStatement","src":"33073:47:29"}]}}]},"documentation":{"id":8163,"nodeType":"StructuredDocumentation","src":"32605:307:29","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8188,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:29","nodeType":"FunctionDefinition","parameters":{"id":8166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8165,"mutability":"mutable","name":"value","nameLocation":"32941:5:29","nodeType":"VariableDeclaration","scope":8188,"src":"32934:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8164,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:29"},"returnParameters":{"id":8169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8168,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:29","nodeType":"VariableDeclaration","scope":8188,"src":"32971:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8167,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:29"},"scope":8281,"src":"32917:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8213,"nodeType":"Block","src":"33527:148:29","statements":[{"expression":{"id":8201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"33537:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"33556:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8197,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:29","typeDescriptions":{}}},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8202,"nodeType":"ExpressionStatement","src":"33537:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"33576:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"33590:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8212,"nodeType":"IfStatement","src":"33572:97:29","trueBody":{"id":8211,"nodeType":"Block","src":"33597:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"33652:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8206,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"33618:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8210,"nodeType":"RevertStatement","src":"33611:47:29"}]}}]},"documentation":{"id":8189,"nodeType":"StructuredDocumentation","src":"33143:307:29","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:29","nodeType":"FunctionDefinition","parameters":{"id":8192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8191,"mutability":"mutable","name":"value","nameLocation":"33479:5:29","nodeType":"VariableDeclaration","scope":8214,"src":"33472:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8190,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:29"},"returnParameters":{"id":8195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8194,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:29","nodeType":"VariableDeclaration","scope":8214,"src":"33509:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8193,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:29"},"scope":8281,"src":"33455:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8239,"nodeType":"Block","src":"34058:146:29","statements":[{"expression":{"id":8227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"34068:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"34086:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8223,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:29","typeDescriptions":{}}},"id":8226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8228,"nodeType":"ExpressionStatement","src":"34068:24:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"34106:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"34120:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8238,"nodeType":"IfStatement","src":"34102:96:29","trueBody":{"id":8237,"nodeType":"Block","src":"34127:71:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"34181:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8232,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"34148:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8236,"nodeType":"RevertStatement","src":"34141:46:29"}]}}]},"documentation":{"id":8215,"nodeType":"StructuredDocumentation","src":"33681:302:29","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:29","nodeType":"FunctionDefinition","parameters":{"id":8218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8217,"mutability":"mutable","name":"value","nameLocation":"34011:5:29","nodeType":"VariableDeclaration","scope":8240,"src":"34004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8216,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:29"},"returnParameters":{"id":8221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8220,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:29","nodeType":"VariableDeclaration","scope":8240,"src":"34041:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8219,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:29"},"scope":8281,"src":"33988:216:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8269,"nodeType":"Block","src":"34444:250:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"34557:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8252,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:29","memberName":"max","nodeType":"MemberAccess","src":"34573:16:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8249,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:29","typeDescriptions":{}}},"id":8256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8263,"nodeType":"IfStatement","src":"34553:105:29","trueBody":{"id":8262,"nodeType":"Block","src":"34592:66:29","statements":[{"errorCall":{"arguments":[{"id":8259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"34641:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8258,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"34613:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8261,"nodeType":"RevertStatement","src":"34606:41:29"}]}},{"expression":{"arguments":[{"id":8266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"34681:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8264,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:29","typeDescriptions":{}}},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8247,"id":8268,"nodeType":"Return","src":"34667:20:29"}]},"documentation":{"id":8241,"nodeType":"StructuredDocumentation","src":"34210:165:29","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:29","nodeType":"FunctionDefinition","parameters":{"id":8244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8243,"mutability":"mutable","name":"value","nameLocation":"34406:5:29","nodeType":"VariableDeclaration","scope":8270,"src":"34398:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8242,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:29"},"returnParameters":{"id":8247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8270,"src":"34436:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8245,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:29"},"scope":8281,"src":"34380:314:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8279,"nodeType":"Block","src":"34853:87:29","statements":[{"AST":{"nativeSrc":"34888:46:29","nodeType":"YulBlock","src":"34888:46:29","statements":[{"nativeSrc":"34902:22:29","nodeType":"YulAssignment","src":"34902:22:29","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:29","nodeType":"YulIdentifier","src":"34921:1:29"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:29","nodeType":"YulIdentifier","src":"34914:6:29"},"nativeSrc":"34914:9:29","nodeType":"YulFunctionCall","src":"34914:9:29"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:29","nodeType":"YulIdentifier","src":"34907:6:29"},"nativeSrc":"34907:17:29","nodeType":"YulFunctionCall","src":"34907:17:29"},"variableNames":[{"name":"u","nativeSrc":"34902:1:29","nodeType":"YulIdentifier","src":"34902:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8273,"isOffset":false,"isSlot":false,"src":"34921:1:29","valueSize":1},{"declaration":8276,"isOffset":false,"isSlot":false,"src":"34902:1:29","valueSize":1}],"flags":["memory-safe"],"id":8278,"nodeType":"InlineAssembly","src":"34863:71:29"}]},"documentation":{"id":8271,"nodeType":"StructuredDocumentation","src":"34700:90:29","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8280,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:29","nodeType":"FunctionDefinition","parameters":{"id":8274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8273,"mutability":"mutable","name":"b","nameLocation":"34816:1:29","nodeType":"VariableDeclaration","scope":8280,"src":"34811:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8272,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:29"},"returnParameters":{"id":8277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8276,"mutability":"mutable","name":"u","nameLocation":"34850:1:29","nodeType":"VariableDeclaration","scope":8280,"src":"34842:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8275,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:29"},"scope":8281,"src":"34795:145:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8282,"src":"769:34173:29","usedErrors":[6526,6531,6538,6543],"usedEvents":[]}],"src":"192:34751:29"},"id":29},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8281],"SignedMath":[8425]},"id":8426,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8283,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8426,"sourceUnit":8282,"src":"135:40:30","symbolAliases":[{"foreign":{"id":8284,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"143:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8286,"nodeType":"StructuredDocumentation","src":"177:80:30","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8425,"linearizedBaseContracts":[8425],"name":"SignedMath","nameLocation":"266:10:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":8315,"nodeType":"Block","src":"746:215:30","statements":[{"id":8314,"nodeType":"UncheckedBlock","src":"756:199:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"894:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"900:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"904:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8307,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"932:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8305,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"916:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8281_$","typeString":"type(library SafeCast)"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8280,"src":"916:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8303,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:30","typeDescriptions":{}}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8297,"id":8313,"nodeType":"Return","src":"887:57:30"}]}]},"documentation":{"id":8287,"nodeType":"StructuredDocumentation","src":"283:374:30","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8316,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:30","nodeType":"FunctionDefinition","parameters":{"id":8294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8289,"mutability":"mutable","name":"condition","nameLocation":"684:9:30","nodeType":"VariableDeclaration","scope":8316,"src":"679:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8288,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8291,"mutability":"mutable","name":"a","nameLocation":"702:1:30","nodeType":"VariableDeclaration","scope":8316,"src":"695:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8290,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8293,"mutability":"mutable","name":"b","nameLocation":"712:1:30","nodeType":"VariableDeclaration","scope":8316,"src":"705:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8292,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:30"},"returnParameters":{"id":8297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8316,"src":"738:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8295,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:30"},"scope":8425,"src":"662:299:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8334,"nodeType":"Block","src":"1102:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"1127:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"1131:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"1134:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"1137:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8326,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"1119:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8325,"id":8333,"nodeType":"Return","src":"1112:27:30"}]},"documentation":{"id":8317,"nodeType":"StructuredDocumentation","src":"967:66:30","text":" @dev Returns the largest of two signed numbers."},"id":8335,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:30","nodeType":"FunctionDefinition","parameters":{"id":8322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8319,"mutability":"mutable","name":"a","nameLocation":"1058:1:30","nodeType":"VariableDeclaration","scope":8335,"src":"1051:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8318,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8321,"mutability":"mutable","name":"b","nameLocation":"1068:1:30","nodeType":"VariableDeclaration","scope":8335,"src":"1061:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8320,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:30"},"returnParameters":{"id":8325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8335,"src":"1094:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8323,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:30"},"scope":8425,"src":"1038:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8353,"nodeType":"Block","src":"1288:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"1313:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8347,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"1317:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"1320:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"1323:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8345,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"1305:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8344,"id":8352,"nodeType":"Return","src":"1298:27:30"}]},"documentation":{"id":8336,"nodeType":"StructuredDocumentation","src":"1152:67:30","text":" @dev Returns the smallest of two signed numbers."},"id":8354,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:30","nodeType":"FunctionDefinition","parameters":{"id":8341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"a","nameLocation":"1244:1:30","nodeType":"VariableDeclaration","scope":8354,"src":"1237:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8337,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8340,"mutability":"mutable","name":"b","nameLocation":"1254:1:30","nodeType":"VariableDeclaration","scope":8354,"src":"1247:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8339,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:30"},"returnParameters":{"id":8344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8354,"src":"1280:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8342,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:30"},"scope":8425,"src":"1224:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8397,"nodeType":"Block","src":"1537:162:30","statements":[{"assignments":[8365],"declarations":[{"constant":false,"id":8365,"mutability":"mutable","name":"x","nameLocation":"1606:1:30","nodeType":"VariableDeclaration","scope":8397,"src":"1599:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8364,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8378,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"1611:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"1615:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"1622:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8371,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"1626:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:30"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8379,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8365,"src":"1651:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8384,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8365,"src":"1671:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:30","typeDescriptions":{}}},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8380,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:30","typeDescriptions":{}}},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"1685:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"1689:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8363,"id":8396,"nodeType":"Return","src":"1644:48:30"}]},"documentation":{"id":8355,"nodeType":"StructuredDocumentation","src":"1338:126:30","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8398,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:30","nodeType":"FunctionDefinition","parameters":{"id":8360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8357,"mutability":"mutable","name":"a","nameLocation":"1493:1:30","nodeType":"VariableDeclaration","scope":8398,"src":"1486:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8356,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8359,"mutability":"mutable","name":"b","nameLocation":"1503:1:30","nodeType":"VariableDeclaration","scope":8398,"src":"1496:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8358,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:30"},"returnParameters":{"id":8363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8398,"src":"1529:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8361,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:30"},"scope":8425,"src":"1469:230:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8423,"nodeType":"Block","src":"1843:767:30","statements":[{"id":8422,"nodeType":"UncheckedBlock","src":"1853:751:30","statements":[{"assignments":[8407],"declarations":[{"constant":false,"id":8407,"mutability":"mutable","name":"mask","nameLocation":"2424:4:30","nodeType":"VariableDeclaration","scope":8422,"src":"2417:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8406,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8411,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8408,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"2431:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8414,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"2576:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8415,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"2580:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8418,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"2588:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:30","typeDescriptions":{}}},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8405,"id":8421,"nodeType":"Return","src":"2560:33:30"}]}]},"documentation":{"id":8399,"nodeType":"StructuredDocumentation","src":"1705:78:30","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8424,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:30","nodeType":"FunctionDefinition","parameters":{"id":8402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8401,"mutability":"mutable","name":"n","nameLocation":"1808:1:30","nodeType":"VariableDeclaration","scope":8424,"src":"1801:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8400,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:30"},"returnParameters":{"id":8405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8424,"src":"1834:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:30"},"scope":8425,"src":"1788:822:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8426,"src":"258:2354:30","usedErrors":[],"usedEvents":[]}],"src":"109:2504:30"},"id":30},"src/blockchain/evm/contracts/DirectMintNFTV3.sol":{"ast":{"absolutePath":"src/blockchain/evm/contracts/DirectMintNFTV3.sol","exportedSymbols":{"Context":[2399],"ECDSA":[3460],"EIP712":[3687],"ERC165":[4898],"ERC2981":[2369],"ERC721":[1318],"ERC721Enumerable":[1839],"ERC721URIStorage":[1965],"ERC721Utils":[2102],"Hashes":[3727],"IERC165":[4910],"IERC2981":[171],"IERC4906":[195],"IERC5267":[220],"IERC721":[1435],"IERC721Enumerable":[1997],"IERC721Errors":[314],"IERC721Metadata":[2025],"LaunchNFTV3":[9335],"MerkleProof":[4800],"MessageHashUtils":[4874],"Ownable":[147],"ShortString":[2457],"ShortStrings":[2668],"Strings":[3112]},"id":9336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8427,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:31"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":8428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9336,"sourceUnit":1319,"src":"58:57:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":8429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9336,"sourceUnit":1966,"src":"116:78:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","file":"@openzeppelin/contracts/token/common/ERC2981.sol","id":8430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9336,"sourceUnit":2370,"src":"195:58:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8431,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9336,"sourceUnit":148,"src":"254:52:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":8432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9336,"sourceUnit":1840,"src":"307:78:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":8433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9336,"sourceUnit":3461,"src":"386:62:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":8434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9336,"sourceUnit":3688,"src":"449:63:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":8435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9336,"sourceUnit":4801,"src":"513:68:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8436,"name":"ERC721","nameLocations":["648:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"648:6:31"},"id":8437,"nodeType":"InheritanceSpecifier","src":"648:6:31"},{"baseName":{"id":8438,"name":"ERC721Enumerable","nameLocations":["658:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1839,"src":"658:16:31"},"id":8439,"nodeType":"InheritanceSpecifier","src":"658:16:31"},{"baseName":{"id":8440,"name":"ERC721URIStorage","nameLocations":["678:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"678:16:31"},"id":8441,"nodeType":"InheritanceSpecifier","src":"678:16:31"},{"baseName":{"id":8442,"name":"ERC2981","nameLocations":["698:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":2369,"src":"698:7:31"},"id":8443,"nodeType":"InheritanceSpecifier","src":"698:7:31"},{"baseName":{"id":8444,"name":"Ownable","nameLocations":["709:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"709:7:31"},"id":8445,"nodeType":"InheritanceSpecifier","src":"709:7:31"},{"baseName":{"id":8446,"name":"EIP712","nameLocations":["720:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"720:6:31"},"id":8447,"nodeType":"InheritanceSpecifier","src":"720:6:31"}],"canonicalName":"LaunchNFTV3","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9335,"linearizedBaseContracts":[9335,3687,220,147,2369,1965,1839,1997,1318,314,2025,195,1435,4898,171,4910,2399],"name":"LaunchNFTV3","nameLocation":"631:11:31","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8450,"libraryName":{"id":8448,"name":"ECDSA","nameLocations":["737:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":3460,"src":"737:5:31"},"nodeType":"UsingForDirective","src":"731:24:31","typeName":{"id":8449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"747:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"LaunchNFTV3.PhaseType","id":8455,"members":[{"id":8451,"name":"NOT_STARTED","nameLocation":"780:11:31","nodeType":"EnumValue","src":"780:11:31"},{"id":8452,"name":"WHITELIST","nameLocation":"797:9:31","nodeType":"EnumValue","src":"797:9:31"},{"id":8453,"name":"PUBLIC","nameLocation":"812:6:31","nodeType":"EnumValue","src":"812:6:31"},{"id":8454,"name":"FCFS","nameLocation":"824:4:31","nodeType":"EnumValue","src":"824:4:31"}],"name":"PhaseType","nameLocation":"764:9:31","nodeType":"EnumDefinition","src":"759:73:31"},{"canonicalName":"LaunchNFTV3.Phase","id":8473,"members":[{"constant":false,"id":8458,"mutability":"mutable","name":"phaseType","nameLocation":"865:9:31","nodeType":"VariableDeclaration","scope":8473,"src":"855:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"typeName":{"id":8457,"nodeType":"UserDefinedTypeName","pathNode":{"id":8456,"name":"PhaseType","nameLocations":["855:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8455,"src":"855:9:31"},"referencedDeclaration":8455,"src":"855:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"visibility":"internal"},{"constant":false,"id":8460,"mutability":"mutable","name":"price","nameLocation":"888:5:31","nodeType":"VariableDeclaration","scope":8473,"src":"880:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8459,"name":"uint256","nodeType":"ElementaryTypeName","src":"880:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8462,"mutability":"mutable","name":"startTime","nameLocation":"907:9:31","nodeType":"VariableDeclaration","scope":8473,"src":"899:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8461,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8464,"mutability":"mutable","name":"endTime","nameLocation":"930:7:31","nodeType":"VariableDeclaration","scope":8473,"src":"922:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8463,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8466,"mutability":"mutable","name":"maxSupply","nameLocation":"951:9:31","nodeType":"VariableDeclaration","scope":8473,"src":"943:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8465,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8468,"mutability":"mutable","name":"maxPerWallet","nameLocation":"974:12:31","nodeType":"VariableDeclaration","scope":8473,"src":"966:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8467,"name":"uint256","nodeType":"ElementaryTypeName","src":"966:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8470,"mutability":"mutable","name":"mintedInPhase","nameLocation":"1000:13:31","nodeType":"VariableDeclaration","scope":8473,"src":"992:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8469,"name":"uint256","nodeType":"ElementaryTypeName","src":"992:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8472,"mutability":"mutable","name":"merkleRoot","nameLocation":"1027:10:31","nodeType":"VariableDeclaration","scope":8473,"src":"1019:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1019:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Phase","nameLocation":"843:5:31","nodeType":"StructDefinition","scope":9335,"src":"836:206:31","visibility":"public"},{"constant":false,"id":8475,"mutability":"mutable","name":"_totalSupply","nameLocation":"1062:12:31","nodeType":"VariableDeclaration","scope":9335,"src":"1046:28:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"65d65e86","id":8477,"mutability":"immutable","name":"backendSigner","nameLocation":"1104:13:31","nodeType":"VariableDeclaration","scope":9335,"src":"1079:38:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8476,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":8482,"mutability":"constant","name":"MINT_TYPEHASH","nameLocation":"1146:13:31","nodeType":"VariableDeclaration","scope":9335,"src":"1121:192:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1121:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d696e74526571756573742861646472657373206d696e7465722c75696e7432353620746f6b656e49642c737472696e67207572692c75696e743235362070726963652c75696e74323536207068617365496e6465782c6279746573333220756e6971756549642c75696e743235362074696d657374616d7029","id":8480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1183:124:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_bcd57119bf9b3f112b39ecfb926b57babf8ea759ef8fb8f953ec0103b2a187f3","typeString":"literal_string \"MintRequest(address minter,uint256 tokenId,string uri,uint256 price,uint256 phaseIndex,bytes32 uniqueId,uint256 timestamp)\""},"value":"MintRequest(address minter,uint256 tokenId,string uri,uint256 price,uint256 phaseIndex,bytes32 uniqueId,uint256 timestamp)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bcd57119bf9b3f112b39ecfb926b57babf8ea759ef8fb8f953ec0103b2a187f3","typeString":"literal_string \"MintRequest(address minter,uint256 tokenId,string uri,uint256 price,uint256 phaseIndex,bytes32 uniqueId,uint256 timestamp)\""}],"id":8479,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1166:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1166:147:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":8486,"mutability":"mutable","name":"usedUniqueIds","nameLocation":"1395:13:31","nodeType":"VariableDeclaration","scope":9335,"src":"1362:46:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":8485,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1370:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1362:24:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8484,"name":"bool","nodeType":"ElementaryTypeName","src":"1381:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"functionSelector":"2e37eef6","id":8490,"mutability":"mutable","name":"phases","nameLocation":"1477:6:31","nodeType":"VariableDeclaration","scope":9335,"src":"1462:21:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase[]"},"typeName":{"baseType":{"id":8488,"nodeType":"UserDefinedTypeName","pathNode":{"id":8487,"name":"Phase","nameLocations":["1462:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8473,"src":"1462:5:31"},"referencedDeclaration":8473,"src":"1462:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"}},"id":8489,"nodeType":"ArrayTypeName","src":"1462:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage_ptr","typeString":"struct LaunchNFTV3.Phase[]"}},"visibility":"public"},{"constant":false,"id":8497,"mutability":"mutable","name":"mintedPerWalletInPhase","nameLocation":"1549:22:31","nodeType":"VariableDeclaration","scope":9335,"src":"1487:84:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8455_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV3.PhaseType => uint256))"},"typeName":{"id":8496,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8491,"name":"address","nodeType":"ElementaryTypeName","src":"1495:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1487:49:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8455_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV3.PhaseType => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8495,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8493,"nodeType":"UserDefinedTypeName","pathNode":{"id":8492,"name":"PhaseType","nameLocations":["1514:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8455,"src":"1514:9:31"},"referencedDeclaration":8455,"src":"1514:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"nodeType":"Mapping","src":"1506:29:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PhaseType_$8455_$_t_uint256_$","typeString":"mapping(enum LaunchNFTV3.PhaseType => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1527:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"functionSelector":"b187bd26","id":8499,"mutability":"mutable","name":"isPaused","nameLocation":"1588:8:31","nodeType":"VariableDeclaration","scope":9335,"src":"1576:20:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8498,"name":"bool","nodeType":"ElementaryTypeName","src":"1576:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"id":8504,"mutability":"mutable","name":"_ownedTokens","nameLocation":"1685:12:31","nodeType":"VariableDeclaration","scope":9335,"src":"1647:50:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":8503,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8500,"name":"address","nodeType":"ElementaryTypeName","src":"1655:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1647:29:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1666:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8502,"nodeType":"ArrayTypeName","src":"1666:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"body":{"id":8516,"nodeType":"Block","src":"1779:37:31","statements":[{"expression":{"baseExpression":{"id":8512,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8504,"src":"1792:12:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":8514,"indexExpression":{"id":8513,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8506,"src":"1805:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1792:19:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":8511,"id":8515,"nodeType":"Return","src":"1785:26:31"}]},"functionSelector":"8462151c","id":8517,"implemented":true,"kind":"function","modifiers":[],"name":"tokensOfOwner","nameLocation":"1711:13:31","nodeType":"FunctionDefinition","parameters":{"id":8507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8506,"mutability":"mutable","name":"owner","nameLocation":"1733:5:31","nodeType":"VariableDeclaration","scope":8517,"src":"1725:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8505,"name":"address","nodeType":"ElementaryTypeName","src":"1725:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1724:15:31"},"returnParameters":{"id":8511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8517,"src":"1761:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1761:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8509,"nodeType":"ArrayTypeName","src":"1761:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1760:18:31"},"scope":9335,"src":"1702:114:31","stateMutability":"view","virtual":false,"visibility":"public"},{"constant":false,"id":8519,"mutability":"immutable","name":"royaltyFeePercentage","nameLocation":"1845:20:31","nodeType":"VariableDeclaration","scope":9335,"src":"1820:45:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8518,"name":"uint96","nodeType":"ElementaryTypeName","src":"1820:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"private"},{"constant":false,"functionSelector":"cdd78cfc","id":8521,"mutability":"mutable","name":"platformFeePercentage","nameLocation":"1883:21:31","nodeType":"VariableDeclaration","scope":9335,"src":"1869:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8520,"name":"uint96","nodeType":"ElementaryTypeName","src":"1869:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"eb13554f","id":8523,"mutability":"mutable","name":"platformFeeRecipient","nameLocation":"1923:20:31","nodeType":"VariableDeclaration","scope":9335,"src":"1908:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8522,"name":"address","nodeType":"ElementaryTypeName","src":"1908:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"99f38cf3feaad38e0a2e22ef51bdd4faba32b432520a951248d77057596a425a","id":8532,"name":"TokenMinted","nameLocation":"1954:11:31","nodeType":"EventDefinition","parameters":{"id":8531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8525,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1987:7:31","nodeType":"VariableDeclaration","scope":8532,"src":"1971:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8527,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2016:9:31","nodeType":"VariableDeclaration","scope":8532,"src":"2000:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8526,"name":"address","nodeType":"ElementaryTypeName","src":"2000:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8530,"indexed":false,"mutability":"mutable","name":"phaseType","nameLocation":"2041:9:31","nodeType":"VariableDeclaration","scope":8532,"src":"2031:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"typeName":{"id":8529,"nodeType":"UserDefinedTypeName","pathNode":{"id":8528,"name":"PhaseType","nameLocations":["2031:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8455,"src":"2031:9:31"},"referencedDeclaration":8455,"src":"2031:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"visibility":"internal"}],"src":"1965:89:31"},"src":"1948:107:31"},{"anonymous":false,"eventSelector":"7673e4939433531841b3ee155cfb41d74036f1741ed20ba7c3ed88d66a289551","id":8541,"name":"PhaseAdded","nameLocation":"2064:10:31","nodeType":"EventDefinition","parameters":{"id":8540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8534,"indexed":true,"mutability":"mutable","name":"phaseIndex","nameLocation":"2096:10:31","nodeType":"VariableDeclaration","scope":8541,"src":"2080:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2080:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8537,"indexed":false,"mutability":"mutable","name":"phaseType","nameLocation":"2122:9:31","nodeType":"VariableDeclaration","scope":8541,"src":"2112:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"typeName":{"id":8536,"nodeType":"UserDefinedTypeName","pathNode":{"id":8535,"name":"PhaseType","nameLocations":["2112:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8455,"src":"2112:9:31"},"referencedDeclaration":8455,"src":"2112:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"visibility":"internal"},{"constant":false,"id":8539,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2145:5:31","nodeType":"VariableDeclaration","scope":8541,"src":"2137:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:80:31"},"src":"2058:97:31"},{"anonymous":false,"eventSelector":"f4d9a8d86574696337b045a92468004b95e2cb5cff95ae009b645780626a50cc","id":8550,"name":"PhaseUpdated","nameLocation":"2164:12:31","nodeType":"EventDefinition","parameters":{"id":8549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8543,"indexed":true,"mutability":"mutable","name":"phaseIndex","nameLocation":"2198:10:31","nodeType":"VariableDeclaration","scope":8550,"src":"2182:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2182:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8546,"indexed":false,"mutability":"mutable","name":"phaseType","nameLocation":"2224:9:31","nodeType":"VariableDeclaration","scope":8550,"src":"2214:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"typeName":{"id":8545,"nodeType":"UserDefinedTypeName","pathNode":{"id":8544,"name":"PhaseType","nameLocations":["2214:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8455,"src":"2214:9:31"},"referencedDeclaration":8455,"src":"2214:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"visibility":"internal"},{"constant":false,"id":8548,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2247:5:31","nodeType":"VariableDeclaration","scope":8550,"src":"2239:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2176:80:31"},"src":"2158:99:31"},{"anonymous":false,"eventSelector":"bad9436335ddabdd6fc56ea571323eb7dcfc0e82e9dbaf786bbb2a2ad6de573c","id":8556,"name":"PlatformFeeUpdated","nameLocation":"2266:18:31","nodeType":"EventDefinition","parameters":{"id":8555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8552,"indexed":false,"mutability":"mutable","name":"newPercentage","nameLocation":"2292:13:31","nodeType":"VariableDeclaration","scope":8556,"src":"2285:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8551,"name":"uint96","nodeType":"ElementaryTypeName","src":"2285:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8554,"indexed":false,"mutability":"mutable","name":"newRecipient","nameLocation":"2315:12:31","nodeType":"VariableDeclaration","scope":8556,"src":"2307:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8553,"name":"address","nodeType":"ElementaryTypeName","src":"2307:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2284:44:31"},"src":"2260:69:31"},{"anonymous":false,"eventSelector":"60188009b974c2fa66ee3b916d93f64d6534ea2204e0c466f9784ace689e8e49","id":8562,"name":"WithdrawCompleted","nameLocation":"2338:17:31","nodeType":"EventDefinition","parameters":{"id":8561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8558,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2372:9:31","nodeType":"VariableDeclaration","scope":8562,"src":"2356:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8557,"name":"address","nodeType":"ElementaryTypeName","src":"2356:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8560,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2391:6:31","nodeType":"VariableDeclaration","scope":8562,"src":"2383:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2383:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2355:43:31"},"src":"2332:67:31"},{"body":{"id":8654,"nodeType":"Block","src":"2676:654:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8591,"name":"_royaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8570,"src":"2697:11:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":8592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2712:4:31","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"2697:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8594,"name":"_platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"2728:12:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":8595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2744:4:31","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"2728:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2697:51:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8598,"name":"_platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"2760:21:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2785:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8599,"name":"address","nodeType":"ElementaryTypeName","src":"2785:7:31","typeDescriptions":{}}},"id":8602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2760:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2697:98:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8605,"name":"_backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"2807:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2833:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2825:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8606,"name":"address","nodeType":"ElementaryTypeName","src":"2825:7:31","typeDescriptions":{}}},"id":8609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2807:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2697:138:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2682:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:159:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8613,"nodeType":"ExpressionStatement","src":"2682:159:31"},{"expression":{"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8614,"name":"backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"2848:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8615,"name":"_backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"2864:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2848:30:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8617,"nodeType":"ExpressionStatement","src":"2848:30:31"},{"expression":{"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8618,"name":"royaltyFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"2884:20:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8619,"name":"_royaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8570,"src":"2907:11:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2884:34:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":8621,"nodeType":"ExpressionStatement","src":"2884:34:31"},{"expression":{"id":8624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8622,"name":"platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8521,"src":"2924:21:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8623,"name":"_platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"2948:12:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2924:36:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":8625,"nodeType":"ExpressionStatement","src":"2924:36:31"},{"expression":{"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8626,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"2966:20:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8627,"name":"_platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"2989:21:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2966:44:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8629,"nodeType":"ExpressionStatement","src":"2966:44:31"},{"expression":{"arguments":[{"id":8631,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"3036:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8632,"name":"royaltyFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"3050:20:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":8630,"name":"_setDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3017:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3017:54:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8634,"nodeType":"ExpressionStatement","src":"3017:54:31"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8639,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"3124:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8455_$","typeString":"type(enum LaunchNFTV3.PhaseType)"}},"id":8640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3134:11:31","memberName":"NOT_STARTED","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"3124:21:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},{"hexValue":"30","id":8641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3162:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3184:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3204:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3226:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3251:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3277:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":8649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3308:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3300:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3300:7:31","typeDescriptions":{}}},"id":8650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3300:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8638,"name":"Phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8473,"src":"3097:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Phase_$8473_storage_ptr_$","typeString":"type(struct LaunchNFTV3.Phase storage pointer)"}},"id":8651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3113:9:31","3155:5:31","3173:9:31","3195:7:31","3215:9:31","3237:12:31","3262:13:31","3288:10:31"],"names":["phaseType","price","startTime","endTime","maxSupply","maxPerWallet","mintedInPhase","merkleRoot"],"nodeType":"FunctionCall","src":"3097:222:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase memory"}],"expression":{"id":8635,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"3078:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:4:31","memberName":"push","nodeType":"MemberAccess","src":"3078:11:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Phase_$8473_storage_$dyn_storage_ptr_$_t_struct$_Phase_$8473_storage_$returns$__$attached_to$_t_array$_t_struct$_Phase_$8473_storage_$dyn_storage_ptr_$","typeString":"function (struct LaunchNFTV3.Phase storage ref[] storage pointer,struct LaunchNFTV3.Phase storage ref)"}},"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3078:247:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8653,"nodeType":"ExpressionStatement","src":"3078:247:31"}]},"id":8655,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8579,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"2614:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8580,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8568,"src":"2620:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8581,"kind":"baseConstructorSpecifier","modifierName":{"id":8578,"name":"ERC721","nameLocations":["2607:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"2607:6:31"},"nodeType":"ModifierInvocation","src":"2607:20:31"},{"arguments":[{"id":8583,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"2636:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8584,"kind":"baseConstructorSpecifier","modifierName":{"id":8582,"name":"Ownable","nameLocations":["2628:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2628:7:31"},"nodeType":"ModifierInvocation","src":"2628:21:31"},{"arguments":[{"hexValue":"556e69666965644e4654","id":8586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:12:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c97125c8d5f52e86f4370bcf04d9dda50997b0022ed726068b6de79e1c30d6fe","typeString":"literal_string \"UnifiedNFT\""},"value":"UnifiedNFT"},{"hexValue":"31","id":8587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2671:3:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":8588,"kind":"baseConstructorSpecifier","modifierName":{"id":8585,"name":"EIP712","nameLocations":["2650:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"2650:6:31"},"nodeType":"ModifierInvocation","src":"2650:25:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8564,"mutability":"mutable","name":"initialOwner","nameLocation":"2428:12:31","nodeType":"VariableDeclaration","scope":8655,"src":"2420:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8563,"name":"address","nodeType":"ElementaryTypeName","src":"2420:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8566,"mutability":"mutable","name":"name","nameLocation":"2460:4:31","nodeType":"VariableDeclaration","scope":8655,"src":"2446:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8565,"name":"string","nodeType":"ElementaryTypeName","src":"2446:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8568,"mutability":"mutable","name":"symbol","nameLocation":"2484:6:31","nodeType":"VariableDeclaration","scope":8655,"src":"2470:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8567,"name":"string","nodeType":"ElementaryTypeName","src":"2470:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8570,"mutability":"mutable","name":"_royaltyFee","nameLocation":"2503:11:31","nodeType":"VariableDeclaration","scope":8655,"src":"2496:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8569,"name":"uint96","nodeType":"ElementaryTypeName","src":"2496:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8572,"mutability":"mutable","name":"_platformFee","nameLocation":"2527:12:31","nodeType":"VariableDeclaration","scope":8655,"src":"2520:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8571,"name":"uint96","nodeType":"ElementaryTypeName","src":"2520:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8574,"mutability":"mutable","name":"_platformFeeRecipient","nameLocation":"2553:21:31","nodeType":"VariableDeclaration","scope":8655,"src":"2545:29:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8573,"name":"address","nodeType":"ElementaryTypeName","src":"2545:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8576,"mutability":"mutable","name":"_backendSigner","nameLocation":"2588:14:31","nodeType":"VariableDeclaration","scope":8655,"src":"2580:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8575,"name":"address","nodeType":"ElementaryTypeName","src":"2580:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2414:192:31"},"returnParameters":{"id":8589,"nodeType":"ParameterList","parameters":[],"src":"2676:0:31"},"scope":9335,"src":"2403:927:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8664,"nodeType":"Block","src":"3359:58:31","statements":[{"expression":{"arguments":[{"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3373:9:31","subExpression":{"id":8658,"name":"isPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8499,"src":"3374:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747261637420697320706175736564","id":8660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3384:20:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d","typeString":"literal_string \"Contract is paused\""},"value":"Contract is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d","typeString":"literal_string \"Contract is paused\""}],"id":8657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3365:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8662,"nodeType":"ExpressionStatement","src":"3365:40:31"},{"id":8663,"nodeType":"PlaceholderStatement","src":"3411:1:31"}]},"id":8665,"name":"whenNotPaused","nameLocation":"3343:13:31","nodeType":"ModifierDefinition","parameters":{"id":8656,"nodeType":"ParameterList","parameters":[],"src":"3356:2:31"},"src":"3334:83:31","virtual":false,"visibility":"internal"},{"body":{"id":8676,"nodeType":"Block","src":"3475:31:31","statements":[{"expression":{"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8672,"name":"isPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8499,"src":"3481:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8673,"name":"_isPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8667,"src":"3492:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3481:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8675,"nodeType":"ExpressionStatement","src":"3481:20:31"}]},"functionSelector":"16c38b3c","id":8677,"implemented":true,"kind":"function","modifiers":[{"id":8670,"kind":"modifierInvocation","modifierName":{"id":8669,"name":"onlyOwner","nameLocations":["3465:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3465:9:31"},"nodeType":"ModifierInvocation","src":"3465:9:31"}],"name":"setPaused","nameLocation":"3430:9:31","nodeType":"FunctionDefinition","parameters":{"id":8668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8667,"mutability":"mutable","name":"_isPaused","nameLocation":"3445:9:31","nodeType":"VariableDeclaration","scope":8677,"src":"3440:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8666,"name":"bool","nodeType":"ElementaryTypeName","src":"3440:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3439:16:31"},"returnParameters":{"id":8671,"nodeType":"ParameterList","parameters":[],"src":"3475:0:31"},"scope":9335,"src":"3421:85:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8866,"nodeType":"Block","src":"3716:1712:31","statements":[{"assignments":[8696,8699],"declarations":[{"constant":false,"id":8696,"mutability":"mutable","name":"phaseIndex","nameLocation":"3731:10:31","nodeType":"VariableDeclaration","scope":8866,"src":"3723:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3723:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8699,"mutability":"mutable","name":"currentPhase","nameLocation":"3757:12:31","nodeType":"VariableDeclaration","scope":8866,"src":"3743:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"},"typeName":{"id":8698,"nodeType":"UserDefinedTypeName","pathNode":{"id":8697,"name":"Phase","nameLocations":["3743:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8473,"src":"3743:5:31"},"referencedDeclaration":8473,"src":"3743:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"}},"visibility":"internal"}],"id":8702,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8700,"name":"_getActivePhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9245,"src":"3773:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_struct$_Phase_$8473_storage_ptr_$","typeString":"function () view returns (uint256,struct LaunchNFTV3.Phase storage pointer)"}},"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3773:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_struct$_Phase_$8473_storage_ptr_$","typeString":"tuple(uint256,struct LaunchNFTV3.Phase storage pointer)"}},"nodeType":"VariableDeclarationStatement","src":"3722:68:31"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"id":8707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8703,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"3801:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3814:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"3801:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8705,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"3827:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8455_$","typeString":"type(enum LaunchNFTV3.PhaseType)"}},"id":8706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3837:9:31","memberName":"WHITELIST","nodeType":"MemberAccess","referencedDeclaration":8452,"src":"3827:19:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"src":"3801:45:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8726,"nodeType":"IfStatement","src":"3797:270:31","trueBody":{"id":8725,"nodeType":"Block","src":"3848:219:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":8711,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"3903:11:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"expression":{"id":8712,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"3926:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3939:10:31","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":8472,"src":"3926:23:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":8717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3988:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3992:6:31","memberName":"sender","nodeType":"MemberAccess","src":"3988:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8715,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3971:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3975:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"3971:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8714,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3961:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3961:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8709,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"3873:11:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$4800_$","typeString":"type(library MerkleProof)"}},"id":8710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3885:6:31","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":3756,"src":"3873:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":8721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:137:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742077686974656c697374656420666f722074686973207068617365","id":8722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4020:32:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585","typeString":"literal_string \"Not whitelisted for this phase\""},"value":"Not whitelisted for this phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585","typeString":"literal_string \"Not whitelisted for this phase\""}],"id":8708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3856:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3856:204:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8724,"nodeType":"ExpressionStatement","src":"3856:204:31"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8728,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8685,"src":"4147:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4159:7:31","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"src":"4147:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8731,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4170:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4176:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"4170:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4147:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8734,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8685,"src":"4189:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8735,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4202:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4208:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"4202:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4189:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4147:70:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e61747572652065787069726564","id":8739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4225:19:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""},"value":"Signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""}],"id":8727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4132:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:118:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8741,"nodeType":"ExpressionStatement","src":"4132:118:31"},{"expression":{"arguments":[{"id":8746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4265:24:31","subExpression":{"baseExpression":{"id":8743,"name":"usedUniqueIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8486,"src":"4266:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8745,"indexExpression":{"id":8744,"name":"uniqueId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8683,"src":"4280:8:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4266:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e617475726520616c72656164792075736564","id":8747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4291:24:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8","typeString":"literal_string \"Signature already used\""},"value":"Signature already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8","typeString":"literal_string \"Signature already used\""}],"id":8742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4257:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:59:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8749,"nodeType":"ExpressionStatement","src":"4257:59:31"},{"assignments":[8751],"declarations":[{"constant":false,"id":8751,"mutability":"mutable","name":"structHash","nameLocation":"4355:10:31","nodeType":"VariableDeclaration","scope":8866,"src":"4347:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4347:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8772,"initialValue":{"arguments":[{"arguments":[{"id":8755,"name":"MINT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"4405:13:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4428:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4432:6:31","memberName":"sender","nodeType":"MemberAccess","src":"4428:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"4448:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":8762,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"4481:3:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4475:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8760,"name":"bytes","nodeType":"ElementaryTypeName","src":"4475:5:31","typeDescriptions":{}}},"id":8763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":8759,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4465:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4465:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8765,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"4496:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4509:5:31","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":8460,"src":"4496:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8767,"name":"phaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"4524:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8768,"name":"uniqueId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8683,"src":"4544:8:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8769,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8685,"src":"4562:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8753,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4385:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4389:6:31","memberName":"encode","nodeType":"MemberAccess","src":"4385:10:31","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:194:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8752,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4368:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4368:217:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4347:238:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8778,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"4644:9:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":8775,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"4624:10:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8774,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"4607:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4636:7:31","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3216,"src":"4607:36:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:47:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8780,"name":"backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"4658:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4607:64:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":8782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4679:19:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":8773,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4592:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4592:112:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8784,"nodeType":"ExpressionStatement","src":"4592:112:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4719:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4723:5:31","memberName":"value","nodeType":"MemberAccess","src":"4719:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8788,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"4732:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4745:5:31","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":8460,"src":"4732:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:31:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207061796d656e7420616d6f756e74","id":8791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4752:26:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""},"value":"Incorrect payment amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""}],"id":8785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4711:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4711:68:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8793,"nodeType":"ExpressionStatement","src":"4711:68:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8795,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"4801:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4814:9:31","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8466,"src":"4801:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4827:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4801:27:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8799,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"4840:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4853:13:31","memberName":"mintedInPhase","nodeType":"MemberAccess","referencedDeclaration":8470,"src":"4840:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8801,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"4869:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4882:9:31","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8466,"src":"4869:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4840:51:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4801:90:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506861736520737570706c79206c696d69742072656163686564","id":8805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4899:28:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f","typeString":"literal_string \"Phase supply limit reached\""},"value":"Phase supply limit reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f","typeString":"literal_string \"Phase supply limit reached\""}],"id":8794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4786:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4786:147:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8807,"nodeType":"ExpressionStatement","src":"4786:147:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8809,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"4956:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4969:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"4956:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8811,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"4982:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8455_$","typeString":"type(enum LaunchNFTV3.PhaseType)"}},"id":8812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4992:6:31","memberName":"PUBLIC","nodeType":"MemberAccess","referencedDeclaration":8453,"src":"4982:16:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"src":"4956:42:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8814,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"5010:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5023:12:31","memberName":"maxPerWallet","nodeType":"MemberAccess","referencedDeclaration":8468,"src":"5010:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5039:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5010:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4956:84:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":8819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4955:86:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":8820,"name":"mintedPerWalletInPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8497,"src":"5053:22:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8455_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV3.PhaseType => uint256))"}},"id":8823,"indexExpression":{"expression":{"id":8821,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5076:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5080:6:31","memberName":"sender","nodeType":"MemberAccess","src":"5076:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5053:34:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PhaseType_$8455_$_t_uint256_$","typeString":"mapping(enum LaunchNFTV3.PhaseType => uint256)"}},"id":8826,"indexExpression":{"expression":{"id":8824,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"5088:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5101:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"5088:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5053:58:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8827,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"5122:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5135:12:31","memberName":"maxPerWallet","nodeType":"MemberAccess","referencedDeclaration":8468,"src":"5122:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5053:94:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4955:192:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57616c6c6574206c696d6974207265616368656420666f722074686973207068617365","id":8831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5155:37:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37","typeString":"literal_string \"Wallet limit reached for this phase\""},"value":"Wallet limit reached for this phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37","typeString":"literal_string \"Wallet limit reached for this phase\""}],"id":8808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4940:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4940:258:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8833,"nodeType":"ExpressionStatement","src":"4940:258:31"},{"expression":{"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8834,"name":"usedUniqueIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8486,"src":"5204:13:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8836,"indexExpression":{"id":8835,"name":"uniqueId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8683,"src":"5218:8:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5204:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5230:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5204:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8839,"nodeType":"ExpressionStatement","src":"5204:30:31"},{"expression":{"arguments":[{"expression":{"id":8841,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5254:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5258:5:31","memberName":"value","nodeType":"MemberAccess","src":"5254:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8840,"name":"_processFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8927,"src":"5241:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8844,"nodeType":"ExpressionStatement","src":"5241:23:31"},{"expression":{"arguments":[{"id":8846,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"5288:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},{"expression":{"id":8847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5302:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5306:6:31","memberName":"sender","nodeType":"MemberAccess","src":"5302:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8845,"name":"_updatePhaseStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8949,"src":"5270:17:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Phase_$8473_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct LaunchNFTV3.Phase storage pointer,address)"}},"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5270:43:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8850,"nodeType":"ExpressionStatement","src":"5270:43:31"},{"expression":{"arguments":[{"expression":{"id":8852,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5330:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5334:6:31","memberName":"sender","nodeType":"MemberAccess","src":"5330:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8854,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"5342:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8855,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"5351:3:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8851,"name":"_mintToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8978,"src":"5319:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_calldata_ptr_$returns$__$","typeString":"function (address,uint256,string calldata)"}},"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8857,"nodeType":"ExpressionStatement","src":"5319:36:31"},{"eventCall":{"arguments":[{"id":8859,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"5379:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8860,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5388:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5392:6:31","memberName":"sender","nodeType":"MemberAccess","src":"5388:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8862,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"5400:12:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5413:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"5400:22:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}],"id":8858,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8532,"src":"5367:11:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_PhaseType_$8455_$returns$__$","typeString":"function (uint256,address,enum LaunchNFTV3.PhaseType)"}},"id":8864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5367:56:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8865,"nodeType":"EmitStatement","src":"5362:61:31"}]},"functionSelector":"8ff75e82","id":8867,"implemented":true,"kind":"function","modifiers":[{"id":8693,"kind":"modifierInvocation","modifierName":{"id":8692,"name":"whenNotPaused","nameLocations":["3702:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8665,"src":"3702:13:31"},"nodeType":"ModifierInvocation","src":"3702:13:31"}],"name":"mint","nameLocation":"3519:4:31","nodeType":"FunctionDefinition","parameters":{"id":8691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8679,"mutability":"mutable","name":"tokenId","nameLocation":"3537:7:31","nodeType":"VariableDeclaration","scope":8867,"src":"3529:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8678,"name":"uint256","nodeType":"ElementaryTypeName","src":"3529:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8681,"mutability":"mutable","name":"uri","nameLocation":"3566:3:31","nodeType":"VariableDeclaration","scope":8867,"src":"3550:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":8680,"name":"string","nodeType":"ElementaryTypeName","src":"3550:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8683,"mutability":"mutable","name":"uniqueId","nameLocation":"3583:8:31","nodeType":"VariableDeclaration","scope":8867,"src":"3575:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3575:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8685,"mutability":"mutable","name":"timestamp","nameLocation":"3605:9:31","nodeType":"VariableDeclaration","scope":8867,"src":"3597:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3597:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8687,"mutability":"mutable","name":"signature","nameLocation":"3635:9:31","nodeType":"VariableDeclaration","scope":8867,"src":"3620:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8686,"name":"bytes","nodeType":"ElementaryTypeName","src":"3620:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8690,"mutability":"mutable","name":"merkleProof","nameLocation":"3669:11:31","nodeType":"VariableDeclaration","scope":8867,"src":"3650:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3650:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8689,"nodeType":"ArrayTypeName","src":"3650:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3523:161:31"},"returnParameters":{"id":8694,"nodeType":"ParameterList","parameters":[],"src":"3716:0:31"},"scope":9335,"src":"3510:1918:31","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8926,"nodeType":"Block","src":"5541:488:31","statements":[{"assignments":[8873],"declarations":[{"constant":false,"id":8873,"mutability":"mutable","name":"platformFeeAmount","nameLocation":"5555:17:31","nodeType":"VariableDeclaration","scope":8926,"src":"5547:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5547:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8880,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8874,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"5576:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8875,"name":"platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8521,"src":"5585:21:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5576:30:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5575:32:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":8878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5610:5:31","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5575:40:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5547:68:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8881,"name":"platformFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"5625:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5645:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5625:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8899,"nodeType":"IfStatement","src":"5621:188:31","trueBody":{"id":8898,"nodeType":"Block","src":"5648:161:31","statements":[{"assignments":[8885,null],"declarations":[{"constant":false,"id":8885,"mutability":"mutable","name":"success","nameLocation":"5662:7:31","nodeType":"VariableDeclaration","scope":8898,"src":"5657:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8884,"name":"bool","nodeType":"ElementaryTypeName","src":"5657:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8892,"initialValue":{"arguments":[{"hexValue":"","id":8890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5736:2:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":8886,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"5675:20:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5696:4:31","memberName":"call","nodeType":"MemberAccess","src":"5675:25:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8888,"name":"platformFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"5708:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5675:51:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5675:71:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5656:90:31"},{"expression":{"arguments":[{"id":8894,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8885,"src":"5762:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6174666f726d20666565207472616e73666572206661696c6564","id":8895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5771:30:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3","typeString":"literal_string \"Platform fee transfer failed\""},"value":"Platform fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3","typeString":"literal_string \"Platform fee transfer failed\""}],"id":8893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5754:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:48:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8897,"nodeType":"ExpressionStatement","src":"5754:48:31"}]}},{"assignments":[8901],"declarations":[{"constant":false,"id":8901,"mutability":"mutable","name":"remainingAmount","nameLocation":"5823:15:31","nodeType":"VariableDeclaration","scope":8926,"src":"5815:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8900,"name":"uint256","nodeType":"ElementaryTypeName","src":"5815:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8905,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"5841:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8903,"name":"platformFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"5850:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5841:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5815:52:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8906,"name":"remainingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8901,"src":"5877:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5877:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8925,"nodeType":"IfStatement","src":"5873:152:31","trueBody":{"id":8924,"nodeType":"Block","src":"5898:127:31","statements":[{"assignments":[8910,null],"declarations":[{"constant":false,"id":8910,"mutability":"mutable","name":"success","nameLocation":"5912:7:31","nodeType":"VariableDeclaration","scope":8924,"src":"5907:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8909,"name":"bool","nodeType":"ElementaryTypeName","src":"5907:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8918,"initialValue":{"arguments":[{"hexValue":"","id":8916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5962:2:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8911,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"5925:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:4:31","memberName":"call","nodeType":"MemberAccess","src":"5925:12:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8914,"name":"remainingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8901,"src":"5945:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5925:36:31","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:40:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5906:59:31"},{"expression":{"arguments":[{"id":8920,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"5981:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e657220666565207472616e73666572206661696c6564","id":8921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5990:27:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e","typeString":"literal_string \"Owner fee transfer failed\""},"value":"Owner fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e","typeString":"literal_string \"Owner fee transfer failed\""}],"id":8919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5973:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5973:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8923,"nodeType":"ExpressionStatement","src":"5973:45:31"}]}}]},"id":8927,"implemented":true,"kind":"function","modifiers":[],"name":"_processFees","nameLocation":"5503:12:31","nodeType":"FunctionDefinition","parameters":{"id":8870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8869,"mutability":"mutable","name":"amount","nameLocation":"5524:6:31","nodeType":"VariableDeclaration","scope":8927,"src":"5516:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8868,"name":"uint256","nodeType":"ElementaryTypeName","src":"5516:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5515:16:31"},"returnParameters":{"id":8871,"nodeType":"ParameterList","parameters":[],"src":"5541:0:31"},"scope":9335,"src":"5494:535:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8948,"nodeType":"Block","src":"6106:87:31","statements":[{"expression":{"id":8938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6112:21:31","subExpression":{"expression":{"id":8935,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"6112:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6118:13:31","memberName":"mintedInPhase","nodeType":"MemberAccess","referencedDeclaration":8470,"src":"6112:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8939,"nodeType":"ExpressionStatement","src":"6112:21:31"},{"expression":{"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6139:49:31","subExpression":{"baseExpression":{"baseExpression":{"id":8940,"name":"mintedPerWalletInPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8497,"src":"6139:22:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8455_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV3.PhaseType => uint256))"}},"id":8944,"indexExpression":{"id":8941,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"6162:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6139:30:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PhaseType_$8455_$_t_uint256_$","typeString":"mapping(enum LaunchNFTV3.PhaseType => uint256)"}},"id":8945,"indexExpression":{"expression":{"id":8942,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"6170:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase storage pointer"}},"id":8943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6176:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"6170:15:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6139:47:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8947,"nodeType":"ExpressionStatement","src":"6139:49:31"}]},"id":8949,"implemented":true,"kind":"function","modifiers":[],"name":"_updatePhaseStats","nameLocation":"6042:17:31","nodeType":"FunctionDefinition","parameters":{"id":8933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8930,"mutability":"mutable","name":"phase","nameLocation":"6074:5:31","nodeType":"VariableDeclaration","scope":8949,"src":"6060:19:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"},"typeName":{"id":8929,"nodeType":"UserDefinedTypeName","pathNode":{"id":8928,"name":"Phase","nameLocations":["6060:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8473,"src":"6060:5:31"},"referencedDeclaration":8473,"src":"6060:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"}},"visibility":"internal"},{"constant":false,"id":8932,"mutability":"mutable","name":"minter","nameLocation":"6089:6:31","nodeType":"VariableDeclaration","scope":8949,"src":"6081:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8931,"name":"address","nodeType":"ElementaryTypeName","src":"6081:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:37:31"},"returnParameters":{"id":8934,"nodeType":"ParameterList","parameters":[],"src":"6106:0:31"},"scope":9335,"src":"6033:160:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8977,"nodeType":"Block","src":"6292:106:31","statements":[{"expression":{"arguments":[{"id":8959,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"6308:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8960,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8953,"src":"6312:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8958,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[996,1026],"referencedDeclaration":996,"src":"6298:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8962,"nodeType":"ExpressionStatement","src":"6298:22:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8965,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"6336:3:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6330:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8963,"name":"bytes","nodeType":"ElementaryTypeName","src":"6330:5:31","typeDescriptions":{}}},"id":8966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6330:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":8967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6341:6:31","memberName":"length","nodeType":"MemberAccess","src":"6330:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6350:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8976,"nodeType":"IfStatement","src":"6326:68:31","trueBody":{"id":8975,"nodeType":"Block","src":"6353:41:31","statements":[{"expression":{"arguments":[{"id":8971,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8953,"src":"6374:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8972,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"6383:3:31","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8970,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"6361:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6361:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8974,"nodeType":"ExpressionStatement","src":"6361:26:31"}]}}]},"id":8978,"implemented":true,"kind":"function","modifiers":[],"name":"_mintToken","nameLocation":"6206:10:31","nodeType":"FunctionDefinition","parameters":{"id":8956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8951,"mutability":"mutable","name":"to","nameLocation":"6230:2:31","nodeType":"VariableDeclaration","scope":8978,"src":"6222:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8950,"name":"address","nodeType":"ElementaryTypeName","src":"6222:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8953,"mutability":"mutable","name":"tokenId","nameLocation":"6246:7:31","nodeType":"VariableDeclaration","scope":8978,"src":"6238:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8952,"name":"uint256","nodeType":"ElementaryTypeName","src":"6238:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8955,"mutability":"mutable","name":"uri","nameLocation":"6275:3:31","nodeType":"VariableDeclaration","scope":8978,"src":"6259:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":8954,"name":"string","nodeType":"ElementaryTypeName","src":"6259:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6216:66:31"},"returnParameters":{"id":8957,"nodeType":"ParameterList","parameters":[],"src":"6292:0:31"},"scope":9335,"src":"6197:201:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9101,"nodeType":"Block","src":"6611:1073:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8999,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8985,"src":"6625:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9000,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"6638:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6625:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074696d652072616e6765","id":9002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6648:20:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc","typeString":"literal_string \"Invalid time range\""},"value":"Invalid time range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc","typeString":"literal_string \"Invalid time range\""}],"id":8998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6617:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6617:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9004,"nodeType":"ExpressionStatement","src":"6617:52:31"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"id":9008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9005,"name":"_phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8981,"src":"6680:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":9006,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"6694:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8455_$","typeString":"type(enum LaunchNFTV3.PhaseType)"}},"id":9007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6704:6:31","memberName":"PUBLIC","nodeType":"MemberAccess","referencedDeclaration":8453,"src":"6694:16:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"src":"6680:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9027,"nodeType":"IfStatement","src":"6676:234:31","trueBody":{"id":9026,"nodeType":"Block","src":"6712:198:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9010,"name":"_maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"6728:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6728:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d6178207065722077616c6c657420666f72206e6f6e2d7075626c6963207068617365","id":9013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6747:45:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3","typeString":"literal_string \"Invalid max per wallet for non-public phase\""},"value":"Invalid max per wallet for non-public phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3","typeString":"literal_string \"Invalid max per wallet for non-public phase\""}],"id":9009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6720:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6720:73:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9015,"nodeType":"ExpressionStatement","src":"6720:73:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9017,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"6818:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6841:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6833:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6833:7:31","typeDescriptions":{}}},"id":9021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6833:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6818:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6520726f6f7420726571756972656420666f722077686974656c697374207068617365","id":9023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6853:42:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef","typeString":"literal_string \"Merkle root required for whitelist phase\""},"value":"Merkle root required for whitelist phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef","typeString":"literal_string \"Merkle root required for whitelist phase\""}],"id":9016,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6801:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:102:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9025,"nodeType":"ExpressionStatement","src":"6801:102:31"}]}},{"body":{"id":9068,"nodeType":"Block","src":"6996:295:31","statements":[{"assignments":[9041],"declarations":[{"constant":false,"id":9041,"mutability":"mutable","name":"existingPhase","nameLocation":"7017:13:31","nodeType":"VariableDeclaration","scope":9068,"src":"7004:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase"},"typeName":{"id":9040,"nodeType":"UserDefinedTypeName","pathNode":{"id":9039,"name":"Phase","nameLocations":["7004:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8473,"src":"7004:5:31"},"referencedDeclaration":8473,"src":"7004:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"}},"visibility":"internal"}],"id":9045,"initialValue":{"baseExpression":{"id":9042,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"7033:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9044,"indexExpression":{"id":9043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"7040:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7033:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage","typeString":"struct LaunchNFTV3.Phase storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7004:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"id":9050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9046,"name":"existingPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9041,"src":"7054:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase memory"}},"id":9047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7068:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"7054:23:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9048,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"7081:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8455_$","typeString":"type(enum LaunchNFTV3.PhaseType)"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7091:11:31","memberName":"NOT_STARTED","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"7081:21:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"src":"7054:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9052,"nodeType":"IfStatement","src":"7050:62:31","trueBody":{"id":9051,"nodeType":"Continue","src":"7104:8:31"}},{"expression":{"arguments":[{"id":9064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7138:87:31","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9054,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8985,"src":"7140:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9055,"name":"existingPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9041,"src":"7154:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase memory"}},"id":9056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7168:7:31","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8464,"src":"7154:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7140:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9058,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"7189:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9059,"name":"existingPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9041,"src":"7201:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase memory"}},"id":9060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:9:31","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":8462,"src":"7201:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7189:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7140:84:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7139:86:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50686173652074696d65206f7665726c6170732077697468206578697374696e67207068617365","id":9065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7235:41:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8","typeString":"literal_string \"Phase time overlaps with existing phase\""},"value":"Phase time overlaps with existing phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8","typeString":"literal_string \"Phase time overlaps with existing phase\""}],"id":9053,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7121:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7121:163:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9067,"nodeType":"ExpressionStatement","src":"7121:163:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"6972:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9033,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6976:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6983:6:31","memberName":"length","nodeType":"MemberAccess","src":"6976:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6972:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9069,"initializationExpression":{"assignments":[9029],"declarations":[{"constant":false,"id":9029,"mutability":"mutable","name":"i","nameLocation":"6965:1:31","nodeType":"VariableDeclaration","scope":9069,"src":"6957:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9028,"name":"uint256","nodeType":"ElementaryTypeName","src":"6957:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9031,"initialValue":{"hexValue":"30","id":9030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6969:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6957:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6991:3:31","subExpression":{"id":9036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"6991:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9038,"nodeType":"ExpressionStatement","src":"6991:3:31"},"nodeType":"ForStatement","src":"6952:339:31"},{"assignments":[9072],"declarations":[{"constant":false,"id":9072,"mutability":"mutable","name":"newPhase","nameLocation":"7310:8:31","nodeType":"VariableDeclaration","scope":9101,"src":"7297:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase"},"typeName":{"id":9071,"nodeType":"UserDefinedTypeName","pathNode":{"id":9070,"name":"Phase","nameLocations":["7297:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8473,"src":"7297:5:31"},"referencedDeclaration":8473,"src":"7297:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"}},"visibility":"internal"}],"id":9083,"initialValue":{"arguments":[{"id":9074,"name":"_phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8981,"src":"7346:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},{"id":9075,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8983,"src":"7371:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9076,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8985,"src":"7396:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9077,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"7423:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9078,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"7450:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9079,"name":"_maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"7482:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":9080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7518:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9081,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"7539:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9073,"name":"Phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8473,"src":"7321:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Phase_$8473_storage_ptr_$","typeString":"type(struct LaunchNFTV3.Phase storage pointer)"}},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7335:9:31","7364:5:31","7385:9:31","7414:7:31","7439:9:31","7468:12:31","7503:13:31","7527:10:31"],"names":["phaseType","price","startTime","endTime","maxSupply","maxPerWallet","mintedInPhase","merkleRoot"],"nodeType":"FunctionCall","src":"7321:236:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase memory"}},"nodeType":"VariableDeclarationStatement","src":"7297:260:31"},{"assignments":[9085],"declarations":[{"constant":false,"id":9085,"mutability":"mutable","name":"phaseIndex","nameLocation":"7572:10:31","nodeType":"VariableDeclaration","scope":9101,"src":"7564:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9084,"name":"uint256","nodeType":"ElementaryTypeName","src":"7564:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9088,"initialValue":{"expression":{"id":9086,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"7585:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7592:6:31","memberName":"length","nodeType":"MemberAccess","src":"7585:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7564:34:31"},{"expression":{"arguments":[{"id":9092,"name":"newPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9072,"src":"7616:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase memory"}],"expression":{"id":9089,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"7604:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7611:4:31","memberName":"push","nodeType":"MemberAccess","src":"7604:11:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Phase_$8473_storage_$dyn_storage_ptr_$_t_struct$_Phase_$8473_storage_$returns$__$attached_to$_t_array$_t_struct$_Phase_$8473_storage_$dyn_storage_ptr_$","typeString":"function (struct LaunchNFTV3.Phase storage ref[] storage pointer,struct LaunchNFTV3.Phase storage ref)"}},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7604:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9094,"nodeType":"ExpressionStatement","src":"7604:21:31"},{"eventCall":{"arguments":[{"id":9096,"name":"phaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"7648:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9097,"name":"_phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8981,"src":"7660:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},{"id":9098,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8983,"src":"7672:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9095,"name":"PhaseAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8541,"src":"7637:10:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_PhaseType_$8455_$_t_uint256_$returns$__$","typeString":"function (uint256,enum LaunchNFTV3.PhaseType,uint256)"}},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7637:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9100,"nodeType":"EmitStatement","src":"7632:47:31"}]},"functionSelector":"57036078","id":9102,"implemented":true,"kind":"function","modifiers":[{"id":8996,"kind":"modifierInvocation","modifierName":{"id":8995,"name":"onlyOwner","nameLocations":["6601:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6601:9:31"},"nodeType":"ModifierInvocation","src":"6601:9:31"}],"name":"addPhase","nameLocation":"6411:8:31","nodeType":"FunctionDefinition","parameters":{"id":8994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8981,"mutability":"mutable","name":"_phaseType","nameLocation":"6435:10:31","nodeType":"VariableDeclaration","scope":9102,"src":"6425:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"typeName":{"id":8980,"nodeType":"UserDefinedTypeName","pathNode":{"id":8979,"name":"PhaseType","nameLocations":["6425:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8455,"src":"6425:9:31"},"referencedDeclaration":8455,"src":"6425:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"visibility":"internal"},{"constant":false,"id":8983,"mutability":"mutable","name":"_price","nameLocation":"6459:6:31","nodeType":"VariableDeclaration","scope":9102,"src":"6451:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8982,"name":"uint256","nodeType":"ElementaryTypeName","src":"6451:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8985,"mutability":"mutable","name":"_startTime","nameLocation":"6479:10:31","nodeType":"VariableDeclaration","scope":9102,"src":"6471:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8984,"name":"uint256","nodeType":"ElementaryTypeName","src":"6471:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8987,"mutability":"mutable","name":"_endTime","nameLocation":"6503:8:31","nodeType":"VariableDeclaration","scope":9102,"src":"6495:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8986,"name":"uint256","nodeType":"ElementaryTypeName","src":"6495:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8989,"mutability":"mutable","name":"_maxSupply","nameLocation":"6525:10:31","nodeType":"VariableDeclaration","scope":9102,"src":"6517:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8988,"name":"uint256","nodeType":"ElementaryTypeName","src":"6517:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8991,"mutability":"mutable","name":"_maxPerWallet","nameLocation":"6549:13:31","nodeType":"VariableDeclaration","scope":9102,"src":"6541:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8990,"name":"uint256","nodeType":"ElementaryTypeName","src":"6541:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8993,"mutability":"mutable","name":"_merkleRoot","nameLocation":"6576:11:31","nodeType":"VariableDeclaration","scope":9102,"src":"6568:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6568:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6419:172:31"},"returnParameters":{"id":8997,"nodeType":"ParameterList","parameters":[],"src":"6611:0:31"},"scope":9335,"src":"6402:1282:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[462,1517,1888,2179],"body":{"id":9119,"nodeType":"Block","src":"7874:54:31","statements":[{"expression":{"arguments":[{"id":9116,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9104,"src":"7911:11:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9114,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7887:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LaunchNFTV3_$9335_$","typeString":"type(contract super LaunchNFTV3)"}},"id":9115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7893:17:31","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2179,"src":"7887:23:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":9117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9113,"id":9118,"nodeType":"Return","src":"7880:43:31"}]},"functionSelector":"01ffc9a7","id":9120,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"7721:17:31","nodeType":"FunctionDefinition","overrides":{"id":9110,"nodeType":"OverrideSpecifier","overrides":[{"id":9106,"name":"ERC721","nameLocations":["7800:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"7800:6:31"},{"id":9107,"name":"ERC721URIStorage","nameLocations":["7808:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"7808:16:31"},{"id":9108,"name":"ERC2981","nameLocations":["7826:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":2369,"src":"7826:7:31"},{"id":9109,"name":"ERC721Enumerable","nameLocations":["7835:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1839,"src":"7835:16:31"}],"src":"7791:61:31"},"parameters":{"id":9105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9104,"mutability":"mutable","name":"interfaceId","nameLocation":"7751:11:31","nodeType":"VariableDeclaration","scope":9120,"src":"7744:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9103,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7744:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"7738:28:31"},"returnParameters":{"id":9113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9120,"src":"7866:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9111,"name":"bool","nodeType":"ElementaryTypeName","src":"7866:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7865:6:31"},"scope":9335,"src":"7712:216:31","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[557,1945],"body":{"id":9135,"nodeType":"Block","src":"8046:41:31","statements":[{"expression":{"arguments":[{"id":9132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9122,"src":"8074:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9130,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8059:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LaunchNFTV3_$9335_$","typeString":"type(contract super LaunchNFTV3)"}},"id":9131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8065:8:31","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1945,"src":"8059:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":9133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8059:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9129,"id":9134,"nodeType":"Return","src":"8052:30:31"}]},"functionSelector":"c87b56dd","id":9136,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"7941:8:31","nodeType":"FunctionDefinition","overrides":{"id":9126,"nodeType":"OverrideSpecifier","overrides":[{"id":9124,"name":"ERC721","nameLocations":["7996:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"7996:6:31"},{"id":9125,"name":"ERC721URIStorage","nameLocations":["8004:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"8004:16:31"}],"src":"7987:34:31"},"parameters":{"id":9123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9122,"mutability":"mutable","name":"tokenId","nameLocation":"7963:7:31","nodeType":"VariableDeclaration","scope":9136,"src":"7955:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9121,"name":"uint256","nodeType":"ElementaryTypeName","src":"7955:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7949:25:31"},"returnParameters":{"id":9129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9136,"src":"8031:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9127,"name":"string","nodeType":"ElementaryTypeName","src":"8031:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8030:15:31"},"scope":9335,"src":"7932:155:31","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[931,1652],"body":{"id":9157,"nodeType":"Block","src":"8229:50:31","statements":[{"expression":{"arguments":[{"id":9152,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"8256:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9153,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9140,"src":"8260:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9154,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9142,"src":"8269:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9150,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8242:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LaunchNFTV3_$9335_$","typeString":"type(contract super LaunchNFTV3)"}},"id":9151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8248:7:31","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1652,"src":"8242:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8242:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9149,"id":9156,"nodeType":"Return","src":"8235:39:31"}]},"id":9158,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8100:7:31","nodeType":"FunctionDefinition","overrides":{"id":9146,"nodeType":"OverrideSpecifier","overrides":[{"id":9144,"name":"ERC721","nameLocations":["8185:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"8185:6:31"},{"id":9145,"name":"ERC721Enumerable","nameLocations":["8193:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1839,"src":"8193:16:31"}],"src":"8176:34:31"},"parameters":{"id":9143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9138,"mutability":"mutable","name":"to","nameLocation":"8121:2:31","nodeType":"VariableDeclaration","scope":9158,"src":"8113:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9137,"name":"address","nodeType":"ElementaryTypeName","src":"8113:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9140,"mutability":"mutable","name":"tokenId","nameLocation":"8137:7:31","nodeType":"VariableDeclaration","scope":9158,"src":"8129:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9139,"name":"uint256","nodeType":"ElementaryTypeName","src":"8129:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9142,"mutability":"mutable","name":"auth","nameLocation":"8158:4:31","nodeType":"VariableDeclaration","scope":9158,"src":"8150:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9141,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8107:59:31"},"returnParameters":{"id":9149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9158,"src":"8220:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9147,"name":"address","nodeType":"ElementaryTypeName","src":"8220:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8219:9:31"},"scope":9335,"src":"8091:188:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[841,1838],"body":{"id":9175,"nodeType":"Block","src":"8397:49:31","statements":[{"expression":{"arguments":[{"id":9171,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9160,"src":"8426:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"8435:5:31","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":9168,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8403:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LaunchNFTV3_$9335_$","typeString":"type(contract super LaunchNFTV3)"}},"id":9170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8409:16:31","memberName":"_increaseBalance","nodeType":"MemberAccess","referencedDeclaration":1838,"src":"8403:22:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$","typeString":"function (address,uint128)"}},"id":9173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8403:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9174,"nodeType":"ExpressionStatement","src":"8403:38:31"}]},"id":9176,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8292:16:31","nodeType":"FunctionDefinition","overrides":{"id":9166,"nodeType":"OverrideSpecifier","overrides":[{"id":9164,"name":"ERC721","nameLocations":["8371:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"8371:6:31"},{"id":9165,"name":"ERC721Enumerable","nameLocations":["8379:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1839,"src":"8379:16:31"}],"src":"8362:34:31"},"parameters":{"id":9163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9160,"mutability":"mutable","name":"account","nameLocation":"8322:7:31","nodeType":"VariableDeclaration","scope":9176,"src":"8314:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9159,"name":"address","nodeType":"ElementaryTypeName","src":"8314:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9162,"mutability":"mutable","name":"value","nameLocation":"8343:5:31","nodeType":"VariableDeclaration","scope":9176,"src":"8335:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":9161,"name":"uint128","nodeType":"ElementaryTypeName","src":"8335:7:31","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8308:44:31"},"returnParameters":{"id":9167,"nodeType":"ParameterList","parameters":[],"src":"8397:0:31"},"scope":9335,"src":"8283:163:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9184,"nodeType":"Block","src":"8532:38:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9181,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"8545:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":9182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9180,"id":9183,"nodeType":"Return","src":"8538:27:31"}]},"functionSelector":"ed24911d","id":9185,"implemented":true,"kind":"function","modifiers":[],"name":"getDomainSeparator","nameLocation":"8479:18:31","nodeType":"FunctionDefinition","parameters":{"id":9177,"nodeType":"ParameterList","parameters":[],"src":"8497:2:31"},"returnParameters":{"id":9180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9185,"src":"8523:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8523:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8522:9:31"},"scope":9335,"src":"8470:100:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9244,"nodeType":"Block","src":"8786:334:31","statements":[{"assignments":[9194],"declarations":[{"constant":false,"id":9194,"mutability":"mutable","name":"timestamp","nameLocation":"8800:9:31","nodeType":"VariableDeclaration","scope":9244,"src":"8792:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9193,"name":"uint256","nodeType":"ElementaryTypeName","src":"8792:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9197,"initialValue":{"expression":{"id":9195,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8812:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8818:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"8812:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8792:35:31"},{"body":{"id":9238,"nodeType":"Block","src":"8878:206:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9209,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"8899:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9211,"indexExpression":{"id":9210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"8906:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8899:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage","typeString":"struct LaunchNFTV3.Phase storage ref"}},"id":9212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8909:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"8899:19:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":9213,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"8922:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8455_$","typeString":"type(enum LaunchNFTV3.PhaseType)"}},"id":9214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8932:11:31","memberName":"NOT_STARTED","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"8922:21:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"src":"8899:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9216,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9194,"src":"8955:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":9217,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"8968:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9219,"indexExpression":{"id":9218,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"8975:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8968:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage","typeString":"struct LaunchNFTV3.Phase storage ref"}},"id":9220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8978:9:31","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":8462,"src":"8968:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8955:32:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8899:88:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9223,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9194,"src":"8999:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":9224,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9012:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9226,"indexExpression":{"id":9225,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"9019:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9012:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage","typeString":"struct LaunchNFTV3.Phase storage ref"}},"id":9227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9022:7:31","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8464,"src":"9012:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8999:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8899:130:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9237,"nodeType":"IfStatement","src":"8886:192:31","trueBody":{"id":9236,"nodeType":"Block","src":"9038:40:31","statements":[{"expression":{"components":[{"id":9230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"9056:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":9231,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9059:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9233,"indexExpression":{"id":9232,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"9066:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9059:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage","typeString":"struct LaunchNFTV3.Phase storage ref"}}],"id":9234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9055:14:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_struct$_Phase_$8473_storage_$","typeString":"tuple(uint256,struct LaunchNFTV3.Phase storage ref)"}},"functionReturnParameters":9192,"id":9235,"nodeType":"Return","src":"9048:21:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"8854:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9203,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"8858:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8865:6:31","memberName":"length","nodeType":"MemberAccess","src":"8858:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8854:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9239,"initializationExpression":{"assignments":[9199],"declarations":[{"constant":false,"id":9199,"mutability":"mutable","name":"i","nameLocation":"8847:1:31","nodeType":"VariableDeclaration","scope":9239,"src":"8839:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9198,"name":"uint256","nodeType":"ElementaryTypeName","src":"8839:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9201,"initialValue":{"hexValue":"30","id":9200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8851:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8839:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8873:3:31","subExpression":{"id":9206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"8873:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9208,"nodeType":"ExpressionStatement","src":"8873:3:31"},"nodeType":"ForStatement","src":"8834:250:31"},{"expression":{"arguments":[{"hexValue":"4e6f20616374697665207068617365","id":9241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9097:17:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367","typeString":"literal_string \"No active phase\""},"value":"No active phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367","typeString":"literal_string \"No active phase\""}],"id":9240,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9090:6:31","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9090:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9243,"nodeType":"ExpressionStatement","src":"9090:25:31"}]},"id":9245,"implemented":true,"kind":"function","modifiers":[],"name":"_getActivePhase","nameLocation":"8690:15:31","nodeType":"FunctionDefinition","parameters":{"id":9186,"nodeType":"ParameterList","parameters":[],"src":"8705:2:31"},"returnParameters":{"id":9192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9188,"mutability":"mutable","name":"phaseIndex","nameLocation":"8751:10:31","nodeType":"VariableDeclaration","scope":9245,"src":"8743:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9187,"name":"uint256","nodeType":"ElementaryTypeName","src":"8743:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9191,"mutability":"mutable","name":"phase","nameLocation":"8777:5:31","nodeType":"VariableDeclaration","scope":9245,"src":"8763:19:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"},"typeName":{"id":9190,"nodeType":"UserDefinedTypeName","pathNode":{"id":9189,"name":"Phase","nameLocations":["8763:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8473,"src":"8763:5:31"},"referencedDeclaration":8473,"src":"8763:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"}},"visibility":"internal"}],"src":"8742:41:31"},"scope":9335,"src":"8681:439:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9256,"nodeType":"Block","src":"9227:35:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9253,"name":"_getActivePhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9245,"src":"9240:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_struct$_Phase_$8473_storage_ptr_$","typeString":"function () view returns (uint256,struct LaunchNFTV3.Phase storage pointer)"}},"id":9254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9240:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_struct$_Phase_$8473_storage_ptr_$","typeString":"tuple(uint256,struct LaunchNFTV3.Phase storage pointer)"}},"functionReturnParameters":9252,"id":9255,"nodeType":"Return","src":"9233:24:31"}]},"functionSelector":"1ce97fd1","id":9257,"implemented":true,"kind":"function","modifiers":[],"name":"getActivePhase","nameLocation":"9133:14:31","nodeType":"FunctionDefinition","parameters":{"id":9246,"nodeType":"ParameterList","parameters":[],"src":"9147:2:31"},"returnParameters":{"id":9252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9248,"mutability":"mutable","name":"phaseIndex","nameLocation":"9193:10:31","nodeType":"VariableDeclaration","scope":9257,"src":"9185:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9247,"name":"uint256","nodeType":"ElementaryTypeName","src":"9185:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9251,"mutability":"mutable","name":"phase","nameLocation":"9218:5:31","nodeType":"VariableDeclaration","scope":9257,"src":"9205:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_memory_ptr","typeString":"struct LaunchNFTV3.Phase"},"typeName":{"id":9250,"nodeType":"UserDefinedTypeName","pathNode":{"id":9249,"name":"Phase","nameLocations":["9205:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":8473,"src":"9205:5:31"},"referencedDeclaration":8473,"src":"9205:5:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage_ptr","typeString":"struct LaunchNFTV3.Phase"}},"visibility":"internal"}],"src":"9184:40:31"},"scope":9335,"src":"9124:138:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9273,"nodeType":"Block","src":"9371:57:31","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":9267,"name":"mintedPerWalletInPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8497,"src":"9384:22:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_enum$_PhaseType_$8455_$_t_uint256_$_$","typeString":"mapping(address => mapping(enum LaunchNFTV3.PhaseType => uint256))"}},"id":9269,"indexExpression":{"id":9268,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"9407:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9384:28:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PhaseType_$8455_$_t_uint256_$","typeString":"mapping(enum LaunchNFTV3.PhaseType => uint256)"}},"id":9271,"indexExpression":{"id":9270,"name":"phaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9262,"src":"9413:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9384:39:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9266,"id":9272,"nodeType":"Return","src":"9377:46:31"}]},"functionSelector":"f7330c2d","id":9274,"implemented":true,"kind":"function","modifiers":[],"name":"getMintedInPhase","nameLocation":"9275:16:31","nodeType":"FunctionDefinition","parameters":{"id":9263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9259,"mutability":"mutable","name":"user","nameLocation":"9305:4:31","nodeType":"VariableDeclaration","scope":9274,"src":"9297:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9258,"name":"address","nodeType":"ElementaryTypeName","src":"9297:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9262,"mutability":"mutable","name":"phaseType","nameLocation":"9325:9:31","nodeType":"VariableDeclaration","scope":9274,"src":"9315:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"typeName":{"id":9261,"nodeType":"UserDefinedTypeName","pathNode":{"id":9260,"name":"PhaseType","nameLocations":["9315:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":8455,"src":"9315:9:31"},"referencedDeclaration":8455,"src":"9315:9:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"visibility":"internal"}],"src":"9291:47:31"},"returnParameters":{"id":9266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9274,"src":"9362:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9264,"name":"uint256","nodeType":"ElementaryTypeName","src":"9362:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9361:9:31"},"scope":9335,"src":"9266:162:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9282,"nodeType":"Block","src":"9489:31:31","statements":[{"expression":{"expression":{"id":9279,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9502:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9509:6:31","memberName":"length","nodeType":"MemberAccess","src":"9502:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9278,"id":9281,"nodeType":"Return","src":"9495:20:31"}]},"functionSelector":"db5e0063","id":9283,"implemented":true,"kind":"function","modifiers":[],"name":"getPhaseCount","nameLocation":"9441:13:31","nodeType":"FunctionDefinition","parameters":{"id":9275,"nodeType":"ParameterList","parameters":[],"src":"9454:2:31"},"returnParameters":{"id":9278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9283,"src":"9480:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9276,"name":"uint256","nodeType":"ElementaryTypeName","src":"9480:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9479:9:31"},"scope":9335,"src":"9432:88:31","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9333,"nodeType":"Block","src":"9583:311:31","statements":[{"assignments":[9289],"declarations":[{"constant":false,"id":9289,"mutability":"mutable","name":"timestamp","nameLocation":"9597:9:31","nodeType":"VariableDeclaration","scope":9333,"src":"9589:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9288,"name":"uint256","nodeType":"ElementaryTypeName","src":"9589:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9292,"initialValue":{"expression":{"id":9290,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9609:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9615:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"9609:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9589:35:31"},{"body":{"id":9329,"nodeType":"Block","src":"9675:196:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"},"id":9310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9304,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9696:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9306,"indexExpression":{"id":9305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9294,"src":"9703:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9696:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage","typeString":"struct LaunchNFTV3.Phase storage ref"}},"id":9307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:9:31","memberName":"phaseType","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"9696:19:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":9308,"name":"PhaseType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"9719:9:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PhaseType_$8455_$","typeString":"type(enum LaunchNFTV3.PhaseType)"}},"id":9309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9729:11:31","memberName":"NOT_STARTED","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"9719:21:31","typeDescriptions":{"typeIdentifier":"t_enum$_PhaseType_$8455","typeString":"enum LaunchNFTV3.PhaseType"}},"src":"9696:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9311,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"9752:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":9312,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9765:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9314,"indexExpression":{"id":9313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9294,"src":"9772:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9765:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage","typeString":"struct LaunchNFTV3.Phase storage ref"}},"id":9315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9775:9:31","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":8462,"src":"9765:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9752:32:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9696:88:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9318,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"9796:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":9319,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9809:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9321,"indexExpression":{"id":9320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9294,"src":"9816:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9809:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_Phase_$8473_storage","typeString":"struct LaunchNFTV3.Phase storage ref"}},"id":9322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9819:7:31","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":8464,"src":"9809:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9796:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9696:130:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9328,"nodeType":"IfStatement","src":"9683:182:31","trueBody":{"id":9327,"nodeType":"Block","src":"9835:30:31","statements":[{"expression":{"hexValue":"74727565","id":9325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9852:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9287,"id":9326,"nodeType":"Return","src":"9845:11:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9294,"src":"9651:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9298,"name":"phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9655:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Phase_$8473_storage_$dyn_storage","typeString":"struct LaunchNFTV3.Phase storage ref[] storage ref"}},"id":9299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9662:6:31","memberName":"length","nodeType":"MemberAccess","src":"9655:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9651:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9330,"initializationExpression":{"assignments":[9294],"declarations":[{"constant":false,"id":9294,"mutability":"mutable","name":"i","nameLocation":"9644:1:31","nodeType":"VariableDeclaration","scope":9330,"src":"9636:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9293,"name":"uint256","nodeType":"ElementaryTypeName","src":"9636:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9296,"initialValue":{"hexValue":"30","id":9295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9648:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9636:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9670:3:31","subExpression":{"id":9301,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9294,"src":"9670:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9303,"nodeType":"ExpressionStatement","src":"9670:3:31"},"nodeType":"ForStatement","src":"9631:240:31"},{"expression":{"hexValue":"66616c7365","id":9331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9884:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9287,"id":9332,"nodeType":"Return","src":"9877:12:31"}]},"functionSelector":"072a1319","id":9334,"implemented":true,"kind":"function","modifiers":[],"name":"isActivePhasePresent","nameLocation":"9533:20:31","nodeType":"FunctionDefinition","parameters":{"id":9284,"nodeType":"ParameterList","parameters":[],"src":"9553:2:31"},"returnParameters":{"id":9287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9334,"src":"9577:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9285,"name":"bool","nodeType":"ElementaryTypeName","src":"9577:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9576:6:31"},"scope":9335,"src":"9524:370:31","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9336,"src":"622:9274:31","usedErrors":[13,18,272,277,286,291,296,303,308,313,1490,1493,2134,2139,2148,2155,2465,2467,3123,3128,3133],"usedEvents":[24,187,194,200,1334,1343,1352,8532,8541,8550,8556,8562]}],"src":"32:9865:31"},"id":31}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the ERC that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive}, interfere with enumerability and should not be used together with {ERC721Enumerable}.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00\",\"dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a28091ddc0c74bac4c67a3ac04136eb37e65f0d65d15d3d70d173c0f3dd61fea64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP1 SWAP2 0xDD 0xC0 0xC7 0x4B 0xAC 0x4C PUSH8 0xA3AC04136EB37E65 CREATE 0xD6 TSTORE ISZERO 0xD3 0xD7 0xD OR EXTCODECOPY 0xF RETURNDATASIZE 0xD6 0x1F 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"431:1480:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a28091ddc0c74bac4c67a3ac04136eb37e65f0d65d15d3d70d173c0f3dd61fea64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP1 SWAP2 0xDD 0xC0 0xC7 0x4B 0xAC 0x4C PUSH8 0xA3AC04136EB37E65 CREATE 0xD6 TSTORE ISZERO 0xD3 0xD7 0xD OR EXTCODECOPY 0xF RETURNDATASIZE 0xD6 0x1F 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"431:1480:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x01818908219f73eecfbbe8999ac583ee3fcbfe8e39e8e0a823199737d0ed8052\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://674bafb0a373297befe1b5fe4f5a02cc18a305d8f9a4577deddc2030a611433e\",\"dweb:/ipfs/QmPq5sBp1upRbBVdU5kd1VyG4tHAbv9z6V1NSPuPs8vAtd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220315420d2a34f54a0426c9d4fa643e55c756e077cf0b1ca748a3d08550624cc3764736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLOAD KECCAK256 0xD2 LOG3 0x4F SLOAD LOG0 TIMESTAMP PUSH13 0x9D4FA643E55C756E077CF0B1CA PUSH21 0x8A3D08550624CC3764736F6C634300081B00330000 ","sourceMap":"657:1315:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220315420d2a34f54a0426c9d4fa643e55c756e077cf0b1ca748a3d08550624cc3764736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLOAD KECCAK256 0xD2 LOG3 0x4F SLOAD LOG0 TIMESTAMP PUSH13 0x9D4FA643E55C756E077CF0B1CA PUSH21 0x8A3D08550624CC3764736F6C634300081B00330000 ","sourceMap":"657:1315:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a74f5a2d5fd6e59ea01c9239fd7f1b426ee3b2b1e16aa6400c77cb80ca3f8a164736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH21 0xF5A2D5FD6E59EA01C9239FD7F1B426EE3B2B1E16AA PUSH5 0xC77CB80C LOG3 0xF8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3026:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a74f5a2d5fd6e59ea01c9239fd7f1b426ee3b2b1e16aa6400c77cb80ca3f8a164736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH21 0xF5A2D5FD6E59EA01C9239FD7F1B426EE3B2B1E16AA PUSH5 0xC77CB80C LOG3 0xF8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3026:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c5b9741516a89aa3b21db03a537447b20e0f0eca242db0ef8c93e38ed69d9f664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY JUMPDEST SWAP8 COINBASE MLOAD PUSH11 0x89AA3B21DB03A537447B20 0xE0 CREATE 0xEC LOG2 TIMESTAMP 0xDB 0xE 0xF8 0xC9 RETURNDATACOPY CODESIZE 0xED PUSH10 0xD9F664736F6C63430008 SHL STOP CALLER ","sourceMap":"1407:2774:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c5b9741516a89aa3b21db03a537447b20e0f0eca242db0ef8c93e38ed69d9f664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY JUMPDEST SWAP8 COINBASE MLOAD PUSH11 0x89AA3B21DB03A537447B20 0xE0 CREATE 0xEC LOG2 TIMESTAMP 0xDB 0xE 0xF8 0xC9 RETURNDATACOPY CODESIZE 0xED PUSH10 0xD9F664736F6C63430008 SHL STOP CALLER ","sourceMap":"1407:2774:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699303a5c52bc84a454e1d7f1979e68af835e3d029de02ddc146e280c842441964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9303A5C52BC84A454E1D PUSH32 0x1979E68AF835E3D029DE02DDC146E280C842441964736F6C634300081B003300 ","sourceMap":"251:3680:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699303a5c52bc84a454e1d7f1979e68af835e3d029de02ddc146e280c842441964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9303A5C52BC84A454E1D PUSH32 0x1979E68AF835E3D029DE02DDC146E280C842441964736F6C634300081B003300 ","sourceMap":"251:3680:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200609642c22ba18325abd959c2f05794f0e137b8622597c479ac1b7b6cecbaefa64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD MULMOD PUSH5 0x2C22BA1832 GAS 0xBD SWAP6 SWAP13 0x2F SDIV PUSH26 0x4F0E137B8622597C479AC1B7B6CECBAEFA64736F6C634300081B STOP CALLER ","sourceMap":"344:7470:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200609642c22ba18325abd959c2f05794f0e137b8622597c479ac1b7b6cecbaefa64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD MULMOD PUSH5 0x2C22BA1832 GAS 0xBD SWAP6 SWAP13 0x2F SDIV PUSH26 0x4F0E137B8622597C479AC1B7B6CECBAEFA64736F6C634300081B STOP CALLER ","sourceMap":"344:7470:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220195adb90afd663f7b10506f5b07f672cbbdd097ab10fd326d55431f3be7247e664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT GAS 0xDB SWAP1 0xAF 0xD6 PUSH4 0xF7B10506 CREATE2 0xB0 PUSH32 0x672CBBDD097AB10FD326D55431F3BE7247E664736F6C634300081B0033000000 ","sourceMap":"221:813:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220195adb90afd663f7b10506f5b07f672cbbdd097ab10fd326d55431f3be7247e664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT GAS 0xDB SWAP1 0xAF 0xD6 PUSH4 0xF7B10506 CREATE2 0xB0 PUSH32 0x672CBBDD097AB10FD326D55431F3BE7247E664736F6C634300081B0033000000 ","sourceMap":"221:813:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220344dd0fbb4a5437f5619e59b443c75a87384f6d44579fe3852ee91a2c4cb7bd664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x4D 0xD0 0xFB 0xB4 0xA5 NUMBER PUSH32 0x5619E59B443C75A87384F6D44579FE3852EE91A2C4CB7BD664736F6C63430008 SHL STOP CALLER ","sourceMap":"1353:22982:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220344dd0fbb4a5437f5619e59b443c75a87384f6d44579fe3852ee91a2c4cb7bd664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x4D 0xD0 0xFB 0xB4 0xA5 NUMBER PUSH32 0x5619E59B443C75A87384F6D44579FE3852EE91A2C4CB7BD664736F6C63430008 SHL STOP CALLER ","sourceMap":"1353:22982:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045964c3323036b458d2cd7d327a9020c8d264023ab02397202e9ad562599c37964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP7 0x4C CALLER 0x23 SUB PUSH12 0x458D2CD7D327A9020C8D2640 0x23 0xAB MUL CODECOPY PUSH19 0x2E9AD562599C37964736F6C634300081B0033 ","sourceMap":"521:3181:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045964c3323036b458d2cd7d327a9020c8d264023ab02397202e9ad562599c37964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP7 0x4C CALLER 0x23 SUB PUSH12 0x458D2CD7D327A9020C8D2640 0x23 0xAB MUL CODECOPY PUSH19 0x2E9AD562599C37964736F6C634300081B0033 ","sourceMap":"521:3181:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9b729d0e4b7415694476ac1dd6b51b73e23ed609e32d344cf12a11202ac949e64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xB7 0x29 0xD0 0xE4 0xB7 COINBASE JUMP SWAP5 SELFBALANCE PUSH11 0xC1DD6B51B73E23ED609E32 0xD3 PREVRANDAO 0xCF SLT LOG1 SLT MUL 0xAC SWAP5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:28026:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9b729d0e4b7415694476ac1dd6b51b73e23ed609e32d344cf12a11202ac949e64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xB7 0x29 0xD0 0xE4 0xB7 COINBASE JUMP SWAP5 SELFBALANCE PUSH11 0xC1DD6B51B73E23ED609E32 0xD3 PREVRANDAO 0xCF SLT LOG1 SLT MUL 0xAC SWAP5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:28026:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f555b99f34b1c067f4d2ea441095768d54040c479b869b2116f2283c5ea029cc64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SSTORE 0xB9 SWAP16 CALLVALUE 0xB1 0xC0 PUSH8 0xF4D2EA441095768D SLOAD DIV 0xC SELFBALANCE SWAP12 DUP7 SWAP12 0x21 AND CALLCODE 0x28 EXTCODECOPY MCOPY LOG0 0x29 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f555b99f34b1c067f4d2ea441095768d54040c479b869b2116f2283c5ea029cc64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SSTORE 0xB9 SWAP16 CALLVALUE 0xB1 0xC0 PUSH8 0xF4D2EA441095768D SLOAD DIV 0xC SELFBALANCE SWAP12 DUP7 SWAP12 0x21 AND CALLCODE 0x28 EXTCODECOPY MCOPY LOG0 0x29 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2b69475893fef9566b51a6f4707efb246e99a221eea24472d422e54ab1462664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2B PUSH10 0x475893FEF9566B51A6F4 PUSH17 0x7EFB246E99A221EEA24472D422E54AB146 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"258:2354:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2b69475893fef9566b51a6f4707efb246e99a221eea24472d422e54ab1462664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2B PUSH10 0x475893FEF9566B51A6F4 PUSH17 0x7EFB246E99A221EEA24472D422E54AB146 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"258:2354:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"src/blockchain/evm/contracts/DirectMintNFTV3.sol":{"LaunchNFTV3":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint96","name":"_royaltyFee","type":"uint96"},{"internalType":"uint96","name":"_platformFee","type":"uint96"},{"internalType":"address","name":"_platformFeeRecipient","type":"address"},{"internalType":"address","name":"_backendSigner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"phaseIndex","type":"uint256"},{"indexed":false,"internalType":"enum LaunchNFTV3.PhaseType","name":"phaseType","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"PhaseAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"phaseIndex","type":"uint256"},{"indexed":false,"internalType":"enum LaunchNFTV3.PhaseType","name":"phaseType","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"PhaseUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint96","name":"newPercentage","type":"uint96"},{"indexed":false,"internalType":"address","name":"newRecipient","type":"address"}],"name":"PlatformFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"enum LaunchNFTV3.PhaseType","name":"phaseType","type":"uint8"}],"name":"TokenMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawCompleted","type":"event"},{"inputs":[{"internalType":"enum LaunchNFTV3.PhaseType","name":"_phaseType","type":"uint8"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"_maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"}],"name":"addPhase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"backendSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActivePhase","outputs":[{"internalType":"uint256","name":"phaseIndex","type":"uint256"},{"components":[{"internalType":"enum LaunchNFTV3.PhaseType","name":"phaseType","type":"uint8"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"mintedInPhase","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"internalType":"struct LaunchNFTV3.Phase","name":"phase","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum LaunchNFTV3.PhaseType","name":"phaseType","type":"uint8"}],"name":"getMintedInPhase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPhaseCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isActivePhasePresent","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"bytes32","name":"uniqueId","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"phases","outputs":[{"internalType":"enum LaunchNFTV3.PhaseType","name":"phaseType","type":"uint8"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"mintedInPhase","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeePercentage","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_isPaused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"tokensOfOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3557":{"entryPoint":null,"id":3557,"parameterSlots":2,"returnSlots":0},"@_431":{"entryPoint":null,"id":431,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8655":{"entryPoint":null,"id":8655,"parameterSlots":7,"returnSlots":0},"@_buildDomainSeparator_3604":{"entryPoint":1429,"id":3604,"parameterSlots":0,"returnSlots":1},"@_feeDenominator_2250":{"entryPoint":2058,"id":2250,"parameterSlots":0,"returnSlots":1},"@_setDefaultRoyalty_2296":{"entryPoint":1520,"id":2296,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":1151,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2769":{"entryPoint":2048,"id":2769,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2609":{"entryPoint":1349,"id":2609,"parameterSlots":2,"returnSlots":1},"@toShortString_2511":{"entryPoint":1944,"id":2511,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":2423,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":2489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96_fromMemory":{"entryPoint":2582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint96t_uint96t_addresst_address_fromMemory":{"entryPoint":2603,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3576,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3675,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3690,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":3822,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3591,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":3705,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3837,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":2305,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2068,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":2332,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":3997,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2928,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3986,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2821,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3878,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":3225,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2120,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3665,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2088,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3060,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":2535,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":3190,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":4034,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":3080,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":3788,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3366,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2381,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2949,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2879,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3338,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2256,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":3070,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":3308,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":3618,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2832,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2209,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":3114,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":4013,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2182,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2187,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2083,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2078,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2192,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2965,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":3295,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":3166,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2978,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":3124,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2138,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":2559,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":3161,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:14274:32","nodeType":"YulBlock","src":"0:14274:32","statements":[{"body":{"nativeSrc":"47:35:32","nodeType":"YulBlock","src":"47:35:32","statements":[{"nativeSrc":"57:19:32","nodeType":"YulAssignment","src":"57:19:32","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:32","nodeType":"YulLiteral","src":"73:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:32","nodeType":"YulIdentifier","src":"67:5:32"},"nativeSrc":"67:9:32","nodeType":"YulFunctionCall","src":"67:9:32"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:32","nodeType":"YulIdentifier","src":"57:6:32"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:32","nodeType":"YulTypedName","src":"40:6:32","type":""}],"src":"7:75:32"},{"body":{"nativeSrc":"177:28:32","nodeType":"YulBlock","src":"177:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:32","nodeType":"YulLiteral","src":"194:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:32","nodeType":"YulLiteral","src":"197:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:32","nodeType":"YulIdentifier","src":"187:6:32"},"nativeSrc":"187:12:32","nodeType":"YulFunctionCall","src":"187:12:32"},"nativeSrc":"187:12:32","nodeType":"YulExpressionStatement","src":"187:12:32"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:32","nodeType":"YulFunctionDefinition","src":"88:117:32"},{"body":{"nativeSrc":"300:28:32","nodeType":"YulBlock","src":"300:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:32","nodeType":"YulLiteral","src":"317:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:32","nodeType":"YulLiteral","src":"320:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:32","nodeType":"YulIdentifier","src":"310:6:32"},"nativeSrc":"310:12:32","nodeType":"YulFunctionCall","src":"310:12:32"},"nativeSrc":"310:12:32","nodeType":"YulExpressionStatement","src":"310:12:32"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:32","nodeType":"YulFunctionDefinition","src":"211:117:32"},{"body":{"nativeSrc":"379:81:32","nodeType":"YulBlock","src":"379:81:32","statements":[{"nativeSrc":"389:65:32","nodeType":"YulAssignment","src":"389:65:32","value":{"arguments":[{"name":"value","nativeSrc":"404:5:32","nodeType":"YulIdentifier","src":"404:5:32"},{"kind":"number","nativeSrc":"411:42:32","nodeType":"YulLiteral","src":"411:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:32","nodeType":"YulIdentifier","src":"400:3:32"},"nativeSrc":"400:54:32","nodeType":"YulFunctionCall","src":"400:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:32","nodeType":"YulIdentifier","src":"389:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:32","nodeType":"YulTypedName","src":"361:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:32","nodeType":"YulTypedName","src":"371:7:32","type":""}],"src":"334:126:32"},{"body":{"nativeSrc":"511:51:32","nodeType":"YulBlock","src":"511:51:32","statements":[{"nativeSrc":"521:35:32","nodeType":"YulAssignment","src":"521:35:32","value":{"arguments":[{"name":"value","nativeSrc":"550:5:32","nodeType":"YulIdentifier","src":"550:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:32","nodeType":"YulIdentifier","src":"532:17:32"},"nativeSrc":"532:24:32","nodeType":"YulFunctionCall","src":"532:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:32","nodeType":"YulIdentifier","src":"521:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:32","nodeType":"YulTypedName","src":"493:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:32","nodeType":"YulTypedName","src":"503:7:32","type":""}],"src":"466:96:32"},{"body":{"nativeSrc":"611:79:32","nodeType":"YulBlock","src":"611:79:32","statements":[{"body":{"nativeSrc":"668:16:32","nodeType":"YulBlock","src":"668:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:32","nodeType":"YulLiteral","src":"677:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:32","nodeType":"YulLiteral","src":"680:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:32","nodeType":"YulIdentifier","src":"670:6:32"},"nativeSrc":"670:12:32","nodeType":"YulFunctionCall","src":"670:12:32"},"nativeSrc":"670:12:32","nodeType":"YulExpressionStatement","src":"670:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:32","nodeType":"YulIdentifier","src":"634:5:32"},{"arguments":[{"name":"value","nativeSrc":"659:5:32","nodeType":"YulIdentifier","src":"659:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:32","nodeType":"YulIdentifier","src":"641:17:32"},"nativeSrc":"641:24:32","nodeType":"YulFunctionCall","src":"641:24:32"}],"functionName":{"name":"eq","nativeSrc":"631:2:32","nodeType":"YulIdentifier","src":"631:2:32"},"nativeSrc":"631:35:32","nodeType":"YulFunctionCall","src":"631:35:32"}],"functionName":{"name":"iszero","nativeSrc":"624:6:32","nodeType":"YulIdentifier","src":"624:6:32"},"nativeSrc":"624:43:32","nodeType":"YulFunctionCall","src":"624:43:32"},"nativeSrc":"621:63:32","nodeType":"YulIf","src":"621:63:32"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:32","nodeType":"YulTypedName","src":"604:5:32","type":""}],"src":"568:122:32"},{"body":{"nativeSrc":"759:80:32","nodeType":"YulBlock","src":"759:80:32","statements":[{"nativeSrc":"769:22:32","nodeType":"YulAssignment","src":"769:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:32","nodeType":"YulIdentifier","src":"784:6:32"}],"functionName":{"name":"mload","nativeSrc":"778:5:32","nodeType":"YulIdentifier","src":"778:5:32"},"nativeSrc":"778:13:32","nodeType":"YulFunctionCall","src":"778:13:32"},"variableNames":[{"name":"value","nativeSrc":"769:5:32","nodeType":"YulIdentifier","src":"769:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:32","nodeType":"YulIdentifier","src":"827:5:32"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:32","nodeType":"YulIdentifier","src":"800:26:32"},"nativeSrc":"800:33:32","nodeType":"YulFunctionCall","src":"800:33:32"},"nativeSrc":"800:33:32","nodeType":"YulExpressionStatement","src":"800:33:32"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:32","nodeType":"YulTypedName","src":"737:6:32","type":""},{"name":"end","nativeSrc":"745:3:32","nodeType":"YulTypedName","src":"745:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:32","nodeType":"YulTypedName","src":"753:5:32","type":""}],"src":"696:143:32"},{"body":{"nativeSrc":"934:28:32","nodeType":"YulBlock","src":"934:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"951:1:32","nodeType":"YulLiteral","src":"951:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"954:1:32","nodeType":"YulLiteral","src":"954:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"944:6:32","nodeType":"YulIdentifier","src":"944:6:32"},"nativeSrc":"944:12:32","nodeType":"YulFunctionCall","src":"944:12:32"},"nativeSrc":"944:12:32","nodeType":"YulExpressionStatement","src":"944:12:32"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"845:117:32","nodeType":"YulFunctionDefinition","src":"845:117:32"},{"body":{"nativeSrc":"1057:28:32","nodeType":"YulBlock","src":"1057:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1074:1:32","nodeType":"YulLiteral","src":"1074:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1077:1:32","nodeType":"YulLiteral","src":"1077:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1067:6:32","nodeType":"YulIdentifier","src":"1067:6:32"},"nativeSrc":"1067:12:32","nodeType":"YulFunctionCall","src":"1067:12:32"},"nativeSrc":"1067:12:32","nodeType":"YulExpressionStatement","src":"1067:12:32"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"968:117:32","nodeType":"YulFunctionDefinition","src":"968:117:32"},{"body":{"nativeSrc":"1139:54:32","nodeType":"YulBlock","src":"1139:54:32","statements":[{"nativeSrc":"1149:38:32","nodeType":"YulAssignment","src":"1149:38:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1167:5:32","nodeType":"YulIdentifier","src":"1167:5:32"},{"kind":"number","nativeSrc":"1174:2:32","nodeType":"YulLiteral","src":"1174:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1163:3:32","nodeType":"YulIdentifier","src":"1163:3:32"},"nativeSrc":"1163:14:32","nodeType":"YulFunctionCall","src":"1163:14:32"},{"arguments":[{"kind":"number","nativeSrc":"1183:2:32","nodeType":"YulLiteral","src":"1183:2:32","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1179:3:32","nodeType":"YulIdentifier","src":"1179:3:32"},"nativeSrc":"1179:7:32","nodeType":"YulFunctionCall","src":"1179:7:32"}],"functionName":{"name":"and","nativeSrc":"1159:3:32","nodeType":"YulIdentifier","src":"1159:3:32"},"nativeSrc":"1159:28:32","nodeType":"YulFunctionCall","src":"1159:28:32"},"variableNames":[{"name":"result","nativeSrc":"1149:6:32","nodeType":"YulIdentifier","src":"1149:6:32"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1091:102:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1122:5:32","nodeType":"YulTypedName","src":"1122:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1132:6:32","nodeType":"YulTypedName","src":"1132:6:32","type":""}],"src":"1091:102:32"},{"body":{"nativeSrc":"1227:152:32","nodeType":"YulBlock","src":"1227:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1244:1:32","nodeType":"YulLiteral","src":"1244:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1247:77:32","nodeType":"YulLiteral","src":"1247:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1237:6:32","nodeType":"YulIdentifier","src":"1237:6:32"},"nativeSrc":"1237:88:32","nodeType":"YulFunctionCall","src":"1237:88:32"},"nativeSrc":"1237:88:32","nodeType":"YulExpressionStatement","src":"1237:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1341:1:32","nodeType":"YulLiteral","src":"1341:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"1344:4:32","nodeType":"YulLiteral","src":"1344:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1334:6:32","nodeType":"YulIdentifier","src":"1334:6:32"},"nativeSrc":"1334:15:32","nodeType":"YulFunctionCall","src":"1334:15:32"},"nativeSrc":"1334:15:32","nodeType":"YulExpressionStatement","src":"1334:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1365:1:32","nodeType":"YulLiteral","src":"1365:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"1368:4:32","nodeType":"YulLiteral","src":"1368:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1358:6:32","nodeType":"YulIdentifier","src":"1358:6:32"},"nativeSrc":"1358:15:32","nodeType":"YulFunctionCall","src":"1358:15:32"},"nativeSrc":"1358:15:32","nodeType":"YulExpressionStatement","src":"1358:15:32"}]},"name":"panic_error_0x41","nativeSrc":"1199:180:32","nodeType":"YulFunctionDefinition","src":"1199:180:32"},{"body":{"nativeSrc":"1428:238:32","nodeType":"YulBlock","src":"1428:238:32","statements":[{"nativeSrc":"1438:58:32","nodeType":"YulVariableDeclaration","src":"1438:58:32","value":{"arguments":[{"name":"memPtr","nativeSrc":"1460:6:32","nodeType":"YulIdentifier","src":"1460:6:32"},{"arguments":[{"name":"size","nativeSrc":"1490:4:32","nodeType":"YulIdentifier","src":"1490:4:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1468:21:32","nodeType":"YulIdentifier","src":"1468:21:32"},"nativeSrc":"1468:27:32","nodeType":"YulFunctionCall","src":"1468:27:32"}],"functionName":{"name":"add","nativeSrc":"1456:3:32","nodeType":"YulIdentifier","src":"1456:3:32"},"nativeSrc":"1456:40:32","nodeType":"YulFunctionCall","src":"1456:40:32"},"variables":[{"name":"newFreePtr","nativeSrc":"1442:10:32","nodeType":"YulTypedName","src":"1442:10:32","type":""}]},{"body":{"nativeSrc":"1607:22:32","nodeType":"YulBlock","src":"1607:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1609:16:32","nodeType":"YulIdentifier","src":"1609:16:32"},"nativeSrc":"1609:18:32","nodeType":"YulFunctionCall","src":"1609:18:32"},"nativeSrc":"1609:18:32","nodeType":"YulExpressionStatement","src":"1609:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1550:10:32","nodeType":"YulIdentifier","src":"1550:10:32"},{"kind":"number","nativeSrc":"1562:18:32","nodeType":"YulLiteral","src":"1562:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1547:2:32","nodeType":"YulIdentifier","src":"1547:2:32"},"nativeSrc":"1547:34:32","nodeType":"YulFunctionCall","src":"1547:34:32"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1586:10:32","nodeType":"YulIdentifier","src":"1586:10:32"},{"name":"memPtr","nativeSrc":"1598:6:32","nodeType":"YulIdentifier","src":"1598:6:32"}],"functionName":{"name":"lt","nativeSrc":"1583:2:32","nodeType":"YulIdentifier","src":"1583:2:32"},"nativeSrc":"1583:22:32","nodeType":"YulFunctionCall","src":"1583:22:32"}],"functionName":{"name":"or","nativeSrc":"1544:2:32","nodeType":"YulIdentifier","src":"1544:2:32"},"nativeSrc":"1544:62:32","nodeType":"YulFunctionCall","src":"1544:62:32"},"nativeSrc":"1541:88:32","nodeType":"YulIf","src":"1541:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1645:2:32","nodeType":"YulLiteral","src":"1645:2:32","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1649:10:32","nodeType":"YulIdentifier","src":"1649:10:32"}],"functionName":{"name":"mstore","nativeSrc":"1638:6:32","nodeType":"YulIdentifier","src":"1638:6:32"},"nativeSrc":"1638:22:32","nodeType":"YulFunctionCall","src":"1638:22:32"},"nativeSrc":"1638:22:32","nodeType":"YulExpressionStatement","src":"1638:22:32"}]},"name":"finalize_allocation","nativeSrc":"1385:281:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1414:6:32","nodeType":"YulTypedName","src":"1414:6:32","type":""},{"name":"size","nativeSrc":"1422:4:32","nodeType":"YulTypedName","src":"1422:4:32","type":""}],"src":"1385:281:32"},{"body":{"nativeSrc":"1713:88:32","nodeType":"YulBlock","src":"1713:88:32","statements":[{"nativeSrc":"1723:30:32","nodeType":"YulAssignment","src":"1723:30:32","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1733:18:32","nodeType":"YulIdentifier","src":"1733:18:32"},"nativeSrc":"1733:20:32","nodeType":"YulFunctionCall","src":"1733:20:32"},"variableNames":[{"name":"memPtr","nativeSrc":"1723:6:32","nodeType":"YulIdentifier","src":"1723:6:32"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1782:6:32","nodeType":"YulIdentifier","src":"1782:6:32"},{"name":"size","nativeSrc":"1790:4:32","nodeType":"YulIdentifier","src":"1790:4:32"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1762:19:32","nodeType":"YulIdentifier","src":"1762:19:32"},"nativeSrc":"1762:33:32","nodeType":"YulFunctionCall","src":"1762:33:32"},"nativeSrc":"1762:33:32","nodeType":"YulExpressionStatement","src":"1762:33:32"}]},"name":"allocate_memory","nativeSrc":"1672:129:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1697:4:32","nodeType":"YulTypedName","src":"1697:4:32","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1706:6:32","nodeType":"YulTypedName","src":"1706:6:32","type":""}],"src":"1672:129:32"},{"body":{"nativeSrc":"1874:241:32","nodeType":"YulBlock","src":"1874:241:32","statements":[{"body":{"nativeSrc":"1979:22:32","nodeType":"YulBlock","src":"1979:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1981:16:32","nodeType":"YulIdentifier","src":"1981:16:32"},"nativeSrc":"1981:18:32","nodeType":"YulFunctionCall","src":"1981:18:32"},"nativeSrc":"1981:18:32","nodeType":"YulExpressionStatement","src":"1981:18:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1951:6:32","nodeType":"YulIdentifier","src":"1951:6:32"},{"kind":"number","nativeSrc":"1959:18:32","nodeType":"YulLiteral","src":"1959:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1948:2:32","nodeType":"YulIdentifier","src":"1948:2:32"},"nativeSrc":"1948:30:32","nodeType":"YulFunctionCall","src":"1948:30:32"},"nativeSrc":"1945:56:32","nodeType":"YulIf","src":"1945:56:32"},{"nativeSrc":"2011:37:32","nodeType":"YulAssignment","src":"2011:37:32","value":{"arguments":[{"name":"length","nativeSrc":"2041:6:32","nodeType":"YulIdentifier","src":"2041:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2019:21:32","nodeType":"YulIdentifier","src":"2019:21:32"},"nativeSrc":"2019:29:32","nodeType":"YulFunctionCall","src":"2019:29:32"},"variableNames":[{"name":"size","nativeSrc":"2011:4:32","nodeType":"YulIdentifier","src":"2011:4:32"}]},{"nativeSrc":"2085:23:32","nodeType":"YulAssignment","src":"2085:23:32","value":{"arguments":[{"name":"size","nativeSrc":"2097:4:32","nodeType":"YulIdentifier","src":"2097:4:32"},{"kind":"number","nativeSrc":"2103:4:32","nodeType":"YulLiteral","src":"2103:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2093:3:32","nodeType":"YulIdentifier","src":"2093:3:32"},"nativeSrc":"2093:15:32","nodeType":"YulFunctionCall","src":"2093:15:32"},"variableNames":[{"name":"size","nativeSrc":"2085:4:32","nodeType":"YulIdentifier","src":"2085:4:32"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1807:308:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1858:6:32","nodeType":"YulTypedName","src":"1858:6:32","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1869:4:32","nodeType":"YulTypedName","src":"1869:4:32","type":""}],"src":"1807:308:32"},{"body":{"nativeSrc":"2183:186:32","nodeType":"YulBlock","src":"2183:186:32","statements":[{"nativeSrc":"2194:10:32","nodeType":"YulVariableDeclaration","src":"2194:10:32","value":{"kind":"number","nativeSrc":"2203:1:32","nodeType":"YulLiteral","src":"2203:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2198:1:32","nodeType":"YulTypedName","src":"2198:1:32","type":""}]},{"body":{"nativeSrc":"2263:63:32","nodeType":"YulBlock","src":"2263:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2288:3:32","nodeType":"YulIdentifier","src":"2288:3:32"},{"name":"i","nativeSrc":"2293:1:32","nodeType":"YulIdentifier","src":"2293:1:32"}],"functionName":{"name":"add","nativeSrc":"2284:3:32","nodeType":"YulIdentifier","src":"2284:3:32"},"nativeSrc":"2284:11:32","nodeType":"YulFunctionCall","src":"2284:11:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2307:3:32","nodeType":"YulIdentifier","src":"2307:3:32"},{"name":"i","nativeSrc":"2312:1:32","nodeType":"YulIdentifier","src":"2312:1:32"}],"functionName":{"name":"add","nativeSrc":"2303:3:32","nodeType":"YulIdentifier","src":"2303:3:32"},"nativeSrc":"2303:11:32","nodeType":"YulFunctionCall","src":"2303:11:32"}],"functionName":{"name":"mload","nativeSrc":"2297:5:32","nodeType":"YulIdentifier","src":"2297:5:32"},"nativeSrc":"2297:18:32","nodeType":"YulFunctionCall","src":"2297:18:32"}],"functionName":{"name":"mstore","nativeSrc":"2277:6:32","nodeType":"YulIdentifier","src":"2277:6:32"},"nativeSrc":"2277:39:32","nodeType":"YulFunctionCall","src":"2277:39:32"},"nativeSrc":"2277:39:32","nodeType":"YulExpressionStatement","src":"2277:39:32"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2224:1:32","nodeType":"YulIdentifier","src":"2224:1:32"},{"name":"length","nativeSrc":"2227:6:32","nodeType":"YulIdentifier","src":"2227:6:32"}],"functionName":{"name":"lt","nativeSrc":"2221:2:32","nodeType":"YulIdentifier","src":"2221:2:32"},"nativeSrc":"2221:13:32","nodeType":"YulFunctionCall","src":"2221:13:32"},"nativeSrc":"2213:113:32","nodeType":"YulForLoop","post":{"nativeSrc":"2235:19:32","nodeType":"YulBlock","src":"2235:19:32","statements":[{"nativeSrc":"2237:15:32","nodeType":"YulAssignment","src":"2237:15:32","value":{"arguments":[{"name":"i","nativeSrc":"2246:1:32","nodeType":"YulIdentifier","src":"2246:1:32"},{"kind":"number","nativeSrc":"2249:2:32","nodeType":"YulLiteral","src":"2249:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2242:3:32","nodeType":"YulIdentifier","src":"2242:3:32"},"nativeSrc":"2242:10:32","nodeType":"YulFunctionCall","src":"2242:10:32"},"variableNames":[{"name":"i","nativeSrc":"2237:1:32","nodeType":"YulIdentifier","src":"2237:1:32"}]}]},"pre":{"nativeSrc":"2217:3:32","nodeType":"YulBlock","src":"2217:3:32","statements":[]},"src":"2213:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2346:3:32","nodeType":"YulIdentifier","src":"2346:3:32"},{"name":"length","nativeSrc":"2351:6:32","nodeType":"YulIdentifier","src":"2351:6:32"}],"functionName":{"name":"add","nativeSrc":"2342:3:32","nodeType":"YulIdentifier","src":"2342:3:32"},"nativeSrc":"2342:16:32","nodeType":"YulFunctionCall","src":"2342:16:32"},{"kind":"number","nativeSrc":"2360:1:32","nodeType":"YulLiteral","src":"2360:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2335:6:32","nodeType":"YulIdentifier","src":"2335:6:32"},"nativeSrc":"2335:27:32","nodeType":"YulFunctionCall","src":"2335:27:32"},"nativeSrc":"2335:27:32","nodeType":"YulExpressionStatement","src":"2335:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2121:248:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2165:3:32","nodeType":"YulTypedName","src":"2165:3:32","type":""},{"name":"dst","nativeSrc":"2170:3:32","nodeType":"YulTypedName","src":"2170:3:32","type":""},{"name":"length","nativeSrc":"2175:6:32","nodeType":"YulTypedName","src":"2175:6:32","type":""}],"src":"2121:248:32"},{"body":{"nativeSrc":"2470:339:32","nodeType":"YulBlock","src":"2470:339:32","statements":[{"nativeSrc":"2480:75:32","nodeType":"YulAssignment","src":"2480:75:32","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2547:6:32","nodeType":"YulIdentifier","src":"2547:6:32"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2505:41:32","nodeType":"YulIdentifier","src":"2505:41:32"},"nativeSrc":"2505:49:32","nodeType":"YulFunctionCall","src":"2505:49:32"}],"functionName":{"name":"allocate_memory","nativeSrc":"2489:15:32","nodeType":"YulIdentifier","src":"2489:15:32"},"nativeSrc":"2489:66:32","nodeType":"YulFunctionCall","src":"2489:66:32"},"variableNames":[{"name":"array","nativeSrc":"2480:5:32","nodeType":"YulIdentifier","src":"2480:5:32"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2571:5:32","nodeType":"YulIdentifier","src":"2571:5:32"},{"name":"length","nativeSrc":"2578:6:32","nodeType":"YulIdentifier","src":"2578:6:32"}],"functionName":{"name":"mstore","nativeSrc":"2564:6:32","nodeType":"YulIdentifier","src":"2564:6:32"},"nativeSrc":"2564:21:32","nodeType":"YulFunctionCall","src":"2564:21:32"},"nativeSrc":"2564:21:32","nodeType":"YulExpressionStatement","src":"2564:21:32"},{"nativeSrc":"2594:27:32","nodeType":"YulVariableDeclaration","src":"2594:27:32","value":{"arguments":[{"name":"array","nativeSrc":"2609:5:32","nodeType":"YulIdentifier","src":"2609:5:32"},{"kind":"number","nativeSrc":"2616:4:32","nodeType":"YulLiteral","src":"2616:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2605:3:32","nodeType":"YulIdentifier","src":"2605:3:32"},"nativeSrc":"2605:16:32","nodeType":"YulFunctionCall","src":"2605:16:32"},"variables":[{"name":"dst","nativeSrc":"2598:3:32","nodeType":"YulTypedName","src":"2598:3:32","type":""}]},{"body":{"nativeSrc":"2659:83:32","nodeType":"YulBlock","src":"2659:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2661:77:32","nodeType":"YulIdentifier","src":"2661:77:32"},"nativeSrc":"2661:79:32","nodeType":"YulFunctionCall","src":"2661:79:32"},"nativeSrc":"2661:79:32","nodeType":"YulExpressionStatement","src":"2661:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2640:3:32","nodeType":"YulIdentifier","src":"2640:3:32"},{"name":"length","nativeSrc":"2645:6:32","nodeType":"YulIdentifier","src":"2645:6:32"}],"functionName":{"name":"add","nativeSrc":"2636:3:32","nodeType":"YulIdentifier","src":"2636:3:32"},"nativeSrc":"2636:16:32","nodeType":"YulFunctionCall","src":"2636:16:32"},{"name":"end","nativeSrc":"2654:3:32","nodeType":"YulIdentifier","src":"2654:3:32"}],"functionName":{"name":"gt","nativeSrc":"2633:2:32","nodeType":"YulIdentifier","src":"2633:2:32"},"nativeSrc":"2633:25:32","nodeType":"YulFunctionCall","src":"2633:25:32"},"nativeSrc":"2630:112:32","nodeType":"YulIf","src":"2630:112:32"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2786:3:32","nodeType":"YulIdentifier","src":"2786:3:32"},{"name":"dst","nativeSrc":"2791:3:32","nodeType":"YulIdentifier","src":"2791:3:32"},{"name":"length","nativeSrc":"2796:6:32","nodeType":"YulIdentifier","src":"2796:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2751:34:32","nodeType":"YulIdentifier","src":"2751:34:32"},"nativeSrc":"2751:52:32","nodeType":"YulFunctionCall","src":"2751:52:32"},"nativeSrc":"2751:52:32","nodeType":"YulExpressionStatement","src":"2751:52:32"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2375:434:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2443:3:32","nodeType":"YulTypedName","src":"2443:3:32","type":""},{"name":"length","nativeSrc":"2448:6:32","nodeType":"YulTypedName","src":"2448:6:32","type":""},{"name":"end","nativeSrc":"2456:3:32","nodeType":"YulTypedName","src":"2456:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2464:5:32","nodeType":"YulTypedName","src":"2464:5:32","type":""}],"src":"2375:434:32"},{"body":{"nativeSrc":"2902:282:32","nodeType":"YulBlock","src":"2902:282:32","statements":[{"body":{"nativeSrc":"2951:83:32","nodeType":"YulBlock","src":"2951:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2953:77:32","nodeType":"YulIdentifier","src":"2953:77:32"},"nativeSrc":"2953:79:32","nodeType":"YulFunctionCall","src":"2953:79:32"},"nativeSrc":"2953:79:32","nodeType":"YulExpressionStatement","src":"2953:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2930:6:32","nodeType":"YulIdentifier","src":"2930:6:32"},{"kind":"number","nativeSrc":"2938:4:32","nodeType":"YulLiteral","src":"2938:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2926:3:32","nodeType":"YulIdentifier","src":"2926:3:32"},"nativeSrc":"2926:17:32","nodeType":"YulFunctionCall","src":"2926:17:32"},{"name":"end","nativeSrc":"2945:3:32","nodeType":"YulIdentifier","src":"2945:3:32"}],"functionName":{"name":"slt","nativeSrc":"2922:3:32","nodeType":"YulIdentifier","src":"2922:3:32"},"nativeSrc":"2922:27:32","nodeType":"YulFunctionCall","src":"2922:27:32"}],"functionName":{"name":"iszero","nativeSrc":"2915:6:32","nodeType":"YulIdentifier","src":"2915:6:32"},"nativeSrc":"2915:35:32","nodeType":"YulFunctionCall","src":"2915:35:32"},"nativeSrc":"2912:122:32","nodeType":"YulIf","src":"2912:122:32"},{"nativeSrc":"3043:27:32","nodeType":"YulVariableDeclaration","src":"3043:27:32","value":{"arguments":[{"name":"offset","nativeSrc":"3063:6:32","nodeType":"YulIdentifier","src":"3063:6:32"}],"functionName":{"name":"mload","nativeSrc":"3057:5:32","nodeType":"YulIdentifier","src":"3057:5:32"},"nativeSrc":"3057:13:32","nodeType":"YulFunctionCall","src":"3057:13:32"},"variables":[{"name":"length","nativeSrc":"3047:6:32","nodeType":"YulTypedName","src":"3047:6:32","type":""}]},{"nativeSrc":"3079:99:32","nodeType":"YulAssignment","src":"3079:99:32","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3151:6:32","nodeType":"YulIdentifier","src":"3151:6:32"},{"kind":"number","nativeSrc":"3159:4:32","nodeType":"YulLiteral","src":"3159:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3147:3:32","nodeType":"YulIdentifier","src":"3147:3:32"},"nativeSrc":"3147:17:32","nodeType":"YulFunctionCall","src":"3147:17:32"},{"name":"length","nativeSrc":"3166:6:32","nodeType":"YulIdentifier","src":"3166:6:32"},{"name":"end","nativeSrc":"3174:3:32","nodeType":"YulIdentifier","src":"3174:3:32"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"3088:58:32","nodeType":"YulIdentifier","src":"3088:58:32"},"nativeSrc":"3088:90:32","nodeType":"YulFunctionCall","src":"3088:90:32"},"variableNames":[{"name":"array","nativeSrc":"3079:5:32","nodeType":"YulIdentifier","src":"3079:5:32"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2829:355:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2880:6:32","nodeType":"YulTypedName","src":"2880:6:32","type":""},{"name":"end","nativeSrc":"2888:3:32","nodeType":"YulTypedName","src":"2888:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2896:5:32","nodeType":"YulTypedName","src":"2896:5:32","type":""}],"src":"2829:355:32"},{"body":{"nativeSrc":"3234:65:32","nodeType":"YulBlock","src":"3234:65:32","statements":[{"nativeSrc":"3244:49:32","nodeType":"YulAssignment","src":"3244:49:32","value":{"arguments":[{"name":"value","nativeSrc":"3259:5:32","nodeType":"YulIdentifier","src":"3259:5:32"},{"kind":"number","nativeSrc":"3266:26:32","nodeType":"YulLiteral","src":"3266:26:32","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3255:3:32","nodeType":"YulIdentifier","src":"3255:3:32"},"nativeSrc":"3255:38:32","nodeType":"YulFunctionCall","src":"3255:38:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3244:7:32","nodeType":"YulIdentifier","src":"3244:7:32"}]}]},"name":"cleanup_t_uint96","nativeSrc":"3190:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3216:5:32","nodeType":"YulTypedName","src":"3216:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3226:7:32","nodeType":"YulTypedName","src":"3226:7:32","type":""}],"src":"3190:109:32"},{"body":{"nativeSrc":"3347:78:32","nodeType":"YulBlock","src":"3347:78:32","statements":[{"body":{"nativeSrc":"3403:16:32","nodeType":"YulBlock","src":"3403:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3412:1:32","nodeType":"YulLiteral","src":"3412:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"3415:1:32","nodeType":"YulLiteral","src":"3415:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3405:6:32","nodeType":"YulIdentifier","src":"3405:6:32"},"nativeSrc":"3405:12:32","nodeType":"YulFunctionCall","src":"3405:12:32"},"nativeSrc":"3405:12:32","nodeType":"YulExpressionStatement","src":"3405:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3370:5:32","nodeType":"YulIdentifier","src":"3370:5:32"},{"arguments":[{"name":"value","nativeSrc":"3394:5:32","nodeType":"YulIdentifier","src":"3394:5:32"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"3377:16:32","nodeType":"YulIdentifier","src":"3377:16:32"},"nativeSrc":"3377:23:32","nodeType":"YulFunctionCall","src":"3377:23:32"}],"functionName":{"name":"eq","nativeSrc":"3367:2:32","nodeType":"YulIdentifier","src":"3367:2:32"},"nativeSrc":"3367:34:32","nodeType":"YulFunctionCall","src":"3367:34:32"}],"functionName":{"name":"iszero","nativeSrc":"3360:6:32","nodeType":"YulIdentifier","src":"3360:6:32"},"nativeSrc":"3360:42:32","nodeType":"YulFunctionCall","src":"3360:42:32"},"nativeSrc":"3357:62:32","nodeType":"YulIf","src":"3357:62:32"}]},"name":"validator_revert_t_uint96","nativeSrc":"3305:120:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3340:5:32","nodeType":"YulTypedName","src":"3340:5:32","type":""}],"src":"3305:120:32"},{"body":{"nativeSrc":"3493:79:32","nodeType":"YulBlock","src":"3493:79:32","statements":[{"nativeSrc":"3503:22:32","nodeType":"YulAssignment","src":"3503:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"3518:6:32","nodeType":"YulIdentifier","src":"3518:6:32"}],"functionName":{"name":"mload","nativeSrc":"3512:5:32","nodeType":"YulIdentifier","src":"3512:5:32"},"nativeSrc":"3512:13:32","nodeType":"YulFunctionCall","src":"3512:13:32"},"variableNames":[{"name":"value","nativeSrc":"3503:5:32","nodeType":"YulIdentifier","src":"3503:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3560:5:32","nodeType":"YulIdentifier","src":"3560:5:32"}],"functionName":{"name":"validator_revert_t_uint96","nativeSrc":"3534:25:32","nodeType":"YulIdentifier","src":"3534:25:32"},"nativeSrc":"3534:32:32","nodeType":"YulFunctionCall","src":"3534:32:32"},"nativeSrc":"3534:32:32","nodeType":"YulExpressionStatement","src":"3534:32:32"}]},"name":"abi_decode_t_uint96_fromMemory","nativeSrc":"3431:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3471:6:32","nodeType":"YulTypedName","src":"3471:6:32","type":""},{"name":"end","nativeSrc":"3479:3:32","nodeType":"YulTypedName","src":"3479:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3487:5:32","nodeType":"YulTypedName","src":"3487:5:32","type":""}],"src":"3431:141:32"},{"body":{"nativeSrc":"3775:1436:32","nodeType":"YulBlock","src":"3775:1436:32","statements":[{"body":{"nativeSrc":"3822:83:32","nodeType":"YulBlock","src":"3822:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3824:77:32","nodeType":"YulIdentifier","src":"3824:77:32"},"nativeSrc":"3824:79:32","nodeType":"YulFunctionCall","src":"3824:79:32"},"nativeSrc":"3824:79:32","nodeType":"YulExpressionStatement","src":"3824:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3796:7:32","nodeType":"YulIdentifier","src":"3796:7:32"},{"name":"headStart","nativeSrc":"3805:9:32","nodeType":"YulIdentifier","src":"3805:9:32"}],"functionName":{"name":"sub","nativeSrc":"3792:3:32","nodeType":"YulIdentifier","src":"3792:3:32"},"nativeSrc":"3792:23:32","nodeType":"YulFunctionCall","src":"3792:23:32"},{"kind":"number","nativeSrc":"3817:3:32","nodeType":"YulLiteral","src":"3817:3:32","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"3788:3:32","nodeType":"YulIdentifier","src":"3788:3:32"},"nativeSrc":"3788:33:32","nodeType":"YulFunctionCall","src":"3788:33:32"},"nativeSrc":"3785:120:32","nodeType":"YulIf","src":"3785:120:32"},{"nativeSrc":"3915:128:32","nodeType":"YulBlock","src":"3915:128:32","statements":[{"nativeSrc":"3930:15:32","nodeType":"YulVariableDeclaration","src":"3930:15:32","value":{"kind":"number","nativeSrc":"3944:1:32","nodeType":"YulLiteral","src":"3944:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3934:6:32","nodeType":"YulTypedName","src":"3934:6:32","type":""}]},{"nativeSrc":"3959:74:32","nodeType":"YulAssignment","src":"3959:74:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4005:9:32","nodeType":"YulIdentifier","src":"4005:9:32"},{"name":"offset","nativeSrc":"4016:6:32","nodeType":"YulIdentifier","src":"4016:6:32"}],"functionName":{"name":"add","nativeSrc":"4001:3:32","nodeType":"YulIdentifier","src":"4001:3:32"},"nativeSrc":"4001:22:32","nodeType":"YulFunctionCall","src":"4001:22:32"},{"name":"dataEnd","nativeSrc":"4025:7:32","nodeType":"YulIdentifier","src":"4025:7:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"3969:31:32","nodeType":"YulIdentifier","src":"3969:31:32"},"nativeSrc":"3969:64:32","nodeType":"YulFunctionCall","src":"3969:64:32"},"variableNames":[{"name":"value0","nativeSrc":"3959:6:32","nodeType":"YulIdentifier","src":"3959:6:32"}]}]},{"nativeSrc":"4053:292:32","nodeType":"YulBlock","src":"4053:292:32","statements":[{"nativeSrc":"4068:39:32","nodeType":"YulVariableDeclaration","src":"4068:39:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4092:9:32","nodeType":"YulIdentifier","src":"4092:9:32"},{"kind":"number","nativeSrc":"4103:2:32","nodeType":"YulLiteral","src":"4103:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4088:3:32","nodeType":"YulIdentifier","src":"4088:3:32"},"nativeSrc":"4088:18:32","nodeType":"YulFunctionCall","src":"4088:18:32"}],"functionName":{"name":"mload","nativeSrc":"4082:5:32","nodeType":"YulIdentifier","src":"4082:5:32"},"nativeSrc":"4082:25:32","nodeType":"YulFunctionCall","src":"4082:25:32"},"variables":[{"name":"offset","nativeSrc":"4072:6:32","nodeType":"YulTypedName","src":"4072:6:32","type":""}]},{"body":{"nativeSrc":"4154:83:32","nodeType":"YulBlock","src":"4154:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4156:77:32","nodeType":"YulIdentifier","src":"4156:77:32"},"nativeSrc":"4156:79:32","nodeType":"YulFunctionCall","src":"4156:79:32"},"nativeSrc":"4156:79:32","nodeType":"YulExpressionStatement","src":"4156:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4126:6:32","nodeType":"YulIdentifier","src":"4126:6:32"},{"kind":"number","nativeSrc":"4134:18:32","nodeType":"YulLiteral","src":"4134:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4123:2:32","nodeType":"YulIdentifier","src":"4123:2:32"},"nativeSrc":"4123:30:32","nodeType":"YulFunctionCall","src":"4123:30:32"},"nativeSrc":"4120:117:32","nodeType":"YulIf","src":"4120:117:32"},{"nativeSrc":"4251:84:32","nodeType":"YulAssignment","src":"4251:84:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4307:9:32","nodeType":"YulIdentifier","src":"4307:9:32"},{"name":"offset","nativeSrc":"4318:6:32","nodeType":"YulIdentifier","src":"4318:6:32"}],"functionName":{"name":"add","nativeSrc":"4303:3:32","nodeType":"YulIdentifier","src":"4303:3:32"},"nativeSrc":"4303:22:32","nodeType":"YulFunctionCall","src":"4303:22:32"},{"name":"dataEnd","nativeSrc":"4327:7:32","nodeType":"YulIdentifier","src":"4327:7:32"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4261:41:32","nodeType":"YulIdentifier","src":"4261:41:32"},"nativeSrc":"4261:74:32","nodeType":"YulFunctionCall","src":"4261:74:32"},"variableNames":[{"name":"value1","nativeSrc":"4251:6:32","nodeType":"YulIdentifier","src":"4251:6:32"}]}]},{"nativeSrc":"4355:292:32","nodeType":"YulBlock","src":"4355:292:32","statements":[{"nativeSrc":"4370:39:32","nodeType":"YulVariableDeclaration","src":"4370:39:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4394:9:32","nodeType":"YulIdentifier","src":"4394:9:32"},{"kind":"number","nativeSrc":"4405:2:32","nodeType":"YulLiteral","src":"4405:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4390:3:32","nodeType":"YulIdentifier","src":"4390:3:32"},"nativeSrc":"4390:18:32","nodeType":"YulFunctionCall","src":"4390:18:32"}],"functionName":{"name":"mload","nativeSrc":"4384:5:32","nodeType":"YulIdentifier","src":"4384:5:32"},"nativeSrc":"4384:25:32","nodeType":"YulFunctionCall","src":"4384:25:32"},"variables":[{"name":"offset","nativeSrc":"4374:6:32","nodeType":"YulTypedName","src":"4374:6:32","type":""}]},{"body":{"nativeSrc":"4456:83:32","nodeType":"YulBlock","src":"4456:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4458:77:32","nodeType":"YulIdentifier","src":"4458:77:32"},"nativeSrc":"4458:79:32","nodeType":"YulFunctionCall","src":"4458:79:32"},"nativeSrc":"4458:79:32","nodeType":"YulExpressionStatement","src":"4458:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4428:6:32","nodeType":"YulIdentifier","src":"4428:6:32"},{"kind":"number","nativeSrc":"4436:18:32","nodeType":"YulLiteral","src":"4436:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4425:2:32","nodeType":"YulIdentifier","src":"4425:2:32"},"nativeSrc":"4425:30:32","nodeType":"YulFunctionCall","src":"4425:30:32"},"nativeSrc":"4422:117:32","nodeType":"YulIf","src":"4422:117:32"},{"nativeSrc":"4553:84:32","nodeType":"YulAssignment","src":"4553:84:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4609:9:32","nodeType":"YulIdentifier","src":"4609:9:32"},{"name":"offset","nativeSrc":"4620:6:32","nodeType":"YulIdentifier","src":"4620:6:32"}],"functionName":{"name":"add","nativeSrc":"4605:3:32","nodeType":"YulIdentifier","src":"4605:3:32"},"nativeSrc":"4605:22:32","nodeType":"YulFunctionCall","src":"4605:22:32"},{"name":"dataEnd","nativeSrc":"4629:7:32","nodeType":"YulIdentifier","src":"4629:7:32"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4563:41:32","nodeType":"YulIdentifier","src":"4563:41:32"},"nativeSrc":"4563:74:32","nodeType":"YulFunctionCall","src":"4563:74:32"},"variableNames":[{"name":"value2","nativeSrc":"4553:6:32","nodeType":"YulIdentifier","src":"4553:6:32"}]}]},{"nativeSrc":"4657:128:32","nodeType":"YulBlock","src":"4657:128:32","statements":[{"nativeSrc":"4672:16:32","nodeType":"YulVariableDeclaration","src":"4672:16:32","value":{"kind":"number","nativeSrc":"4686:2:32","nodeType":"YulLiteral","src":"4686:2:32","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"4676:6:32","nodeType":"YulTypedName","src":"4676:6:32","type":""}]},{"nativeSrc":"4702:73:32","nodeType":"YulAssignment","src":"4702:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4747:9:32","nodeType":"YulIdentifier","src":"4747:9:32"},{"name":"offset","nativeSrc":"4758:6:32","nodeType":"YulIdentifier","src":"4758:6:32"}],"functionName":{"name":"add","nativeSrc":"4743:3:32","nodeType":"YulIdentifier","src":"4743:3:32"},"nativeSrc":"4743:22:32","nodeType":"YulFunctionCall","src":"4743:22:32"},{"name":"dataEnd","nativeSrc":"4767:7:32","nodeType":"YulIdentifier","src":"4767:7:32"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nativeSrc":"4712:30:32","nodeType":"YulIdentifier","src":"4712:30:32"},"nativeSrc":"4712:63:32","nodeType":"YulFunctionCall","src":"4712:63:32"},"variableNames":[{"name":"value3","nativeSrc":"4702:6:32","nodeType":"YulIdentifier","src":"4702:6:32"}]}]},{"nativeSrc":"4795:129:32","nodeType":"YulBlock","src":"4795:129:32","statements":[{"nativeSrc":"4810:17:32","nodeType":"YulVariableDeclaration","src":"4810:17:32","value":{"kind":"number","nativeSrc":"4824:3:32","nodeType":"YulLiteral","src":"4824:3:32","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"4814:6:32","nodeType":"YulTypedName","src":"4814:6:32","type":""}]},{"nativeSrc":"4841:73:32","nodeType":"YulAssignment","src":"4841:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4886:9:32","nodeType":"YulIdentifier","src":"4886:9:32"},{"name":"offset","nativeSrc":"4897:6:32","nodeType":"YulIdentifier","src":"4897:6:32"}],"functionName":{"name":"add","nativeSrc":"4882:3:32","nodeType":"YulIdentifier","src":"4882:3:32"},"nativeSrc":"4882:22:32","nodeType":"YulFunctionCall","src":"4882:22:32"},{"name":"dataEnd","nativeSrc":"4906:7:32","nodeType":"YulIdentifier","src":"4906:7:32"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nativeSrc":"4851:30:32","nodeType":"YulIdentifier","src":"4851:30:32"},"nativeSrc":"4851:63:32","nodeType":"YulFunctionCall","src":"4851:63:32"},"variableNames":[{"name":"value4","nativeSrc":"4841:6:32","nodeType":"YulIdentifier","src":"4841:6:32"}]}]},{"nativeSrc":"4934:130:32","nodeType":"YulBlock","src":"4934:130:32","statements":[{"nativeSrc":"4949:17:32","nodeType":"YulVariableDeclaration","src":"4949:17:32","value":{"kind":"number","nativeSrc":"4963:3:32","nodeType":"YulLiteral","src":"4963:3:32","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"4953:6:32","nodeType":"YulTypedName","src":"4953:6:32","type":""}]},{"nativeSrc":"4980:74:32","nodeType":"YulAssignment","src":"4980:74:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5026:9:32","nodeType":"YulIdentifier","src":"5026:9:32"},{"name":"offset","nativeSrc":"5037:6:32","nodeType":"YulIdentifier","src":"5037:6:32"}],"functionName":{"name":"add","nativeSrc":"5022:3:32","nodeType":"YulIdentifier","src":"5022:3:32"},"nativeSrc":"5022:22:32","nodeType":"YulFunctionCall","src":"5022:22:32"},{"name":"dataEnd","nativeSrc":"5046:7:32","nodeType":"YulIdentifier","src":"5046:7:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"4990:31:32","nodeType":"YulIdentifier","src":"4990:31:32"},"nativeSrc":"4990:64:32","nodeType":"YulFunctionCall","src":"4990:64:32"},"variableNames":[{"name":"value5","nativeSrc":"4980:6:32","nodeType":"YulIdentifier","src":"4980:6:32"}]}]},{"nativeSrc":"5074:130:32","nodeType":"YulBlock","src":"5074:130:32","statements":[{"nativeSrc":"5089:17:32","nodeType":"YulVariableDeclaration","src":"5089:17:32","value":{"kind":"number","nativeSrc":"5103:3:32","nodeType":"YulLiteral","src":"5103:3:32","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"5093:6:32","nodeType":"YulTypedName","src":"5093:6:32","type":""}]},{"nativeSrc":"5120:74:32","nodeType":"YulAssignment","src":"5120:74:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5166:9:32","nodeType":"YulIdentifier","src":"5166:9:32"},{"name":"offset","nativeSrc":"5177:6:32","nodeType":"YulIdentifier","src":"5177:6:32"}],"functionName":{"name":"add","nativeSrc":"5162:3:32","nodeType":"YulIdentifier","src":"5162:3:32"},"nativeSrc":"5162:22:32","nodeType":"YulFunctionCall","src":"5162:22:32"},{"name":"dataEnd","nativeSrc":"5186:7:32","nodeType":"YulIdentifier","src":"5186:7:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"5130:31:32","nodeType":"YulIdentifier","src":"5130:31:32"},"nativeSrc":"5130:64:32","nodeType":"YulFunctionCall","src":"5130:64:32"},"variableNames":[{"name":"value6","nativeSrc":"5120:6:32","nodeType":"YulIdentifier","src":"5120:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint96t_uint96t_addresst_address_fromMemory","nativeSrc":"3578:1633:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3697:9:32","nodeType":"YulTypedName","src":"3697:9:32","type":""},{"name":"dataEnd","nativeSrc":"3708:7:32","nodeType":"YulTypedName","src":"3708:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3720:6:32","nodeType":"YulTypedName","src":"3720:6:32","type":""},{"name":"value1","nativeSrc":"3728:6:32","nodeType":"YulTypedName","src":"3728:6:32","type":""},{"name":"value2","nativeSrc":"3736:6:32","nodeType":"YulTypedName","src":"3736:6:32","type":""},{"name":"value3","nativeSrc":"3744:6:32","nodeType":"YulTypedName","src":"3744:6:32","type":""},{"name":"value4","nativeSrc":"3752:6:32","nodeType":"YulTypedName","src":"3752:6:32","type":""},{"name":"value5","nativeSrc":"3760:6:32","nodeType":"YulTypedName","src":"3760:6:32","type":""},{"name":"value6","nativeSrc":"3768:6:32","nodeType":"YulTypedName","src":"3768:6:32","type":""}],"src":"3578:1633:32"},{"body":{"nativeSrc":"5276:40:32","nodeType":"YulBlock","src":"5276:40:32","statements":[{"nativeSrc":"5287:22:32","nodeType":"YulAssignment","src":"5287:22:32","value":{"arguments":[{"name":"value","nativeSrc":"5303:5:32","nodeType":"YulIdentifier","src":"5303:5:32"}],"functionName":{"name":"mload","nativeSrc":"5297:5:32","nodeType":"YulIdentifier","src":"5297:5:32"},"nativeSrc":"5297:12:32","nodeType":"YulFunctionCall","src":"5297:12:32"},"variableNames":[{"name":"length","nativeSrc":"5287:6:32","nodeType":"YulIdentifier","src":"5287:6:32"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"5217:99:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5259:5:32","nodeType":"YulTypedName","src":"5259:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5269:6:32","nodeType":"YulTypedName","src":"5269:6:32","type":""}],"src":"5217:99:32"},{"body":{"nativeSrc":"5350:152:32","nodeType":"YulBlock","src":"5350:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5367:1:32","nodeType":"YulLiteral","src":"5367:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5370:77:32","nodeType":"YulLiteral","src":"5370:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5360:6:32","nodeType":"YulIdentifier","src":"5360:6:32"},"nativeSrc":"5360:88:32","nodeType":"YulFunctionCall","src":"5360:88:32"},"nativeSrc":"5360:88:32","nodeType":"YulExpressionStatement","src":"5360:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5464:1:32","nodeType":"YulLiteral","src":"5464:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"5467:4:32","nodeType":"YulLiteral","src":"5467:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5457:6:32","nodeType":"YulIdentifier","src":"5457:6:32"},"nativeSrc":"5457:15:32","nodeType":"YulFunctionCall","src":"5457:15:32"},"nativeSrc":"5457:15:32","nodeType":"YulExpressionStatement","src":"5457:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5488:1:32","nodeType":"YulLiteral","src":"5488:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5491:4:32","nodeType":"YulLiteral","src":"5491:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5481:6:32","nodeType":"YulIdentifier","src":"5481:6:32"},"nativeSrc":"5481:15:32","nodeType":"YulFunctionCall","src":"5481:15:32"},"nativeSrc":"5481:15:32","nodeType":"YulExpressionStatement","src":"5481:15:32"}]},"name":"panic_error_0x22","nativeSrc":"5322:180:32","nodeType":"YulFunctionDefinition","src":"5322:180:32"},{"body":{"nativeSrc":"5559:269:32","nodeType":"YulBlock","src":"5559:269:32","statements":[{"nativeSrc":"5569:22:32","nodeType":"YulAssignment","src":"5569:22:32","value":{"arguments":[{"name":"data","nativeSrc":"5583:4:32","nodeType":"YulIdentifier","src":"5583:4:32"},{"kind":"number","nativeSrc":"5589:1:32","nodeType":"YulLiteral","src":"5589:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5579:3:32","nodeType":"YulIdentifier","src":"5579:3:32"},"nativeSrc":"5579:12:32","nodeType":"YulFunctionCall","src":"5579:12:32"},"variableNames":[{"name":"length","nativeSrc":"5569:6:32","nodeType":"YulIdentifier","src":"5569:6:32"}]},{"nativeSrc":"5600:38:32","nodeType":"YulVariableDeclaration","src":"5600:38:32","value":{"arguments":[{"name":"data","nativeSrc":"5630:4:32","nodeType":"YulIdentifier","src":"5630:4:32"},{"kind":"number","nativeSrc":"5636:1:32","nodeType":"YulLiteral","src":"5636:1:32","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5626:3:32","nodeType":"YulIdentifier","src":"5626:3:32"},"nativeSrc":"5626:12:32","nodeType":"YulFunctionCall","src":"5626:12:32"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5604:18:32","nodeType":"YulTypedName","src":"5604:18:32","type":""}]},{"body":{"nativeSrc":"5677:51:32","nodeType":"YulBlock","src":"5677:51:32","statements":[{"nativeSrc":"5691:27:32","nodeType":"YulAssignment","src":"5691:27:32","value":{"arguments":[{"name":"length","nativeSrc":"5705:6:32","nodeType":"YulIdentifier","src":"5705:6:32"},{"kind":"number","nativeSrc":"5713:4:32","nodeType":"YulLiteral","src":"5713:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"5701:3:32","nodeType":"YulIdentifier","src":"5701:3:32"},"nativeSrc":"5701:17:32","nodeType":"YulFunctionCall","src":"5701:17:32"},"variableNames":[{"name":"length","nativeSrc":"5691:6:32","nodeType":"YulIdentifier","src":"5691:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5657:18:32","nodeType":"YulIdentifier","src":"5657:18:32"}],"functionName":{"name":"iszero","nativeSrc":"5650:6:32","nodeType":"YulIdentifier","src":"5650:6:32"},"nativeSrc":"5650:26:32","nodeType":"YulFunctionCall","src":"5650:26:32"},"nativeSrc":"5647:81:32","nodeType":"YulIf","src":"5647:81:32"},{"body":{"nativeSrc":"5780:42:32","nodeType":"YulBlock","src":"5780:42:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"5794:16:32","nodeType":"YulIdentifier","src":"5794:16:32"},"nativeSrc":"5794:18:32","nodeType":"YulFunctionCall","src":"5794:18:32"},"nativeSrc":"5794:18:32","nodeType":"YulExpressionStatement","src":"5794:18:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5744:18:32","nodeType":"YulIdentifier","src":"5744:18:32"},{"arguments":[{"name":"length","nativeSrc":"5767:6:32","nodeType":"YulIdentifier","src":"5767:6:32"},{"kind":"number","nativeSrc":"5775:2:32","nodeType":"YulLiteral","src":"5775:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5764:2:32","nodeType":"YulIdentifier","src":"5764:2:32"},"nativeSrc":"5764:14:32","nodeType":"YulFunctionCall","src":"5764:14:32"}],"functionName":{"name":"eq","nativeSrc":"5741:2:32","nodeType":"YulIdentifier","src":"5741:2:32"},"nativeSrc":"5741:38:32","nodeType":"YulFunctionCall","src":"5741:38:32"},"nativeSrc":"5738:84:32","nodeType":"YulIf","src":"5738:84:32"}]},"name":"extract_byte_array_length","nativeSrc":"5508:320:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5543:4:32","nodeType":"YulTypedName","src":"5543:4:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5552:6:32","nodeType":"YulTypedName","src":"5552:6:32","type":""}],"src":"5508:320:32"},{"body":{"nativeSrc":"5888:87:32","nodeType":"YulBlock","src":"5888:87:32","statements":[{"nativeSrc":"5898:11:32","nodeType":"YulAssignment","src":"5898:11:32","value":{"name":"ptr","nativeSrc":"5906:3:32","nodeType":"YulIdentifier","src":"5906:3:32"},"variableNames":[{"name":"data","nativeSrc":"5898:4:32","nodeType":"YulIdentifier","src":"5898:4:32"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5926:1:32","nodeType":"YulLiteral","src":"5926:1:32","type":"","value":"0"},{"name":"ptr","nativeSrc":"5929:3:32","nodeType":"YulIdentifier","src":"5929:3:32"}],"functionName":{"name":"mstore","nativeSrc":"5919:6:32","nodeType":"YulIdentifier","src":"5919:6:32"},"nativeSrc":"5919:14:32","nodeType":"YulFunctionCall","src":"5919:14:32"},"nativeSrc":"5919:14:32","nodeType":"YulExpressionStatement","src":"5919:14:32"},{"nativeSrc":"5942:26:32","nodeType":"YulAssignment","src":"5942:26:32","value":{"arguments":[{"kind":"number","nativeSrc":"5960:1:32","nodeType":"YulLiteral","src":"5960:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5963:4:32","nodeType":"YulLiteral","src":"5963:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"5950:9:32","nodeType":"YulIdentifier","src":"5950:9:32"},"nativeSrc":"5950:18:32","nodeType":"YulFunctionCall","src":"5950:18:32"},"variableNames":[{"name":"data","nativeSrc":"5942:4:32","nodeType":"YulIdentifier","src":"5942:4:32"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"5834:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"5875:3:32","nodeType":"YulTypedName","src":"5875:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"5883:4:32","nodeType":"YulTypedName","src":"5883:4:32","type":""}],"src":"5834:141:32"},{"body":{"nativeSrc":"6025:49:32","nodeType":"YulBlock","src":"6025:49:32","statements":[{"nativeSrc":"6035:33:32","nodeType":"YulAssignment","src":"6035:33:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6053:5:32","nodeType":"YulIdentifier","src":"6053:5:32"},{"kind":"number","nativeSrc":"6060:2:32","nodeType":"YulLiteral","src":"6060:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6049:3:32","nodeType":"YulIdentifier","src":"6049:3:32"},"nativeSrc":"6049:14:32","nodeType":"YulFunctionCall","src":"6049:14:32"},{"kind":"number","nativeSrc":"6065:2:32","nodeType":"YulLiteral","src":"6065:2:32","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"6045:3:32","nodeType":"YulIdentifier","src":"6045:3:32"},"nativeSrc":"6045:23:32","nodeType":"YulFunctionCall","src":"6045:23:32"},"variableNames":[{"name":"result","nativeSrc":"6035:6:32","nodeType":"YulIdentifier","src":"6035:6:32"}]}]},"name":"divide_by_32_ceil","nativeSrc":"5981:93:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6008:5:32","nodeType":"YulTypedName","src":"6008:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6018:6:32","nodeType":"YulTypedName","src":"6018:6:32","type":""}],"src":"5981:93:32"},{"body":{"nativeSrc":"6133:54:32","nodeType":"YulBlock","src":"6133:54:32","statements":[{"nativeSrc":"6143:37:32","nodeType":"YulAssignment","src":"6143:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"6168:4:32","nodeType":"YulIdentifier","src":"6168:4:32"},{"name":"value","nativeSrc":"6174:5:32","nodeType":"YulIdentifier","src":"6174:5:32"}],"functionName":{"name":"shl","nativeSrc":"6164:3:32","nodeType":"YulIdentifier","src":"6164:3:32"},"nativeSrc":"6164:16:32","nodeType":"YulFunctionCall","src":"6164:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"6143:8:32","nodeType":"YulIdentifier","src":"6143:8:32"}]}]},"name":"shift_left_dynamic","nativeSrc":"6080:107:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"6108:4:32","nodeType":"YulTypedName","src":"6108:4:32","type":""},{"name":"value","nativeSrc":"6114:5:32","nodeType":"YulTypedName","src":"6114:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"6124:8:32","nodeType":"YulTypedName","src":"6124:8:32","type":""}],"src":"6080:107:32"},{"body":{"nativeSrc":"6269:317:32","nodeType":"YulBlock","src":"6269:317:32","statements":[{"nativeSrc":"6279:35:32","nodeType":"YulVariableDeclaration","src":"6279:35:32","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"6300:10:32","nodeType":"YulIdentifier","src":"6300:10:32"},{"kind":"number","nativeSrc":"6312:1:32","nodeType":"YulLiteral","src":"6312:1:32","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"6296:3:32","nodeType":"YulIdentifier","src":"6296:3:32"},"nativeSrc":"6296:18:32","nodeType":"YulFunctionCall","src":"6296:18:32"},"variables":[{"name":"shiftBits","nativeSrc":"6283:9:32","nodeType":"YulTypedName","src":"6283:9:32","type":""}]},{"nativeSrc":"6323:109:32","nodeType":"YulVariableDeclaration","src":"6323:109:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"6354:9:32","nodeType":"YulIdentifier","src":"6354:9:32"},{"kind":"number","nativeSrc":"6365:66:32","nodeType":"YulLiteral","src":"6365:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"6335:18:32","nodeType":"YulIdentifier","src":"6335:18:32"},"nativeSrc":"6335:97:32","nodeType":"YulFunctionCall","src":"6335:97:32"},"variables":[{"name":"mask","nativeSrc":"6327:4:32","nodeType":"YulTypedName","src":"6327:4:32","type":""}]},{"nativeSrc":"6441:51:32","nodeType":"YulAssignment","src":"6441:51:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"6472:9:32","nodeType":"YulIdentifier","src":"6472:9:32"},{"name":"toInsert","nativeSrc":"6483:8:32","nodeType":"YulIdentifier","src":"6483:8:32"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"6453:18:32","nodeType":"YulIdentifier","src":"6453:18:32"},"nativeSrc":"6453:39:32","nodeType":"YulFunctionCall","src":"6453:39:32"},"variableNames":[{"name":"toInsert","nativeSrc":"6441:8:32","nodeType":"YulIdentifier","src":"6441:8:32"}]},{"nativeSrc":"6501:30:32","nodeType":"YulAssignment","src":"6501:30:32","value":{"arguments":[{"name":"value","nativeSrc":"6514:5:32","nodeType":"YulIdentifier","src":"6514:5:32"},{"arguments":[{"name":"mask","nativeSrc":"6525:4:32","nodeType":"YulIdentifier","src":"6525:4:32"}],"functionName":{"name":"not","nativeSrc":"6521:3:32","nodeType":"YulIdentifier","src":"6521:3:32"},"nativeSrc":"6521:9:32","nodeType":"YulFunctionCall","src":"6521:9:32"}],"functionName":{"name":"and","nativeSrc":"6510:3:32","nodeType":"YulIdentifier","src":"6510:3:32"},"nativeSrc":"6510:21:32","nodeType":"YulFunctionCall","src":"6510:21:32"},"variableNames":[{"name":"value","nativeSrc":"6501:5:32","nodeType":"YulIdentifier","src":"6501:5:32"}]},{"nativeSrc":"6540:40:32","nodeType":"YulAssignment","src":"6540:40:32","value":{"arguments":[{"name":"value","nativeSrc":"6553:5:32","nodeType":"YulIdentifier","src":"6553:5:32"},{"arguments":[{"name":"toInsert","nativeSrc":"6564:8:32","nodeType":"YulIdentifier","src":"6564:8:32"},{"name":"mask","nativeSrc":"6574:4:32","nodeType":"YulIdentifier","src":"6574:4:32"}],"functionName":{"name":"and","nativeSrc":"6560:3:32","nodeType":"YulIdentifier","src":"6560:3:32"},"nativeSrc":"6560:19:32","nodeType":"YulFunctionCall","src":"6560:19:32"}],"functionName":{"name":"or","nativeSrc":"6550:2:32","nodeType":"YulIdentifier","src":"6550:2:32"},"nativeSrc":"6550:30:32","nodeType":"YulFunctionCall","src":"6550:30:32"},"variableNames":[{"name":"result","nativeSrc":"6540:6:32","nodeType":"YulIdentifier","src":"6540:6:32"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"6193:393:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6230:5:32","nodeType":"YulTypedName","src":"6230:5:32","type":""},{"name":"shiftBytes","nativeSrc":"6237:10:32","nodeType":"YulTypedName","src":"6237:10:32","type":""},{"name":"toInsert","nativeSrc":"6249:8:32","nodeType":"YulTypedName","src":"6249:8:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6262:6:32","nodeType":"YulTypedName","src":"6262:6:32","type":""}],"src":"6193:393:32"},{"body":{"nativeSrc":"6637:32:32","nodeType":"YulBlock","src":"6637:32:32","statements":[{"nativeSrc":"6647:16:32","nodeType":"YulAssignment","src":"6647:16:32","value":{"name":"value","nativeSrc":"6658:5:32","nodeType":"YulIdentifier","src":"6658:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"6647:7:32","nodeType":"YulIdentifier","src":"6647:7:32"}]}]},"name":"cleanup_t_uint256","nativeSrc":"6592:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6619:5:32","nodeType":"YulTypedName","src":"6619:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6629:7:32","nodeType":"YulTypedName","src":"6629:7:32","type":""}],"src":"6592:77:32"},{"body":{"nativeSrc":"6707:28:32","nodeType":"YulBlock","src":"6707:28:32","statements":[{"nativeSrc":"6717:12:32","nodeType":"YulAssignment","src":"6717:12:32","value":{"name":"value","nativeSrc":"6724:5:32","nodeType":"YulIdentifier","src":"6724:5:32"},"variableNames":[{"name":"ret","nativeSrc":"6717:3:32","nodeType":"YulIdentifier","src":"6717:3:32"}]}]},"name":"identity","nativeSrc":"6675:60:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6693:5:32","nodeType":"YulTypedName","src":"6693:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6703:3:32","nodeType":"YulTypedName","src":"6703:3:32","type":""}],"src":"6675:60:32"},{"body":{"nativeSrc":"6801:82:32","nodeType":"YulBlock","src":"6801:82:32","statements":[{"nativeSrc":"6811:66:32","nodeType":"YulAssignment","src":"6811:66:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6869:5:32","nodeType":"YulIdentifier","src":"6869:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6851:17:32","nodeType":"YulIdentifier","src":"6851:17:32"},"nativeSrc":"6851:24:32","nodeType":"YulFunctionCall","src":"6851:24:32"}],"functionName":{"name":"identity","nativeSrc":"6842:8:32","nodeType":"YulIdentifier","src":"6842:8:32"},"nativeSrc":"6842:34:32","nodeType":"YulFunctionCall","src":"6842:34:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6824:17:32","nodeType":"YulIdentifier","src":"6824:17:32"},"nativeSrc":"6824:53:32","nodeType":"YulFunctionCall","src":"6824:53:32"},"variableNames":[{"name":"converted","nativeSrc":"6811:9:32","nodeType":"YulIdentifier","src":"6811:9:32"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"6741:142:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6781:5:32","nodeType":"YulTypedName","src":"6781:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"6791:9:32","nodeType":"YulTypedName","src":"6791:9:32","type":""}],"src":"6741:142:32"},{"body":{"nativeSrc":"6936:28:32","nodeType":"YulBlock","src":"6936:28:32","statements":[{"nativeSrc":"6946:12:32","nodeType":"YulAssignment","src":"6946:12:32","value":{"name":"value","nativeSrc":"6953:5:32","nodeType":"YulIdentifier","src":"6953:5:32"},"variableNames":[{"name":"ret","nativeSrc":"6946:3:32","nodeType":"YulIdentifier","src":"6946:3:32"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"6889:75:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6922:5:32","nodeType":"YulTypedName","src":"6922:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6932:3:32","nodeType":"YulTypedName","src":"6932:3:32","type":""}],"src":"6889:75:32"},{"body":{"nativeSrc":"7046:193:32","nodeType":"YulBlock","src":"7046:193:32","statements":[{"nativeSrc":"7056:63:32","nodeType":"YulVariableDeclaration","src":"7056:63:32","value":{"arguments":[{"name":"value_0","nativeSrc":"7111:7:32","nodeType":"YulIdentifier","src":"7111:7:32"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"7080:30:32","nodeType":"YulIdentifier","src":"7080:30:32"},"nativeSrc":"7080:39:32","nodeType":"YulFunctionCall","src":"7080:39:32"},"variables":[{"name":"convertedValue_0","nativeSrc":"7060:16:32","nodeType":"YulTypedName","src":"7060:16:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7135:4:32","nodeType":"YulIdentifier","src":"7135:4:32"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7175:4:32","nodeType":"YulIdentifier","src":"7175:4:32"}],"functionName":{"name":"sload","nativeSrc":"7169:5:32","nodeType":"YulIdentifier","src":"7169:5:32"},"nativeSrc":"7169:11:32","nodeType":"YulFunctionCall","src":"7169:11:32"},{"name":"offset","nativeSrc":"7182:6:32","nodeType":"YulIdentifier","src":"7182:6:32"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"7214:16:32","nodeType":"YulIdentifier","src":"7214:16:32"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"7190:23:32","nodeType":"YulIdentifier","src":"7190:23:32"},"nativeSrc":"7190:41:32","nodeType":"YulFunctionCall","src":"7190:41:32"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"7141:27:32","nodeType":"YulIdentifier","src":"7141:27:32"},"nativeSrc":"7141:91:32","nodeType":"YulFunctionCall","src":"7141:91:32"}],"functionName":{"name":"sstore","nativeSrc":"7128:6:32","nodeType":"YulIdentifier","src":"7128:6:32"},"nativeSrc":"7128:105:32","nodeType":"YulFunctionCall","src":"7128:105:32"},"nativeSrc":"7128:105:32","nodeType":"YulExpressionStatement","src":"7128:105:32"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6970:269:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7023:4:32","nodeType":"YulTypedName","src":"7023:4:32","type":""},{"name":"offset","nativeSrc":"7029:6:32","nodeType":"YulTypedName","src":"7029:6:32","type":""},{"name":"value_0","nativeSrc":"7037:7:32","nodeType":"YulTypedName","src":"7037:7:32","type":""}],"src":"6970:269:32"},{"body":{"nativeSrc":"7294:24:32","nodeType":"YulBlock","src":"7294:24:32","statements":[{"nativeSrc":"7304:8:32","nodeType":"YulAssignment","src":"7304:8:32","value":{"kind":"number","nativeSrc":"7311:1:32","nodeType":"YulLiteral","src":"7311:1:32","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"7304:3:32","nodeType":"YulIdentifier","src":"7304:3:32"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"7245:73:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"7290:3:32","nodeType":"YulTypedName","src":"7290:3:32","type":""}],"src":"7245:73:32"},{"body":{"nativeSrc":"7377:136:32","nodeType":"YulBlock","src":"7377:136:32","statements":[{"nativeSrc":"7387:46:32","nodeType":"YulVariableDeclaration","src":"7387:46:32","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"7401:30:32","nodeType":"YulIdentifier","src":"7401:30:32"},"nativeSrc":"7401:32:32","nodeType":"YulFunctionCall","src":"7401:32:32"},"variables":[{"name":"zero_0","nativeSrc":"7391:6:32","nodeType":"YulTypedName","src":"7391:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7486:4:32","nodeType":"YulIdentifier","src":"7486:4:32"},{"name":"offset","nativeSrc":"7492:6:32","nodeType":"YulIdentifier","src":"7492:6:32"},{"name":"zero_0","nativeSrc":"7500:6:32","nodeType":"YulIdentifier","src":"7500:6:32"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"7442:43:32","nodeType":"YulIdentifier","src":"7442:43:32"},"nativeSrc":"7442:65:32","nodeType":"YulFunctionCall","src":"7442:65:32"},"nativeSrc":"7442:65:32","nodeType":"YulExpressionStatement","src":"7442:65:32"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"7324:189:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7363:4:32","nodeType":"YulTypedName","src":"7363:4:32","type":""},{"name":"offset","nativeSrc":"7369:6:32","nodeType":"YulTypedName","src":"7369:6:32","type":""}],"src":"7324:189:32"},{"body":{"nativeSrc":"7569:136:32","nodeType":"YulBlock","src":"7569:136:32","statements":[{"body":{"nativeSrc":"7636:63:32","nodeType":"YulBlock","src":"7636:63:32","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"7680:5:32","nodeType":"YulIdentifier","src":"7680:5:32"},{"kind":"number","nativeSrc":"7687:1:32","nodeType":"YulLiteral","src":"7687:1:32","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"7650:29:32","nodeType":"YulIdentifier","src":"7650:29:32"},"nativeSrc":"7650:39:32","nodeType":"YulFunctionCall","src":"7650:39:32"},"nativeSrc":"7650:39:32","nodeType":"YulExpressionStatement","src":"7650:39:32"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"7589:5:32","nodeType":"YulIdentifier","src":"7589:5:32"},{"name":"end","nativeSrc":"7596:3:32","nodeType":"YulIdentifier","src":"7596:3:32"}],"functionName":{"name":"lt","nativeSrc":"7586:2:32","nodeType":"YulIdentifier","src":"7586:2:32"},"nativeSrc":"7586:14:32","nodeType":"YulFunctionCall","src":"7586:14:32"},"nativeSrc":"7579:120:32","nodeType":"YulForLoop","post":{"nativeSrc":"7601:26:32","nodeType":"YulBlock","src":"7601:26:32","statements":[{"nativeSrc":"7603:22:32","nodeType":"YulAssignment","src":"7603:22:32","value":{"arguments":[{"name":"start","nativeSrc":"7616:5:32","nodeType":"YulIdentifier","src":"7616:5:32"},{"kind":"number","nativeSrc":"7623:1:32","nodeType":"YulLiteral","src":"7623:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7612:3:32","nodeType":"YulIdentifier","src":"7612:3:32"},"nativeSrc":"7612:13:32","nodeType":"YulFunctionCall","src":"7612:13:32"},"variableNames":[{"name":"start","nativeSrc":"7603:5:32","nodeType":"YulIdentifier","src":"7603:5:32"}]}]},"pre":{"nativeSrc":"7583:2:32","nodeType":"YulBlock","src":"7583:2:32","statements":[]},"src":"7579:120:32"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"7519:186:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"7557:5:32","nodeType":"YulTypedName","src":"7557:5:32","type":""},{"name":"end","nativeSrc":"7564:3:32","nodeType":"YulTypedName","src":"7564:3:32","type":""}],"src":"7519:186:32"},{"body":{"nativeSrc":"7790:464:32","nodeType":"YulBlock","src":"7790:464:32","statements":[{"body":{"nativeSrc":"7816:431:32","nodeType":"YulBlock","src":"7816:431:32","statements":[{"nativeSrc":"7830:54:32","nodeType":"YulVariableDeclaration","src":"7830:54:32","value":{"arguments":[{"name":"array","nativeSrc":"7878:5:32","nodeType":"YulIdentifier","src":"7878:5:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"7846:31:32","nodeType":"YulIdentifier","src":"7846:31:32"},"nativeSrc":"7846:38:32","nodeType":"YulFunctionCall","src":"7846:38:32"},"variables":[{"name":"dataArea","nativeSrc":"7834:8:32","nodeType":"YulTypedName","src":"7834:8:32","type":""}]},{"nativeSrc":"7897:63:32","nodeType":"YulVariableDeclaration","src":"7897:63:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"7920:8:32","nodeType":"YulIdentifier","src":"7920:8:32"},{"arguments":[{"name":"startIndex","nativeSrc":"7948:10:32","nodeType":"YulIdentifier","src":"7948:10:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7930:17:32","nodeType":"YulIdentifier","src":"7930:17:32"},"nativeSrc":"7930:29:32","nodeType":"YulFunctionCall","src":"7930:29:32"}],"functionName":{"name":"add","nativeSrc":"7916:3:32","nodeType":"YulIdentifier","src":"7916:3:32"},"nativeSrc":"7916:44:32","nodeType":"YulFunctionCall","src":"7916:44:32"},"variables":[{"name":"deleteStart","nativeSrc":"7901:11:32","nodeType":"YulTypedName","src":"7901:11:32","type":""}]},{"body":{"nativeSrc":"8117:27:32","nodeType":"YulBlock","src":"8117:27:32","statements":[{"nativeSrc":"8119:23:32","nodeType":"YulAssignment","src":"8119:23:32","value":{"name":"dataArea","nativeSrc":"8134:8:32","nodeType":"YulIdentifier","src":"8134:8:32"},"variableNames":[{"name":"deleteStart","nativeSrc":"8119:11:32","nodeType":"YulIdentifier","src":"8119:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"8101:10:32","nodeType":"YulIdentifier","src":"8101:10:32"},{"kind":"number","nativeSrc":"8113:2:32","nodeType":"YulLiteral","src":"8113:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8098:2:32","nodeType":"YulIdentifier","src":"8098:2:32"},"nativeSrc":"8098:18:32","nodeType":"YulFunctionCall","src":"8098:18:32"},"nativeSrc":"8095:49:32","nodeType":"YulIf","src":"8095:49:32"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"8186:11:32","nodeType":"YulIdentifier","src":"8186:11:32"},{"arguments":[{"name":"dataArea","nativeSrc":"8203:8:32","nodeType":"YulIdentifier","src":"8203:8:32"},{"arguments":[{"name":"len","nativeSrc":"8231:3:32","nodeType":"YulIdentifier","src":"8231:3:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"8213:17:32","nodeType":"YulIdentifier","src":"8213:17:32"},"nativeSrc":"8213:22:32","nodeType":"YulFunctionCall","src":"8213:22:32"}],"functionName":{"name":"add","nativeSrc":"8199:3:32","nodeType":"YulIdentifier","src":"8199:3:32"},"nativeSrc":"8199:37:32","nodeType":"YulFunctionCall","src":"8199:37:32"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"8157:28:32","nodeType":"YulIdentifier","src":"8157:28:32"},"nativeSrc":"8157:80:32","nodeType":"YulFunctionCall","src":"8157:80:32"},"nativeSrc":"8157:80:32","nodeType":"YulExpressionStatement","src":"8157:80:32"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7807:3:32","nodeType":"YulIdentifier","src":"7807:3:32"},{"kind":"number","nativeSrc":"7812:2:32","nodeType":"YulLiteral","src":"7812:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7804:2:32","nodeType":"YulIdentifier","src":"7804:2:32"},"nativeSrc":"7804:11:32","nodeType":"YulFunctionCall","src":"7804:11:32"},"nativeSrc":"7801:446:32","nodeType":"YulIf","src":"7801:446:32"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7711:543:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7766:5:32","nodeType":"YulTypedName","src":"7766:5:32","type":""},{"name":"len","nativeSrc":"7773:3:32","nodeType":"YulTypedName","src":"7773:3:32","type":""},{"name":"startIndex","nativeSrc":"7778:10:32","nodeType":"YulTypedName","src":"7778:10:32","type":""}],"src":"7711:543:32"},{"body":{"nativeSrc":"8323:54:32","nodeType":"YulBlock","src":"8323:54:32","statements":[{"nativeSrc":"8333:37:32","nodeType":"YulAssignment","src":"8333:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"8358:4:32","nodeType":"YulIdentifier","src":"8358:4:32"},{"name":"value","nativeSrc":"8364:5:32","nodeType":"YulIdentifier","src":"8364:5:32"}],"functionName":{"name":"shr","nativeSrc":"8354:3:32","nodeType":"YulIdentifier","src":"8354:3:32"},"nativeSrc":"8354:16:32","nodeType":"YulFunctionCall","src":"8354:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"8333:8:32","nodeType":"YulIdentifier","src":"8333:8:32"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"8260:117:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"8298:4:32","nodeType":"YulTypedName","src":"8298:4:32","type":""},{"name":"value","nativeSrc":"8304:5:32","nodeType":"YulTypedName","src":"8304:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"8314:8:32","nodeType":"YulTypedName","src":"8314:8:32","type":""}],"src":"8260:117:32"},{"body":{"nativeSrc":"8434:118:32","nodeType":"YulBlock","src":"8434:118:32","statements":[{"nativeSrc":"8444:68:32","nodeType":"YulVariableDeclaration","src":"8444:68:32","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8493:1:32","nodeType":"YulLiteral","src":"8493:1:32","type":"","value":"8"},{"name":"bytes","nativeSrc":"8496:5:32","nodeType":"YulIdentifier","src":"8496:5:32"}],"functionName":{"name":"mul","nativeSrc":"8489:3:32","nodeType":"YulIdentifier","src":"8489:3:32"},"nativeSrc":"8489:13:32","nodeType":"YulFunctionCall","src":"8489:13:32"},{"arguments":[{"kind":"number","nativeSrc":"8508:1:32","nodeType":"YulLiteral","src":"8508:1:32","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8504:3:32","nodeType":"YulIdentifier","src":"8504:3:32"},"nativeSrc":"8504:6:32","nodeType":"YulFunctionCall","src":"8504:6:32"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"8460:28:32","nodeType":"YulIdentifier","src":"8460:28:32"},"nativeSrc":"8460:51:32","nodeType":"YulFunctionCall","src":"8460:51:32"}],"functionName":{"name":"not","nativeSrc":"8456:3:32","nodeType":"YulIdentifier","src":"8456:3:32"},"nativeSrc":"8456:56:32","nodeType":"YulFunctionCall","src":"8456:56:32"},"variables":[{"name":"mask","nativeSrc":"8448:4:32","nodeType":"YulTypedName","src":"8448:4:32","type":""}]},{"nativeSrc":"8521:25:32","nodeType":"YulAssignment","src":"8521:25:32","value":{"arguments":[{"name":"data","nativeSrc":"8535:4:32","nodeType":"YulIdentifier","src":"8535:4:32"},{"name":"mask","nativeSrc":"8541:4:32","nodeType":"YulIdentifier","src":"8541:4:32"}],"functionName":{"name":"and","nativeSrc":"8531:3:32","nodeType":"YulIdentifier","src":"8531:3:32"},"nativeSrc":"8531:15:32","nodeType":"YulFunctionCall","src":"8531:15:32"},"variableNames":[{"name":"result","nativeSrc":"8521:6:32","nodeType":"YulIdentifier","src":"8521:6:32"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"8383:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8411:4:32","nodeType":"YulTypedName","src":"8411:4:32","type":""},{"name":"bytes","nativeSrc":"8417:5:32","nodeType":"YulTypedName","src":"8417:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"8427:6:32","nodeType":"YulTypedName","src":"8427:6:32","type":""}],"src":"8383:169:32"},{"body":{"nativeSrc":"8638:214:32","nodeType":"YulBlock","src":"8638:214:32","statements":[{"nativeSrc":"8771:37:32","nodeType":"YulAssignment","src":"8771:37:32","value":{"arguments":[{"name":"data","nativeSrc":"8798:4:32","nodeType":"YulIdentifier","src":"8798:4:32"},{"name":"len","nativeSrc":"8804:3:32","nodeType":"YulIdentifier","src":"8804:3:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8779:18:32","nodeType":"YulIdentifier","src":"8779:18:32"},"nativeSrc":"8779:29:32","nodeType":"YulFunctionCall","src":"8779:29:32"},"variableNames":[{"name":"data","nativeSrc":"8771:4:32","nodeType":"YulIdentifier","src":"8771:4:32"}]},{"nativeSrc":"8817:29:32","nodeType":"YulAssignment","src":"8817:29:32","value":{"arguments":[{"name":"data","nativeSrc":"8828:4:32","nodeType":"YulIdentifier","src":"8828:4:32"},{"arguments":[{"kind":"number","nativeSrc":"8838:1:32","nodeType":"YulLiteral","src":"8838:1:32","type":"","value":"2"},{"name":"len","nativeSrc":"8841:3:32","nodeType":"YulIdentifier","src":"8841:3:32"}],"functionName":{"name":"mul","nativeSrc":"8834:3:32","nodeType":"YulIdentifier","src":"8834:3:32"},"nativeSrc":"8834:11:32","nodeType":"YulFunctionCall","src":"8834:11:32"}],"functionName":{"name":"or","nativeSrc":"8825:2:32","nodeType":"YulIdentifier","src":"8825:2:32"},"nativeSrc":"8825:21:32","nodeType":"YulFunctionCall","src":"8825:21:32"},"variableNames":[{"name":"used","nativeSrc":"8817:4:32","nodeType":"YulIdentifier","src":"8817:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8557:295:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8619:4:32","nodeType":"YulTypedName","src":"8619:4:32","type":""},{"name":"len","nativeSrc":"8625:3:32","nodeType":"YulTypedName","src":"8625:3:32","type":""}],"returnVariables":[{"name":"used","nativeSrc":"8633:4:32","nodeType":"YulTypedName","src":"8633:4:32","type":""}],"src":"8557:295:32"},{"body":{"nativeSrc":"8949:1303:32","nodeType":"YulBlock","src":"8949:1303:32","statements":[{"nativeSrc":"8960:51:32","nodeType":"YulVariableDeclaration","src":"8960:51:32","value":{"arguments":[{"name":"src","nativeSrc":"9007:3:32","nodeType":"YulIdentifier","src":"9007:3:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"8974:32:32","nodeType":"YulIdentifier","src":"8974:32:32"},"nativeSrc":"8974:37:32","nodeType":"YulFunctionCall","src":"8974:37:32"},"variables":[{"name":"newLen","nativeSrc":"8964:6:32","nodeType":"YulTypedName","src":"8964:6:32","type":""}]},{"body":{"nativeSrc":"9096:22:32","nodeType":"YulBlock","src":"9096:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9098:16:32","nodeType":"YulIdentifier","src":"9098:16:32"},"nativeSrc":"9098:18:32","nodeType":"YulFunctionCall","src":"9098:18:32"},"nativeSrc":"9098:18:32","nodeType":"YulExpressionStatement","src":"9098:18:32"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"9068:6:32","nodeType":"YulIdentifier","src":"9068:6:32"},{"kind":"number","nativeSrc":"9076:18:32","nodeType":"YulLiteral","src":"9076:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9065:2:32","nodeType":"YulIdentifier","src":"9065:2:32"},"nativeSrc":"9065:30:32","nodeType":"YulFunctionCall","src":"9065:30:32"},"nativeSrc":"9062:56:32","nodeType":"YulIf","src":"9062:56:32"},{"nativeSrc":"9128:52:32","nodeType":"YulVariableDeclaration","src":"9128:52:32","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"9174:4:32","nodeType":"YulIdentifier","src":"9174:4:32"}],"functionName":{"name":"sload","nativeSrc":"9168:5:32","nodeType":"YulIdentifier","src":"9168:5:32"},"nativeSrc":"9168:11:32","nodeType":"YulFunctionCall","src":"9168:11:32"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"9142:25:32","nodeType":"YulIdentifier","src":"9142:25:32"},"nativeSrc":"9142:38:32","nodeType":"YulFunctionCall","src":"9142:38:32"},"variables":[{"name":"oldLen","nativeSrc":"9132:6:32","nodeType":"YulTypedName","src":"9132:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9273:4:32","nodeType":"YulIdentifier","src":"9273:4:32"},{"name":"oldLen","nativeSrc":"9279:6:32","nodeType":"YulIdentifier","src":"9279:6:32"},{"name":"newLen","nativeSrc":"9287:6:32","nodeType":"YulIdentifier","src":"9287:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"9227:45:32","nodeType":"YulIdentifier","src":"9227:45:32"},"nativeSrc":"9227:67:32","nodeType":"YulFunctionCall","src":"9227:67:32"},"nativeSrc":"9227:67:32","nodeType":"YulExpressionStatement","src":"9227:67:32"},{"nativeSrc":"9304:18:32","nodeType":"YulVariableDeclaration","src":"9304:18:32","value":{"kind":"number","nativeSrc":"9321:1:32","nodeType":"YulLiteral","src":"9321:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"9308:9:32","nodeType":"YulTypedName","src":"9308:9:32","type":""}]},{"nativeSrc":"9332:17:32","nodeType":"YulAssignment","src":"9332:17:32","value":{"kind":"number","nativeSrc":"9345:4:32","nodeType":"YulLiteral","src":"9345:4:32","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"9332:9:32","nodeType":"YulIdentifier","src":"9332:9:32"}]},{"cases":[{"body":{"nativeSrc":"9396:611:32","nodeType":"YulBlock","src":"9396:611:32","statements":[{"nativeSrc":"9410:37:32","nodeType":"YulVariableDeclaration","src":"9410:37:32","value":{"arguments":[{"name":"newLen","nativeSrc":"9429:6:32","nodeType":"YulIdentifier","src":"9429:6:32"},{"arguments":[{"kind":"number","nativeSrc":"9441:4:32","nodeType":"YulLiteral","src":"9441:4:32","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"9437:3:32","nodeType":"YulIdentifier","src":"9437:3:32"},"nativeSrc":"9437:9:32","nodeType":"YulFunctionCall","src":"9437:9:32"}],"functionName":{"name":"and","nativeSrc":"9425:3:32","nodeType":"YulIdentifier","src":"9425:3:32"},"nativeSrc":"9425:22:32","nodeType":"YulFunctionCall","src":"9425:22:32"},"variables":[{"name":"loopEnd","nativeSrc":"9414:7:32","nodeType":"YulTypedName","src":"9414:7:32","type":""}]},{"nativeSrc":"9461:51:32","nodeType":"YulVariableDeclaration","src":"9461:51:32","value":{"arguments":[{"name":"slot","nativeSrc":"9507:4:32","nodeType":"YulIdentifier","src":"9507:4:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"9475:31:32","nodeType":"YulIdentifier","src":"9475:31:32"},"nativeSrc":"9475:37:32","nodeType":"YulFunctionCall","src":"9475:37:32"},"variables":[{"name":"dstPtr","nativeSrc":"9465:6:32","nodeType":"YulTypedName","src":"9465:6:32","type":""}]},{"nativeSrc":"9525:10:32","nodeType":"YulVariableDeclaration","src":"9525:10:32","value":{"kind":"number","nativeSrc":"9534:1:32","nodeType":"YulLiteral","src":"9534:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9529:1:32","nodeType":"YulTypedName","src":"9529:1:32","type":""}]},{"body":{"nativeSrc":"9593:163:32","nodeType":"YulBlock","src":"9593:163:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9618:6:32","nodeType":"YulIdentifier","src":"9618:6:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9636:3:32","nodeType":"YulIdentifier","src":"9636:3:32"},{"name":"srcOffset","nativeSrc":"9641:9:32","nodeType":"YulIdentifier","src":"9641:9:32"}],"functionName":{"name":"add","nativeSrc":"9632:3:32","nodeType":"YulIdentifier","src":"9632:3:32"},"nativeSrc":"9632:19:32","nodeType":"YulFunctionCall","src":"9632:19:32"}],"functionName":{"name":"mload","nativeSrc":"9626:5:32","nodeType":"YulIdentifier","src":"9626:5:32"},"nativeSrc":"9626:26:32","nodeType":"YulFunctionCall","src":"9626:26:32"}],"functionName":{"name":"sstore","nativeSrc":"9611:6:32","nodeType":"YulIdentifier","src":"9611:6:32"},"nativeSrc":"9611:42:32","nodeType":"YulFunctionCall","src":"9611:42:32"},"nativeSrc":"9611:42:32","nodeType":"YulExpressionStatement","src":"9611:42:32"},{"nativeSrc":"9670:24:32","nodeType":"YulAssignment","src":"9670:24:32","value":{"arguments":[{"name":"dstPtr","nativeSrc":"9684:6:32","nodeType":"YulIdentifier","src":"9684:6:32"},{"kind":"number","nativeSrc":"9692:1:32","nodeType":"YulLiteral","src":"9692:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9680:3:32","nodeType":"YulIdentifier","src":"9680:3:32"},"nativeSrc":"9680:14:32","nodeType":"YulFunctionCall","src":"9680:14:32"},"variableNames":[{"name":"dstPtr","nativeSrc":"9670:6:32","nodeType":"YulIdentifier","src":"9670:6:32"}]},{"nativeSrc":"9711:31:32","nodeType":"YulAssignment","src":"9711:31:32","value":{"arguments":[{"name":"srcOffset","nativeSrc":"9728:9:32","nodeType":"YulIdentifier","src":"9728:9:32"},{"kind":"number","nativeSrc":"9739:2:32","nodeType":"YulLiteral","src":"9739:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9724:3:32","nodeType":"YulIdentifier","src":"9724:3:32"},"nativeSrc":"9724:18:32","nodeType":"YulFunctionCall","src":"9724:18:32"},"variableNames":[{"name":"srcOffset","nativeSrc":"9711:9:32","nodeType":"YulIdentifier","src":"9711:9:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9559:1:32","nodeType":"YulIdentifier","src":"9559:1:32"},{"name":"loopEnd","nativeSrc":"9562:7:32","nodeType":"YulIdentifier","src":"9562:7:32"}],"functionName":{"name":"lt","nativeSrc":"9556:2:32","nodeType":"YulIdentifier","src":"9556:2:32"},"nativeSrc":"9556:14:32","nodeType":"YulFunctionCall","src":"9556:14:32"},"nativeSrc":"9548:208:32","nodeType":"YulForLoop","post":{"nativeSrc":"9571:21:32","nodeType":"YulBlock","src":"9571:21:32","statements":[{"nativeSrc":"9573:17:32","nodeType":"YulAssignment","src":"9573:17:32","value":{"arguments":[{"name":"i","nativeSrc":"9582:1:32","nodeType":"YulIdentifier","src":"9582:1:32"},{"kind":"number","nativeSrc":"9585:4:32","nodeType":"YulLiteral","src":"9585:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9578:3:32","nodeType":"YulIdentifier","src":"9578:3:32"},"nativeSrc":"9578:12:32","nodeType":"YulFunctionCall","src":"9578:12:32"},"variableNames":[{"name":"i","nativeSrc":"9573:1:32","nodeType":"YulIdentifier","src":"9573:1:32"}]}]},"pre":{"nativeSrc":"9552:3:32","nodeType":"YulBlock","src":"9552:3:32","statements":[]},"src":"9548:208:32"},{"body":{"nativeSrc":"9792:156:32","nodeType":"YulBlock","src":"9792:156:32","statements":[{"nativeSrc":"9810:43:32","nodeType":"YulVariableDeclaration","src":"9810:43:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9837:3:32","nodeType":"YulIdentifier","src":"9837:3:32"},{"name":"srcOffset","nativeSrc":"9842:9:32","nodeType":"YulIdentifier","src":"9842:9:32"}],"functionName":{"name":"add","nativeSrc":"9833:3:32","nodeType":"YulIdentifier","src":"9833:3:32"},"nativeSrc":"9833:19:32","nodeType":"YulFunctionCall","src":"9833:19:32"}],"functionName":{"name":"mload","nativeSrc":"9827:5:32","nodeType":"YulIdentifier","src":"9827:5:32"},"nativeSrc":"9827:26:32","nodeType":"YulFunctionCall","src":"9827:26:32"},"variables":[{"name":"lastValue","nativeSrc":"9814:9:32","nodeType":"YulTypedName","src":"9814:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9877:6:32","nodeType":"YulIdentifier","src":"9877:6:32"},{"arguments":[{"name":"lastValue","nativeSrc":"9904:9:32","nodeType":"YulIdentifier","src":"9904:9:32"},{"arguments":[{"name":"newLen","nativeSrc":"9919:6:32","nodeType":"YulIdentifier","src":"9919:6:32"},{"kind":"number","nativeSrc":"9927:4:32","nodeType":"YulLiteral","src":"9927:4:32","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"9915:3:32","nodeType":"YulIdentifier","src":"9915:3:32"},"nativeSrc":"9915:17:32","nodeType":"YulFunctionCall","src":"9915:17:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"9885:18:32","nodeType":"YulIdentifier","src":"9885:18:32"},"nativeSrc":"9885:48:32","nodeType":"YulFunctionCall","src":"9885:48:32"}],"functionName":{"name":"sstore","nativeSrc":"9870:6:32","nodeType":"YulIdentifier","src":"9870:6:32"},"nativeSrc":"9870:64:32","nodeType":"YulFunctionCall","src":"9870:64:32"},"nativeSrc":"9870:64:32","nodeType":"YulExpressionStatement","src":"9870:64:32"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"9775:7:32","nodeType":"YulIdentifier","src":"9775:7:32"},{"name":"newLen","nativeSrc":"9784:6:32","nodeType":"YulIdentifier","src":"9784:6:32"}],"functionName":{"name":"lt","nativeSrc":"9772:2:32","nodeType":"YulIdentifier","src":"9772:2:32"},"nativeSrc":"9772:19:32","nodeType":"YulFunctionCall","src":"9772:19:32"},"nativeSrc":"9769:179:32","nodeType":"YulIf","src":"9769:179:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9968:4:32","nodeType":"YulIdentifier","src":"9968:4:32"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"9982:6:32","nodeType":"YulIdentifier","src":"9982:6:32"},{"kind":"number","nativeSrc":"9990:1:32","nodeType":"YulLiteral","src":"9990:1:32","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"9978:3:32","nodeType":"YulIdentifier","src":"9978:3:32"},"nativeSrc":"9978:14:32","nodeType":"YulFunctionCall","src":"9978:14:32"},{"kind":"number","nativeSrc":"9994:1:32","nodeType":"YulLiteral","src":"9994:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9974:3:32","nodeType":"YulIdentifier","src":"9974:3:32"},"nativeSrc":"9974:22:32","nodeType":"YulFunctionCall","src":"9974:22:32"}],"functionName":{"name":"sstore","nativeSrc":"9961:6:32","nodeType":"YulIdentifier","src":"9961:6:32"},"nativeSrc":"9961:36:32","nodeType":"YulFunctionCall","src":"9961:36:32"},"nativeSrc":"9961:36:32","nodeType":"YulExpressionStatement","src":"9961:36:32"}]},"nativeSrc":"9389:618:32","nodeType":"YulCase","src":"9389:618:32","value":{"kind":"number","nativeSrc":"9394:1:32","nodeType":"YulLiteral","src":"9394:1:32","type":"","value":"1"}},{"body":{"nativeSrc":"10024:222:32","nodeType":"YulBlock","src":"10024:222:32","statements":[{"nativeSrc":"10038:14:32","nodeType":"YulVariableDeclaration","src":"10038:14:32","value":{"kind":"number","nativeSrc":"10051:1:32","nodeType":"YulLiteral","src":"10051:1:32","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"10042:5:32","nodeType":"YulTypedName","src":"10042:5:32","type":""}]},{"body":{"nativeSrc":"10075:67:32","nodeType":"YulBlock","src":"10075:67:32","statements":[{"nativeSrc":"10093:35:32","nodeType":"YulAssignment","src":"10093:35:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10112:3:32","nodeType":"YulIdentifier","src":"10112:3:32"},{"name":"srcOffset","nativeSrc":"10117:9:32","nodeType":"YulIdentifier","src":"10117:9:32"}],"functionName":{"name":"add","nativeSrc":"10108:3:32","nodeType":"YulIdentifier","src":"10108:3:32"},"nativeSrc":"10108:19:32","nodeType":"YulFunctionCall","src":"10108:19:32"}],"functionName":{"name":"mload","nativeSrc":"10102:5:32","nodeType":"YulIdentifier","src":"10102:5:32"},"nativeSrc":"10102:26:32","nodeType":"YulFunctionCall","src":"10102:26:32"},"variableNames":[{"name":"value","nativeSrc":"10093:5:32","nodeType":"YulIdentifier","src":"10093:5:32"}]}]},"condition":{"name":"newLen","nativeSrc":"10068:6:32","nodeType":"YulIdentifier","src":"10068:6:32"},"nativeSrc":"10065:77:32","nodeType":"YulIf","src":"10065:77:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"10162:4:32","nodeType":"YulIdentifier","src":"10162:4:32"},{"arguments":[{"name":"value","nativeSrc":"10221:5:32","nodeType":"YulIdentifier","src":"10221:5:32"},{"name":"newLen","nativeSrc":"10228:6:32","nodeType":"YulIdentifier","src":"10228:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"10168:52:32","nodeType":"YulIdentifier","src":"10168:52:32"},"nativeSrc":"10168:67:32","nodeType":"YulFunctionCall","src":"10168:67:32"}],"functionName":{"name":"sstore","nativeSrc":"10155:6:32","nodeType":"YulIdentifier","src":"10155:6:32"},"nativeSrc":"10155:81:32","nodeType":"YulFunctionCall","src":"10155:81:32"},"nativeSrc":"10155:81:32","nodeType":"YulExpressionStatement","src":"10155:81:32"}]},"nativeSrc":"10016:230:32","nodeType":"YulCase","src":"10016:230:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"9369:6:32","nodeType":"YulIdentifier","src":"9369:6:32"},{"kind":"number","nativeSrc":"9377:2:32","nodeType":"YulLiteral","src":"9377:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"9366:2:32","nodeType":"YulIdentifier","src":"9366:2:32"},"nativeSrc":"9366:14:32","nodeType":"YulFunctionCall","src":"9366:14:32"},"nativeSrc":"9359:887:32","nodeType":"YulSwitch","src":"9359:887:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"8857:1395:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"8938:4:32","nodeType":"YulTypedName","src":"8938:4:32","type":""},{"name":"src","nativeSrc":"8944:3:32","nodeType":"YulTypedName","src":"8944:3:32","type":""}],"src":"8857:1395:32"},{"body":{"nativeSrc":"10323:53:32","nodeType":"YulBlock","src":"10323:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10340:3:32","nodeType":"YulIdentifier","src":"10340:3:32"},{"arguments":[{"name":"value","nativeSrc":"10363:5:32","nodeType":"YulIdentifier","src":"10363:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"10345:17:32","nodeType":"YulIdentifier","src":"10345:17:32"},"nativeSrc":"10345:24:32","nodeType":"YulFunctionCall","src":"10345:24:32"}],"functionName":{"name":"mstore","nativeSrc":"10333:6:32","nodeType":"YulIdentifier","src":"10333:6:32"},"nativeSrc":"10333:37:32","nodeType":"YulFunctionCall","src":"10333:37:32"},"nativeSrc":"10333:37:32","nodeType":"YulExpressionStatement","src":"10333:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10258:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10311:5:32","nodeType":"YulTypedName","src":"10311:5:32","type":""},{"name":"pos","nativeSrc":"10318:3:32","nodeType":"YulTypedName","src":"10318:3:32","type":""}],"src":"10258:118:32"},{"body":{"nativeSrc":"10480:124:32","nodeType":"YulBlock","src":"10480:124:32","statements":[{"nativeSrc":"10490:26:32","nodeType":"YulAssignment","src":"10490:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"10502:9:32","nodeType":"YulIdentifier","src":"10502:9:32"},{"kind":"number","nativeSrc":"10513:2:32","nodeType":"YulLiteral","src":"10513:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10498:3:32","nodeType":"YulIdentifier","src":"10498:3:32"},"nativeSrc":"10498:18:32","nodeType":"YulFunctionCall","src":"10498:18:32"},"variableNames":[{"name":"tail","nativeSrc":"10490:4:32","nodeType":"YulIdentifier","src":"10490:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10570:6:32","nodeType":"YulIdentifier","src":"10570:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"10583:9:32","nodeType":"YulIdentifier","src":"10583:9:32"},{"kind":"number","nativeSrc":"10594:1:32","nodeType":"YulLiteral","src":"10594:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10579:3:32","nodeType":"YulIdentifier","src":"10579:3:32"},"nativeSrc":"10579:17:32","nodeType":"YulFunctionCall","src":"10579:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10526:43:32","nodeType":"YulIdentifier","src":"10526:43:32"},"nativeSrc":"10526:71:32","nodeType":"YulFunctionCall","src":"10526:71:32"},"nativeSrc":"10526:71:32","nodeType":"YulExpressionStatement","src":"10526:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"10382:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10452:9:32","nodeType":"YulTypedName","src":"10452:9:32","type":""},{"name":"value0","nativeSrc":"10464:6:32","nodeType":"YulTypedName","src":"10464:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10475:4:32","nodeType":"YulTypedName","src":"10475:4:32","type":""}],"src":"10382:222:32"},{"body":{"nativeSrc":"10638:152:32","nodeType":"YulBlock","src":"10638:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10655:1:32","nodeType":"YulLiteral","src":"10655:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"10658:77:32","nodeType":"YulLiteral","src":"10658:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10648:6:32","nodeType":"YulIdentifier","src":"10648:6:32"},"nativeSrc":"10648:88:32","nodeType":"YulFunctionCall","src":"10648:88:32"},"nativeSrc":"10648:88:32","nodeType":"YulExpressionStatement","src":"10648:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10752:1:32","nodeType":"YulLiteral","src":"10752:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"10755:4:32","nodeType":"YulLiteral","src":"10755:4:32","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"10745:6:32","nodeType":"YulIdentifier","src":"10745:6:32"},"nativeSrc":"10745:15:32","nodeType":"YulFunctionCall","src":"10745:15:32"},"nativeSrc":"10745:15:32","nodeType":"YulExpressionStatement","src":"10745:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10776:1:32","nodeType":"YulLiteral","src":"10776:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"10779:4:32","nodeType":"YulLiteral","src":"10779:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10769:6:32","nodeType":"YulIdentifier","src":"10769:6:32"},"nativeSrc":"10769:15:32","nodeType":"YulFunctionCall","src":"10769:15:32"},"nativeSrc":"10769:15:32","nodeType":"YulExpressionStatement","src":"10769:15:32"}]},"name":"panic_error_0x21","nativeSrc":"10610:180:32","nodeType":"YulFunctionDefinition","src":"10610:180:32"},{"body":{"nativeSrc":"10841:32:32","nodeType":"YulBlock","src":"10841:32:32","statements":[{"nativeSrc":"10851:16:32","nodeType":"YulAssignment","src":"10851:16:32","value":{"name":"value","nativeSrc":"10862:5:32","nodeType":"YulIdentifier","src":"10862:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"10851:7:32","nodeType":"YulIdentifier","src":"10851:7:32"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"10796:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10823:5:32","nodeType":"YulTypedName","src":"10823:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"10833:7:32","nodeType":"YulTypedName","src":"10833:7:32","type":""}],"src":"10796:77:32"},{"body":{"nativeSrc":"10944:53:32","nodeType":"YulBlock","src":"10944:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10961:3:32","nodeType":"YulIdentifier","src":"10961:3:32"},{"arguments":[{"name":"value","nativeSrc":"10984:5:32","nodeType":"YulIdentifier","src":"10984:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10966:17:32","nodeType":"YulIdentifier","src":"10966:17:32"},"nativeSrc":"10966:24:32","nodeType":"YulFunctionCall","src":"10966:24:32"}],"functionName":{"name":"mstore","nativeSrc":"10954:6:32","nodeType":"YulIdentifier","src":"10954:6:32"},"nativeSrc":"10954:37:32","nodeType":"YulFunctionCall","src":"10954:37:32"},"nativeSrc":"10954:37:32","nodeType":"YulExpressionStatement","src":"10954:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10879:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10932:5:32","nodeType":"YulTypedName","src":"10932:5:32","type":""},{"name":"pos","nativeSrc":"10939:3:32","nodeType":"YulTypedName","src":"10939:3:32","type":""}],"src":"10879:118:32"},{"body":{"nativeSrc":"11068:53:32","nodeType":"YulBlock","src":"11068:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11085:3:32","nodeType":"YulIdentifier","src":"11085:3:32"},{"arguments":[{"name":"value","nativeSrc":"11108:5:32","nodeType":"YulIdentifier","src":"11108:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11090:17:32","nodeType":"YulIdentifier","src":"11090:17:32"},"nativeSrc":"11090:24:32","nodeType":"YulFunctionCall","src":"11090:24:32"}],"functionName":{"name":"mstore","nativeSrc":"11078:6:32","nodeType":"YulIdentifier","src":"11078:6:32"},"nativeSrc":"11078:37:32","nodeType":"YulFunctionCall","src":"11078:37:32"},"nativeSrc":"11078:37:32","nodeType":"YulExpressionStatement","src":"11078:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11003:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11056:5:32","nodeType":"YulTypedName","src":"11056:5:32","type":""},{"name":"pos","nativeSrc":"11063:3:32","nodeType":"YulTypedName","src":"11063:3:32","type":""}],"src":"11003:118:32"},{"body":{"nativeSrc":"11337:454:32","nodeType":"YulBlock","src":"11337:454:32","statements":[{"nativeSrc":"11347:27:32","nodeType":"YulAssignment","src":"11347:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"11359:9:32","nodeType":"YulIdentifier","src":"11359:9:32"},{"kind":"number","nativeSrc":"11370:3:32","nodeType":"YulLiteral","src":"11370:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"11355:3:32","nodeType":"YulIdentifier","src":"11355:3:32"},"nativeSrc":"11355:19:32","nodeType":"YulFunctionCall","src":"11355:19:32"},"variableNames":[{"name":"tail","nativeSrc":"11347:4:32","nodeType":"YulIdentifier","src":"11347:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11428:6:32","nodeType":"YulIdentifier","src":"11428:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11441:9:32","nodeType":"YulIdentifier","src":"11441:9:32"},{"kind":"number","nativeSrc":"11452:1:32","nodeType":"YulLiteral","src":"11452:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11437:3:32","nodeType":"YulIdentifier","src":"11437:3:32"},"nativeSrc":"11437:17:32","nodeType":"YulFunctionCall","src":"11437:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"11384:43:32","nodeType":"YulIdentifier","src":"11384:43:32"},"nativeSrc":"11384:71:32","nodeType":"YulFunctionCall","src":"11384:71:32"},"nativeSrc":"11384:71:32","nodeType":"YulExpressionStatement","src":"11384:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11509:6:32","nodeType":"YulIdentifier","src":"11509:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11522:9:32","nodeType":"YulIdentifier","src":"11522:9:32"},{"kind":"number","nativeSrc":"11533:2:32","nodeType":"YulLiteral","src":"11533:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11518:3:32","nodeType":"YulIdentifier","src":"11518:3:32"},"nativeSrc":"11518:18:32","nodeType":"YulFunctionCall","src":"11518:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"11465:43:32","nodeType":"YulIdentifier","src":"11465:43:32"},"nativeSrc":"11465:72:32","nodeType":"YulFunctionCall","src":"11465:72:32"},"nativeSrc":"11465:72:32","nodeType":"YulExpressionStatement","src":"11465:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11591:6:32","nodeType":"YulIdentifier","src":"11591:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11604:9:32","nodeType":"YulIdentifier","src":"11604:9:32"},{"kind":"number","nativeSrc":"11615:2:32","nodeType":"YulLiteral","src":"11615:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11600:3:32","nodeType":"YulIdentifier","src":"11600:3:32"},"nativeSrc":"11600:18:32","nodeType":"YulFunctionCall","src":"11600:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"11547:43:32","nodeType":"YulIdentifier","src":"11547:43:32"},"nativeSrc":"11547:72:32","nodeType":"YulFunctionCall","src":"11547:72:32"},"nativeSrc":"11547:72:32","nodeType":"YulExpressionStatement","src":"11547:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"11673:6:32","nodeType":"YulIdentifier","src":"11673:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11686:9:32","nodeType":"YulIdentifier","src":"11686:9:32"},{"kind":"number","nativeSrc":"11697:2:32","nodeType":"YulLiteral","src":"11697:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11682:3:32","nodeType":"YulIdentifier","src":"11682:3:32"},"nativeSrc":"11682:18:32","nodeType":"YulFunctionCall","src":"11682:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11629:43:32","nodeType":"YulIdentifier","src":"11629:43:32"},"nativeSrc":"11629:72:32","nodeType":"YulFunctionCall","src":"11629:72:32"},"nativeSrc":"11629:72:32","nodeType":"YulExpressionStatement","src":"11629:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"11755:6:32","nodeType":"YulIdentifier","src":"11755:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11768:9:32","nodeType":"YulIdentifier","src":"11768:9:32"},{"kind":"number","nativeSrc":"11779:3:32","nodeType":"YulLiteral","src":"11779:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11764:3:32","nodeType":"YulIdentifier","src":"11764:3:32"},"nativeSrc":"11764:19:32","nodeType":"YulFunctionCall","src":"11764:19:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11711:43:32","nodeType":"YulIdentifier","src":"11711:43:32"},"nativeSrc":"11711:73:32","nodeType":"YulFunctionCall","src":"11711:73:32"},"nativeSrc":"11711:73:32","nodeType":"YulExpressionStatement","src":"11711:73:32"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"11127:664:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11277:9:32","nodeType":"YulTypedName","src":"11277:9:32","type":""},{"name":"value4","nativeSrc":"11289:6:32","nodeType":"YulTypedName","src":"11289:6:32","type":""},{"name":"value3","nativeSrc":"11297:6:32","nodeType":"YulTypedName","src":"11297:6:32","type":""},{"name":"value2","nativeSrc":"11305:6:32","nodeType":"YulTypedName","src":"11305:6:32","type":""},{"name":"value1","nativeSrc":"11313:6:32","nodeType":"YulTypedName","src":"11313:6:32","type":""},{"name":"value0","nativeSrc":"11321:6:32","nodeType":"YulTypedName","src":"11321:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11332:4:32","nodeType":"YulTypedName","src":"11332:4:32","type":""}],"src":"11127:664:32"},{"body":{"nativeSrc":"11856:81:32","nodeType":"YulBlock","src":"11856:81:32","statements":[{"nativeSrc":"11866:65:32","nodeType":"YulAssignment","src":"11866:65:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11923:5:32","nodeType":"YulIdentifier","src":"11923:5:32"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"11906:16:32","nodeType":"YulIdentifier","src":"11906:16:32"},"nativeSrc":"11906:23:32","nodeType":"YulFunctionCall","src":"11906:23:32"}],"functionName":{"name":"identity","nativeSrc":"11897:8:32","nodeType":"YulIdentifier","src":"11897:8:32"},"nativeSrc":"11897:33:32","nodeType":"YulFunctionCall","src":"11897:33:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11879:17:32","nodeType":"YulIdentifier","src":"11879:17:32"},"nativeSrc":"11879:52:32","nodeType":"YulFunctionCall","src":"11879:52:32"},"variableNames":[{"name":"converted","nativeSrc":"11866:9:32","nodeType":"YulIdentifier","src":"11866:9:32"}]}]},"name":"convert_t_uint96_to_t_uint256","nativeSrc":"11797:140:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11836:5:32","nodeType":"YulTypedName","src":"11836:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"11846:9:32","nodeType":"YulTypedName","src":"11846:9:32","type":""}],"src":"11797:140:32"},{"body":{"nativeSrc":"12007:65:32","nodeType":"YulBlock","src":"12007:65:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12024:3:32","nodeType":"YulIdentifier","src":"12024:3:32"},{"arguments":[{"name":"value","nativeSrc":"12059:5:32","nodeType":"YulIdentifier","src":"12059:5:32"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nativeSrc":"12029:29:32","nodeType":"YulIdentifier","src":"12029:29:32"},"nativeSrc":"12029:36:32","nodeType":"YulFunctionCall","src":"12029:36:32"}],"functionName":{"name":"mstore","nativeSrc":"12017:6:32","nodeType":"YulIdentifier","src":"12017:6:32"},"nativeSrc":"12017:49:32","nodeType":"YulFunctionCall","src":"12017:49:32"},"nativeSrc":"12017:49:32","nodeType":"YulExpressionStatement","src":"12017:49:32"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nativeSrc":"11943:129:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11995:5:32","nodeType":"YulTypedName","src":"11995:5:32","type":""},{"name":"pos","nativeSrc":"12002:3:32","nodeType":"YulTypedName","src":"12002:3:32","type":""}],"src":"11943:129:32"},{"body":{"nativeSrc":"12203:205:32","nodeType":"YulBlock","src":"12203:205:32","statements":[{"nativeSrc":"12213:26:32","nodeType":"YulAssignment","src":"12213:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"12225:9:32","nodeType":"YulIdentifier","src":"12225:9:32"},{"kind":"number","nativeSrc":"12236:2:32","nodeType":"YulLiteral","src":"12236:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12221:3:32","nodeType":"YulIdentifier","src":"12221:3:32"},"nativeSrc":"12221:18:32","nodeType":"YulFunctionCall","src":"12221:18:32"},"variableNames":[{"name":"tail","nativeSrc":"12213:4:32","nodeType":"YulIdentifier","src":"12213:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12292:6:32","nodeType":"YulIdentifier","src":"12292:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12305:9:32","nodeType":"YulIdentifier","src":"12305:9:32"},{"kind":"number","nativeSrc":"12316:1:32","nodeType":"YulLiteral","src":"12316:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12301:3:32","nodeType":"YulIdentifier","src":"12301:3:32"},"nativeSrc":"12301:17:32","nodeType":"YulFunctionCall","src":"12301:17:32"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nativeSrc":"12249:42:32","nodeType":"YulIdentifier","src":"12249:42:32"},"nativeSrc":"12249:70:32","nodeType":"YulFunctionCall","src":"12249:70:32"},"nativeSrc":"12249:70:32","nodeType":"YulExpressionStatement","src":"12249:70:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12373:6:32","nodeType":"YulIdentifier","src":"12373:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"12386:9:32","nodeType":"YulIdentifier","src":"12386:9:32"},{"kind":"number","nativeSrc":"12397:2:32","nodeType":"YulLiteral","src":"12397:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12382:3:32","nodeType":"YulIdentifier","src":"12382:3:32"},"nativeSrc":"12382:18:32","nodeType":"YulFunctionCall","src":"12382:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12329:43:32","nodeType":"YulIdentifier","src":"12329:43:32"},"nativeSrc":"12329:72:32","nodeType":"YulFunctionCall","src":"12329:72:32"},"nativeSrc":"12329:72:32","nodeType":"YulExpressionStatement","src":"12329:72:32"}]},"name":"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12078:330:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12167:9:32","nodeType":"YulTypedName","src":"12167:9:32","type":""},{"name":"value1","nativeSrc":"12179:6:32","nodeType":"YulTypedName","src":"12179:6:32","type":""},{"name":"value0","nativeSrc":"12187:6:32","nodeType":"YulTypedName","src":"12187:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12198:4:32","nodeType":"YulTypedName","src":"12198:4:32","type":""}],"src":"12078:330:32"},{"body":{"nativeSrc":"12510:73:32","nodeType":"YulBlock","src":"12510:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12527:3:32","nodeType":"YulIdentifier","src":"12527:3:32"},{"name":"length","nativeSrc":"12532:6:32","nodeType":"YulIdentifier","src":"12532:6:32"}],"functionName":{"name":"mstore","nativeSrc":"12520:6:32","nodeType":"YulIdentifier","src":"12520:6:32"},"nativeSrc":"12520:19:32","nodeType":"YulFunctionCall","src":"12520:19:32"},"nativeSrc":"12520:19:32","nodeType":"YulExpressionStatement","src":"12520:19:32"},{"nativeSrc":"12548:29:32","nodeType":"YulAssignment","src":"12548:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"12567:3:32","nodeType":"YulIdentifier","src":"12567:3:32"},{"kind":"number","nativeSrc":"12572:4:32","nodeType":"YulLiteral","src":"12572:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12563:3:32","nodeType":"YulIdentifier","src":"12563:3:32"},"nativeSrc":"12563:14:32","nodeType":"YulFunctionCall","src":"12563:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"12548:11:32","nodeType":"YulIdentifier","src":"12548:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12414:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12482:3:32","nodeType":"YulTypedName","src":"12482:3:32","type":""},{"name":"length","nativeSrc":"12487:6:32","nodeType":"YulTypedName","src":"12487:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"12498:11:32","nodeType":"YulTypedName","src":"12498:11:32","type":""}],"src":"12414:169:32"},{"body":{"nativeSrc":"12681:285:32","nodeType":"YulBlock","src":"12681:285:32","statements":[{"nativeSrc":"12691:53:32","nodeType":"YulVariableDeclaration","src":"12691:53:32","value":{"arguments":[{"name":"value","nativeSrc":"12738:5:32","nodeType":"YulIdentifier","src":"12738:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"12705:32:32","nodeType":"YulIdentifier","src":"12705:32:32"},"nativeSrc":"12705:39:32","nodeType":"YulFunctionCall","src":"12705:39:32"},"variables":[{"name":"length","nativeSrc":"12695:6:32","nodeType":"YulTypedName","src":"12695:6:32","type":""}]},{"nativeSrc":"12753:78:32","nodeType":"YulAssignment","src":"12753:78:32","value":{"arguments":[{"name":"pos","nativeSrc":"12819:3:32","nodeType":"YulIdentifier","src":"12819:3:32"},{"name":"length","nativeSrc":"12824:6:32","nodeType":"YulIdentifier","src":"12824:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12760:58:32","nodeType":"YulIdentifier","src":"12760:58:32"},"nativeSrc":"12760:71:32","nodeType":"YulFunctionCall","src":"12760:71:32"},"variableNames":[{"name":"pos","nativeSrc":"12753:3:32","nodeType":"YulIdentifier","src":"12753:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12879:5:32","nodeType":"YulIdentifier","src":"12879:5:32"},{"kind":"number","nativeSrc":"12886:4:32","nodeType":"YulLiteral","src":"12886:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12875:3:32","nodeType":"YulIdentifier","src":"12875:3:32"},"nativeSrc":"12875:16:32","nodeType":"YulFunctionCall","src":"12875:16:32"},{"name":"pos","nativeSrc":"12893:3:32","nodeType":"YulIdentifier","src":"12893:3:32"},{"name":"length","nativeSrc":"12898:6:32","nodeType":"YulIdentifier","src":"12898:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"12840:34:32","nodeType":"YulIdentifier","src":"12840:34:32"},"nativeSrc":"12840:65:32","nodeType":"YulFunctionCall","src":"12840:65:32"},"nativeSrc":"12840:65:32","nodeType":"YulExpressionStatement","src":"12840:65:32"},{"nativeSrc":"12914:46:32","nodeType":"YulAssignment","src":"12914:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"12925:3:32","nodeType":"YulIdentifier","src":"12925:3:32"},{"arguments":[{"name":"length","nativeSrc":"12952:6:32","nodeType":"YulIdentifier","src":"12952:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"12930:21:32","nodeType":"YulIdentifier","src":"12930:21:32"},"nativeSrc":"12930:29:32","nodeType":"YulFunctionCall","src":"12930:29:32"}],"functionName":{"name":"add","nativeSrc":"12921:3:32","nodeType":"YulIdentifier","src":"12921:3:32"},"nativeSrc":"12921:39:32","nodeType":"YulFunctionCall","src":"12921:39:32"},"variableNames":[{"name":"end","nativeSrc":"12914:3:32","nodeType":"YulIdentifier","src":"12914:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"12589:377:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12662:5:32","nodeType":"YulTypedName","src":"12662:5:32","type":""},{"name":"pos","nativeSrc":"12669:3:32","nodeType":"YulTypedName","src":"12669:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12677:3:32","nodeType":"YulTypedName","src":"12677:3:32","type":""}],"src":"12589:377:32"},{"body":{"nativeSrc":"13090:195:32","nodeType":"YulBlock","src":"13090:195:32","statements":[{"nativeSrc":"13100:26:32","nodeType":"YulAssignment","src":"13100:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"13112:9:32","nodeType":"YulIdentifier","src":"13112:9:32"},{"kind":"number","nativeSrc":"13123:2:32","nodeType":"YulLiteral","src":"13123:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13108:3:32","nodeType":"YulIdentifier","src":"13108:3:32"},"nativeSrc":"13108:18:32","nodeType":"YulFunctionCall","src":"13108:18:32"},"variableNames":[{"name":"tail","nativeSrc":"13100:4:32","nodeType":"YulIdentifier","src":"13100:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13147:9:32","nodeType":"YulIdentifier","src":"13147:9:32"},{"kind":"number","nativeSrc":"13158:1:32","nodeType":"YulLiteral","src":"13158:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13143:3:32","nodeType":"YulIdentifier","src":"13143:3:32"},"nativeSrc":"13143:17:32","nodeType":"YulFunctionCall","src":"13143:17:32"},{"arguments":[{"name":"tail","nativeSrc":"13166:4:32","nodeType":"YulIdentifier","src":"13166:4:32"},{"name":"headStart","nativeSrc":"13172:9:32","nodeType":"YulIdentifier","src":"13172:9:32"}],"functionName":{"name":"sub","nativeSrc":"13162:3:32","nodeType":"YulIdentifier","src":"13162:3:32"},"nativeSrc":"13162:20:32","nodeType":"YulFunctionCall","src":"13162:20:32"}],"functionName":{"name":"mstore","nativeSrc":"13136:6:32","nodeType":"YulIdentifier","src":"13136:6:32"},"nativeSrc":"13136:47:32","nodeType":"YulFunctionCall","src":"13136:47:32"},"nativeSrc":"13136:47:32","nodeType":"YulExpressionStatement","src":"13136:47:32"},{"nativeSrc":"13192:86:32","nodeType":"YulAssignment","src":"13192:86:32","value":{"arguments":[{"name":"value0","nativeSrc":"13264:6:32","nodeType":"YulIdentifier","src":"13264:6:32"},{"name":"tail","nativeSrc":"13273:4:32","nodeType":"YulIdentifier","src":"13273:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"13200:63:32","nodeType":"YulIdentifier","src":"13200:63:32"},"nativeSrc":"13200:78:32","nodeType":"YulFunctionCall","src":"13200:78:32"},"variableNames":[{"name":"tail","nativeSrc":"13192:4:32","nodeType":"YulIdentifier","src":"13192:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12972:313:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13062:9:32","nodeType":"YulTypedName","src":"13062:9:32","type":""},{"name":"value0","nativeSrc":"13074:6:32","nodeType":"YulTypedName","src":"13074:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13085:4:32","nodeType":"YulTypedName","src":"13085:4:32","type":""}],"src":"12972:313:32"},{"body":{"nativeSrc":"13349:40:32","nodeType":"YulBlock","src":"13349:40:32","statements":[{"nativeSrc":"13360:22:32","nodeType":"YulAssignment","src":"13360:22:32","value":{"arguments":[{"name":"value","nativeSrc":"13376:5:32","nodeType":"YulIdentifier","src":"13376:5:32"}],"functionName":{"name":"mload","nativeSrc":"13370:5:32","nodeType":"YulIdentifier","src":"13370:5:32"},"nativeSrc":"13370:12:32","nodeType":"YulFunctionCall","src":"13370:12:32"},"variableNames":[{"name":"length","nativeSrc":"13360:6:32","nodeType":"YulIdentifier","src":"13360:6:32"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"13291:98:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13332:5:32","nodeType":"YulTypedName","src":"13332:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"13342:6:32","nodeType":"YulTypedName","src":"13342:6:32","type":""}],"src":"13291:98:32"},{"body":{"nativeSrc":"13451:60:32","nodeType":"YulBlock","src":"13451:60:32","statements":[{"nativeSrc":"13461:11:32","nodeType":"YulAssignment","src":"13461:11:32","value":{"name":"ptr","nativeSrc":"13469:3:32","nodeType":"YulIdentifier","src":"13469:3:32"},"variableNames":[{"name":"data","nativeSrc":"13461:4:32","nodeType":"YulIdentifier","src":"13461:4:32"}]},{"nativeSrc":"13482:22:32","nodeType":"YulAssignment","src":"13482:22:32","value":{"arguments":[{"name":"ptr","nativeSrc":"13494:3:32","nodeType":"YulIdentifier","src":"13494:3:32"},{"kind":"number","nativeSrc":"13499:4:32","nodeType":"YulLiteral","src":"13499:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13490:3:32","nodeType":"YulIdentifier","src":"13490:3:32"},"nativeSrc":"13490:14:32","nodeType":"YulFunctionCall","src":"13490:14:32"},"variableNames":[{"name":"data","nativeSrc":"13482:4:32","nodeType":"YulIdentifier","src":"13482:4:32"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"13395:116:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"13438:3:32","nodeType":"YulTypedName","src":"13438:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"13446:4:32","nodeType":"YulTypedName","src":"13446:4:32","type":""}],"src":"13395:116:32"},{"body":{"nativeSrc":"13572:99:32","nodeType":"YulBlock","src":"13572:99:32","statements":[{"nativeSrc":"13583:42:32","nodeType":"YulVariableDeclaration","src":"13583:42:32","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"13620:3:32","nodeType":"YulIdentifier","src":"13620:3:32"}],"functionName":{"name":"mload","nativeSrc":"13614:5:32","nodeType":"YulIdentifier","src":"13614:5:32"},"nativeSrc":"13614:10:32","nodeType":"YulFunctionCall","src":"13614:10:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"13596:17:32","nodeType":"YulIdentifier","src":"13596:17:32"},"nativeSrc":"13596:29:32","nodeType":"YulFunctionCall","src":"13596:29:32"},"variables":[{"name":"value","nativeSrc":"13587:5:32","nodeType":"YulTypedName","src":"13587:5:32","type":""}]},{"nativeSrc":"13635:29:32","nodeType":"YulAssignment","src":"13635:29:32","value":{"name":"value","nativeSrc":"13659:5:32","nodeType":"YulIdentifier","src":"13659:5:32"},"variableNames":[{"name":"returnValue","nativeSrc":"13635:11:32","nodeType":"YulIdentifier","src":"13635:11:32"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"13517:154:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"13552:3:32","nodeType":"YulTypedName","src":"13552:3:32","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"13560:11:32","nodeType":"YulTypedName","src":"13560:11:32","type":""}],"src":"13517:154:32"},{"body":{"nativeSrc":"13767:504:32","nodeType":"YulBlock","src":"13767:504:32","statements":[{"nativeSrc":"13778:52:32","nodeType":"YulVariableDeclaration","src":"13778:52:32","value":{"arguments":[{"name":"array","nativeSrc":"13824:5:32","nodeType":"YulIdentifier","src":"13824:5:32"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"13792:31:32","nodeType":"YulIdentifier","src":"13792:31:32"},"nativeSrc":"13792:38:32","nodeType":"YulFunctionCall","src":"13792:38:32"},"variables":[{"name":"length","nativeSrc":"13782:6:32","nodeType":"YulTypedName","src":"13782:6:32","type":""}]},{"nativeSrc":"13839:21:32","nodeType":"YulVariableDeclaration","src":"13839:21:32","value":{"name":"array","nativeSrc":"13855:5:32","nodeType":"YulIdentifier","src":"13855:5:32"},"variables":[{"name":"dataArea","nativeSrc":"13843:8:32","nodeType":"YulTypedName","src":"13843:8:32","type":""}]},{"nativeSrc":"13870:52:32","nodeType":"YulAssignment","src":"13870:52:32","value":{"arguments":[{"name":"array","nativeSrc":"13916:5:32","nodeType":"YulIdentifier","src":"13916:5:32"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"13882:33:32","nodeType":"YulIdentifier","src":"13882:33:32"},"nativeSrc":"13882:40:32","nodeType":"YulFunctionCall","src":"13882:40:32"},"variableNames":[{"name":"dataArea","nativeSrc":"13870:8:32","nodeType":"YulIdentifier","src":"13870:8:32"}]},{"nativeSrc":"13932:44:32","nodeType":"YulAssignment","src":"13932:44:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"13967:8:32","nodeType":"YulIdentifier","src":"13967:8:32"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"13941:25:32","nodeType":"YulIdentifier","src":"13941:25:32"},"nativeSrc":"13941:35:32","nodeType":"YulFunctionCall","src":"13941:35:32"},"variableNames":[{"name":"value","nativeSrc":"13932:5:32","nodeType":"YulIdentifier","src":"13932:5:32"}]},{"body":{"nativeSrc":"14004:260:32","nodeType":"YulBlock","src":"14004:260:32","statements":[{"nativeSrc":"14018:236:32","nodeType":"YulAssignment","src":"14018:236:32","value":{"arguments":[{"name":"value","nativeSrc":"14048:5:32","nodeType":"YulIdentifier","src":"14048:5:32"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14115:1:32","nodeType":"YulLiteral","src":"14115:1:32","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"14122:2:32","nodeType":"YulLiteral","src":"14122:2:32","type":"","value":"32"},{"name":"length","nativeSrc":"14126:6:32","nodeType":"YulIdentifier","src":"14126:6:32"}],"functionName":{"name":"sub","nativeSrc":"14118:3:32","nodeType":"YulIdentifier","src":"14118:3:32"},"nativeSrc":"14118:15:32","nodeType":"YulFunctionCall","src":"14118:15:32"}],"functionName":{"name":"mul","nativeSrc":"14111:3:32","nodeType":"YulIdentifier","src":"14111:3:32"},"nativeSrc":"14111:23:32","nodeType":"YulFunctionCall","src":"14111:23:32"},{"kind":"number","nativeSrc":"14156:66:32","nodeType":"YulLiteral","src":"14156:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"14071:18:32","nodeType":"YulIdentifier","src":"14071:18:32"},"nativeSrc":"14071:169:32","nodeType":"YulFunctionCall","src":"14071:169:32"}],"functionName":{"name":"and","nativeSrc":"14027:3:32","nodeType":"YulIdentifier","src":"14027:3:32"},"nativeSrc":"14027:227:32","nodeType":"YulFunctionCall","src":"14027:227:32"},"variableNames":[{"name":"value","nativeSrc":"14018:5:32","nodeType":"YulIdentifier","src":"14018:5:32"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13992:6:32","nodeType":"YulIdentifier","src":"13992:6:32"},{"kind":"number","nativeSrc":"14000:2:32","nodeType":"YulLiteral","src":"14000:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"13989:2:32","nodeType":"YulIdentifier","src":"13989:2:32"},"nativeSrc":"13989:14:32","nodeType":"YulFunctionCall","src":"13989:14:32"},"nativeSrc":"13986:278:32","nodeType":"YulIf","src":"13986:278:32"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"13677:594:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"13751:5:32","nodeType":"YulTypedName","src":"13751:5:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"13761:5:32","nodeType":"YulTypedName","src":"13761:5:32","type":""}],"src":"13677:594:32"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint96t_uint96t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101a060405234801561001157600080fd5b50604051616e4a380380616e4a83398181016040528101906100339190610a2b565b6040518060400160405280600a81526020017f556e69666965644e4654000000000000000000000000000000000000000000008152506040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525088888881600090816100b19190610d26565b5080600190816100c19190610d26565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101365760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012d9190610e07565b60405180910390fd5b6101458161047f60201b60201c565b5061015a600e8361054560201b90919060201c565b6101208181525050610176600f8261054560201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506101b361059560201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050506103e8846bffffffffffffffffffffffff161115801561022057506103e8836bffffffffffffffffffffffff1611155b80156102595750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b80156102925750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b61029b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166101608173ffffffffffffffffffffffffffffffffffffffff1681525050836bffffffffffffffffffffffff16610180816bffffffffffffffffffffffff168152505082601660006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550816016600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061037a87610180516105f060201b60201c565b60126040518061010001604052806000600381111561039c5761039b610e22565b5b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000801b815250908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000160006101000a81548160ff0219169083600381111561042657610425610e22565b5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155505050505050505050611029565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000602083511015610567576105608361079860201b60201c565b905061058f565b826105778361080060201b60201c565b60000190816105869190610d26565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016105d5959493929190610e79565b60405160208183030381529060405280519060200120905090565b600061060061080a60201b60201c565b6bffffffffffffffffffffffff16905080826bffffffffffffffffffffffff1611156106655781816040517f6f483d0900000000000000000000000000000000000000000000000000000000815260040161065c929190610efd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106d75760006040517fb6d9900a0000000000000000000000000000000000000000000000000000000081526004016106ce9190610e07565b60405180910390fd5b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff16815250600b60008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550905050505050565b600080829050601f815111156107e557826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016107dc9190610f70565b60405180910390fd5b8051816107f190610fc2565b60001c1760001b915050919050565b6000819050919050565b6000612710905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085382610828565b9050919050565b61086381610848565b811461086e57600080fd5b50565b6000815190506108808161085a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108d982610890565b810181811067ffffffffffffffff821117156108f8576108f76108a1565b5b80604052505050565b600061090b610814565b905061091782826108d0565b919050565b600067ffffffffffffffff821115610937576109366108a1565b5b61094082610890565b9050602081019050919050565b60005b8381101561096b578082015181840152602081019050610950565b60008484015250505050565b600061098a6109858461091c565b610901565b9050828152602081018484840111156109a6576109a561088b565b5b6109b184828561094d565b509392505050565b600082601f8301126109ce576109cd610886565b5b81516109de848260208601610977565b91505092915050565b60006bffffffffffffffffffffffff82169050919050565b610a08816109e7565b8114610a1357600080fd5b50565b600081519050610a25816109ff565b92915050565b600080600080600080600060e0888a031215610a4a57610a4961081e565b5b6000610a588a828b01610871565b975050602088015167ffffffffffffffff811115610a7957610a78610823565b5b610a858a828b016109b9565b965050604088015167ffffffffffffffff811115610aa657610aa5610823565b5b610ab28a828b016109b9565b9550506060610ac38a828b01610a16565b9450506080610ad48a828b01610a16565b93505060a0610ae58a828b01610871565b92505060c0610af68a828b01610871565b91505092959891949750929550565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b5757607f821691505b602082108103610b6a57610b69610b10565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610bd27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b95565b610bdc8683610b95565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610c23610c1e610c1984610bf4565b610bfe565b610bf4565b9050919050565b6000819050919050565b610c3d83610c08565b610c51610c4982610c2a565b848454610ba2565b825550505050565b600090565b610c66610c59565b610c71818484610c34565b505050565b5b81811015610c9557610c8a600082610c5e565b600181019050610c77565b5050565b601f821115610cda57610cab81610b70565b610cb484610b85565b81016020851015610cc3578190505b610cd7610ccf85610b85565b830182610c76565b50505b505050565b600082821c905092915050565b6000610cfd60001984600802610cdf565b1980831691505092915050565b6000610d168383610cec565b9150826002028217905092915050565b610d2f82610b05565b67ffffffffffffffff811115610d4857610d476108a1565b5b610d528254610b3f565b610d5d828285610c99565b600060209050601f831160018114610d905760008415610d7e578287015190505b610d888582610d0a565b865550610df0565b601f198416610d9e86610b70565b60005b82811015610dc657848901518255600182019150602085019450602081019050610da1565b86831015610de35784890151610ddf601f891682610cec565b8355505b6001600288020188555050505b505050505050565b610e0181610848565b82525050565b6000602082019050610e1c6000830184610df8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b610e6481610e51565b82525050565b610e7381610bf4565b82525050565b600060a082019050610e8e6000830188610e5b565b610e9b6020830187610e5b565b610ea86040830186610e5b565b610eb56060830185610e6a565b610ec26080830184610df8565b9695505050505050565b6000610ee7610ee2610edd846109e7565b610bfe565b610bf4565b9050919050565b610ef781610ecc565b82525050565b6000604082019050610f126000830185610eee565b610f1f6020830184610e6a565b9392505050565b600082825260208201905092915050565b6000610f4282610b05565b610f4c8185610f26565b9350610f5c81856020860161094d565b610f6581610890565b840191505092915050565b60006020820190508181036000830152610f8a8184610f37565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000610fb98251610e51565b80915050919050565b6000610fcd82610f92565b82610fd784610f9d565b9050610fe281610fad565b925060208210156110225761101d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802610b95565b831692505b5050919050565b60805160a05160c05160e0516101005161012051610140516101605161018051615dad61109d60003960005050600081816112d801526117b80152600061225f01526000612224015260006132ae0152600061328d01526000612a3a01526000612a9001526000612ab90152615dad6000f3fe6080604052600436106102045760003560e01c806370a0823111610118578063b88d4fde116100a0578063e985e9c51161006f578063e985e9c5146107a5578063eb13554f146107e2578063ed24911d1461080d578063f2fde38b14610838578063f7330c2d1461086157610204565b8063b88d4fde146106e9578063c87b56dd14610712578063cdd78cfc1461074f578063db5e00631461077a57610204565b80638da5cb5b116100e75780638da5cb5b146106235780638ff75e821461064e57806395d89b411461066a578063a22cb46514610695578063b187bd26146106be57610204565b806370a0823114610561578063715018a61461059e5780638462151c146105b557806384b0196e146105f257610204565b806323b872dd1161019b57806342842e0e1161016a57806342842e0e1461046a5780634f6ccce71461049357806357036078146104d05780636352211e146104f957806365d65e861461053657610204565b806323b872dd146103825780632a55205a146103ab5780632e37eef6146103e95780632f745c591461042d57610204565b8063095ea7b3116101d7578063095ea7b3146102d957806316c38b3c1461030257806318160ddd1461032b5780631ce97fd11461035657610204565b806301ffc9a71461020957806306fdde0314610246578063072a131914610271578063081812fc1461029c575b600080fd5b34801561021557600080fd5b50610230600480360381019061022b91906140f1565b61089e565b60405161023d9190614139565b60405180910390f35b34801561025257600080fd5b5061025b6108b0565b60405161026891906141e4565b60405180910390f35b34801561027d57600080fd5b50610286610942565b6040516102939190614139565b60405180910390f35b3480156102a857600080fd5b506102c360048036038101906102be919061423c565b610a3c565b6040516102d091906142aa565b60405180910390f35b3480156102e557600080fd5b5061030060048036038101906102fb91906142f1565b610a58565b005b34801561030e57600080fd5b506103296004803603810190610324919061435d565b610a6e565b005b34801561033757600080fd5b50610340610a93565b60405161034d9190614399565b60405180910390f35b34801561036257600080fd5b5061036b610aa0565b6040516103799291906144f5565b60405180910390f35b34801561038e57600080fd5b506103a960048036038101906103a4919061451f565b610b4a565b005b3480156103b757600080fd5b506103d260048036038101906103cd9190614572565b610c4c565b6040516103e09291906145b2565b60405180910390f35b3480156103f557600080fd5b50610410600480360381019061040b919061423c565b610d7c565b6040516104249897969594939291906145f9565b60405180910390f35b34801561043957600080fd5b50610454600480360381019061044f91906142f1565b610de1565b6040516104619190614399565b60405180910390f35b34801561047657600080fd5b50610491600480360381019061048c919061451f565b610e8a565b005b34801561049f57600080fd5b506104ba60048036038101906104b5919061423c565b610eaa565b6040516104c79190614399565b60405180910390f35b3480156104dc57600080fd5b506104f760048036038101906104f291906146c8565b610f20565b005b34801561050557600080fd5b50610520600480360381019061051b919061423c565b6112c4565b60405161052d91906142aa565b60405180910390f35b34801561054257600080fd5b5061054b6112d6565b60405161055891906142aa565b60405180910390f35b34801561056d57600080fd5b506105886004803603810190610583919061476a565b6112fa565b6040516105959190614399565b60405180910390f35b3480156105aa57600080fd5b506105b36113b4565b005b3480156105c157600080fd5b506105dc60048036038101906105d7919061476a565b6113c8565b6040516105e99190614846565b60405180910390f35b3480156105fe57600080fd5b5061060761145f565b60405161061a97969594939291906148a3565b60405180910390f35b34801561062f57600080fd5b50610638611509565b60405161064591906142aa565b60405180910390f35b61066860048036038101906106639190614a38565b611533565b005b34801561067657600080fd5b5061067f611b15565b60405161068c91906141e4565b60405180910390f35b3480156106a157600080fd5b506106bc60048036038101906106b79190614b27565b611ba7565b005b3480156106ca57600080fd5b506106d3611bbd565b6040516106e09190614139565b60405180910390f35b3480156106f557600080fd5b50610710600480360381019061070b9190614c97565b611bd0565b005b34801561071e57600080fd5b506107396004803603810190610734919061423c565b611bf5565b60405161074691906141e4565b60405180910390f35b34801561075b57600080fd5b50610764611c07565b6040516107719190614d41565b60405180910390f35b34801561078657600080fd5b5061078f611c25565b60405161079c9190614399565b60405180910390f35b3480156107b157600080fd5b506107cc60048036038101906107c79190614d5c565b611c32565b6040516107d99190614139565b60405180910390f35b3480156107ee57600080fd5b506107f7611cc6565b60405161080491906142aa565b60405180910390f35b34801561081957600080fd5b50610822611cec565b60405161082f9190614d9c565b60405180910390f35b34801561084457600080fd5b5061085f600480360381019061085a919061476a565b611cfb565b005b34801561086d57600080fd5b5061088860048036038101906108839190614db7565b611d81565b6040516108959190614399565b60405180910390f35b60006108a982611e00565b9050919050565b6060600080546108bf90614e26565b80601f01602080910402602001604051908101604052809291908181526020018280546108eb90614e26565b80156109385780601f1061090d57610100808354040283529160200191610938565b820191906000526020600020905b81548152906001019060200180831161091b57829003601f168201915b5050505050905090565b60008042905060005b601280549050811015610a32576000600381111561096c5761096b6143b4565b5b601282815481106109805761097f614e57565b5b906000526020600020906008020160000160009054906101000a900460ff1660038111156109b1576109b06143b4565b5b141580156109e45750601281815481106109ce576109cd614e57565b5b9060005260206000209060080201600201548210155b8015610a155750601281815481106109ff576109fe614e57565b5b9060005260206000209060080201600301548211155b15610a2557600192505050610a39565b808060010191505061094b565b5060009150505b90565b6000610a4782611e7a565b50610a5182611f02565b9050919050565b610a6a8282610a65611f3f565b611f47565b5050565b610a76611f59565b80601460006101000a81548160ff02191690831515021790555050565b6000600880549050905090565b6000610aaa61402b565b610ab2611fe0565b80604051806101000160405290816000820160009054906101000a900460ff166003811115610ae457610ae36143b4565b5b6003811115610af657610af56143b4565b5b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050915091509091565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bbc5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610bb391906142aa565b60405180910390fd5b6000610bd08383610bcb611f3f565b612135565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c46578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610c3d93929190614e86565b60405180910390fd5b50505050565b6000806000600c6000868152602001908152602001600020905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260000160149054906101000a90046bffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d2d57600b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600b60000160149054906101000a90046bffffffffffffffffffffffff1690505b6000610d3761214b565b6bffffffffffffffffffffffff16826bffffffffffffffffffffffff1688610d5f9190614eec565b610d699190614f5d565b9050828195509550505050509250929050565b60128181548110610d8c57600080fd5b90600052602060002090600802016000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b6000610dec836112fa565b8210610e315782826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610e289291906145b2565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b610ea583838360405180602001604052806000815250611bd0565b505050565b6000610eb4610a93565b8210610efa576000826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610ef19291906145b2565b60405180910390fd5b60088281548110610f0e57610f0d614e57565b5b90600052602060002001549050919050565b610f28611f59565b838510610f6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6190614fda565b60405180910390fd5b60026003811115610f7e57610f7d6143b4565b5b876003811115610f9157610f906143b4565b5b1461101f5760008211610fd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd09061506c565b60405180910390fd5b6000801b810361101e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611015906150fe565b60405180910390fd5b5b60005b60128054905081101561117f5760006012828154811061104557611044614e57565b5b9060005260206000209060080201604051806101000160405290816000820160009054906101000a900460ff166003811115611084576110836143b4565b5b6003811115611096576110956143b4565b5b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060038111156110f6576110f56143b4565b5b8160000151600381111561110d5761110c6143b4565b5b036111185750611172565b80606001518711158015611130575080604001518610155b15611170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116790615190565b60405180910390fd5b505b8080600101915050611022565b5060006040518061010001604052808960038111156111a1576111a06143b4565b5b81526020018881526020018781526020018681526020018581526020018481526020016000815260200183815250905060006012805490509050601282908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000160006101000a81548160ff02191690836003811115611232576112316143b4565b5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701555050807f7673e4939433531841b3ee155cfb41d74036f1741ed20ba7c3ed88d66a2895518a8a6040516112b19291906151b0565b60405180910390a2505050505050505050565b60006112cf82611e7a565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361136d5760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161136491906142aa565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6113bc611f59565b6113c66000612155565b565b6060601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561145357602002820191906000526020600020905b81548152602001906001019080831161143f575b50505050509050919050565b60006060806000806000606061147361221b565b61147b612256565b46306000801b600067ffffffffffffffff81111561149c5761149b614b6c565b5b6040519080825280602002602001820160405280156114ca5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b601460009054906101000a900460ff1615611583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157a90615225565b60405180910390fd5b60008061158e611fe0565b91509150600160038111156115a6576115a56143b4565b5b8160000160009054906101000a900460ff1660038111156115ca576115c96143b4565b5b0361168557611645848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505082600701543360405160200161162a919061528d565b60405160208183030381529060405280519060200120612291565b611684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167b906152f4565b60405180910390fd5b5b42610e10886116949190615314565b101580156116a25750428711155b6116e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d890615394565b60405180910390fd5b6011600089815260200190815260200160002060009054906101000a900460ff1615611742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173990615400565b60405180910390fd5b60007fbcd57119bf9b3f112b39ecfb926b57babf8ea759ef8fb8f953ec0103b2a187f3338d8d8d604051611777929190615450565b60405180910390208560010154878e8e60405160200161179e989796959493929190615469565b6040516020818303038152906040528051906020012090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661184c88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061183e846122a8565b6122c290919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16146118a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189990615533565b60405180910390fd5b816001015434146118e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118df9061559f565b60405180910390fd5b600082600401541480611902575081600401548260060154105b611941576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119389061560b565b60405180910390fd5b60026003811115611955576119546143b4565b5b8260000160009054906101000a900460ff166003811115611979576119786143b4565b5b14801561198a575060008260050154145b80611a1d57508160050154601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008460000160009054906101000a900460ff1660038111156119fa576119f96143b4565b5b6003811115611a0c57611a0b6143b4565b5b815260200190815260200160002054105b611a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a539061569d565b60405180910390fd5b6001601160008b815260200190815260200160002060006101000a81548160ff021916908315150217905550611a91346122ee565b611a9b82336124df565b611aa7338d8d8d612598565b3373ffffffffffffffffffffffffffffffffffffffff168c7f99f38cf3feaad38e0a2e22ef51bdd4faba32b432520a951248d77057596a425a8460000160009054906101000a900460ff16604051611aff91906156bd565b60405180910390a3505050505050505050505050565b606060018054611b2490614e26565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5090614e26565b8015611b9d5780601f10611b7257610100808354040283529160200191611b9d565b820191906000526020600020905b815481529060010190602001808311611b8057829003601f168201915b5050505050905090565b611bb9611bb2611f3f565b8383612603565b5050565b601460009054906101000a900460ff1681565b611bdb848484610b4a565b611bef611be6611f3f565b85858585612772565b50505050565b6060611c0082612923565b9050919050565b601660009054906101000a90046bffffffffffffffffffffffff1681565b6000601280549050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6016600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611cf6612a36565b905090565b611d03611f59565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d755760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611d6c91906142aa565b60405180910390fd5b611d7e81612155565b50565b6000601360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836003811115611dd757611dd66143b4565b5b6003811115611de957611de86143b4565b5b815260200190815260200160002054905092915050565b60007f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611e735750611e7282612aed565b5b9050919050565b600080611e8683612b4e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ef957826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611ef09190614399565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b611f548383836001612b8b565b505050565b611f61611f3f565b73ffffffffffffffffffffffffffffffffffffffff16611f7f611509565b73ffffffffffffffffffffffffffffffffffffffff1614611fde57611fa2611f3f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611fd591906142aa565b60405180910390fd5b565b600080600042905060005b6012805490508110156120f5576000600381111561200c5761200b6143b4565b5b601282815481106120205761201f614e57565b5b906000526020600020906008020160000160009054906101000a900460ff166003811115612051576120506143b4565b5b1415801561208457506012818154811061206e5761206d614e57565b5b9060005260206000209060080201600201548210155b80156120b557506012818154811061209f5761209e614e57565b5b9060005260206000209060080201600301548211155b156120e85780601282815481106120cf576120ce614e57565b5b9060005260206000209060080201935093505050612131565b8080600101915050611feb565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161212890615724565b60405180910390fd5b9091565b6000612142848484612d50565b90509392505050565b6000612710905090565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6060612251600e7f0000000000000000000000000000000000000000000000000000000000000000612e6d90919063ffffffff16565b905090565b606061228c600f7f0000000000000000000000000000000000000000000000000000000000000000612e6d90919063ffffffff16565b905090565b60008261229e8584612f1d565b1490509392505050565b60006122bb6122b5612a36565b83612f6d565b9050919050565b6000806000806122d28686612fae565b9250925092506122e2828261300a565b82935050505092915050565b6000612710601660009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16836123279190614eec565b6123319190614f5d565b9050600081111561240c5760006016600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516123849061576a565b60006040518083038185875af1925050503d80600081146123c1576040519150601f19603f3d011682016040523d82523d6000602084013e6123c6565b606091505b505090508061240a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612401906157cb565b60405180910390fd5b505b6000818361241a91906157eb565b905060008111156124da57600061242f611509565b73ffffffffffffffffffffffffffffffffffffffff16826040516124529061576a565b60006040518083038185875af1925050503d806000811461248f576040519150601f19603f3d011682016040523d82523d6000602084013e612494565b606091505b50509050806124d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124cf9061586b565b60405180910390fd5b505b505050565b8160060160008154809291906124f49061588b565b9190505550601360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360000160009054906101000a900460ff16600381111561255e5761255d6143b4565b5b60038111156125705761256f6143b4565b5b8152602001908152602001600020600081548092919061258f9061588b565b91905055505050565b6125a2848461316e565b60008282905011156125fd576125fc8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061318c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361267457816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161266b91906142aa565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516127659190614139565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561291c578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016127d19493929190615928565b6020604051808303816000875af192505050801561280d57506040513d601f19601f8201168201806040525081019061280a9190615989565b60015b612891573d806000811461283d576040519150601f19603f3d011682016040523d82523d6000602084013e612842565b606091505b50600081510361288957836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161288091906142aa565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461291a57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161291191906142aa565b60405180910390fd5b505b5050505050565b606061292e82611e7a565b506000600a6000848152602001908152602001600020805461294f90614e26565b80601f016020809104026020016040519081016040528092919081815260200182805461297b90614e26565b80156129c85780601f1061299d576101008083540402835291602001916129c8565b820191906000526020600020905b8154815290600101906020018083116129ab57829003601f168201915b5050505050905060006129d96131e8565b905060008151036129ee578192505050612a31565b600082511115612a23578082604051602001612a0b9291906159f2565b60405160208183030381529060405292505050612a31565b612a2c846131ff565b925050505b919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015612ab257507f000000000000000000000000000000000000000000000000000000000000000046145b15612adf577f00000000000000000000000000000000000000000000000000000000000000009050612aea565b612ae7613268565b90505b90565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612b475750612b46826132fe565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080612bc45750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15612cf8576000612bd484611e7a565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612c3f57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015612c525750612c508184611c32565b155b15612c9457826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401612c8b91906142aa565b60405180910390fd5b8115612cf657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600080612d5e858585613378565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612da257612d9d84613592565b612de1565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612de057612ddf81856135db565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603612e2357612e1e846136c6565b612e62565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612e6157612e608585613797565b5b5b809150509392505050565b606060ff60001b8314612e8a57612e8383613822565b9050612f17565b818054612e9690614e26565b80601f0160208091040260200160405190810160405280929190818152602001828054612ec290614e26565b8015612f0f5780601f10612ee457610100808354040283529160200191612f0f565b820191906000526020600020905b815481529060010190602001808311612ef257829003601f168201915b505050505090505b92915050565b60008082905060005b8451811015612f6257612f5382868381518110612f4657612f45614e57565b5b6020026020010151613896565b91508080600101915050612f26565b508091505092915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060006041845103612ff35760008060006020870151925060408701519150606087015160001a9050612fe5888285856138c1565b955095509550505050613003565b60006002855160001b9250925092505b9250925092565b6000600381111561301e5761301d6143b4565b5b826003811115613031576130306143b4565b5b031561316a576001600381111561304b5761304a6143b4565b5b82600381111561305e5761305d6143b4565b5b03613095576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156130a9576130a86143b4565b5b8260038111156130bc576130bb6143b4565b5b03613101578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016130f89190614399565b60405180910390fd5b600380811115613114576131136143b4565b5b826003811115613127576131266143b4565b5b0361316957806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016131609190614d9c565b60405180910390fd5b5b5050565b6131888282604051806020016040528060008152506139b5565b5050565b80600a600084815260200190815260200160002090816131ac9190615bc2565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516131dc9190614399565b60405180910390a15050565b606060405180602001604052806000815250905090565b606061320a82611e7a565b5060006132156131e8565b905060008151116132355760405180602001604052806000815250613260565b8061323f846139d9565b6040516020016132509291906159f2565b6040516020818303038152906040525b915050919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016132e3959493929190615c94565b60405160208183030381529060405280519060200120905090565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480613371575061337082613aa7565b5b9050919050565b60008061338484612b4e565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146133c6576133c5818486613b89565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461345757613408600085600080612b8b565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146134da576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006135e6836112fa565b90506000600760008481526020019081526020016000205490506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508282146136925760008160008581526020019081526020016000205490508082600085815260200190815260200160002081905550826007600083815260200190815260200160002081905550505b6007600085815260200190815260200160002060009055806000848152602001908152602001600020600090555050505050565b600060016008805490506136da91906157eb565b905060006009600084815260200190815260200160002054905060006008838154811061370a57613709614e57565b5b90600052602060002001549050806008838154811061372c5761372b614e57565b5b90600052602060002001819055508160096000838152602001908152602001600020819055506009600085815260200190815260200160002060009055600880548061377b5761377a615ce7565b5b6001900381819060005260206000200160009055905550505050565b600060016137a4846112fa565b6137ae91906157eb565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b6060600061382f83613c4d565b90506000602067ffffffffffffffff81111561384e5761384d614b6c565b5b6040519080825280601f01601f1916602001820160405280156138805781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008183106138ae576138a98284613c9d565b6138b9565b6138b88383613c9d565b5b905092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156139015760006003859250925092506139ab565b6000600188888888604051600081526020016040526040516139269493929190615d32565b6020604051602081039080840390855afa158015613948573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361399c57600060016000801b935093509350506139ab565b8060008060001b935093509350505b9450945094915050565b6139bf8383613cb4565b6139d46139ca611f3f565b6000858585612772565b505050565b6060600060016139e884613dad565b01905060008167ffffffffffffffff811115613a0757613a06614b6c565b5b6040519080825280601f01601f191660200182016040528015613a395781602001600182028036833780820191505090505b509050600082602001820190505b600115613a9c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581613a9057613a8f614f2e565b5b04945060008503613a47575b819350505050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480613b7257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80613b825750613b8182613f00565b5b9050919050565b613b94838383613f6a565b613c4857600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603613c0957806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401613c009190614399565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401613c3f9291906145b2565b60405180910390fd5b505050565b60008060ff8360001c169050601f811115613c94576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600082600052816020526040600020905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613d265760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401613d1d91906142aa565b60405180910390fd5b6000613d3483836000612135565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614613da85760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401613d9f91906142aa565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613e0b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381613e0157613e00614f2e565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310613e48576d04ee2d6d415b85acef81000000008381613e3e57613e3d614f2e565b5b0492506020810190505b662386f26fc100008310613e7757662386f26fc100008381613e6d57613e6c614f2e565b5b0492506010810190505b6305f5e1008310613ea0576305f5e1008381613e9657613e95614f2e565b5b0492506008810190505b6127108310613ec5576127108381613ebb57613eba614f2e565b5b0492506004810190505b60648310613ee85760648381613ede57613edd614f2e565b5b0492506002810190505b600a8310613ef7576001810190505b80915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561402257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480613fe35750613fe28484611c32565b5b8061402157508273ffffffffffffffffffffffffffffffffffffffff1661400983611f02565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6040518061010001604052806000600381111561404b5761404a6143b4565b5b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6140ce81614099565b81146140d957600080fd5b50565b6000813590506140eb816140c5565b92915050565b6000602082840312156141075761410661408f565b5b6000614115848285016140dc565b91505092915050565b60008115159050919050565b6141338161411e565b82525050565b600060208201905061414e600083018461412a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561418e578082015181840152602081019050614173565b60008484015250505050565b6000601f19601f8301169050919050565b60006141b682614154565b6141c0818561415f565b93506141d0818560208601614170565b6141d98161419a565b840191505092915050565b600060208201905081810360008301526141fe81846141ab565b905092915050565b6000819050919050565b61421981614206565b811461422457600080fd5b50565b60008135905061423681614210565b92915050565b6000602082840312156142525761425161408f565b5b600061426084828501614227565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061429482614269565b9050919050565b6142a481614289565b82525050565b60006020820190506142bf600083018461429b565b92915050565b6142ce81614289565b81146142d957600080fd5b50565b6000813590506142eb816142c5565b92915050565b600080604083850312156143085761430761408f565b5b6000614316858286016142dc565b925050602061432785828601614227565b9150509250929050565b61433a8161411e565b811461434557600080fd5b50565b60008135905061435781614331565b92915050565b6000602082840312156143735761437261408f565b5b600061438184828501614348565b91505092915050565b61439381614206565b82525050565b60006020820190506143ae600083018461438a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106143f4576143f36143b4565b5b50565b6000819050614405826143e3565b919050565b6000614415826143f7565b9050919050565b6144258161440a565b82525050565b61443481614206565b82525050565b6000819050919050565b61444d8161443a565b82525050565b6101008201600082015161446a600085018261441c565b50602082015161447d602085018261442b565b506040820151614490604085018261442b565b5060608201516144a3606085018261442b565b5060808201516144b6608085018261442b565b5060a08201516144c960a085018261442b565b5060c08201516144dc60c085018261442b565b5060e08201516144ef60e0850182614444565b50505050565b60006101208201905061450b600083018561438a565b6145186020830184614453565b9392505050565b6000806000606084860312156145385761453761408f565b5b6000614546868287016142dc565b9350506020614557868287016142dc565b925050604061456886828701614227565b9150509250925092565b600080604083850312156145895761458861408f565b5b600061459785828601614227565b92505060206145a885828601614227565b9150509250929050565b60006040820190506145c7600083018561429b565b6145d4602083018461438a565b9392505050565b6145e48161440a565b82525050565b6145f38161443a565b82525050565b60006101008201905061460f600083018b6145db565b61461c602083018a61438a565b614629604083018961438a565b614636606083018861438a565b614643608083018761438a565b61465060a083018661438a565b61465d60c083018561438a565b61466a60e08301846145ea565b9998505050505050505050565b6004811061468457600080fd5b50565b60008135905061469681614677565b92915050565b6146a58161443a565b81146146b057600080fd5b50565b6000813590506146c28161469c565b92915050565b600080600080600080600060e0888a0312156146e7576146e661408f565b5b60006146f58a828b01614687565b97505060206147068a828b01614227565b96505060406147178a828b01614227565b95505060606147288a828b01614227565b94505060806147398a828b01614227565b93505060a061474a8a828b01614227565b92505060c061475b8a828b016146b3565b91505092959891949750929550565b6000602082840312156147805761477f61408f565b5b600061478e848285016142dc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006147cf838361442b565b60208301905092915050565b6000602082019050919050565b60006147f382614797565b6147fd81856147a2565b9350614808836147b3565b8060005b8381101561483957815161482088826147c3565b975061482b836147db565b92505060018101905061480c565b5085935050505092915050565b6000602082019050818103600083015261486081846147e8565b905092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61489d81614868565b82525050565b600060e0820190506148b8600083018a614894565b81810360208301526148ca81896141ab565b905081810360408301526148de81886141ab565b90506148ed606083018761438a565b6148fa608083018661429b565b61490760a08301856145ea565b81810360c083015261491981846147e8565b905098975050505050505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261494c5761494b614927565b5b8235905067ffffffffffffffff8111156149695761496861492c565b5b60208301915083600182028301111561498557614984614931565b5b9250929050565b60008083601f8401126149a2576149a1614927565b5b8235905067ffffffffffffffff8111156149bf576149be61492c565b5b6020830191508360018202830111156149db576149da614931565b5b9250929050565b60008083601f8401126149f8576149f7614927565b5b8235905067ffffffffffffffff811115614a1557614a1461492c565b5b602083019150836020820283011115614a3157614a30614931565b5b9250929050565b600080600080600080600080600060c08a8c031215614a5a57614a5961408f565b5b6000614a688c828d01614227565b99505060208a013567ffffffffffffffff811115614a8957614a88614094565b5b614a958c828d01614936565b98509850506040614aa88c828d016146b3565b9650506060614ab98c828d01614227565b95505060808a013567ffffffffffffffff811115614ada57614ad9614094565b5b614ae68c828d0161498c565b945094505060a08a013567ffffffffffffffff811115614b0957614b08614094565b5b614b158c828d016149e2565b92509250509295985092959850929598565b60008060408385031215614b3e57614b3d61408f565b5b6000614b4c858286016142dc565b9250506020614b5d85828601614348565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b614ba48261419a565b810181811067ffffffffffffffff82111715614bc357614bc2614b6c565b5b80604052505050565b6000614bd6614085565b9050614be28282614b9b565b919050565b600067ffffffffffffffff821115614c0257614c01614b6c565b5b614c0b8261419a565b9050602081019050919050565b82818337600083830152505050565b6000614c3a614c3584614be7565b614bcc565b905082815260208101848484011115614c5657614c55614b67565b5b614c61848285614c18565b509392505050565b600082601f830112614c7e57614c7d614927565b5b8135614c8e848260208601614c27565b91505092915050565b60008060008060808587031215614cb157614cb061408f565b5b6000614cbf878288016142dc565b9450506020614cd0878288016142dc565b9350506040614ce187828801614227565b925050606085013567ffffffffffffffff811115614d0257614d01614094565b5b614d0e87828801614c69565b91505092959194509250565b60006bffffffffffffffffffffffff82169050919050565b614d3b81614d1a565b82525050565b6000602082019050614d566000830184614d32565b92915050565b60008060408385031215614d7357614d7261408f565b5b6000614d81858286016142dc565b9250506020614d92858286016142dc565b9150509250929050565b6000602082019050614db160008301846145ea565b92915050565b60008060408385031215614dce57614dcd61408f565b5b6000614ddc858286016142dc565b9250506020614ded85828601614687565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680614e3e57607f821691505b602082108103614e5157614e50614df7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000606082019050614e9b600083018661429b565b614ea8602083018561438a565b614eb5604083018461429b565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614ef782614206565b9150614f0283614206565b9250828202614f1081614206565b91508282048414831517614f2757614f26614ebd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614f6882614206565b9150614f7383614206565b925082614f8357614f82614f2e565b5b828204905092915050565b7f496e76616c69642074696d652072616e67650000000000000000000000000000600082015250565b6000614fc460128361415f565b9150614fcf82614f8e565b602082019050919050565b60006020820190508181036000830152614ff381614fb7565b9050919050565b7f496e76616c6964206d6178207065722077616c6c657420666f72206e6f6e2d7060008201527f75626c6963207068617365000000000000000000000000000000000000000000602082015250565b6000615056602b8361415f565b915061506182614ffa565b604082019050919050565b6000602082019050818103600083015261508581615049565b9050919050565b7f4d65726b6c6520726f6f7420726571756972656420666f722077686974656c6960008201527f7374207068617365000000000000000000000000000000000000000000000000602082015250565b60006150e860288361415f565b91506150f38261508c565b604082019050919050565b60006020820190508181036000830152615117816150db565b9050919050565b7f50686173652074696d65206f7665726c6170732077697468206578697374696e60008201527f6720706861736500000000000000000000000000000000000000000000000000602082015250565b600061517a60278361415f565b91506151858261511e565b604082019050919050565b600060208201905081810360008301526151a98161516d565b9050919050565b60006040820190506151c560008301856145db565b6151d2602083018461438a565b9392505050565b7f436f6e7472616374206973207061757365640000000000000000000000000000600082015250565b600061520f60128361415f565b915061521a826151d9565b602082019050919050565b6000602082019050818103600083015261523e81615202565b9050919050565b60008160601b9050919050565b600061525d82615245565b9050919050565b600061526f82615252565b9050919050565b61528761528282614289565b615264565b82525050565b60006152998284615276565b60148201915081905092915050565b7f4e6f742077686974656c697374656420666f7220746869732070686173650000600082015250565b60006152de601e8361415f565b91506152e9826152a8565b602082019050919050565b6000602082019050818103600083015261530d816152d1565b9050919050565b600061531f82614206565b915061532a83614206565b925082820190508082111561534257615341614ebd565b5b92915050565b7f5369676e61747572652065787069726564000000000000000000000000000000600082015250565b600061537e60118361415f565b915061538982615348565b602082019050919050565b600060208201905081810360008301526153ad81615371565b9050919050565b7f5369676e617475726520616c7265616479207573656400000000000000000000600082015250565b60006153ea60168361415f565b91506153f5826153b4565b602082019050919050565b60006020820190508181036000830152615419816153dd565b9050919050565b600081905092915050565b60006154378385615420565b9350615444838584614c18565b82840190509392505050565b600061545d82848661542b565b91508190509392505050565b60006101008201905061547f600083018b6145ea565b61548c602083018a61429b565b615499604083018961438a565b6154a660608301886145ea565b6154b3608083018761438a565b6154c060a083018661438a565b6154cd60c08301856145ea565b6154da60e083018461438a565b9998505050505050505050565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b600061551d60118361415f565b9150615528826154e7565b602082019050919050565b6000602082019050818103600083015261554c81615510565b9050919050565b7f496e636f7272656374207061796d656e7420616d6f756e740000000000000000600082015250565b600061558960188361415f565b915061559482615553565b602082019050919050565b600060208201905081810360008301526155b88161557c565b9050919050565b7f506861736520737570706c79206c696d69742072656163686564000000000000600082015250565b60006155f5601a8361415f565b9150615600826155bf565b602082019050919050565b60006020820190508181036000830152615624816155e8565b9050919050565b7f57616c6c6574206c696d6974207265616368656420666f72207468697320706860008201527f6173650000000000000000000000000000000000000000000000000000000000602082015250565b600061568760238361415f565b91506156928261562b565b604082019050919050565b600060208201905081810360008301526156b68161567a565b9050919050565b60006020820190506156d260008301846145db565b92915050565b7f4e6f206163746976652070686173650000000000000000000000000000000000600082015250565b600061570e600f8361415f565b9150615719826156d8565b602082019050919050565b6000602082019050818103600083015261573d81615701565b9050919050565b50565b6000615754600083615420565b915061575f82615744565b600082019050919050565b600061577582615747565b9150819050919050565b7f506c6174666f726d20666565207472616e73666572206661696c656400000000600082015250565b60006157b5601c8361415f565b91506157c08261577f565b602082019050919050565b600060208201905081810360008301526157e4816157a8565b9050919050565b60006157f682614206565b915061580183614206565b925082820390508181111561581957615818614ebd565b5b92915050565b7f4f776e657220666565207472616e73666572206661696c656400000000000000600082015250565b600061585560198361415f565b91506158608261581f565b602082019050919050565b6000602082019050818103600083015261588481615848565b9050919050565b600061589682614206565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036158c8576158c7614ebd565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60006158fa826158d3565b61590481856158de565b9350615914818560208601614170565b61591d8161419a565b840191505092915050565b600060808201905061593d600083018761429b565b61594a602083018661429b565b615957604083018561438a565b818103606083015261596981846158ef565b905095945050505050565b600081519050615983816140c5565b92915050565b60006020828403121561599f5761599e61408f565b5b60006159ad84828501615974565b91505092915050565b600081905092915050565b60006159cc82614154565b6159d681856159b6565b93506159e6818560208601614170565b80840191505092915050565b60006159fe82856159c1565b9150615a0a82846159c1565b91508190509392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302615a787fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82615a3b565b615a828683615a3b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000615abf615aba615ab584614206565b615a9a565b614206565b9050919050565b6000819050919050565b615ad983615aa4565b615aed615ae582615ac6565b848454615a48565b825550505050565b600090565b615b02615af5565b615b0d818484615ad0565b505050565b5b81811015615b3157615b26600082615afa565b600181019050615b13565b5050565b601f821115615b7657615b4781615a16565b615b5084615a2b565b81016020851015615b5f578190505b615b73615b6b85615a2b565b830182615b12565b50505b505050565b600082821c905092915050565b6000615b9960001984600802615b7b565b1980831691505092915050565b6000615bb28383615b88565b9150826002028217905092915050565b615bcb82614154565b67ffffffffffffffff811115615be457615be3614b6c565b5b615bee8254614e26565b615bf9828285615b35565b600060209050601f831160018114615c2c5760008415615c1a578287015190505b615c248582615ba6565b865550615c8c565b601f198416615c3a86615a16565b60005b82811015615c6257848901518255600182019150602085019450602081019050615c3d565b86831015615c7f5784890151615c7b601f891682615b88565b8355505b6001600288020188555050505b505050505050565b600060a082019050615ca960008301886145ea565b615cb660208301876145ea565b615cc360408301866145ea565b615cd0606083018561438a565b615cdd608083018461429b565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060ff82169050919050565b615d2c81615d16565b82525050565b6000608082019050615d4760008301876145ea565b615d546020830186615d23565b615d6160408301856145ea565b615d6e60608301846145ea565b9594505050505056fea2646970667358221220e9847820716ef69489f4cf093adce8503c3ed7ca76e1b16561ebc7586dee6ba664736f6c634300081b0033","opcodes":"PUSH2 0x1A0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6E4A CODESIZE SUB DUP1 PUSH2 0x6E4A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x33 SWAP2 SWAP1 PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E69666965644E465400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP9 DUP9 DUP9 DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x145 DUP2 PUSH2 0x47F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15A PUSH1 0xE DUP4 PUSH2 0x545 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x176 PUSH1 0xF DUP3 PUSH2 0x545 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x1B3 PUSH2 0x595 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x3E8 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x220 JUMPI POP PUSH2 0x3E8 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x259 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x292 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x180 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x16 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x37A DUP8 PUSH2 0x180 MLOAD PUSH2 0x5F0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x12 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x39C JUMPI PUSH2 0x39B PUSH2 0xE22 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x426 JUMPI PUSH2 0x425 PUSH2 0xE22 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE POP POP POP POP POP POP POP POP POP PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x567 JUMPI PUSH2 0x560 DUP4 PUSH2 0x798 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x58F JUMP JUMPDEST DUP3 PUSH2 0x577 DUP4 PUSH2 0x800 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5D5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 PUSH2 0x80A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x665 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x6F483D0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP3 SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xB6D9900A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x7E5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x7F1 SWAP1 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x853 DUP3 PUSH2 0x828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x863 DUP2 PUSH2 0x848 JUMP JUMPDEST DUP2 EQ PUSH2 0x86E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x880 DUP2 PUSH2 0x85A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8D9 DUP3 PUSH2 0x890 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F7 PUSH2 0x8A1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90B PUSH2 0x814 JUMP JUMPDEST SWAP1 POP PUSH2 0x917 DUP3 DUP3 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x937 JUMPI PUSH2 0x936 PUSH2 0x8A1 JUMP JUMPDEST JUMPDEST PUSH2 0x940 DUP3 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x96B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x950 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98A PUSH2 0x985 DUP5 PUSH2 0x91C JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x9A6 JUMPI PUSH2 0x9A5 PUSH2 0x88B JUMP JUMPDEST JUMPDEST PUSH2 0x9B1 DUP5 DUP3 DUP6 PUSH2 0x94D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9CE JUMPI PUSH2 0x9CD PUSH2 0x886 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x9DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x977 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0x9E7 JUMP JUMPDEST DUP2 EQ PUSH2 0xA13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA25 DUP2 PUSH2 0x9FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xA4A JUMPI PUSH2 0xA49 PUSH2 0x81E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA58 DUP11 DUP3 DUP12 ADD PUSH2 0x871 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA79 JUMPI PUSH2 0xA78 PUSH2 0x823 JUMP JUMPDEST JUMPDEST PUSH2 0xA85 DUP11 DUP3 DUP12 ADD PUSH2 0x9B9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0x823 JUMP JUMPDEST JUMPDEST PUSH2 0xAB2 DUP11 DUP3 DUP12 ADD PUSH2 0x9B9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xAC3 DUP11 DUP3 DUP12 ADD PUSH2 0xA16 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xAD4 DUP11 DUP3 DUP12 ADD PUSH2 0xA16 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xAE5 DUP11 DUP3 DUP12 ADD PUSH2 0x871 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xAF6 DUP11 DUP3 DUP12 ADD PUSH2 0x871 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xB57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0xB10 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xBD2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0xBDC DUP7 DUP4 PUSH2 0xB95 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC23 PUSH2 0xC1E PUSH2 0xC19 DUP5 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH2 0xBF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3D DUP4 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0xC51 PUSH2 0xC49 DUP3 PUSH2 0xC2A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xBA2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xC66 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xC71 DUP2 DUP5 DUP5 PUSH2 0xC34 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC8A PUSH1 0x0 DUP3 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC77 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xCDA JUMPI PUSH2 0xCAB DUP2 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0xCB4 DUP5 PUSH2 0xB85 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xCC3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xCD7 PUSH2 0xCCF DUP6 PUSH2 0xB85 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xC76 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xCDF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD16 DUP4 DUP4 PUSH2 0xCEC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD2F DUP3 PUSH2 0xB05 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD48 JUMPI PUSH2 0xD47 PUSH2 0x8A1 JUMP JUMPDEST JUMPDEST PUSH2 0xD52 DUP3 SLOAD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0xD5D DUP3 DUP3 DUP6 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD90 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xD7E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xD88 DUP6 DUP3 PUSH2 0xD0A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xD9E DUP7 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDC6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDA1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xDE3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xDDF PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xCEC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE01 DUP2 PUSH2 0x848 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE1C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0xE51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE73 DUP2 PUSH2 0xBF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xE8E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xE5B JUMP JUMPDEST PUSH2 0xE9B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xE5B JUMP JUMPDEST PUSH2 0xEA8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xE5B JUMP JUMPDEST PUSH2 0xEB5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0xEC2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE7 PUSH2 0xEE2 PUSH2 0xEDD DUP5 PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH2 0xBF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF7 DUP2 PUSH2 0xECC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF12 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0xF1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF42 DUP3 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0xF4C DUP2 DUP6 PUSH2 0xF26 JUMP JUMPDEST SWAP4 POP PUSH2 0xF5C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x94D JUMP JUMPDEST PUSH2 0xF65 DUP2 PUSH2 0x890 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8A DUP2 DUP5 PUSH2 0xF37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB9 DUP3 MLOAD PUSH2 0xE51 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCD DUP3 PUSH2 0xF92 JUMP JUMPDEST DUP3 PUSH2 0xFD7 DUP5 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP PUSH2 0xFE2 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x1022 JUMPI PUSH2 0x101D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0xB95 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x5DAD PUSH2 0x109D PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x0 DUP2 DUP2 PUSH2 0x12D8 ADD MSTORE PUSH2 0x17B8 ADD MSTORE PUSH1 0x0 PUSH2 0x225F ADD MSTORE PUSH1 0x0 PUSH2 0x2224 ADD MSTORE PUSH1 0x0 PUSH2 0x32AE ADD MSTORE PUSH1 0x0 PUSH2 0x328D ADD MSTORE PUSH1 0x0 PUSH2 0x2A3A ADD MSTORE PUSH1 0x0 PUSH2 0x2A90 ADD MSTORE PUSH1 0x0 PUSH2 0x2AB9 ADD MSTORE PUSH2 0x5DAD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xEB13554F EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x838 JUMPI DUP1 PUSH4 0xF7330C2D EQ PUSH2 0x861 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x712 JUMPI DUP1 PUSH4 0xCDD78CFC EQ PUSH2 0x74F JUMPI DUP1 PUSH4 0xDB5E0063 EQ PUSH2 0x77A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x8FF75E82 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x6BE JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x5F2 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x57036078 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x65D65E86 EQ PUSH2 0x536 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x2E37EEF6 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x42D JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x1CE97FD1 EQ PUSH2 0x356 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x72A1319 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x29C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x40F1 JUMP JUMPDEST PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x41E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x42F1 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x435D JUMP JUMPDEST PUSH2 0xA6E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36B PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP3 SWAP2 SWAP1 PUSH2 0x44F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x451F JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x4572 JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP3 SWAP2 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x42F1 JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x451F JUMP JUMPDEST PUSH2 0xE8A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x46C8 JUMP JUMPDEST PUSH2 0xF20 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x520 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54B PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x588 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x476A JUMP JUMPDEST PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B3 PUSH2 0x13B4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x476A JUMP JUMPDEST PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x4846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x607 PUSH2 0x145F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x638 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x4A38 JUMP JUMPDEST PUSH2 0x1533 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x41E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x4B27 JUMP JUMPDEST PUSH2 0x1BA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D3 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x710 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x4C97 JUMP JUMPDEST PUSH2 0x1BD0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x739 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x734 SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x41E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x764 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x4D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78F PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x4D5C JUMP JUMPDEST PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F7 PUSH2 0x1CC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x822 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x4D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x476A JUMP JUMPDEST PUSH2 0x1CFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x888 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x4DB7 JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x895 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8A9 DUP3 PUSH2 0x1E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x8BF SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8EB SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x938 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x90D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x938 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x91B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x96C JUMPI PUSH2 0x96B PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x12 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x980 JUMPI PUSH2 0x97F PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x9E4 JUMPI POP PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9CE JUMPI PUSH2 0x9CD PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA15 JUMPI POP PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9FF JUMPI PUSH2 0x9FE PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0xA25 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xA39 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA47 DUP3 PUSH2 0x1E7A JUMP JUMPDEST POP PUSH2 0xA51 DUP3 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6A DUP3 DUP3 PUSH2 0xA65 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x1F47 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA76 PUSH2 0x1F59 JUMP JUMPDEST DUP1 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAA PUSH2 0x402B JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0x1FE0 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAE4 JUMPI PUSH2 0xAE3 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAF6 JUMPI PUSH2 0xAF5 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBBC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBD0 DUP4 DUP4 PUSH2 0xBCB PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x2135 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2D JUMPI PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xD37 PUSH2 0x214B JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x4EEC JUMP JUMPDEST PUSH2 0xD69 SWAP2 SWAP1 PUSH2 0x4F5D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEC DUP4 PUSH2 0x12FA JUMP JUMPDEST DUP3 LT PUSH2 0xE31 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP3 SWAP2 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BD0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB4 PUSH2 0xA93 JUMP JUMPDEST DUP3 LT PUSH2 0xEFA JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF1 SWAP3 SWAP2 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF0E JUMPI PUSH2 0xF0D PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF28 PUSH2 0x1F59 JUMP JUMPDEST DUP4 DUP6 LT PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF61 SWAP1 PUSH2 0x4FDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF91 JUMPI PUSH2 0xF90 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x101F JUMPI PUSH1 0x0 DUP3 GT PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD0 SWAP1 PUSH2 0x506C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x101E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x50FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x117F JUMPI PUSH1 0x0 PUSH1 0x12 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1084 JUMPI PUSH2 0x1083 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1096 JUMPI PUSH2 0x1095 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10F5 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1118 JUMPI POP PUSH2 0x1172 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP8 GT ISZERO DUP1 ISZERO PUSH2 0x1130 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP7 LT ISZERO JUMPDEST ISZERO PUSH2 0x1170 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1167 SWAP1 PUSH2 0x5190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1022 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11A1 JUMPI PUSH2 0x11A0 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x12 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x12 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1232 JUMPI PUSH2 0x1231 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE POP POP DUP1 PUSH32 0x7673E4939433531841B3EE155CFB41D74036F1741ED20BA7C3ED88D66A289551 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x12B1 SWAP3 SWAP2 SWAP1 PUSH2 0x51B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CF DUP3 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1364 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BC PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x13C6 PUSH1 0x0 PUSH2 0x2155 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1453 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x143F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x1473 PUSH2 0x221B JUMP JUMPDEST PUSH2 0x147B PUSH2 0x2256 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x149C JUMPI PUSH2 0x149B PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1583 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157A SWAP1 PUSH2 0x5225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x158E PUSH2 0x1FE0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15A6 JUMPI PUSH2 0x15A5 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15CA JUMPI PUSH2 0x15C9 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1685 JUMPI PUSH2 0x1645 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH1 0x7 ADD SLOAD CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x162A SWAP2 SWAP1 PUSH2 0x528D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x1684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167B SWAP1 PUSH2 0x52F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST TIMESTAMP PUSH2 0xE10 DUP9 PUSH2 0x1694 SWAP2 SWAP1 PUSH2 0x5314 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x16A2 JUMPI POP TIMESTAMP DUP8 GT ISZERO JUMPDEST PUSH2 0x16E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D8 SWAP1 PUSH2 0x5394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1742 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1739 SWAP1 PUSH2 0x5400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xBCD57119BF9B3F112B39ECFB926B57BABF8EA759EF8FB8F953EC0103B2A187F3 CALLER DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1777 SWAP3 SWAP2 SWAP1 PUSH2 0x5450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 PUSH1 0x1 ADD SLOAD DUP8 DUP15 DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x179E SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184C DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x183E DUP5 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x22C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1899 SWAP1 PUSH2 0x5533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD CALLVALUE EQ PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DF SWAP1 PUSH2 0x559F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x4 ADD SLOAD EQ DUP1 PUSH2 0x1902 JUMPI POP DUP2 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x6 ADD SLOAD LT JUMPDEST PUSH2 0x1941 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1938 SWAP1 PUSH2 0x560B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1979 JUMPI PUSH2 0x1978 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x198A JUMPI POP PUSH1 0x0 DUP3 PUSH1 0x5 ADD SLOAD EQ JUMPDEST DUP1 PUSH2 0x1A1D JUMPI POP DUP2 PUSH1 0x5 ADD SLOAD PUSH1 0x13 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A0C JUMPI PUSH2 0x1A0B PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT JUMPDEST PUSH2 0x1A5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A53 SWAP1 PUSH2 0x569D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A91 CALLVALUE PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x1A9B DUP3 CALLER PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x1AA7 CALLER DUP14 DUP14 DUP14 PUSH2 0x2598 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH32 0x99F38CF3FEAAD38E0A2E22EF51BDD4FABA32B432520A951248D77057596A425A DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1AFF SWAP2 SWAP1 PUSH2 0x56BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1B24 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B50 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B72 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BB9 PUSH2 0x1BB2 PUSH2 0x1F3F JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2603 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1BDB DUP5 DUP5 DUP5 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x1BEF PUSH2 0x1BE6 PUSH2 0x1F3F JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2772 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C00 DUP3 PUSH2 0x2923 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 PUSH2 0x2A36 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D03 PUSH2 0x1F59 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6C SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D7E DUP2 PUSH2 0x2155 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DD7 JUMPI PUSH2 0x1DD6 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1E73 JUMPI POP PUSH2 0x1E72 DUP3 PUSH2 0x2AED JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E86 DUP4 PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EF9 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF0 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F54 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2B8B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F61 PUSH2 0x1F3F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F7F PUSH2 0x1509 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FDE JUMPI PUSH2 0x1FA2 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD5 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x200C JUMPI PUSH2 0x200B PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x12 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2020 JUMPI PUSH2 0x201F PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2051 JUMPI PUSH2 0x2050 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2084 JUMPI POP PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x206E JUMPI PUSH2 0x206D PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x20B5 JUMPI POP PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x209F JUMPI PUSH2 0x209E PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0x20E8 JUMPI DUP1 PUSH1 0x12 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x20CF JUMPI PUSH2 0x20CE PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD SWAP4 POP SWAP4 POP POP POP PUSH2 0x2131 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1FEB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2128 SWAP1 PUSH2 0x5724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2142 DUP5 DUP5 DUP5 PUSH2 0x2D50 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2251 PUSH1 0xE PUSH32 0x0 PUSH2 0x2E6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x228C PUSH1 0xF PUSH32 0x0 PUSH2 0x2E6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x229E DUP6 DUP5 PUSH2 0x2F1D JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BB PUSH2 0x22B5 PUSH2 0x2A36 JUMP JUMPDEST DUP4 PUSH2 0x2F6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x22D2 DUP7 DUP7 PUSH2 0x2FAE JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x22E2 DUP3 DUP3 PUSH2 0x300A JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2327 SWAP2 SWAP1 PUSH2 0x4EEC JUMP JUMPDEST PUSH2 0x2331 SWAP2 SWAP1 PUSH2 0x4F5D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x240C JUMPI PUSH1 0x0 PUSH1 0x16 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2384 SWAP1 PUSH2 0x576A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x240A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2401 SWAP1 PUSH2 0x57CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x241A SWAP2 SWAP1 PUSH2 0x57EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x24DA JUMPI PUSH1 0x0 PUSH2 0x242F PUSH2 0x1509 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2452 SWAP1 PUSH2 0x576A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x248F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2494 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x24D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24CF SWAP1 PUSH2 0x586B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x24F4 SWAP1 PUSH2 0x588B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x13 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x255E JUMPI PUSH2 0x255D PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2570 JUMPI PUSH2 0x256F PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x258F SWAP1 PUSH2 0x588B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x25A2 DUP5 DUP5 PUSH2 0x316E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT ISZERO PUSH2 0x25FD JUMPI PUSH2 0x25FC DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x318C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2674 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266B SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2765 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x291C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5928 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x280D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x280A SWAP2 SWAP1 PUSH2 0x5989 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2891 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x283D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2889 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2880 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x291A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2911 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x292E DUP3 PUSH2 0x1E7A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x294F SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x297B SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x299D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x29D9 PUSH2 0x31E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x29EE JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2A23 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A0B SWAP3 SWAP2 SWAP1 PUSH2 0x59F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x2A2C DUP5 PUSH2 0x31FF JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2AB2 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x2ADF JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0x3268 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2B47 JUMPI POP PUSH2 0x2B46 DUP3 PUSH2 0x32FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2BC4 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2CF8 JUMPI PUSH1 0x0 PUSH2 0x2BD4 DUP5 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2C3F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2C52 JUMPI POP PUSH2 0x2C50 DUP2 DUP5 PUSH2 0x1C32 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2C94 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C8B SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2CF6 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D5E DUP6 DUP6 DUP6 PUSH2 0x3378 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DA2 JUMPI PUSH2 0x2D9D DUP5 PUSH2 0x3592 JUMP JUMPDEST PUSH2 0x2DE1 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DE0 JUMPI PUSH2 0x2DDF DUP2 DUP6 PUSH2 0x35DB JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E23 JUMPI PUSH2 0x2E1E DUP5 PUSH2 0x36C6 JUMP JUMPDEST PUSH2 0x2E62 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E61 JUMPI PUSH2 0x2E60 DUP6 DUP6 PUSH2 0x3797 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x2E8A JUMPI PUSH2 0x2E83 DUP4 PUSH2 0x3822 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F17 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x2E96 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EC2 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F0F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EE4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F0F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EF2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2F62 JUMPI PUSH2 0x2F53 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2F46 JUMPI PUSH2 0x2F45 PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3896 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2F26 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2FF3 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2FE5 DUP9 DUP3 DUP6 DUP6 PUSH2 0x38C1 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x3003 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x301E JUMPI PUSH2 0x301D PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3031 JUMPI PUSH2 0x3030 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x316A JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x304B JUMPI PUSH2 0x304A PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x305E JUMPI PUSH2 0x305D PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3095 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30A9 JUMPI PUSH2 0x30A8 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30BC JUMPI PUSH2 0x30BB PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3101 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F8 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x3114 JUMPI PUSH2 0x3113 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3127 JUMPI PUSH2 0x3126 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3169 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3160 SWAP2 SWAP1 PUSH2 0x4D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3188 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x39B5 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x31AC SWAP2 SWAP1 PUSH2 0x5BC2 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x31DC SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x320A DUP3 PUSH2 0x1E7A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3215 PUSH2 0x31E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3235 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3260 JUMP JUMPDEST DUP1 PUSH2 0x323F DUP5 PUSH2 0x39D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3250 SWAP3 SWAP2 SWAP1 PUSH2 0x59F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x32E3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5C94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3371 JUMPI POP PUSH2 0x3370 DUP3 PUSH2 0x3AA7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3384 DUP5 PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33C6 JUMPI PUSH2 0x33C5 DUP2 DUP5 DUP7 PUSH2 0x3B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3457 JUMPI PUSH2 0x3408 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2B8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x34DA JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E6 DUP4 PUSH2 0x12FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP3 EQ PUSH2 0x3692 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x36DA SWAP2 SWAP1 PUSH2 0x57EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x370A JUMPI PUSH2 0x3709 PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x372C JUMPI PUSH2 0x372B PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x377B JUMPI PUSH2 0x377A PUSH2 0x5CE7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x37A4 DUP5 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x37AE SWAP2 SWAP1 PUSH2 0x57EB JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x382F DUP4 PUSH2 0x3C4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x384E JUMPI PUSH2 0x384D PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3880 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x38AE JUMPI PUSH2 0x38A9 DUP3 DUP5 PUSH2 0x3C9D JUMP JUMPDEST PUSH2 0x38B9 JUMP JUMPDEST PUSH2 0x38B8 DUP4 DUP4 PUSH2 0x3C9D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3901 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x39AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3926 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5D32 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3948 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x399C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x39AB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39BF DUP4 DUP4 PUSH2 0x3CB4 JUMP JUMPDEST PUSH2 0x39D4 PUSH2 0x39CA PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2772 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x39E8 DUP5 PUSH2 0x3DAD JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A07 JUMPI PUSH2 0x3A06 PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A39 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3A9C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x3A90 JUMPI PUSH2 0x3A8F PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3A47 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3B72 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3B82 JUMPI POP PUSH2 0x3B81 DUP3 PUSH2 0x3F00 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B94 DUP4 DUP4 DUP4 PUSH2 0x3F6A JUMP JUMPDEST PUSH2 0x3C48 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C09 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C00 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3F SWAP3 SWAP2 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x3C94 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D26 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D1D SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D34 DUP4 DUP4 PUSH1 0x0 PUSH2 0x2135 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3DA8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D9F SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3E0B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3E01 JUMPI PUSH2 0x3E00 PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3E48 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x3E3E JUMPI PUSH2 0x3E3D PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3E77 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x3E6D JUMPI PUSH2 0x3E6C PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3EA0 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3E96 JUMPI PUSH2 0x3E95 PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3EC5 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3EBB JUMPI PUSH2 0x3EBA PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3EE8 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x3EDE JUMPI PUSH2 0x3EDD PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3EF7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4022 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3FE3 JUMPI POP PUSH2 0x3FE2 DUP5 DUP5 PUSH2 0x1C32 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x4021 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4009 DUP4 PUSH2 0x1F02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x404B JUMPI PUSH2 0x404A PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40CE DUP2 PUSH2 0x4099 JUMP JUMPDEST DUP2 EQ PUSH2 0x40D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40EB DUP2 PUSH2 0x40C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4107 JUMPI PUSH2 0x4106 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4115 DUP5 DUP3 DUP6 ADD PUSH2 0x40DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4133 DUP2 PUSH2 0x411E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x414E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x412A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x418E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4173 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B6 DUP3 PUSH2 0x4154 JUMP JUMPDEST PUSH2 0x41C0 DUP2 DUP6 PUSH2 0x415F JUMP JUMPDEST SWAP4 POP PUSH2 0x41D0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4170 JUMP JUMPDEST PUSH2 0x41D9 DUP2 PUSH2 0x419A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41FE DUP2 DUP5 PUSH2 0x41AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4219 DUP2 PUSH2 0x4206 JUMP JUMPDEST DUP2 EQ PUSH2 0x4224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4236 DUP2 PUSH2 0x4210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4252 JUMPI PUSH2 0x4251 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4260 DUP5 DUP3 DUP6 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4294 DUP3 PUSH2 0x4269 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A4 DUP2 PUSH2 0x4289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x42BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x429B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42CE DUP2 PUSH2 0x4289 JUMP JUMPDEST DUP2 EQ PUSH2 0x42D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42EB DUP2 PUSH2 0x42C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4308 JUMPI PUSH2 0x4307 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4316 DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4327 DUP6 DUP3 DUP7 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x433A DUP2 PUSH2 0x411E JUMP JUMPDEST DUP2 EQ PUSH2 0x4345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4357 DUP2 PUSH2 0x4331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4373 JUMPI PUSH2 0x4372 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4381 DUP5 DUP3 DUP6 ADD PUSH2 0x4348 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4393 DUP2 PUSH2 0x4206 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x43AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x438A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x43F4 JUMPI PUSH2 0x43F3 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4405 DUP3 PUSH2 0x43E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4415 DUP3 PUSH2 0x43F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4425 DUP2 PUSH2 0x440A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4434 DUP2 PUSH2 0x4206 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x444D DUP2 PUSH2 0x443A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x446A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x441C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x447D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4490 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x44A3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x44B6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x44C9 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x44DC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x44EF PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x4444 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x450B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4518 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4453 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4538 JUMPI PUSH2 0x4537 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4546 DUP7 DUP3 DUP8 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4557 DUP7 DUP3 DUP8 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4568 DUP7 DUP3 DUP8 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4589 JUMPI PUSH2 0x4588 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4597 DUP6 DUP3 DUP7 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x45A8 DUP6 DUP3 DUP7 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x45C7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x45D4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x438A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x45E4 DUP2 PUSH2 0x440A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x45F3 DUP2 PUSH2 0x443A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x460F PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x45DB JUMP JUMPDEST PUSH2 0x461C PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4629 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4636 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4643 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4650 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x465D PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x466A PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x45EA JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x4684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4696 DUP2 PUSH2 0x4677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46A5 DUP2 PUSH2 0x443A JUMP JUMPDEST DUP2 EQ PUSH2 0x46B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46C2 DUP2 PUSH2 0x469C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x46E7 JUMPI PUSH2 0x46E6 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46F5 DUP11 DUP3 DUP12 ADD PUSH2 0x4687 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x4706 DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x4717 DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x4728 DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4739 DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x474A DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x475B DUP11 DUP3 DUP12 ADD PUSH2 0x46B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4780 JUMPI PUSH2 0x477F PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x478E DUP5 DUP3 DUP6 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47CF DUP4 DUP4 PUSH2 0x442B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F3 DUP3 PUSH2 0x4797 JUMP JUMPDEST PUSH2 0x47FD DUP2 DUP6 PUSH2 0x47A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x4808 DUP4 PUSH2 0x47B3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4839 JUMPI DUP2 MLOAD PUSH2 0x4820 DUP9 DUP3 PUSH2 0x47C3 JUMP JUMPDEST SWAP8 POP PUSH2 0x482B DUP4 PUSH2 0x47DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x480C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4860 DUP2 DUP5 PUSH2 0x47E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x489D DUP2 PUSH2 0x4868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x48B8 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x4894 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x48CA DUP2 DUP10 PUSH2 0x41AB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x48DE DUP2 DUP9 PUSH2 0x41AB JUMP JUMPDEST SWAP1 POP PUSH2 0x48ED PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x48FA PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x4907 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x45EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4919 DUP2 DUP5 PUSH2 0x47E8 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x494C JUMPI PUSH2 0x494B PUSH2 0x4927 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4969 JUMPI PUSH2 0x4968 PUSH2 0x492C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4985 JUMPI PUSH2 0x4984 PUSH2 0x4931 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x49A2 JUMPI PUSH2 0x49A1 PUSH2 0x4927 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49BF JUMPI PUSH2 0x49BE PUSH2 0x492C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x49DB JUMPI PUSH2 0x49DA PUSH2 0x4931 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x49F8 JUMPI PUSH2 0x49F7 PUSH2 0x4927 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A15 JUMPI PUSH2 0x4A14 PUSH2 0x492C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4A31 JUMPI PUSH2 0x4A30 PUSH2 0x4931 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4A5A JUMPI PUSH2 0x4A59 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A68 DUP13 DUP3 DUP14 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A89 JUMPI PUSH2 0x4A88 PUSH2 0x4094 JUMP JUMPDEST JUMPDEST PUSH2 0x4A95 DUP13 DUP3 DUP14 ADD PUSH2 0x4936 JUMP JUMPDEST SWAP9 POP SWAP9 POP POP PUSH1 0x40 PUSH2 0x4AA8 DUP13 DUP3 DUP14 ADD PUSH2 0x46B3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x4AB9 DUP13 DUP3 DUP14 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4ADA JUMPI PUSH2 0x4AD9 PUSH2 0x4094 JUMP JUMPDEST JUMPDEST PUSH2 0x4AE6 DUP13 DUP3 DUP14 ADD PUSH2 0x498C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B09 JUMPI PUSH2 0x4B08 PUSH2 0x4094 JUMP JUMPDEST JUMPDEST PUSH2 0x4B15 DUP13 DUP3 DUP14 ADD PUSH2 0x49E2 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B3E JUMPI PUSH2 0x4B3D PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B4C DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4B5D DUP6 DUP3 DUP7 ADD PUSH2 0x4348 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4BA4 DUP3 PUSH2 0x419A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4BC3 JUMPI PUSH2 0x4BC2 PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD6 PUSH2 0x4085 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BE2 DUP3 DUP3 PUSH2 0x4B9B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C02 JUMPI PUSH2 0x4C01 PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH2 0x4C0B DUP3 PUSH2 0x419A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C3A PUSH2 0x4C35 DUP5 PUSH2 0x4BE7 JUMP JUMPDEST PUSH2 0x4BCC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4C56 JUMPI PUSH2 0x4C55 PUSH2 0x4B67 JUMP JUMPDEST JUMPDEST PUSH2 0x4C61 DUP5 DUP3 DUP6 PUSH2 0x4C18 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4C7E JUMPI PUSH2 0x4C7D PUSH2 0x4927 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4C8E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4C27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4CB1 JUMPI PUSH2 0x4CB0 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CBF DUP8 DUP3 DUP9 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4CD0 DUP8 DUP3 DUP9 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4CE1 DUP8 DUP3 DUP9 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D02 JUMPI PUSH2 0x4D01 PUSH2 0x4094 JUMP JUMPDEST JUMPDEST PUSH2 0x4D0E DUP8 DUP3 DUP9 ADD PUSH2 0x4C69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D3B DUP2 PUSH2 0x4D1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D56 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D73 JUMPI PUSH2 0x4D72 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D81 DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4D92 DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4DB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4DCE JUMPI PUSH2 0x4DCD PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4DDC DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4DED DUP6 DUP3 DUP7 ADD PUSH2 0x4687 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4E3E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4E51 JUMPI PUSH2 0x4E50 PUSH2 0x4DF7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4E9B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x4EA8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4EB5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x429B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EF7 DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F02 DUP4 PUSH2 0x4206 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4F10 DUP2 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4F27 JUMPI PUSH2 0x4F26 PUSH2 0x4EBD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4F68 DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F73 DUP4 PUSH2 0x4206 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4F83 JUMPI PUSH2 0x4F82 PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642074696D652072616E67650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC4 PUSH1 0x12 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x4FCF DUP3 PUSH2 0x4F8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FF3 DUP2 PUSH2 0x4FB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D6178207065722077616C6C657420666F72206E6F6E2D70 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x75626C6963207068617365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5056 PUSH1 0x2B DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5061 DUP3 PUSH2 0x4FFA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5085 DUP2 PUSH2 0x5049 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D65726B6C6520726F6F7420726571756972656420666F722077686974656C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374207068617365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E8 PUSH1 0x28 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x50F3 DUP3 PUSH2 0x508C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5117 DUP2 PUSH2 0x50DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50686173652074696D65206F7665726C6170732077697468206578697374696E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6720706861736500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517A PUSH1 0x27 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5185 DUP3 PUSH2 0x511E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51A9 DUP2 PUSH2 0x516D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x51C5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x45DB JUMP JUMPDEST PUSH2 0x51D2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x438A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x520F PUSH1 0x12 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x521A DUP3 PUSH2 0x51D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x523E DUP2 PUSH2 0x5202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525D DUP3 PUSH2 0x5245 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x526F DUP3 PUSH2 0x5252 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5287 PUSH2 0x5282 DUP3 PUSH2 0x4289 JUMP JUMPDEST PUSH2 0x5264 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5299 DUP3 DUP5 PUSH2 0x5276 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C697374656420666F7220746869732070686173650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52DE PUSH1 0x1E DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x52E9 DUP3 PUSH2 0x52A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x530D DUP2 PUSH2 0x52D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531F DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH2 0x532A DUP4 PUSH2 0x4206 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x5342 JUMPI PUSH2 0x5341 PUSH2 0x4EBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5369676E61747572652065787069726564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x537E PUSH1 0x11 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5389 DUP3 PUSH2 0x5348 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53AD DUP2 PUSH2 0x5371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5369676E617475726520616C7265616479207573656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53EA PUSH1 0x16 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x53F5 DUP3 PUSH2 0x53B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5419 DUP2 PUSH2 0x53DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5437 DUP4 DUP6 PUSH2 0x5420 JUMP JUMPDEST SWAP4 POP PUSH2 0x5444 DUP4 DUP6 DUP5 PUSH2 0x4C18 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545D DUP3 DUP5 DUP7 PUSH2 0x542B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x547F PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x548C PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x5499 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x54A6 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x54B3 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x54C0 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x54CD PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x54DA PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x438A JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x551D PUSH1 0x11 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5528 DUP3 PUSH2 0x54E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x554C DUP2 PUSH2 0x5510 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5589 PUSH1 0x18 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5594 DUP3 PUSH2 0x5553 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55B8 DUP2 PUSH2 0x557C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506861736520737570706C79206C696D69742072656163686564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55F5 PUSH1 0x1A DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5600 DUP3 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5624 DUP2 PUSH2 0x55E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57616C6C6574206C696D6974207265616368656420666F722074686973207068 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6173650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5687 PUSH1 0x23 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5692 DUP3 PUSH2 0x562B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56B6 DUP2 PUSH2 0x567A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x56D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206163746976652070686173650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570E PUSH1 0xF DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5719 DUP3 PUSH2 0x56D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x573D DUP2 PUSH2 0x5701 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5754 PUSH1 0x0 DUP4 PUSH2 0x5420 JUMP JUMPDEST SWAP2 POP PUSH2 0x575F DUP3 PUSH2 0x5744 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5775 DUP3 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6174666F726D20666565207472616E73666572206661696C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57B5 PUSH1 0x1C DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x57C0 DUP3 PUSH2 0x577F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57E4 DUP2 PUSH2 0x57A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F6 DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH2 0x5801 DUP4 PUSH2 0x4206 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5819 JUMPI PUSH2 0x5818 PUSH2 0x4EBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E657220666565207472616E73666572206661696C656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5855 PUSH1 0x19 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5860 DUP3 PUSH2 0x581F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5884 DUP2 PUSH2 0x5848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5896 DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x58C8 JUMPI PUSH2 0x58C7 PUSH2 0x4EBD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58FA DUP3 PUSH2 0x58D3 JUMP JUMPDEST PUSH2 0x5904 DUP2 DUP6 PUSH2 0x58DE JUMP JUMPDEST SWAP4 POP PUSH2 0x5914 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4170 JUMP JUMPDEST PUSH2 0x591D DUP2 PUSH2 0x419A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x593D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x594A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x5957 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5969 DUP2 DUP5 PUSH2 0x58EF JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5983 DUP2 PUSH2 0x40C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x599F JUMPI PUSH2 0x599E PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59AD DUP5 DUP3 DUP6 ADD PUSH2 0x5974 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59CC DUP3 PUSH2 0x4154 JUMP JUMPDEST PUSH2 0x59D6 DUP2 DUP6 PUSH2 0x59B6 JUMP JUMPDEST SWAP4 POP PUSH2 0x59E6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4170 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59FE DUP3 DUP6 PUSH2 0x59C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A0A DUP3 DUP5 PUSH2 0x59C1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5A78 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5A3B JUMP JUMPDEST PUSH2 0x5A82 DUP7 DUP4 PUSH2 0x5A3B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ABF PUSH2 0x5ABA PUSH2 0x5AB5 DUP5 PUSH2 0x4206 JUMP JUMPDEST PUSH2 0x5A9A JUMP JUMPDEST PUSH2 0x4206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AD9 DUP4 PUSH2 0x5AA4 JUMP JUMPDEST PUSH2 0x5AED PUSH2 0x5AE5 DUP3 PUSH2 0x5AC6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5A48 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5B02 PUSH2 0x5AF5 JUMP JUMPDEST PUSH2 0x5B0D DUP2 DUP5 DUP5 PUSH2 0x5AD0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5B31 JUMPI PUSH2 0x5B26 PUSH1 0x0 DUP3 PUSH2 0x5AFA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5B13 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5B76 JUMPI PUSH2 0x5B47 DUP2 PUSH2 0x5A16 JUMP JUMPDEST PUSH2 0x5B50 DUP5 PUSH2 0x5A2B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5B5F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5B73 PUSH2 0x5B6B DUP6 PUSH2 0x5A2B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5B12 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B99 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5B7B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB2 DUP4 DUP4 PUSH2 0x5B88 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BCB DUP3 PUSH2 0x4154 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BE4 JUMPI PUSH2 0x5BE3 PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH2 0x5BEE DUP3 SLOAD PUSH2 0x4E26 JUMP JUMPDEST PUSH2 0x5BF9 DUP3 DUP3 DUP6 PUSH2 0x5B35 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5C2C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5C1A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5C24 DUP6 DUP3 PUSH2 0x5BA6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5C8C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5C3A DUP7 PUSH2 0x5A16 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C62 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5C3D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5C7F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5C7B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5B88 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5CA9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5CB6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5CC3 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5CD0 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x5CDD PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x429B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D2C DUP2 PUSH2 0x5D16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5D47 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5D54 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x5D23 JUMP JUMPDEST PUSH2 0x5D61 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5D6E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x45EA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 DUP5 PUSH25 0x20716EF69489F4CF093ADCE8503C3ED7CA76E1B16561EBC758 PUSH14 0xEE6BA664736F6C634300081B0033 ","sourceMap":"622:9274:31:-:0;;;2403:927;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2636:12:31;2614:4;2620:6;1454:5:7;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:22;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;2712:4:31::3;2697:11;:19;;;;:51;;;;;2744:4;2728:12;:20;;;;2697:51;:98;;;;;2793:1;2760:35;;:21;:35;;;;2697:98;:138;;;;;2833:1;2807:28;;:14;:28;;;;2697:138;2682:159;;;::::0;::::3;;2864:14;2848:30;;;;;;;;::::0;::::3;2907:11;2884:34;;;;;;;;::::0;::::3;2948:12;2924:21;;:36;;;;;;;;;;;;;;;;;;2989:21;2966:20;;:44;;;;;;;;;;;;;;;;;;3017:54;3036:12;3050:20;;3017:18;;;:54;;:::i;:::-;3078:6;3097:222;;;;;;;;3124:21;3097:222;;;;;;;;:::i;:::-;;;;;;3162:1;3097:222;;;;3184:1;3097:222;;;;3204:1;3097:222;;;;3226:1;3097:222;;;;3251:1;3097:222;;;;3277:1;3097:222;;;;3308:1;3300:10:::0;::::3;3097:222;;::::0;3078:247:::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2403:927:::0;;;;;;;622:9274;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2887:340:18:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4113:179:22:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3667:507:15:-;3761:19;3783:17;:15;;;:17;;:::i;:::-;3761:39;;;;3829:11;3814:12;:26;;;3810:173;;;3946:12;3960:11;3917:55;;;;;;;;;;;;:::i;:::-;;;;;;;;3810:173;4016:1;3996:22;;:8;:22;;;3992:108;;4086:1;4041:48;;;;;;;;;;;:::i;:::-;;;;;;;;3992:108;4132:35;;;;;;;;4144:8;4132:35;;;;;;4154:12;4132:35;;;;;4110:19;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3751:423;3667:507;;:::o;1708:286:18:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:19:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;3311:95:15:-;3369:6;3394:5;3387:12;;3311:95;:::o;7:75:32:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:248::-;2203:1;2213:113;2227:6;2224:1;2221:13;2213:113;;;2312:1;2307:3;2303:11;2297:18;2293:1;2288:3;2284:11;2277:39;2249:2;2246:1;2242:10;2237:15;;2213:113;;;2360:1;2351:6;2346:3;2342:16;2335:27;2183:186;2121:248;;;:::o;2375:434::-;2464:5;2489:66;2505:49;2547:6;2505:49;:::i;:::-;2489:66;:::i;:::-;2480:75;;2578:6;2571:5;2564:21;2616:4;2609:5;2605:16;2654:3;2645:6;2640:3;2636:16;2633:25;2630:112;;;2661:79;;:::i;:::-;2630:112;2751:52;2796:6;2791:3;2786;2751:52;:::i;:::-;2470:339;2375:434;;;;;:::o;2829:355::-;2896:5;2945:3;2938:4;2930:6;2926:17;2922:27;2912:122;;2953:79;;:::i;:::-;2912:122;3063:6;3057:13;3088:90;3174:3;3166:6;3159:4;3151:6;3147:17;3088:90;:::i;:::-;3079:99;;2902:282;2829:355;;;;:::o;3190:109::-;3226:7;3266:26;3259:5;3255:38;3244:49;;3190:109;;;:::o;3305:120::-;3377:23;3394:5;3377:23;:::i;:::-;3370:5;3367:34;3357:62;;3415:1;3412;3405:12;3357:62;3305:120;:::o;3431:141::-;3487:5;3518:6;3512:13;3503:22;;3534:32;3560:5;3534:32;:::i;:::-;3431:141;;;;:::o;3578:1633::-;3720:6;3728;3736;3744;3752;3760;3768;3817:3;3805:9;3796:7;3792:23;3788:33;3785:120;;;3824:79;;:::i;:::-;3785:120;3944:1;3969:64;4025:7;4016:6;4005:9;4001:22;3969:64;:::i;:::-;3959:74;;3915:128;4103:2;4092:9;4088:18;4082:25;4134:18;4126:6;4123:30;4120:117;;;4156:79;;:::i;:::-;4120:117;4261:74;4327:7;4318:6;4307:9;4303:22;4261:74;:::i;:::-;4251:84;;4053:292;4405:2;4394:9;4390:18;4384:25;4436:18;4428:6;4425:30;4422:117;;;4458:79;;:::i;:::-;4422:117;4563:74;4629:7;4620:6;4609:9;4605:22;4563:74;:::i;:::-;4553:84;;4355:292;4686:2;4712:63;4767:7;4758:6;4747:9;4743:22;4712:63;:::i;:::-;4702:73;;4657:128;4824:3;4851:63;4906:7;4897:6;4886:9;4882:22;4851:63;:::i;:::-;4841:73;;4795:129;4963:3;4990:64;5046:7;5037:6;5026:9;5022:22;4990:64;:::i;:::-;4980:74;;4934:130;5103:3;5130:64;5186:7;5177:6;5166:9;5162:22;5130:64;:::i;:::-;5120:74;;5074:130;3578:1633;;;;;;;;;;:::o;5217:99::-;5269:6;5303:5;5297:12;5287:22;;5217:99;;;:::o;5322:180::-;5370:77;5367:1;5360:88;5467:4;5464:1;5457:15;5491:4;5488:1;5481:15;5508:320;5552:6;5589:1;5583:4;5579:12;5569:22;;5636:1;5630:4;5626:12;5657:18;5647:81;;5713:4;5705:6;5701:17;5691:27;;5647:81;5775:2;5767:6;5764:14;5744:18;5741:38;5738:84;;5794:18;;:::i;:::-;5738:84;5559:269;5508:320;;;:::o;5834:141::-;5883:4;5906:3;5898:11;;5929:3;5926:1;5919:14;5963:4;5960:1;5950:18;5942:26;;5834:141;;;:::o;5981:93::-;6018:6;6065:2;6060;6053:5;6049:14;6045:23;6035:33;;5981:93;;;:::o;6080:107::-;6124:8;6174:5;6168:4;6164:16;6143:37;;6080:107;;;;:::o;6193:393::-;6262:6;6312:1;6300:10;6296:18;6335:97;6365:66;6354:9;6335:97;:::i;:::-;6453:39;6483:8;6472:9;6453:39;:::i;:::-;6441:51;;6525:4;6521:9;6514:5;6510:21;6501:30;;6574:4;6564:8;6560:19;6553:5;6550:30;6540:40;;6269:317;;6193:393;;;;;:::o;6592:77::-;6629:7;6658:5;6647:16;;6592:77;;;:::o;6675:60::-;6703:3;6724:5;6717:12;;6675:60;;;:::o;6741:142::-;6791:9;6824:53;6842:34;6851:24;6869:5;6851:24;:::i;:::-;6842:34;:::i;:::-;6824:53;:::i;:::-;6811:66;;6741:142;;;:::o;6889:75::-;6932:3;6953:5;6946:12;;6889:75;;;:::o;6970:269::-;7080:39;7111:7;7080:39;:::i;:::-;7141:91;7190:41;7214:16;7190:41;:::i;:::-;7182:6;7175:4;7169:11;7141:91;:::i;:::-;7135:4;7128:105;7046:193;6970:269;;;:::o;7245:73::-;7290:3;7245:73;:::o;7324:189::-;7401:32;;:::i;:::-;7442:65;7500:6;7492;7486:4;7442:65;:::i;:::-;7377:136;7324:189;;:::o;7519:186::-;7579:120;7596:3;7589:5;7586:14;7579:120;;;7650:39;7687:1;7680:5;7650:39;:::i;:::-;7623:1;7616:5;7612:13;7603:22;;7579:120;;;7519:186;;:::o;7711:543::-;7812:2;7807:3;7804:11;7801:446;;;7846:38;7878:5;7846:38;:::i;:::-;7930:29;7948:10;7930:29;:::i;:::-;7920:8;7916:44;8113:2;8101:10;8098:18;8095:49;;;8134:8;8119:23;;8095:49;8157:80;8213:22;8231:3;8213:22;:::i;:::-;8203:8;8199:37;8186:11;8157:80;:::i;:::-;7816:431;;7801:446;7711:543;;;:::o;8260:117::-;8314:8;8364:5;8358:4;8354:16;8333:37;;8260:117;;;;:::o;8383:169::-;8427:6;8460:51;8508:1;8504:6;8496:5;8493:1;8489:13;8460:51;:::i;:::-;8456:56;8541:4;8535;8531:15;8521:25;;8434:118;8383:169;;;;:::o;8557:295::-;8633:4;8779:29;8804:3;8798:4;8779:29;:::i;:::-;8771:37;;8841:3;8838:1;8834:11;8828:4;8825:21;8817:29;;8557:295;;;;:::o;8857:1395::-;8974:37;9007:3;8974:37;:::i;:::-;9076:18;9068:6;9065:30;9062:56;;;9098:18;;:::i;:::-;9062:56;9142:38;9174:4;9168:11;9142:38;:::i;:::-;9227:67;9287:6;9279;9273:4;9227:67;:::i;:::-;9321:1;9345:4;9332:17;;9377:2;9369:6;9366:14;9394:1;9389:618;;;;10051:1;10068:6;10065:77;;;10117:9;10112:3;10108:19;10102:26;10093:35;;10065:77;10168:67;10228:6;10221:5;10168:67;:::i;:::-;10162:4;10155:81;10024:222;9359:887;;9389:618;9441:4;9437:9;9429:6;9425:22;9475:37;9507:4;9475:37;:::i;:::-;9534:1;9548:208;9562:7;9559:1;9556:14;9548:208;;;9641:9;9636:3;9632:19;9626:26;9618:6;9611:42;9692:1;9684:6;9680:14;9670:24;;9739:2;9728:9;9724:18;9711:31;;9585:4;9582:1;9578:12;9573:17;;9548:208;;;9784:6;9775:7;9772:19;9769:179;;;9842:9;9837:3;9833:19;9827:26;9885:48;9927:4;9919:6;9915:17;9904:9;9885:48;:::i;:::-;9877:6;9870:64;9792:156;9769:179;9994:1;9990;9982:6;9978:14;9974:22;9968:4;9961:36;9396:611;;;9359:887;;8949:1303;;;8857:1395;;:::o;10258:118::-;10345:24;10363:5;10345:24;:::i;:::-;10340:3;10333:37;10258:118;;:::o;10382:222::-;10475:4;10513:2;10502:9;10498:18;10490:26;;10526:71;10594:1;10583:9;10579:17;10570:6;10526:71;:::i;:::-;10382:222;;;;:::o;10610:180::-;10658:77;10655:1;10648:88;10755:4;10752:1;10745:15;10779:4;10776:1;10769:15;10796:77;10833:7;10862:5;10851:16;;10796:77;;;:::o;10879:118::-;10966:24;10984:5;10966:24;:::i;:::-;10961:3;10954:37;10879:118;;:::o;11003:::-;11090:24;11108:5;11090:24;:::i;:::-;11085:3;11078:37;11003:118;;:::o;11127:664::-;11332:4;11370:3;11359:9;11355:19;11347:27;;11384:71;11452:1;11441:9;11437:17;11428:6;11384:71;:::i;:::-;11465:72;11533:2;11522:9;11518:18;11509:6;11465:72;:::i;:::-;11547;11615:2;11604:9;11600:18;11591:6;11547:72;:::i;:::-;11629;11697:2;11686:9;11682:18;11673:6;11629:72;:::i;:::-;11711:73;11779:3;11768:9;11764:19;11755:6;11711:73;:::i;:::-;11127:664;;;;;;;;:::o;11797:140::-;11846:9;11879:52;11897:33;11906:23;11923:5;11906:23;:::i;:::-;11897:33;:::i;:::-;11879:52;:::i;:::-;11866:65;;11797:140;;;:::o;11943:129::-;12029:36;12059:5;12029:36;:::i;:::-;12024:3;12017:49;11943:129;;:::o;12078:330::-;12198:4;12236:2;12225:9;12221:18;12213:26;;12249:70;12316:1;12305:9;12301:17;12292:6;12249:70;:::i;:::-;12329:72;12397:2;12386:9;12382:18;12373:6;12329:72;:::i;:::-;12078:330;;;;;:::o;12414:169::-;12498:11;12532:6;12527:3;12520:19;12572:4;12567:3;12563:14;12548:29;;12414:169;;;;:::o;12589:377::-;12677:3;12705:39;12738:5;12705:39;:::i;:::-;12760:71;12824:6;12819:3;12760:71;:::i;:::-;12753:78;;12840:65;12898:6;12893:3;12886:4;12879:5;12875:16;12840:65;:::i;:::-;12930:29;12952:6;12930:29;:::i;:::-;12925:3;12921:39;12914:46;;12681:285;12589:377;;;;:::o;12972:313::-;13085:4;13123:2;13112:9;13108:18;13100:26;;13172:9;13166:4;13162:20;13158:1;13147:9;13143:17;13136:47;13200:78;13273:4;13264:6;13200:78;:::i;:::-;13192:86;;12972:313;;;;:::o;13291:98::-;13342:6;13376:5;13370:12;13360:22;;13291:98;;;:::o;13395:116::-;13446:4;13469:3;13461:11;;13499:4;13494:3;13490:14;13482:22;;13395:116;;;:::o;13517:154::-;13560:11;13596:29;13620:3;13614:10;13596:29;:::i;:::-;13659:5;13635:29;;13572:99;13517:154;;;:::o;13677:594::-;13761:5;13792:38;13824:5;13792:38;:::i;:::-;13855:5;13882:40;13916:5;13882:40;:::i;:::-;13870:52;;13941:35;13967:8;13941:35;:::i;:::-;13932:44;;14000:2;13992:6;13989:14;13986:278;;;14071:169;14156:66;14126:6;14122:2;14118:15;14115:1;14111:23;14071:169;:::i;:::-;14048:5;14027:227;14018:236;;13986:278;13767:504;;13677:594;;;:::o;622:9274:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_EIP712Name_3674":{"entryPoint":8731,"id":3674,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3686":{"entryPoint":8790,"id":3686,"parameterSlots":0,"returnSlots":1},"@_addTokenToAllTokensEnumeration_1703":{"entryPoint":13714,"id":1703,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_1683":{"entryPoint":14231,"id":1683,"parameterSlots":2,"returnSlots":0},"@_approve_1185":{"entryPoint":8007,"id":1185,"parameterSlots":3,"returnSlots":0},"@_approve_1251":{"entryPoint":11147,"id":1251,"parameterSlots":4,"returnSlots":0},"@_baseURI_566":{"entryPoint":12776,"id":566,"parameterSlots":0,"returnSlots":1},"@_buildDomainSeparator_3604":{"entryPoint":12904,"id":3604,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_825":{"entryPoint":15241,"id":825,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":8025,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3583":{"entryPoint":10806,"id":3583,"parameterSlots":0,"returnSlots":1},"@_efficientKeccak256_3726":{"entryPoint":15517,"id":3726,"parameterSlots":2,"returnSlots":1},"@_feeDenominator_2250":{"entryPoint":8523,"id":2250,"parameterSlots":0,"returnSlots":1},"@_getActivePhase_9245":{"entryPoint":8160,"id":9245,"parameterSlots":0,"returnSlots":2},"@_getApproved_752":{"entryPoint":7938,"id":752,"parameterSlots":1,"returnSlots":1},"@_hashTypedDataV4_3620":{"entryPoint":8872,"id":3620,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_788":{"entryPoint":16234,"id":788,"parameterSlots":3,"returnSlots":1},"@_mintToken_8978":{"entryPoint":9624,"id":8978,"parameterSlots":4,"returnSlots":0},"@_mint_981":{"entryPoint":15540,"id":981,"parameterSlots":2,"returnSlots":0},"@_msgSender_2381":{"entryPoint":7999,"id":2381,"parameterSlots":0,"returnSlots":1},"@_ownerOf_739":{"entryPoint":11086,"id":739,"parameterSlots":1,"returnSlots":1},"@_processFees_8927":{"entryPoint":8942,"id":8927,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromAllTokensEnumeration_1813":{"entryPoint":14022,"id":1813,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_1765":{"entryPoint":13787,"id":1765,"parameterSlots":2,"returnSlots":0},"@_requireOwned_1317":{"entryPoint":7802,"id":1317,"parameterSlots":1,"returnSlots":1},"@_safeMint_1026":{"entryPoint":14773,"id":1026,"parameterSlots":3,"returnSlots":0},"@_safeMint_996":{"entryPoint":12654,"id":996,"parameterSlots":2,"returnSlots":0},"@_setApprovalForAll_1288":{"entryPoint":9731,"id":1288,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1964":{"entryPoint":12684,"id":1964,"parameterSlots":2,"returnSlots":0},"@_throwError_3459":{"entryPoint":12298,"id":3459,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":8533,"id":146,"parameterSlots":1,"returnSlots":0},"@_updatePhaseStats_8949":{"entryPoint":9439,"id":8949,"parameterSlots":2,"returnSlots":0},"@_update_1652":{"entryPoint":11600,"id":1652,"parameterSlots":3,"returnSlots":1},"@_update_9158":{"entryPoint":8501,"id":9158,"parameterSlots":3,"returnSlots":1},"@_update_931":{"entryPoint":13176,"id":931,"parameterSlots":3,"returnSlots":1},"@addPhase_9102":{"entryPoint":3872,"id":9102,"parameterSlots":7,"returnSlots":0},"@approve_582":{"entryPoint":2648,"id":582,"parameterSlots":2,"returnSlots":0},"@backendSigner_8477":{"entryPoint":4822,"id":8477,"parameterSlots":0,"returnSlots":0},"@balanceOf_490":{"entryPoint":4858,"id":490,"parameterSlots":1,"returnSlots":1},"@byteLength_2569":{"entryPoint":15437,"id":2569,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2101":{"entryPoint":10098,"id":2101,"parameterSlots":5,"returnSlots":0},"@commutativeKeccak256_3714":{"entryPoint":14486,"id":3714,"parameterSlots":2,"returnSlots":1},"@eip712Domain_3662":{"entryPoint":5215,"id":3662,"parameterSlots":0,"returnSlots":7},"@getActivePhase_9257":{"entryPoint":2720,"id":9257,"parameterSlots":0,"returnSlots":2},"@getApproved_599":{"entryPoint":2620,"id":599,"parameterSlots":1,"returnSlots":1},"@getDomainSeparator_9185":{"entryPoint":7404,"id":9185,"parameterSlots":0,"returnSlots":1},"@getMintedInPhase_9274":{"entryPoint":7553,"id":9274,"parameterSlots":2,"returnSlots":1},"@getPhaseCount_9283":{"entryPoint":7205,"id":9283,"parameterSlots":0,"returnSlots":1},"@isActivePhasePresent_9334":{"entryPoint":2370,"id":9334,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_632":{"entryPoint":7218,"id":632,"parameterSlots":2,"returnSlots":1},"@isPaused_8499":{"entryPoint":7101,"id":8499,"parameterSlots":0,"returnSlots":0},"@log10_6288":{"entryPoint":15789,"id":6288,"parameterSlots":1,"returnSlots":1},"@mint_8867":{"entryPoint":5427,"id":8867,"parameterSlots":9,"returnSlots":0},"@name_512":{"entryPoint":2224,"id":512,"parameterSlots":0,"returnSlots":1},"@ownerOf_503":{"entryPoint":4804,"id":503,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":5385,"id":67,"parameterSlots":0,"returnSlots":1},"@phases_8490":{"entryPoint":3452,"id":8490,"parameterSlots":0,"returnSlots":0},"@platformFeePercentage_8521":{"entryPoint":7175,"id":8521,"parameterSlots":0,"returnSlots":0},"@platformFeeRecipient_8523":{"entryPoint":7366,"id":8523,"parameterSlots":0,"returnSlots":0},"@processProof_3797":{"entryPoint":12061,"id":3797,"parameterSlots":2,"returnSlots":1},"@recover_3216":{"entryPoint":8898,"id":3216,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":5044,"id":98,"parameterSlots":0,"returnSlots":0},"@royaltyInfo_2241":{"entryPoint":3148,"id":2241,"parameterSlots":2,"returnSlots":2},"@safeTransferFrom_696":{"entryPoint":3722,"id":696,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_726":{"entryPoint":7120,"id":726,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_615":{"entryPoint":7079,"id":615,"parameterSlots":2,"returnSlots":0},"@setPaused_8677":{"entryPoint":2670,"id":8677,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1517":{"entryPoint":13054,"id":1517,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1888":{"entryPoint":10989,"id":1888,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2179":{"entryPoint":7680,"id":2179,"parameterSlots":1,"returnSlots":1},"@supportsInterface_462":{"entryPoint":15015,"id":462,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4897":{"entryPoint":16128,"id":4897,"parameterSlots":1,"returnSlots":1},"@supportsInterface_9120":{"entryPoint":2206,"id":9120,"parameterSlots":1,"returnSlots":1},"@symbol_521":{"entryPoint":6933,"id":521,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2636":{"entryPoint":11885,"id":2636,"parameterSlots":2,"returnSlots":1},"@toString_2537":{"entryPoint":14370,"id":2537,"parameterSlots":1,"returnSlots":1},"@toString_2860":{"entryPoint":14809,"id":2860,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4873":{"entryPoint":12141,"id":4873,"parameterSlots":2,"returnSlots":1},"@tokenByIndex_1583":{"entryPoint":3754,"id":1583,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_1546":{"entryPoint":3553,"id":1546,"parameterSlots":2,"returnSlots":1},"@tokenURI_1945":{"entryPoint":10531,"id":1945,"parameterSlots":1,"returnSlots":1},"@tokenURI_557":{"entryPoint":12799,"id":557,"parameterSlots":1,"returnSlots":1},"@tokenURI_9136":{"entryPoint":7157,"id":9136,"parameterSlots":1,"returnSlots":1},"@tokensOfOwner_8517":{"entryPoint":5064,"id":8517,"parameterSlots":1,"returnSlots":1},"@totalSupply_1556":{"entryPoint":2707,"id":1556,"parameterSlots":0,"returnSlots":1},"@transferFrom_678":{"entryPoint":2890,"id":678,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":7419,"id":126,"parameterSlots":1,"returnSlots":0},"@tryRecover_3186":{"entryPoint":12206,"id":3186,"parameterSlots":2,"returnSlots":3},"@tryRecover_3374":{"entryPoint":14529,"id":3374,"parameterSlots":4,"returnSlots":3},"@verify_3756":{"entryPoint":8849,"id":3756,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":19495,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":17116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":18914,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool":{"entryPoint":17224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":18099,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":16604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":22900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":18828,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":19561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_PhaseType_$8455":{"entryPoint":18055,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":18742,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":16935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":18282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":19804,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":17695,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":19607,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":19239,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_enum$_PhaseType_$8455":{"entryPoint":19895,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":17137,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":17245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":16625,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":22921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_PhaseType_$8455t_uint256t_uint256t_uint256t_uint256t_uint256t_bytes32":{"entryPoint":18120,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_uint256":{"entryPoint":16956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_calldata_ptrt_bytes32t_uint256t_bytes_calldata_ptrt_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":19000,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":17778,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":18371,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":17051,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":21110,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":18408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":16682,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":18580,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":17476,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":17898,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21547,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":22767,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_PhaseType_$8455_to_t_uint8":{"entryPoint":17436,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_PhaseType_$8455_to_t_uint8_fromStack":{"entryPoint":17883,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":16811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":22977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack":{"entryPoint":20407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8_to_t_string_memory_ptr_fromStack":{"entryPoint":21469,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack":{"entryPoint":22440,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack":{"entryPoint":21884,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack":{"entryPoint":21776,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8_to_t_string_memory_ptr_fromStack":{"entryPoint":20845,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e_to_t_string_memory_ptr_fromStack":{"entryPoint":22600,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack":{"entryPoint":21361,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37_to_t_string_memory_ptr_fromStack":{"entryPoint":22138,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585_to_t_string_memory_ptr_fromStack":{"entryPoint":21201,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f_to_t_string_memory_ptr_fromStack":{"entryPoint":21992,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":22343,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack":{"entryPoint":20553,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack":{"entryPoint":20699,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367_to_t_string_memory_ptr_fromStack":{"entryPoint":22273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack":{"entryPoint":20994,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Phase_$8473_memory_ptr_to_t_struct$_Phase_$8473_memory_ptr_fromStack":{"entryPoint":17491,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":17451,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":17290,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":23843,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":19762,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":21133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21584,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":23026,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":22378,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":17066,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":22824,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":17842,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":20102,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":16697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18595,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":19868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_bytes32_t_uint256__to_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":21609,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":23700,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":23858,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_enum$_PhaseType_$8455__to_t_uint8__fromStack_reversed":{"entryPoint":22205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_PhaseType_$8455_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":20912,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_enum$_PhaseType_$8455_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":17913,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20442,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21504,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21919,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21811,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22635,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21396,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22173,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21236,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20588,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20734,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22308,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21029,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":17305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_struct$_Phase_$8473_memory_ptr__to_t_uint256_t_struct$_Phase_$8473_memory_ptr__fromStack_reversed":{"entryPoint":17653,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":19777,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":19404,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":16517,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":19431,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18355,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":23062,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18327,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":22739,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":16724,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18395,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":18338,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":22750,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21536,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":16735,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":22966,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":21268,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":20317,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":20204,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":22507,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":23349,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":17033,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":16670,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":18536,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":17466,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":16537,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_PhaseType_$8455":{"entryPoint":17399,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":17001,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":16902,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":23830,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":19738,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":23314,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_enum$_PhaseType_$8455_to_t_uint8":{"entryPoint":17418,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":23204,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":23490,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":19480,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":16752,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":23083,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":20006,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":23462,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":19355,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":23194,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":22667,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":21092,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":21074,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":23432,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":20157,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":20270,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":17332,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":19959,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":23783,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":20055,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":19308,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":23238,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":18732,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":18727,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":18737,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":19303,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":16532,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":16527,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":16794,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":21061,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":23099,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":23419,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":23290,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc":{"entryPoint":20366,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8":{"entryPoint":21428,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3":{"entryPoint":22399,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d":{"entryPoint":21843,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7":{"entryPoint":21735,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8":{"entryPoint":20766,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e":{"entryPoint":22559,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517":{"entryPoint":21320,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37":{"entryPoint":22059,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585":{"entryPoint":21160,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f":{"entryPoint":21951,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":22340,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3":{"entryPoint":20474,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef":{"entryPoint":20620,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367":{"entryPoint":22232,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d":{"entryPoint":20953,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":23112,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":23248,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_PhaseType_$8455":{"entryPoint":17379,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":17093,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":17201,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":18076,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":16581,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_PhaseType_$8455":{"entryPoint":18039,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":16912,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":23285,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:56577:32","nodeType":"YulBlock","src":"0:56577:32","statements":[{"body":{"nativeSrc":"47:35:32","nodeType":"YulBlock","src":"47:35:32","statements":[{"nativeSrc":"57:19:32","nodeType":"YulAssignment","src":"57:19:32","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:32","nodeType":"YulLiteral","src":"73:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:32","nodeType":"YulIdentifier","src":"67:5:32"},"nativeSrc":"67:9:32","nodeType":"YulFunctionCall","src":"67:9:32"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:32","nodeType":"YulIdentifier","src":"57:6:32"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:32","nodeType":"YulTypedName","src":"40:6:32","type":""}],"src":"7:75:32"},{"body":{"nativeSrc":"177:28:32","nodeType":"YulBlock","src":"177:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:32","nodeType":"YulLiteral","src":"194:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:32","nodeType":"YulLiteral","src":"197:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:32","nodeType":"YulIdentifier","src":"187:6:32"},"nativeSrc":"187:12:32","nodeType":"YulFunctionCall","src":"187:12:32"},"nativeSrc":"187:12:32","nodeType":"YulExpressionStatement","src":"187:12:32"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:32","nodeType":"YulFunctionDefinition","src":"88:117:32"},{"body":{"nativeSrc":"300:28:32","nodeType":"YulBlock","src":"300:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:32","nodeType":"YulLiteral","src":"317:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:32","nodeType":"YulLiteral","src":"320:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:32","nodeType":"YulIdentifier","src":"310:6:32"},"nativeSrc":"310:12:32","nodeType":"YulFunctionCall","src":"310:12:32"},"nativeSrc":"310:12:32","nodeType":"YulExpressionStatement","src":"310:12:32"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:32","nodeType":"YulFunctionDefinition","src":"211:117:32"},{"body":{"nativeSrc":"378:105:32","nodeType":"YulBlock","src":"378:105:32","statements":[{"nativeSrc":"388:89:32","nodeType":"YulAssignment","src":"388:89:32","value":{"arguments":[{"name":"value","nativeSrc":"403:5:32","nodeType":"YulIdentifier","src":"403:5:32"},{"kind":"number","nativeSrc":"410:66:32","nodeType":"YulLiteral","src":"410:66:32","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:32","nodeType":"YulIdentifier","src":"399:3:32"},"nativeSrc":"399:78:32","nodeType":"YulFunctionCall","src":"399:78:32"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:32","nodeType":"YulIdentifier","src":"388:7:32"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:32","nodeType":"YulTypedName","src":"360:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:32","nodeType":"YulTypedName","src":"370:7:32","type":""}],"src":"334:149:32"},{"body":{"nativeSrc":"531:78:32","nodeType":"YulBlock","src":"531:78:32","statements":[{"body":{"nativeSrc":"587:16:32","nodeType":"YulBlock","src":"587:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:32","nodeType":"YulLiteral","src":"596:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:32","nodeType":"YulLiteral","src":"599:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:32","nodeType":"YulIdentifier","src":"589:6:32"},"nativeSrc":"589:12:32","nodeType":"YulFunctionCall","src":"589:12:32"},"nativeSrc":"589:12:32","nodeType":"YulExpressionStatement","src":"589:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:32","nodeType":"YulIdentifier","src":"554:5:32"},{"arguments":[{"name":"value","nativeSrc":"578:5:32","nodeType":"YulIdentifier","src":"578:5:32"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:32","nodeType":"YulIdentifier","src":"561:16:32"},"nativeSrc":"561:23:32","nodeType":"YulFunctionCall","src":"561:23:32"}],"functionName":{"name":"eq","nativeSrc":"551:2:32","nodeType":"YulIdentifier","src":"551:2:32"},"nativeSrc":"551:34:32","nodeType":"YulFunctionCall","src":"551:34:32"}],"functionName":{"name":"iszero","nativeSrc":"544:6:32","nodeType":"YulIdentifier","src":"544:6:32"},"nativeSrc":"544:42:32","nodeType":"YulFunctionCall","src":"544:42:32"},"nativeSrc":"541:62:32","nodeType":"YulIf","src":"541:62:32"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:32","nodeType":"YulTypedName","src":"524:5:32","type":""}],"src":"489:120:32"},{"body":{"nativeSrc":"666:86:32","nodeType":"YulBlock","src":"666:86:32","statements":[{"nativeSrc":"676:29:32","nodeType":"YulAssignment","src":"676:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:32","nodeType":"YulIdentifier","src":"698:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:32","nodeType":"YulIdentifier","src":"685:12:32"},"nativeSrc":"685:20:32","nodeType":"YulFunctionCall","src":"685:20:32"},"variableNames":[{"name":"value","nativeSrc":"676:5:32","nodeType":"YulIdentifier","src":"676:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:32","nodeType":"YulIdentifier","src":"740:5:32"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:32","nodeType":"YulIdentifier","src":"714:25:32"},"nativeSrc":"714:32:32","nodeType":"YulFunctionCall","src":"714:32:32"},"nativeSrc":"714:32:32","nodeType":"YulExpressionStatement","src":"714:32:32"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:32","nodeType":"YulTypedName","src":"644:6:32","type":""},{"name":"end","nativeSrc":"652:3:32","nodeType":"YulTypedName","src":"652:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:32","nodeType":"YulTypedName","src":"660:5:32","type":""}],"src":"615:137:32"},{"body":{"nativeSrc":"823:262:32","nodeType":"YulBlock","src":"823:262:32","statements":[{"body":{"nativeSrc":"869:83:32","nodeType":"YulBlock","src":"869:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:32","nodeType":"YulIdentifier","src":"871:77:32"},"nativeSrc":"871:79:32","nodeType":"YulFunctionCall","src":"871:79:32"},"nativeSrc":"871:79:32","nodeType":"YulExpressionStatement","src":"871:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:32","nodeType":"YulIdentifier","src":"844:7:32"},{"name":"headStart","nativeSrc":"853:9:32","nodeType":"YulIdentifier","src":"853:9:32"}],"functionName":{"name":"sub","nativeSrc":"840:3:32","nodeType":"YulIdentifier","src":"840:3:32"},"nativeSrc":"840:23:32","nodeType":"YulFunctionCall","src":"840:23:32"},{"kind":"number","nativeSrc":"865:2:32","nodeType":"YulLiteral","src":"865:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:32","nodeType":"YulIdentifier","src":"836:3:32"},"nativeSrc":"836:32:32","nodeType":"YulFunctionCall","src":"836:32:32"},"nativeSrc":"833:119:32","nodeType":"YulIf","src":"833:119:32"},{"nativeSrc":"962:116:32","nodeType":"YulBlock","src":"962:116:32","statements":[{"nativeSrc":"977:15:32","nodeType":"YulVariableDeclaration","src":"977:15:32","value":{"kind":"number","nativeSrc":"991:1:32","nodeType":"YulLiteral","src":"991:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:32","nodeType":"YulTypedName","src":"981:6:32","type":""}]},{"nativeSrc":"1006:62:32","nodeType":"YulAssignment","src":"1006:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:32","nodeType":"YulIdentifier","src":"1040:9:32"},{"name":"offset","nativeSrc":"1051:6:32","nodeType":"YulIdentifier","src":"1051:6:32"}],"functionName":{"name":"add","nativeSrc":"1036:3:32","nodeType":"YulIdentifier","src":"1036:3:32"},"nativeSrc":"1036:22:32","nodeType":"YulFunctionCall","src":"1036:22:32"},{"name":"dataEnd","nativeSrc":"1060:7:32","nodeType":"YulIdentifier","src":"1060:7:32"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:32","nodeType":"YulIdentifier","src":"1016:19:32"},"nativeSrc":"1016:52:32","nodeType":"YulFunctionCall","src":"1016:52:32"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:32","nodeType":"YulIdentifier","src":"1006:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:32","nodeType":"YulTypedName","src":"793:9:32","type":""},{"name":"dataEnd","nativeSrc":"804:7:32","nodeType":"YulTypedName","src":"804:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:32","nodeType":"YulTypedName","src":"816:6:32","type":""}],"src":"758:327:32"},{"body":{"nativeSrc":"1133:48:32","nodeType":"YulBlock","src":"1133:48:32","statements":[{"nativeSrc":"1143:32:32","nodeType":"YulAssignment","src":"1143:32:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:32","nodeType":"YulIdentifier","src":"1168:5:32"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:32","nodeType":"YulIdentifier","src":"1161:6:32"},"nativeSrc":"1161:13:32","nodeType":"YulFunctionCall","src":"1161:13:32"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:32","nodeType":"YulIdentifier","src":"1154:6:32"},"nativeSrc":"1154:21:32","nodeType":"YulFunctionCall","src":"1154:21:32"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:32","nodeType":"YulIdentifier","src":"1143:7:32"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:32","nodeType":"YulTypedName","src":"1115:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:32","nodeType":"YulTypedName","src":"1125:7:32","type":""}],"src":"1091:90:32"},{"body":{"nativeSrc":"1246:50:32","nodeType":"YulBlock","src":"1246:50:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:32","nodeType":"YulIdentifier","src":"1263:3:32"},{"arguments":[{"name":"value","nativeSrc":"1283:5:32","nodeType":"YulIdentifier","src":"1283:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:32","nodeType":"YulIdentifier","src":"1268:14:32"},"nativeSrc":"1268:21:32","nodeType":"YulFunctionCall","src":"1268:21:32"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:32","nodeType":"YulIdentifier","src":"1256:6:32"},"nativeSrc":"1256:34:32","nodeType":"YulFunctionCall","src":"1256:34:32"},"nativeSrc":"1256:34:32","nodeType":"YulExpressionStatement","src":"1256:34:32"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:32","nodeType":"YulTypedName","src":"1234:5:32","type":""},{"name":"pos","nativeSrc":"1241:3:32","nodeType":"YulTypedName","src":"1241:3:32","type":""}],"src":"1187:109:32"},{"body":{"nativeSrc":"1394:118:32","nodeType":"YulBlock","src":"1394:118:32","statements":[{"nativeSrc":"1404:26:32","nodeType":"YulAssignment","src":"1404:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:32","nodeType":"YulIdentifier","src":"1416:9:32"},{"kind":"number","nativeSrc":"1427:2:32","nodeType":"YulLiteral","src":"1427:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:32","nodeType":"YulIdentifier","src":"1412:3:32"},"nativeSrc":"1412:18:32","nodeType":"YulFunctionCall","src":"1412:18:32"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:32","nodeType":"YulIdentifier","src":"1404:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:32","nodeType":"YulIdentifier","src":"1478:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:32","nodeType":"YulIdentifier","src":"1491:9:32"},{"kind":"number","nativeSrc":"1502:1:32","nodeType":"YulLiteral","src":"1502:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:32","nodeType":"YulIdentifier","src":"1487:3:32"},"nativeSrc":"1487:17:32","nodeType":"YulFunctionCall","src":"1487:17:32"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:32","nodeType":"YulIdentifier","src":"1440:37:32"},"nativeSrc":"1440:65:32","nodeType":"YulFunctionCall","src":"1440:65:32"},"nativeSrc":"1440:65:32","nodeType":"YulExpressionStatement","src":"1440:65:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:32","nodeType":"YulTypedName","src":"1366:9:32","type":""},{"name":"value0","nativeSrc":"1378:6:32","nodeType":"YulTypedName","src":"1378:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:32","nodeType":"YulTypedName","src":"1389:4:32","type":""}],"src":"1302:210:32"},{"body":{"nativeSrc":"1577:40:32","nodeType":"YulBlock","src":"1577:40:32","statements":[{"nativeSrc":"1588:22:32","nodeType":"YulAssignment","src":"1588:22:32","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:32","nodeType":"YulIdentifier","src":"1604:5:32"}],"functionName":{"name":"mload","nativeSrc":"1598:5:32","nodeType":"YulIdentifier","src":"1598:5:32"},"nativeSrc":"1598:12:32","nodeType":"YulFunctionCall","src":"1598:12:32"},"variableNames":[{"name":"length","nativeSrc":"1588:6:32","nodeType":"YulIdentifier","src":"1588:6:32"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:32","nodeType":"YulTypedName","src":"1560:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:32","nodeType":"YulTypedName","src":"1570:6:32","type":""}],"src":"1518:99:32"},{"body":{"nativeSrc":"1719:73:32","nodeType":"YulBlock","src":"1719:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:32","nodeType":"YulIdentifier","src":"1736:3:32"},{"name":"length","nativeSrc":"1741:6:32","nodeType":"YulIdentifier","src":"1741:6:32"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:32","nodeType":"YulIdentifier","src":"1729:6:32"},"nativeSrc":"1729:19:32","nodeType":"YulFunctionCall","src":"1729:19:32"},"nativeSrc":"1729:19:32","nodeType":"YulExpressionStatement","src":"1729:19:32"},{"nativeSrc":"1757:29:32","nodeType":"YulAssignment","src":"1757:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:32","nodeType":"YulIdentifier","src":"1776:3:32"},{"kind":"number","nativeSrc":"1781:4:32","nodeType":"YulLiteral","src":"1781:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:32","nodeType":"YulIdentifier","src":"1772:3:32"},"nativeSrc":"1772:14:32","nodeType":"YulFunctionCall","src":"1772:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:32","nodeType":"YulIdentifier","src":"1757:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:32","nodeType":"YulTypedName","src":"1691:3:32","type":""},{"name":"length","nativeSrc":"1696:6:32","nodeType":"YulTypedName","src":"1696:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:32","nodeType":"YulTypedName","src":"1707:11:32","type":""}],"src":"1623:169:32"},{"body":{"nativeSrc":"1860:186:32","nodeType":"YulBlock","src":"1860:186:32","statements":[{"nativeSrc":"1871:10:32","nodeType":"YulVariableDeclaration","src":"1871:10:32","value":{"kind":"number","nativeSrc":"1880:1:32","nodeType":"YulLiteral","src":"1880:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:32","nodeType":"YulTypedName","src":"1875:1:32","type":""}]},{"body":{"nativeSrc":"1940:63:32","nodeType":"YulBlock","src":"1940:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:32","nodeType":"YulIdentifier","src":"1965:3:32"},{"name":"i","nativeSrc":"1970:1:32","nodeType":"YulIdentifier","src":"1970:1:32"}],"functionName":{"name":"add","nativeSrc":"1961:3:32","nodeType":"YulIdentifier","src":"1961:3:32"},"nativeSrc":"1961:11:32","nodeType":"YulFunctionCall","src":"1961:11:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:32","nodeType":"YulIdentifier","src":"1984:3:32"},{"name":"i","nativeSrc":"1989:1:32","nodeType":"YulIdentifier","src":"1989:1:32"}],"functionName":{"name":"add","nativeSrc":"1980:3:32","nodeType":"YulIdentifier","src":"1980:3:32"},"nativeSrc":"1980:11:32","nodeType":"YulFunctionCall","src":"1980:11:32"}],"functionName":{"name":"mload","nativeSrc":"1974:5:32","nodeType":"YulIdentifier","src":"1974:5:32"},"nativeSrc":"1974:18:32","nodeType":"YulFunctionCall","src":"1974:18:32"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:32","nodeType":"YulIdentifier","src":"1954:6:32"},"nativeSrc":"1954:39:32","nodeType":"YulFunctionCall","src":"1954:39:32"},"nativeSrc":"1954:39:32","nodeType":"YulExpressionStatement","src":"1954:39:32"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:32","nodeType":"YulIdentifier","src":"1901:1:32"},{"name":"length","nativeSrc":"1904:6:32","nodeType":"YulIdentifier","src":"1904:6:32"}],"functionName":{"name":"lt","nativeSrc":"1898:2:32","nodeType":"YulIdentifier","src":"1898:2:32"},"nativeSrc":"1898:13:32","nodeType":"YulFunctionCall","src":"1898:13:32"},"nativeSrc":"1890:113:32","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:32","nodeType":"YulBlock","src":"1912:19:32","statements":[{"nativeSrc":"1914:15:32","nodeType":"YulAssignment","src":"1914:15:32","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:32","nodeType":"YulIdentifier","src":"1923:1:32"},{"kind":"number","nativeSrc":"1926:2:32","nodeType":"YulLiteral","src":"1926:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:32","nodeType":"YulIdentifier","src":"1919:3:32"},"nativeSrc":"1919:10:32","nodeType":"YulFunctionCall","src":"1919:10:32"},"variableNames":[{"name":"i","nativeSrc":"1914:1:32","nodeType":"YulIdentifier","src":"1914:1:32"}]}]},"pre":{"nativeSrc":"1894:3:32","nodeType":"YulBlock","src":"1894:3:32","statements":[]},"src":"1890:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:32","nodeType":"YulIdentifier","src":"2023:3:32"},{"name":"length","nativeSrc":"2028:6:32","nodeType":"YulIdentifier","src":"2028:6:32"}],"functionName":{"name":"add","nativeSrc":"2019:3:32","nodeType":"YulIdentifier","src":"2019:3:32"},"nativeSrc":"2019:16:32","nodeType":"YulFunctionCall","src":"2019:16:32"},{"kind":"number","nativeSrc":"2037:1:32","nodeType":"YulLiteral","src":"2037:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:32","nodeType":"YulIdentifier","src":"2012:6:32"},"nativeSrc":"2012:27:32","nodeType":"YulFunctionCall","src":"2012:27:32"},"nativeSrc":"2012:27:32","nodeType":"YulExpressionStatement","src":"2012:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:32","nodeType":"YulTypedName","src":"1842:3:32","type":""},{"name":"dst","nativeSrc":"1847:3:32","nodeType":"YulTypedName","src":"1847:3:32","type":""},{"name":"length","nativeSrc":"1852:6:32","nodeType":"YulTypedName","src":"1852:6:32","type":""}],"src":"1798:248:32"},{"body":{"nativeSrc":"2100:54:32","nodeType":"YulBlock","src":"2100:54:32","statements":[{"nativeSrc":"2110:38:32","nodeType":"YulAssignment","src":"2110:38:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:32","nodeType":"YulIdentifier","src":"2128:5:32"},{"kind":"number","nativeSrc":"2135:2:32","nodeType":"YulLiteral","src":"2135:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:32","nodeType":"YulIdentifier","src":"2124:3:32"},"nativeSrc":"2124:14:32","nodeType":"YulFunctionCall","src":"2124:14:32"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:32","nodeType":"YulLiteral","src":"2144:2:32","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:32","nodeType":"YulIdentifier","src":"2140:3:32"},"nativeSrc":"2140:7:32","nodeType":"YulFunctionCall","src":"2140:7:32"}],"functionName":{"name":"and","nativeSrc":"2120:3:32","nodeType":"YulIdentifier","src":"2120:3:32"},"nativeSrc":"2120:28:32","nodeType":"YulFunctionCall","src":"2120:28:32"},"variableNames":[{"name":"result","nativeSrc":"2110:6:32","nodeType":"YulIdentifier","src":"2110:6:32"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:32","nodeType":"YulTypedName","src":"2083:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:32","nodeType":"YulTypedName","src":"2093:6:32","type":""}],"src":"2052:102:32"},{"body":{"nativeSrc":"2252:285:32","nodeType":"YulBlock","src":"2252:285:32","statements":[{"nativeSrc":"2262:53:32","nodeType":"YulVariableDeclaration","src":"2262:53:32","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:32","nodeType":"YulIdentifier","src":"2309:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:32","nodeType":"YulIdentifier","src":"2276:32:32"},"nativeSrc":"2276:39:32","nodeType":"YulFunctionCall","src":"2276:39:32"},"variables":[{"name":"length","nativeSrc":"2266:6:32","nodeType":"YulTypedName","src":"2266:6:32","type":""}]},{"nativeSrc":"2324:78:32","nodeType":"YulAssignment","src":"2324:78:32","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:32","nodeType":"YulIdentifier","src":"2390:3:32"},{"name":"length","nativeSrc":"2395:6:32","nodeType":"YulIdentifier","src":"2395:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:32","nodeType":"YulIdentifier","src":"2331:58:32"},"nativeSrc":"2331:71:32","nodeType":"YulFunctionCall","src":"2331:71:32"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:32","nodeType":"YulIdentifier","src":"2324:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:32","nodeType":"YulIdentifier","src":"2450:5:32"},{"kind":"number","nativeSrc":"2457:4:32","nodeType":"YulLiteral","src":"2457:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:32","nodeType":"YulIdentifier","src":"2446:3:32"},"nativeSrc":"2446:16:32","nodeType":"YulFunctionCall","src":"2446:16:32"},{"name":"pos","nativeSrc":"2464:3:32","nodeType":"YulIdentifier","src":"2464:3:32"},{"name":"length","nativeSrc":"2469:6:32","nodeType":"YulIdentifier","src":"2469:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:32","nodeType":"YulIdentifier","src":"2411:34:32"},"nativeSrc":"2411:65:32","nodeType":"YulFunctionCall","src":"2411:65:32"},"nativeSrc":"2411:65:32","nodeType":"YulExpressionStatement","src":"2411:65:32"},{"nativeSrc":"2485:46:32","nodeType":"YulAssignment","src":"2485:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:32","nodeType":"YulIdentifier","src":"2496:3:32"},{"arguments":[{"name":"length","nativeSrc":"2523:6:32","nodeType":"YulIdentifier","src":"2523:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:32","nodeType":"YulIdentifier","src":"2501:21:32"},"nativeSrc":"2501:29:32","nodeType":"YulFunctionCall","src":"2501:29:32"}],"functionName":{"name":"add","nativeSrc":"2492:3:32","nodeType":"YulIdentifier","src":"2492:3:32"},"nativeSrc":"2492:39:32","nodeType":"YulFunctionCall","src":"2492:39:32"},"variableNames":[{"name":"end","nativeSrc":"2485:3:32","nodeType":"YulIdentifier","src":"2485:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:32","nodeType":"YulTypedName","src":"2233:5:32","type":""},{"name":"pos","nativeSrc":"2240:3:32","nodeType":"YulTypedName","src":"2240:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:32","nodeType":"YulTypedName","src":"2248:3:32","type":""}],"src":"2160:377:32"},{"body":{"nativeSrc":"2661:195:32","nodeType":"YulBlock","src":"2661:195:32","statements":[{"nativeSrc":"2671:26:32","nodeType":"YulAssignment","src":"2671:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:32","nodeType":"YulIdentifier","src":"2683:9:32"},{"kind":"number","nativeSrc":"2694:2:32","nodeType":"YulLiteral","src":"2694:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:32","nodeType":"YulIdentifier","src":"2679:3:32"},"nativeSrc":"2679:18:32","nodeType":"YulFunctionCall","src":"2679:18:32"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:32","nodeType":"YulIdentifier","src":"2671:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:32","nodeType":"YulIdentifier","src":"2718:9:32"},{"kind":"number","nativeSrc":"2729:1:32","nodeType":"YulLiteral","src":"2729:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:32","nodeType":"YulIdentifier","src":"2714:3:32"},"nativeSrc":"2714:17:32","nodeType":"YulFunctionCall","src":"2714:17:32"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:32","nodeType":"YulIdentifier","src":"2737:4:32"},{"name":"headStart","nativeSrc":"2743:9:32","nodeType":"YulIdentifier","src":"2743:9:32"}],"functionName":{"name":"sub","nativeSrc":"2733:3:32","nodeType":"YulIdentifier","src":"2733:3:32"},"nativeSrc":"2733:20:32","nodeType":"YulFunctionCall","src":"2733:20:32"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:32","nodeType":"YulIdentifier","src":"2707:6:32"},"nativeSrc":"2707:47:32","nodeType":"YulFunctionCall","src":"2707:47:32"},"nativeSrc":"2707:47:32","nodeType":"YulExpressionStatement","src":"2707:47:32"},{"nativeSrc":"2763:86:32","nodeType":"YulAssignment","src":"2763:86:32","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:32","nodeType":"YulIdentifier","src":"2835:6:32"},{"name":"tail","nativeSrc":"2844:4:32","nodeType":"YulIdentifier","src":"2844:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:32","nodeType":"YulIdentifier","src":"2771:63:32"},"nativeSrc":"2771:78:32","nodeType":"YulFunctionCall","src":"2771:78:32"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:32","nodeType":"YulIdentifier","src":"2763:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:32","nodeType":"YulTypedName","src":"2633:9:32","type":""},{"name":"value0","nativeSrc":"2645:6:32","nodeType":"YulTypedName","src":"2645:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:32","nodeType":"YulTypedName","src":"2656:4:32","type":""}],"src":"2543:313:32"},{"body":{"nativeSrc":"2907:32:32","nodeType":"YulBlock","src":"2907:32:32","statements":[{"nativeSrc":"2917:16:32","nodeType":"YulAssignment","src":"2917:16:32","value":{"name":"value","nativeSrc":"2928:5:32","nodeType":"YulIdentifier","src":"2928:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:32","nodeType":"YulIdentifier","src":"2917:7:32"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:32","nodeType":"YulTypedName","src":"2889:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:32","nodeType":"YulTypedName","src":"2899:7:32","type":""}],"src":"2862:77:32"},{"body":{"nativeSrc":"2988:79:32","nodeType":"YulBlock","src":"2988:79:32","statements":[{"body":{"nativeSrc":"3045:16:32","nodeType":"YulBlock","src":"3045:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:32","nodeType":"YulLiteral","src":"3054:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:32","nodeType":"YulLiteral","src":"3057:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:32","nodeType":"YulIdentifier","src":"3047:6:32"},"nativeSrc":"3047:12:32","nodeType":"YulFunctionCall","src":"3047:12:32"},"nativeSrc":"3047:12:32","nodeType":"YulExpressionStatement","src":"3047:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:32","nodeType":"YulIdentifier","src":"3011:5:32"},{"arguments":[{"name":"value","nativeSrc":"3036:5:32","nodeType":"YulIdentifier","src":"3036:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:32","nodeType":"YulIdentifier","src":"3018:17:32"},"nativeSrc":"3018:24:32","nodeType":"YulFunctionCall","src":"3018:24:32"}],"functionName":{"name":"eq","nativeSrc":"3008:2:32","nodeType":"YulIdentifier","src":"3008:2:32"},"nativeSrc":"3008:35:32","nodeType":"YulFunctionCall","src":"3008:35:32"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:32","nodeType":"YulIdentifier","src":"3001:6:32"},"nativeSrc":"3001:43:32","nodeType":"YulFunctionCall","src":"3001:43:32"},"nativeSrc":"2998:63:32","nodeType":"YulIf","src":"2998:63:32"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:32","nodeType":"YulTypedName","src":"2981:5:32","type":""}],"src":"2945:122:32"},{"body":{"nativeSrc":"3125:87:32","nodeType":"YulBlock","src":"3125:87:32","statements":[{"nativeSrc":"3135:29:32","nodeType":"YulAssignment","src":"3135:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:32","nodeType":"YulIdentifier","src":"3157:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:32","nodeType":"YulIdentifier","src":"3144:12:32"},"nativeSrc":"3144:20:32","nodeType":"YulFunctionCall","src":"3144:20:32"},"variableNames":[{"name":"value","nativeSrc":"3135:5:32","nodeType":"YulIdentifier","src":"3135:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:32","nodeType":"YulIdentifier","src":"3200:5:32"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:32","nodeType":"YulIdentifier","src":"3173:26:32"},"nativeSrc":"3173:33:32","nodeType":"YulFunctionCall","src":"3173:33:32"},"nativeSrc":"3173:33:32","nodeType":"YulExpressionStatement","src":"3173:33:32"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:32","nodeType":"YulTypedName","src":"3103:6:32","type":""},{"name":"end","nativeSrc":"3111:3:32","nodeType":"YulTypedName","src":"3111:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:32","nodeType":"YulTypedName","src":"3119:5:32","type":""}],"src":"3073:139:32"},{"body":{"nativeSrc":"3284:263:32","nodeType":"YulBlock","src":"3284:263:32","statements":[{"body":{"nativeSrc":"3330:83:32","nodeType":"YulBlock","src":"3330:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:32","nodeType":"YulIdentifier","src":"3332:77:32"},"nativeSrc":"3332:79:32","nodeType":"YulFunctionCall","src":"3332:79:32"},"nativeSrc":"3332:79:32","nodeType":"YulExpressionStatement","src":"3332:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:32","nodeType":"YulIdentifier","src":"3305:7:32"},{"name":"headStart","nativeSrc":"3314:9:32","nodeType":"YulIdentifier","src":"3314:9:32"}],"functionName":{"name":"sub","nativeSrc":"3301:3:32","nodeType":"YulIdentifier","src":"3301:3:32"},"nativeSrc":"3301:23:32","nodeType":"YulFunctionCall","src":"3301:23:32"},{"kind":"number","nativeSrc":"3326:2:32","nodeType":"YulLiteral","src":"3326:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:32","nodeType":"YulIdentifier","src":"3297:3:32"},"nativeSrc":"3297:32:32","nodeType":"YulFunctionCall","src":"3297:32:32"},"nativeSrc":"3294:119:32","nodeType":"YulIf","src":"3294:119:32"},{"nativeSrc":"3423:117:32","nodeType":"YulBlock","src":"3423:117:32","statements":[{"nativeSrc":"3438:15:32","nodeType":"YulVariableDeclaration","src":"3438:15:32","value":{"kind":"number","nativeSrc":"3452:1:32","nodeType":"YulLiteral","src":"3452:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:32","nodeType":"YulTypedName","src":"3442:6:32","type":""}]},{"nativeSrc":"3467:63:32","nodeType":"YulAssignment","src":"3467:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:32","nodeType":"YulIdentifier","src":"3502:9:32"},{"name":"offset","nativeSrc":"3513:6:32","nodeType":"YulIdentifier","src":"3513:6:32"}],"functionName":{"name":"add","nativeSrc":"3498:3:32","nodeType":"YulIdentifier","src":"3498:3:32"},"nativeSrc":"3498:22:32","nodeType":"YulFunctionCall","src":"3498:22:32"},{"name":"dataEnd","nativeSrc":"3522:7:32","nodeType":"YulIdentifier","src":"3522:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:32","nodeType":"YulIdentifier","src":"3477:20:32"},"nativeSrc":"3477:53:32","nodeType":"YulFunctionCall","src":"3477:53:32"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:32","nodeType":"YulIdentifier","src":"3467:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:32","nodeType":"YulTypedName","src":"3254:9:32","type":""},{"name":"dataEnd","nativeSrc":"3265:7:32","nodeType":"YulTypedName","src":"3265:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:32","nodeType":"YulTypedName","src":"3277:6:32","type":""}],"src":"3218:329:32"},{"body":{"nativeSrc":"3598:81:32","nodeType":"YulBlock","src":"3598:81:32","statements":[{"nativeSrc":"3608:65:32","nodeType":"YulAssignment","src":"3608:65:32","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:32","nodeType":"YulIdentifier","src":"3623:5:32"},{"kind":"number","nativeSrc":"3630:42:32","nodeType":"YulLiteral","src":"3630:42:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:32","nodeType":"YulIdentifier","src":"3619:3:32"},"nativeSrc":"3619:54:32","nodeType":"YulFunctionCall","src":"3619:54:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:32","nodeType":"YulIdentifier","src":"3608:7:32"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:32","nodeType":"YulTypedName","src":"3580:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:32","nodeType":"YulTypedName","src":"3590:7:32","type":""}],"src":"3553:126:32"},{"body":{"nativeSrc":"3730:51:32","nodeType":"YulBlock","src":"3730:51:32","statements":[{"nativeSrc":"3740:35:32","nodeType":"YulAssignment","src":"3740:35:32","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:32","nodeType":"YulIdentifier","src":"3769:5:32"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:32","nodeType":"YulIdentifier","src":"3751:17:32"},"nativeSrc":"3751:24:32","nodeType":"YulFunctionCall","src":"3751:24:32"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:32","nodeType":"YulIdentifier","src":"3740:7:32"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:32","nodeType":"YulTypedName","src":"3712:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:32","nodeType":"YulTypedName","src":"3722:7:32","type":""}],"src":"3685:96:32"},{"body":{"nativeSrc":"3852:53:32","nodeType":"YulBlock","src":"3852:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3869:3:32","nodeType":"YulIdentifier","src":"3869:3:32"},{"arguments":[{"name":"value","nativeSrc":"3892:5:32","nodeType":"YulIdentifier","src":"3892:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3874:17:32","nodeType":"YulIdentifier","src":"3874:17:32"},"nativeSrc":"3874:24:32","nodeType":"YulFunctionCall","src":"3874:24:32"}],"functionName":{"name":"mstore","nativeSrc":"3862:6:32","nodeType":"YulIdentifier","src":"3862:6:32"},"nativeSrc":"3862:37:32","nodeType":"YulFunctionCall","src":"3862:37:32"},"nativeSrc":"3862:37:32","nodeType":"YulExpressionStatement","src":"3862:37:32"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3787:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3840:5:32","nodeType":"YulTypedName","src":"3840:5:32","type":""},{"name":"pos","nativeSrc":"3847:3:32","nodeType":"YulTypedName","src":"3847:3:32","type":""}],"src":"3787:118:32"},{"body":{"nativeSrc":"4009:124:32","nodeType":"YulBlock","src":"4009:124:32","statements":[{"nativeSrc":"4019:26:32","nodeType":"YulAssignment","src":"4019:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:32","nodeType":"YulIdentifier","src":"4031:9:32"},{"kind":"number","nativeSrc":"4042:2:32","nodeType":"YulLiteral","src":"4042:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:32","nodeType":"YulIdentifier","src":"4027:3:32"},"nativeSrc":"4027:18:32","nodeType":"YulFunctionCall","src":"4027:18:32"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:32","nodeType":"YulIdentifier","src":"4019:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4099:6:32","nodeType":"YulIdentifier","src":"4099:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"4112:9:32","nodeType":"YulIdentifier","src":"4112:9:32"},{"kind":"number","nativeSrc":"4123:1:32","nodeType":"YulLiteral","src":"4123:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4108:3:32","nodeType":"YulIdentifier","src":"4108:3:32"},"nativeSrc":"4108:17:32","nodeType":"YulFunctionCall","src":"4108:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4055:43:32","nodeType":"YulIdentifier","src":"4055:43:32"},"nativeSrc":"4055:71:32","nodeType":"YulFunctionCall","src":"4055:71:32"},"nativeSrc":"4055:71:32","nodeType":"YulExpressionStatement","src":"4055:71:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3911:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:32","nodeType":"YulTypedName","src":"3981:9:32","type":""},{"name":"value0","nativeSrc":"3993:6:32","nodeType":"YulTypedName","src":"3993:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:32","nodeType":"YulTypedName","src":"4004:4:32","type":""}],"src":"3911:222:32"},{"body":{"nativeSrc":"4182:79:32","nodeType":"YulBlock","src":"4182:79:32","statements":[{"body":{"nativeSrc":"4239:16:32","nodeType":"YulBlock","src":"4239:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:32","nodeType":"YulLiteral","src":"4248:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:32","nodeType":"YulLiteral","src":"4251:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:32","nodeType":"YulIdentifier","src":"4241:6:32"},"nativeSrc":"4241:12:32","nodeType":"YulFunctionCall","src":"4241:12:32"},"nativeSrc":"4241:12:32","nodeType":"YulExpressionStatement","src":"4241:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4205:5:32","nodeType":"YulIdentifier","src":"4205:5:32"},{"arguments":[{"name":"value","nativeSrc":"4230:5:32","nodeType":"YulIdentifier","src":"4230:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4212:17:32","nodeType":"YulIdentifier","src":"4212:17:32"},"nativeSrc":"4212:24:32","nodeType":"YulFunctionCall","src":"4212:24:32"}],"functionName":{"name":"eq","nativeSrc":"4202:2:32","nodeType":"YulIdentifier","src":"4202:2:32"},"nativeSrc":"4202:35:32","nodeType":"YulFunctionCall","src":"4202:35:32"}],"functionName":{"name":"iszero","nativeSrc":"4195:6:32","nodeType":"YulIdentifier","src":"4195:6:32"},"nativeSrc":"4195:43:32","nodeType":"YulFunctionCall","src":"4195:43:32"},"nativeSrc":"4192:63:32","nodeType":"YulIf","src":"4192:63:32"}]},"name":"validator_revert_t_address","nativeSrc":"4139:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:32","nodeType":"YulTypedName","src":"4175:5:32","type":""}],"src":"4139:122:32"},{"body":{"nativeSrc":"4319:87:32","nodeType":"YulBlock","src":"4319:87:32","statements":[{"nativeSrc":"4329:29:32","nodeType":"YulAssignment","src":"4329:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"4351:6:32","nodeType":"YulIdentifier","src":"4351:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"4338:12:32","nodeType":"YulIdentifier","src":"4338:12:32"},"nativeSrc":"4338:20:32","nodeType":"YulFunctionCall","src":"4338:20:32"},"variableNames":[{"name":"value","nativeSrc":"4329:5:32","nodeType":"YulIdentifier","src":"4329:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4394:5:32","nodeType":"YulIdentifier","src":"4394:5:32"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4367:26:32","nodeType":"YulIdentifier","src":"4367:26:32"},"nativeSrc":"4367:33:32","nodeType":"YulFunctionCall","src":"4367:33:32"},"nativeSrc":"4367:33:32","nodeType":"YulExpressionStatement","src":"4367:33:32"}]},"name":"abi_decode_t_address","nativeSrc":"4267:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4297:6:32","nodeType":"YulTypedName","src":"4297:6:32","type":""},{"name":"end","nativeSrc":"4305:3:32","nodeType":"YulTypedName","src":"4305:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4313:5:32","nodeType":"YulTypedName","src":"4313:5:32","type":""}],"src":"4267:139:32"},{"body":{"nativeSrc":"4495:391:32","nodeType":"YulBlock","src":"4495:391:32","statements":[{"body":{"nativeSrc":"4541:83:32","nodeType":"YulBlock","src":"4541:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4543:77:32","nodeType":"YulIdentifier","src":"4543:77:32"},"nativeSrc":"4543:79:32","nodeType":"YulFunctionCall","src":"4543:79:32"},"nativeSrc":"4543:79:32","nodeType":"YulExpressionStatement","src":"4543:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4516:7:32","nodeType":"YulIdentifier","src":"4516:7:32"},{"name":"headStart","nativeSrc":"4525:9:32","nodeType":"YulIdentifier","src":"4525:9:32"}],"functionName":{"name":"sub","nativeSrc":"4512:3:32","nodeType":"YulIdentifier","src":"4512:3:32"},"nativeSrc":"4512:23:32","nodeType":"YulFunctionCall","src":"4512:23:32"},{"kind":"number","nativeSrc":"4537:2:32","nodeType":"YulLiteral","src":"4537:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4508:3:32","nodeType":"YulIdentifier","src":"4508:3:32"},"nativeSrc":"4508:32:32","nodeType":"YulFunctionCall","src":"4508:32:32"},"nativeSrc":"4505:119:32","nodeType":"YulIf","src":"4505:119:32"},{"nativeSrc":"4634:117:32","nodeType":"YulBlock","src":"4634:117:32","statements":[{"nativeSrc":"4649:15:32","nodeType":"YulVariableDeclaration","src":"4649:15:32","value":{"kind":"number","nativeSrc":"4663:1:32","nodeType":"YulLiteral","src":"4663:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4653:6:32","nodeType":"YulTypedName","src":"4653:6:32","type":""}]},{"nativeSrc":"4678:63:32","nodeType":"YulAssignment","src":"4678:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4713:9:32","nodeType":"YulIdentifier","src":"4713:9:32"},{"name":"offset","nativeSrc":"4724:6:32","nodeType":"YulIdentifier","src":"4724:6:32"}],"functionName":{"name":"add","nativeSrc":"4709:3:32","nodeType":"YulIdentifier","src":"4709:3:32"},"nativeSrc":"4709:22:32","nodeType":"YulFunctionCall","src":"4709:22:32"},{"name":"dataEnd","nativeSrc":"4733:7:32","nodeType":"YulIdentifier","src":"4733:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4688:20:32","nodeType":"YulIdentifier","src":"4688:20:32"},"nativeSrc":"4688:53:32","nodeType":"YulFunctionCall","src":"4688:53:32"},"variableNames":[{"name":"value0","nativeSrc":"4678:6:32","nodeType":"YulIdentifier","src":"4678:6:32"}]}]},{"nativeSrc":"4761:118:32","nodeType":"YulBlock","src":"4761:118:32","statements":[{"nativeSrc":"4776:16:32","nodeType":"YulVariableDeclaration","src":"4776:16:32","value":{"kind":"number","nativeSrc":"4790:2:32","nodeType":"YulLiteral","src":"4790:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4780:6:32","nodeType":"YulTypedName","src":"4780:6:32","type":""}]},{"nativeSrc":"4806:63:32","nodeType":"YulAssignment","src":"4806:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:32","nodeType":"YulIdentifier","src":"4841:9:32"},{"name":"offset","nativeSrc":"4852:6:32","nodeType":"YulIdentifier","src":"4852:6:32"}],"functionName":{"name":"add","nativeSrc":"4837:3:32","nodeType":"YulIdentifier","src":"4837:3:32"},"nativeSrc":"4837:22:32","nodeType":"YulFunctionCall","src":"4837:22:32"},{"name":"dataEnd","nativeSrc":"4861:7:32","nodeType":"YulIdentifier","src":"4861:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4816:20:32","nodeType":"YulIdentifier","src":"4816:20:32"},"nativeSrc":"4816:53:32","nodeType":"YulFunctionCall","src":"4816:53:32"},"variableNames":[{"name":"value1","nativeSrc":"4806:6:32","nodeType":"YulIdentifier","src":"4806:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4412:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:32","nodeType":"YulTypedName","src":"4457:9:32","type":""},{"name":"dataEnd","nativeSrc":"4468:7:32","nodeType":"YulTypedName","src":"4468:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4480:6:32","nodeType":"YulTypedName","src":"4480:6:32","type":""},{"name":"value1","nativeSrc":"4488:6:32","nodeType":"YulTypedName","src":"4488:6:32","type":""}],"src":"4412:474:32"},{"body":{"nativeSrc":"4932:76:32","nodeType":"YulBlock","src":"4932:76:32","statements":[{"body":{"nativeSrc":"4986:16:32","nodeType":"YulBlock","src":"4986:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4995:1:32","nodeType":"YulLiteral","src":"4995:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"4998:1:32","nodeType":"YulLiteral","src":"4998:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4988:6:32","nodeType":"YulIdentifier","src":"4988:6:32"},"nativeSrc":"4988:12:32","nodeType":"YulFunctionCall","src":"4988:12:32"},"nativeSrc":"4988:12:32","nodeType":"YulExpressionStatement","src":"4988:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4955:5:32","nodeType":"YulIdentifier","src":"4955:5:32"},{"arguments":[{"name":"value","nativeSrc":"4977:5:32","nodeType":"YulIdentifier","src":"4977:5:32"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"4962:14:32","nodeType":"YulIdentifier","src":"4962:14:32"},"nativeSrc":"4962:21:32","nodeType":"YulFunctionCall","src":"4962:21:32"}],"functionName":{"name":"eq","nativeSrc":"4952:2:32","nodeType":"YulIdentifier","src":"4952:2:32"},"nativeSrc":"4952:32:32","nodeType":"YulFunctionCall","src":"4952:32:32"}],"functionName":{"name":"iszero","nativeSrc":"4945:6:32","nodeType":"YulIdentifier","src":"4945:6:32"},"nativeSrc":"4945:40:32","nodeType":"YulFunctionCall","src":"4945:40:32"},"nativeSrc":"4942:60:32","nodeType":"YulIf","src":"4942:60:32"}]},"name":"validator_revert_t_bool","nativeSrc":"4892:116:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4925:5:32","nodeType":"YulTypedName","src":"4925:5:32","type":""}],"src":"4892:116:32"},{"body":{"nativeSrc":"5063:84:32","nodeType":"YulBlock","src":"5063:84:32","statements":[{"nativeSrc":"5073:29:32","nodeType":"YulAssignment","src":"5073:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"5095:6:32","nodeType":"YulIdentifier","src":"5095:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"5082:12:32","nodeType":"YulIdentifier","src":"5082:12:32"},"nativeSrc":"5082:20:32","nodeType":"YulFunctionCall","src":"5082:20:32"},"variableNames":[{"name":"value","nativeSrc":"5073:5:32","nodeType":"YulIdentifier","src":"5073:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5135:5:32","nodeType":"YulIdentifier","src":"5135:5:32"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"5111:23:32","nodeType":"YulIdentifier","src":"5111:23:32"},"nativeSrc":"5111:30:32","nodeType":"YulFunctionCall","src":"5111:30:32"},"nativeSrc":"5111:30:32","nodeType":"YulExpressionStatement","src":"5111:30:32"}]},"name":"abi_decode_t_bool","nativeSrc":"5014:133:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5041:6:32","nodeType":"YulTypedName","src":"5041:6:32","type":""},{"name":"end","nativeSrc":"5049:3:32","nodeType":"YulTypedName","src":"5049:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5057:5:32","nodeType":"YulTypedName","src":"5057:5:32","type":""}],"src":"5014:133:32"},{"body":{"nativeSrc":"5216:260:32","nodeType":"YulBlock","src":"5216:260:32","statements":[{"body":{"nativeSrc":"5262:83:32","nodeType":"YulBlock","src":"5262:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5264:77:32","nodeType":"YulIdentifier","src":"5264:77:32"},"nativeSrc":"5264:79:32","nodeType":"YulFunctionCall","src":"5264:79:32"},"nativeSrc":"5264:79:32","nodeType":"YulExpressionStatement","src":"5264:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5237:7:32","nodeType":"YulIdentifier","src":"5237:7:32"},{"name":"headStart","nativeSrc":"5246:9:32","nodeType":"YulIdentifier","src":"5246:9:32"}],"functionName":{"name":"sub","nativeSrc":"5233:3:32","nodeType":"YulIdentifier","src":"5233:3:32"},"nativeSrc":"5233:23:32","nodeType":"YulFunctionCall","src":"5233:23:32"},{"kind":"number","nativeSrc":"5258:2:32","nodeType":"YulLiteral","src":"5258:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5229:3:32","nodeType":"YulIdentifier","src":"5229:3:32"},"nativeSrc":"5229:32:32","nodeType":"YulFunctionCall","src":"5229:32:32"},"nativeSrc":"5226:119:32","nodeType":"YulIf","src":"5226:119:32"},{"nativeSrc":"5355:114:32","nodeType":"YulBlock","src":"5355:114:32","statements":[{"nativeSrc":"5370:15:32","nodeType":"YulVariableDeclaration","src":"5370:15:32","value":{"kind":"number","nativeSrc":"5384:1:32","nodeType":"YulLiteral","src":"5384:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5374:6:32","nodeType":"YulTypedName","src":"5374:6:32","type":""}]},{"nativeSrc":"5399:60:32","nodeType":"YulAssignment","src":"5399:60:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5431:9:32","nodeType":"YulIdentifier","src":"5431:9:32"},{"name":"offset","nativeSrc":"5442:6:32","nodeType":"YulIdentifier","src":"5442:6:32"}],"functionName":{"name":"add","nativeSrc":"5427:3:32","nodeType":"YulIdentifier","src":"5427:3:32"},"nativeSrc":"5427:22:32","nodeType":"YulFunctionCall","src":"5427:22:32"},{"name":"dataEnd","nativeSrc":"5451:7:32","nodeType":"YulIdentifier","src":"5451:7:32"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"5409:17:32","nodeType":"YulIdentifier","src":"5409:17:32"},"nativeSrc":"5409:50:32","nodeType":"YulFunctionCall","src":"5409:50:32"},"variableNames":[{"name":"value0","nativeSrc":"5399:6:32","nodeType":"YulIdentifier","src":"5399:6:32"}]}]}]},"name":"abi_decode_tuple_t_bool","nativeSrc":"5153:323:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5186:9:32","nodeType":"YulTypedName","src":"5186:9:32","type":""},{"name":"dataEnd","nativeSrc":"5197:7:32","nodeType":"YulTypedName","src":"5197:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5209:6:32","nodeType":"YulTypedName","src":"5209:6:32","type":""}],"src":"5153:323:32"},{"body":{"nativeSrc":"5547:53:32","nodeType":"YulBlock","src":"5547:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5564:3:32","nodeType":"YulIdentifier","src":"5564:3:32"},{"arguments":[{"name":"value","nativeSrc":"5587:5:32","nodeType":"YulIdentifier","src":"5587:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5569:17:32","nodeType":"YulIdentifier","src":"5569:17:32"},"nativeSrc":"5569:24:32","nodeType":"YulFunctionCall","src":"5569:24:32"}],"functionName":{"name":"mstore","nativeSrc":"5557:6:32","nodeType":"YulIdentifier","src":"5557:6:32"},"nativeSrc":"5557:37:32","nodeType":"YulFunctionCall","src":"5557:37:32"},"nativeSrc":"5557:37:32","nodeType":"YulExpressionStatement","src":"5557:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5482:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5535:5:32","nodeType":"YulTypedName","src":"5535:5:32","type":""},{"name":"pos","nativeSrc":"5542:3:32","nodeType":"YulTypedName","src":"5542:3:32","type":""}],"src":"5482:118:32"},{"body":{"nativeSrc":"5704:124:32","nodeType":"YulBlock","src":"5704:124:32","statements":[{"nativeSrc":"5714:26:32","nodeType":"YulAssignment","src":"5714:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"5726:9:32","nodeType":"YulIdentifier","src":"5726:9:32"},{"kind":"number","nativeSrc":"5737:2:32","nodeType":"YulLiteral","src":"5737:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5722:3:32","nodeType":"YulIdentifier","src":"5722:3:32"},"nativeSrc":"5722:18:32","nodeType":"YulFunctionCall","src":"5722:18:32"},"variableNames":[{"name":"tail","nativeSrc":"5714:4:32","nodeType":"YulIdentifier","src":"5714:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5794:6:32","nodeType":"YulIdentifier","src":"5794:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"5807:9:32","nodeType":"YulIdentifier","src":"5807:9:32"},{"kind":"number","nativeSrc":"5818:1:32","nodeType":"YulLiteral","src":"5818:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5803:3:32","nodeType":"YulIdentifier","src":"5803:3:32"},"nativeSrc":"5803:17:32","nodeType":"YulFunctionCall","src":"5803:17:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5750:43:32","nodeType":"YulIdentifier","src":"5750:43:32"},"nativeSrc":"5750:71:32","nodeType":"YulFunctionCall","src":"5750:71:32"},"nativeSrc":"5750:71:32","nodeType":"YulExpressionStatement","src":"5750:71:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5606:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5676:9:32","nodeType":"YulTypedName","src":"5676:9:32","type":""},{"name":"value0","nativeSrc":"5688:6:32","nodeType":"YulTypedName","src":"5688:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5699:4:32","nodeType":"YulTypedName","src":"5699:4:32","type":""}],"src":"5606:222:32"},{"body":{"nativeSrc":"5862:152:32","nodeType":"YulBlock","src":"5862:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5879:1:32","nodeType":"YulLiteral","src":"5879:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5882:77:32","nodeType":"YulLiteral","src":"5882:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5872:6:32","nodeType":"YulIdentifier","src":"5872:6:32"},"nativeSrc":"5872:88:32","nodeType":"YulFunctionCall","src":"5872:88:32"},"nativeSrc":"5872:88:32","nodeType":"YulExpressionStatement","src":"5872:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5976:1:32","nodeType":"YulLiteral","src":"5976:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"5979:4:32","nodeType":"YulLiteral","src":"5979:4:32","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"5969:6:32","nodeType":"YulIdentifier","src":"5969:6:32"},"nativeSrc":"5969:15:32","nodeType":"YulFunctionCall","src":"5969:15:32"},"nativeSrc":"5969:15:32","nodeType":"YulExpressionStatement","src":"5969:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6000:1:32","nodeType":"YulLiteral","src":"6000:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"6003:4:32","nodeType":"YulLiteral","src":"6003:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5993:6:32","nodeType":"YulIdentifier","src":"5993:6:32"},"nativeSrc":"5993:15:32","nodeType":"YulFunctionCall","src":"5993:15:32"},"nativeSrc":"5993:15:32","nodeType":"YulExpressionStatement","src":"5993:15:32"}]},"name":"panic_error_0x21","nativeSrc":"5834:180:32","nodeType":"YulFunctionDefinition","src":"5834:180:32"},{"body":{"nativeSrc":"6077:62:32","nodeType":"YulBlock","src":"6077:62:32","statements":[{"body":{"nativeSrc":"6111:22:32","nodeType":"YulBlock","src":"6111:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nativeSrc":"6113:16:32","nodeType":"YulIdentifier","src":"6113:16:32"},"nativeSrc":"6113:18:32","nodeType":"YulFunctionCall","src":"6113:18:32"},"nativeSrc":"6113:18:32","nodeType":"YulExpressionStatement","src":"6113:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6100:5:32","nodeType":"YulIdentifier","src":"6100:5:32"},{"kind":"number","nativeSrc":"6107:1:32","nodeType":"YulLiteral","src":"6107:1:32","type":"","value":"4"}],"functionName":{"name":"lt","nativeSrc":"6097:2:32","nodeType":"YulIdentifier","src":"6097:2:32"},"nativeSrc":"6097:12:32","nodeType":"YulFunctionCall","src":"6097:12:32"}],"functionName":{"name":"iszero","nativeSrc":"6090:6:32","nodeType":"YulIdentifier","src":"6090:6:32"},"nativeSrc":"6090:20:32","nodeType":"YulFunctionCall","src":"6090:20:32"},"nativeSrc":"6087:46:32","nodeType":"YulIf","src":"6087:46:32"}]},"name":"validator_assert_t_enum$_PhaseType_$8455","nativeSrc":"6020:119:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6070:5:32","nodeType":"YulTypedName","src":"6070:5:32","type":""}],"src":"6020:119:32"},{"body":{"nativeSrc":"6204:80:32","nodeType":"YulBlock","src":"6204:80:32","statements":[{"nativeSrc":"6214:16:32","nodeType":"YulAssignment","src":"6214:16:32","value":{"name":"value","nativeSrc":"6225:5:32","nodeType":"YulIdentifier","src":"6225:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"6214:7:32","nodeType":"YulIdentifier","src":"6214:7:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6272:5:32","nodeType":"YulIdentifier","src":"6272:5:32"}],"functionName":{"name":"validator_assert_t_enum$_PhaseType_$8455","nativeSrc":"6231:40:32","nodeType":"YulIdentifier","src":"6231:40:32"},"nativeSrc":"6231:47:32","nodeType":"YulFunctionCall","src":"6231:47:32"},"nativeSrc":"6231:47:32","nodeType":"YulExpressionStatement","src":"6231:47:32"}]},"name":"cleanup_t_enum$_PhaseType_$8455","nativeSrc":"6145:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6186:5:32","nodeType":"YulTypedName","src":"6186:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6196:7:32","nodeType":"YulTypedName","src":"6196:7:32","type":""}],"src":"6145:139:32"},{"body":{"nativeSrc":"6362:67:32","nodeType":"YulBlock","src":"6362:67:32","statements":[{"nativeSrc":"6372:51:32","nodeType":"YulAssignment","src":"6372:51:32","value":{"arguments":[{"name":"value","nativeSrc":"6417:5:32","nodeType":"YulIdentifier","src":"6417:5:32"}],"functionName":{"name":"cleanup_t_enum$_PhaseType_$8455","nativeSrc":"6385:31:32","nodeType":"YulIdentifier","src":"6385:31:32"},"nativeSrc":"6385:38:32","nodeType":"YulFunctionCall","src":"6385:38:32"},"variableNames":[{"name":"converted","nativeSrc":"6372:9:32","nodeType":"YulIdentifier","src":"6372:9:32"}]}]},"name":"convert_t_enum$_PhaseType_$8455_to_t_uint8","nativeSrc":"6290:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6342:5:32","nodeType":"YulTypedName","src":"6342:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"6352:9:32","nodeType":"YulTypedName","src":"6352:9:32","type":""}],"src":"6290:139:32"},{"body":{"nativeSrc":"6502:78:32","nodeType":"YulBlock","src":"6502:78:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6519:3:32","nodeType":"YulIdentifier","src":"6519:3:32"},{"arguments":[{"name":"value","nativeSrc":"6567:5:32","nodeType":"YulIdentifier","src":"6567:5:32"}],"functionName":{"name":"convert_t_enum$_PhaseType_$8455_to_t_uint8","nativeSrc":"6524:42:32","nodeType":"YulIdentifier","src":"6524:42:32"},"nativeSrc":"6524:49:32","nodeType":"YulFunctionCall","src":"6524:49:32"}],"functionName":{"name":"mstore","nativeSrc":"6512:6:32","nodeType":"YulIdentifier","src":"6512:6:32"},"nativeSrc":"6512:62:32","nodeType":"YulFunctionCall","src":"6512:62:32"},"nativeSrc":"6512:62:32","nodeType":"YulExpressionStatement","src":"6512:62:32"}]},"name":"abi_encode_t_enum$_PhaseType_$8455_to_t_uint8","nativeSrc":"6435:145:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6490:5:32","nodeType":"YulTypedName","src":"6490:5:32","type":""},{"name":"pos","nativeSrc":"6497:3:32","nodeType":"YulTypedName","src":"6497:3:32","type":""}],"src":"6435:145:32"},{"body":{"nativeSrc":"6641:53:32","nodeType":"YulBlock","src":"6641:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6658:3:32","nodeType":"YulIdentifier","src":"6658:3:32"},{"arguments":[{"name":"value","nativeSrc":"6681:5:32","nodeType":"YulIdentifier","src":"6681:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6663:17:32","nodeType":"YulIdentifier","src":"6663:17:32"},"nativeSrc":"6663:24:32","nodeType":"YulFunctionCall","src":"6663:24:32"}],"functionName":{"name":"mstore","nativeSrc":"6651:6:32","nodeType":"YulIdentifier","src":"6651:6:32"},"nativeSrc":"6651:37:32","nodeType":"YulFunctionCall","src":"6651:37:32"},"nativeSrc":"6651:37:32","nodeType":"YulExpressionStatement","src":"6651:37:32"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6586:108:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6629:5:32","nodeType":"YulTypedName","src":"6629:5:32","type":""},{"name":"pos","nativeSrc":"6636:3:32","nodeType":"YulTypedName","src":"6636:3:32","type":""}],"src":"6586:108:32"},{"body":{"nativeSrc":"6745:32:32","nodeType":"YulBlock","src":"6745:32:32","statements":[{"nativeSrc":"6755:16:32","nodeType":"YulAssignment","src":"6755:16:32","value":{"name":"value","nativeSrc":"6766:5:32","nodeType":"YulIdentifier","src":"6766:5:32"},"variableNames":[{"name":"cleaned","nativeSrc":"6755:7:32","nodeType":"YulIdentifier","src":"6755:7:32"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"6700:77:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6727:5:32","nodeType":"YulTypedName","src":"6727:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6737:7:32","nodeType":"YulTypedName","src":"6737:7:32","type":""}],"src":"6700:77:32"},{"body":{"nativeSrc":"6838:53:32","nodeType":"YulBlock","src":"6838:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6855:3:32","nodeType":"YulIdentifier","src":"6855:3:32"},{"arguments":[{"name":"value","nativeSrc":"6878:5:32","nodeType":"YulIdentifier","src":"6878:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"6860:17:32","nodeType":"YulIdentifier","src":"6860:17:32"},"nativeSrc":"6860:24:32","nodeType":"YulFunctionCall","src":"6860:24:32"}],"functionName":{"name":"mstore","nativeSrc":"6848:6:32","nodeType":"YulIdentifier","src":"6848:6:32"},"nativeSrc":"6848:37:32","nodeType":"YulFunctionCall","src":"6848:37:32"},"nativeSrc":"6848:37:32","nodeType":"YulExpressionStatement","src":"6848:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nativeSrc":"6783:108:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6826:5:32","nodeType":"YulTypedName","src":"6826:5:32","type":""},{"name":"pos","nativeSrc":"6833:3:32","nodeType":"YulTypedName","src":"6833:3:32","type":""}],"src":"6783:108:32"},{"body":{"nativeSrc":"7069:1491:32","nodeType":"YulBlock","src":"7069:1491:32","statements":[{"nativeSrc":"7079:28:32","nodeType":"YulVariableDeclaration","src":"7079:28:32","value":{"arguments":[{"name":"pos","nativeSrc":"7095:3:32","nodeType":"YulIdentifier","src":"7095:3:32"},{"kind":"number","nativeSrc":"7100:6:32","nodeType":"YulLiteral","src":"7100:6:32","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"7091:3:32","nodeType":"YulIdentifier","src":"7091:3:32"},"nativeSrc":"7091:16:32","nodeType":"YulFunctionCall","src":"7091:16:32"},"variables":[{"name":"tail","nativeSrc":"7083:4:32","nodeType":"YulTypedName","src":"7083:4:32","type":""}]},{"nativeSrc":"7117:181:32","nodeType":"YulBlock","src":"7117:181:32","statements":[{"nativeSrc":"7157:43:32","nodeType":"YulVariableDeclaration","src":"7157:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7187:5:32","nodeType":"YulIdentifier","src":"7187:5:32"},{"kind":"number","nativeSrc":"7194:4:32","nodeType":"YulLiteral","src":"7194:4:32","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"7183:3:32","nodeType":"YulIdentifier","src":"7183:3:32"},"nativeSrc":"7183:16:32","nodeType":"YulFunctionCall","src":"7183:16:32"}],"functionName":{"name":"mload","nativeSrc":"7177:5:32","nodeType":"YulIdentifier","src":"7177:5:32"},"nativeSrc":"7177:23:32","nodeType":"YulFunctionCall","src":"7177:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7161:12:32","nodeType":"YulTypedName","src":"7161:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7259:12:32","nodeType":"YulIdentifier","src":"7259:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7277:3:32","nodeType":"YulIdentifier","src":"7277:3:32"},{"kind":"number","nativeSrc":"7282:4:32","nodeType":"YulLiteral","src":"7282:4:32","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"7273:3:32","nodeType":"YulIdentifier","src":"7273:3:32"},"nativeSrc":"7273:14:32","nodeType":"YulFunctionCall","src":"7273:14:32"}],"functionName":{"name":"abi_encode_t_enum$_PhaseType_$8455_to_t_uint8","nativeSrc":"7213:45:32","nodeType":"YulIdentifier","src":"7213:45:32"},"nativeSrc":"7213:75:32","nodeType":"YulFunctionCall","src":"7213:75:32"},"nativeSrc":"7213:75:32","nodeType":"YulExpressionStatement","src":"7213:75:32"}]},{"nativeSrc":"7308:165:32","nodeType":"YulBlock","src":"7308:165:32","statements":[{"nativeSrc":"7344:43:32","nodeType":"YulVariableDeclaration","src":"7344:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7374:5:32","nodeType":"YulIdentifier","src":"7374:5:32"},{"kind":"number","nativeSrc":"7381:4:32","nodeType":"YulLiteral","src":"7381:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7370:3:32","nodeType":"YulIdentifier","src":"7370:3:32"},"nativeSrc":"7370:16:32","nodeType":"YulFunctionCall","src":"7370:16:32"}],"functionName":{"name":"mload","nativeSrc":"7364:5:32","nodeType":"YulIdentifier","src":"7364:5:32"},"nativeSrc":"7364:23:32","nodeType":"YulFunctionCall","src":"7364:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7348:12:32","nodeType":"YulTypedName","src":"7348:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7434:12:32","nodeType":"YulIdentifier","src":"7434:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7452:3:32","nodeType":"YulIdentifier","src":"7452:3:32"},{"kind":"number","nativeSrc":"7457:4:32","nodeType":"YulLiteral","src":"7457:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7448:3:32","nodeType":"YulIdentifier","src":"7448:3:32"},"nativeSrc":"7448:14:32","nodeType":"YulFunctionCall","src":"7448:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7400:33:32","nodeType":"YulIdentifier","src":"7400:33:32"},"nativeSrc":"7400:63:32","nodeType":"YulFunctionCall","src":"7400:63:32"},"nativeSrc":"7400:63:32","nodeType":"YulExpressionStatement","src":"7400:63:32"}]},{"nativeSrc":"7483:169:32","nodeType":"YulBlock","src":"7483:169:32","statements":[{"nativeSrc":"7523:43:32","nodeType":"YulVariableDeclaration","src":"7523:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7553:5:32","nodeType":"YulIdentifier","src":"7553:5:32"},{"kind":"number","nativeSrc":"7560:4:32","nodeType":"YulLiteral","src":"7560:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"7549:3:32","nodeType":"YulIdentifier","src":"7549:3:32"},"nativeSrc":"7549:16:32","nodeType":"YulFunctionCall","src":"7549:16:32"}],"functionName":{"name":"mload","nativeSrc":"7543:5:32","nodeType":"YulIdentifier","src":"7543:5:32"},"nativeSrc":"7543:23:32","nodeType":"YulFunctionCall","src":"7543:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7527:12:32","nodeType":"YulTypedName","src":"7527:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7613:12:32","nodeType":"YulIdentifier","src":"7613:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7631:3:32","nodeType":"YulIdentifier","src":"7631:3:32"},{"kind":"number","nativeSrc":"7636:4:32","nodeType":"YulLiteral","src":"7636:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"7627:3:32","nodeType":"YulIdentifier","src":"7627:3:32"},"nativeSrc":"7627:14:32","nodeType":"YulFunctionCall","src":"7627:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7579:33:32","nodeType":"YulIdentifier","src":"7579:33:32"},"nativeSrc":"7579:63:32","nodeType":"YulFunctionCall","src":"7579:63:32"},"nativeSrc":"7579:63:32","nodeType":"YulExpressionStatement","src":"7579:63:32"}]},{"nativeSrc":"7662:167:32","nodeType":"YulBlock","src":"7662:167:32","statements":[{"nativeSrc":"7700:43:32","nodeType":"YulVariableDeclaration","src":"7700:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7730:5:32","nodeType":"YulIdentifier","src":"7730:5:32"},{"kind":"number","nativeSrc":"7737:4:32","nodeType":"YulLiteral","src":"7737:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"7726:3:32","nodeType":"YulIdentifier","src":"7726:3:32"},"nativeSrc":"7726:16:32","nodeType":"YulFunctionCall","src":"7726:16:32"}],"functionName":{"name":"mload","nativeSrc":"7720:5:32","nodeType":"YulIdentifier","src":"7720:5:32"},"nativeSrc":"7720:23:32","nodeType":"YulFunctionCall","src":"7720:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7704:12:32","nodeType":"YulTypedName","src":"7704:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7790:12:32","nodeType":"YulIdentifier","src":"7790:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7808:3:32","nodeType":"YulIdentifier","src":"7808:3:32"},{"kind":"number","nativeSrc":"7813:4:32","nodeType":"YulLiteral","src":"7813:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"7804:3:32","nodeType":"YulIdentifier","src":"7804:3:32"},"nativeSrc":"7804:14:32","nodeType":"YulFunctionCall","src":"7804:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7756:33:32","nodeType":"YulIdentifier","src":"7756:33:32"},"nativeSrc":"7756:63:32","nodeType":"YulFunctionCall","src":"7756:63:32"},"nativeSrc":"7756:63:32","nodeType":"YulExpressionStatement","src":"7756:63:32"}]},{"nativeSrc":"7839:169:32","nodeType":"YulBlock","src":"7839:169:32","statements":[{"nativeSrc":"7879:43:32","nodeType":"YulVariableDeclaration","src":"7879:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7909:5:32","nodeType":"YulIdentifier","src":"7909:5:32"},{"kind":"number","nativeSrc":"7916:4:32","nodeType":"YulLiteral","src":"7916:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"7905:3:32","nodeType":"YulIdentifier","src":"7905:3:32"},"nativeSrc":"7905:16:32","nodeType":"YulFunctionCall","src":"7905:16:32"}],"functionName":{"name":"mload","nativeSrc":"7899:5:32","nodeType":"YulIdentifier","src":"7899:5:32"},"nativeSrc":"7899:23:32","nodeType":"YulFunctionCall","src":"7899:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"7883:12:32","nodeType":"YulTypedName","src":"7883:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7969:12:32","nodeType":"YulIdentifier","src":"7969:12:32"},{"arguments":[{"name":"pos","nativeSrc":"7987:3:32","nodeType":"YulIdentifier","src":"7987:3:32"},{"kind":"number","nativeSrc":"7992:4:32","nodeType":"YulLiteral","src":"7992:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"7983:3:32","nodeType":"YulIdentifier","src":"7983:3:32"},"nativeSrc":"7983:14:32","nodeType":"YulFunctionCall","src":"7983:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7935:33:32","nodeType":"YulIdentifier","src":"7935:33:32"},"nativeSrc":"7935:63:32","nodeType":"YulFunctionCall","src":"7935:63:32"},"nativeSrc":"7935:63:32","nodeType":"YulExpressionStatement","src":"7935:63:32"}]},{"nativeSrc":"8018:172:32","nodeType":"YulBlock","src":"8018:172:32","statements":[{"nativeSrc":"8061:43:32","nodeType":"YulVariableDeclaration","src":"8061:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8091:5:32","nodeType":"YulIdentifier","src":"8091:5:32"},{"kind":"number","nativeSrc":"8098:4:32","nodeType":"YulLiteral","src":"8098:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"8087:3:32","nodeType":"YulIdentifier","src":"8087:3:32"},"nativeSrc":"8087:16:32","nodeType":"YulFunctionCall","src":"8087:16:32"}],"functionName":{"name":"mload","nativeSrc":"8081:5:32","nodeType":"YulIdentifier","src":"8081:5:32"},"nativeSrc":"8081:23:32","nodeType":"YulFunctionCall","src":"8081:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"8065:12:32","nodeType":"YulTypedName","src":"8065:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"8151:12:32","nodeType":"YulIdentifier","src":"8151:12:32"},{"arguments":[{"name":"pos","nativeSrc":"8169:3:32","nodeType":"YulIdentifier","src":"8169:3:32"},{"kind":"number","nativeSrc":"8174:4:32","nodeType":"YulLiteral","src":"8174:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"8165:3:32","nodeType":"YulIdentifier","src":"8165:3:32"},"nativeSrc":"8165:14:32","nodeType":"YulFunctionCall","src":"8165:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"8117:33:32","nodeType":"YulIdentifier","src":"8117:33:32"},"nativeSrc":"8117:63:32","nodeType":"YulFunctionCall","src":"8117:63:32"},"nativeSrc":"8117:63:32","nodeType":"YulExpressionStatement","src":"8117:63:32"}]},{"nativeSrc":"8200:173:32","nodeType":"YulBlock","src":"8200:173:32","statements":[{"nativeSrc":"8244:43:32","nodeType":"YulVariableDeclaration","src":"8244:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8274:5:32","nodeType":"YulIdentifier","src":"8274:5:32"},{"kind":"number","nativeSrc":"8281:4:32","nodeType":"YulLiteral","src":"8281:4:32","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"8270:3:32","nodeType":"YulIdentifier","src":"8270:3:32"},"nativeSrc":"8270:16:32","nodeType":"YulFunctionCall","src":"8270:16:32"}],"functionName":{"name":"mload","nativeSrc":"8264:5:32","nodeType":"YulIdentifier","src":"8264:5:32"},"nativeSrc":"8264:23:32","nodeType":"YulFunctionCall","src":"8264:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"8248:12:32","nodeType":"YulTypedName","src":"8248:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"8334:12:32","nodeType":"YulIdentifier","src":"8334:12:32"},{"arguments":[{"name":"pos","nativeSrc":"8352:3:32","nodeType":"YulIdentifier","src":"8352:3:32"},{"kind":"number","nativeSrc":"8357:4:32","nodeType":"YulLiteral","src":"8357:4:32","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"8348:3:32","nodeType":"YulIdentifier","src":"8348:3:32"},"nativeSrc":"8348:14:32","nodeType":"YulFunctionCall","src":"8348:14:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"8300:33:32","nodeType":"YulIdentifier","src":"8300:33:32"},"nativeSrc":"8300:63:32","nodeType":"YulFunctionCall","src":"8300:63:32"},"nativeSrc":"8300:63:32","nodeType":"YulExpressionStatement","src":"8300:63:32"}]},{"nativeSrc":"8383:170:32","nodeType":"YulBlock","src":"8383:170:32","statements":[{"nativeSrc":"8424:43:32","nodeType":"YulVariableDeclaration","src":"8424:43:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8454:5:32","nodeType":"YulIdentifier","src":"8454:5:32"},{"kind":"number","nativeSrc":"8461:4:32","nodeType":"YulLiteral","src":"8461:4:32","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"8450:3:32","nodeType":"YulIdentifier","src":"8450:3:32"},"nativeSrc":"8450:16:32","nodeType":"YulFunctionCall","src":"8450:16:32"}],"functionName":{"name":"mload","nativeSrc":"8444:5:32","nodeType":"YulIdentifier","src":"8444:5:32"},"nativeSrc":"8444:23:32","nodeType":"YulFunctionCall","src":"8444:23:32"},"variables":[{"name":"memberValue0","nativeSrc":"8428:12:32","nodeType":"YulTypedName","src":"8428:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"8514:12:32","nodeType":"YulIdentifier","src":"8514:12:32"},{"arguments":[{"name":"pos","nativeSrc":"8532:3:32","nodeType":"YulIdentifier","src":"8532:3:32"},{"kind":"number","nativeSrc":"8537:4:32","nodeType":"YulLiteral","src":"8537:4:32","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"8528:3:32","nodeType":"YulIdentifier","src":"8528:3:32"},"nativeSrc":"8528:14:32","nodeType":"YulFunctionCall","src":"8528:14:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nativeSrc":"8480:33:32","nodeType":"YulIdentifier","src":"8480:33:32"},"nativeSrc":"8480:63:32","nodeType":"YulFunctionCall","src":"8480:63:32"},"nativeSrc":"8480:63:32","nodeType":"YulExpressionStatement","src":"8480:63:32"}]}]},"name":"abi_encode_t_struct$_Phase_$8473_memory_ptr_to_t_struct$_Phase_$8473_memory_ptr_fromStack","nativeSrc":"6957:1603:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7056:5:32","nodeType":"YulTypedName","src":"7056:5:32","type":""},{"name":"pos","nativeSrc":"7063:3:32","nodeType":"YulTypedName","src":"7063:3:32","type":""}],"src":"6957:1603:32"},{"body":{"nativeSrc":"8738:253:32","nodeType":"YulBlock","src":"8738:253:32","statements":[{"nativeSrc":"8748:27:32","nodeType":"YulAssignment","src":"8748:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"8760:9:32","nodeType":"YulIdentifier","src":"8760:9:32"},{"kind":"number","nativeSrc":"8771:3:32","nodeType":"YulLiteral","src":"8771:3:32","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"8756:3:32","nodeType":"YulIdentifier","src":"8756:3:32"},"nativeSrc":"8756:19:32","nodeType":"YulFunctionCall","src":"8756:19:32"},"variableNames":[{"name":"tail","nativeSrc":"8748:4:32","nodeType":"YulIdentifier","src":"8748:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8829:6:32","nodeType":"YulIdentifier","src":"8829:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"8842:9:32","nodeType":"YulIdentifier","src":"8842:9:32"},{"kind":"number","nativeSrc":"8853:1:32","nodeType":"YulLiteral","src":"8853:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8838:3:32","nodeType":"YulIdentifier","src":"8838:3:32"},"nativeSrc":"8838:17:32","nodeType":"YulFunctionCall","src":"8838:17:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8785:43:32","nodeType":"YulIdentifier","src":"8785:43:32"},"nativeSrc":"8785:71:32","nodeType":"YulFunctionCall","src":"8785:71:32"},"nativeSrc":"8785:71:32","nodeType":"YulExpressionStatement","src":"8785:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8956:6:32","nodeType":"YulIdentifier","src":"8956:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"8969:9:32","nodeType":"YulIdentifier","src":"8969:9:32"},{"kind":"number","nativeSrc":"8980:2:32","nodeType":"YulLiteral","src":"8980:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8965:3:32","nodeType":"YulIdentifier","src":"8965:3:32"},"nativeSrc":"8965:18:32","nodeType":"YulFunctionCall","src":"8965:18:32"}],"functionName":{"name":"abi_encode_t_struct$_Phase_$8473_memory_ptr_to_t_struct$_Phase_$8473_memory_ptr_fromStack","nativeSrc":"8866:89:32","nodeType":"YulIdentifier","src":"8866:89:32"},"nativeSrc":"8866:118:32","nodeType":"YulFunctionCall","src":"8866:118:32"},"nativeSrc":"8866:118:32","nodeType":"YulExpressionStatement","src":"8866:118:32"}]},"name":"abi_encode_tuple_t_uint256_t_struct$_Phase_$8473_memory_ptr__to_t_uint256_t_struct$_Phase_$8473_memory_ptr__fromStack_reversed","nativeSrc":"8566:425:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8702:9:32","nodeType":"YulTypedName","src":"8702:9:32","type":""},{"name":"value1","nativeSrc":"8714:6:32","nodeType":"YulTypedName","src":"8714:6:32","type":""},{"name":"value0","nativeSrc":"8722:6:32","nodeType":"YulTypedName","src":"8722:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8733:4:32","nodeType":"YulTypedName","src":"8733:4:32","type":""}],"src":"8566:425:32"},{"body":{"nativeSrc":"9097:519:32","nodeType":"YulBlock","src":"9097:519:32","statements":[{"body":{"nativeSrc":"9143:83:32","nodeType":"YulBlock","src":"9143:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9145:77:32","nodeType":"YulIdentifier","src":"9145:77:32"},"nativeSrc":"9145:79:32","nodeType":"YulFunctionCall","src":"9145:79:32"},"nativeSrc":"9145:79:32","nodeType":"YulExpressionStatement","src":"9145:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9118:7:32","nodeType":"YulIdentifier","src":"9118:7:32"},{"name":"headStart","nativeSrc":"9127:9:32","nodeType":"YulIdentifier","src":"9127:9:32"}],"functionName":{"name":"sub","nativeSrc":"9114:3:32","nodeType":"YulIdentifier","src":"9114:3:32"},"nativeSrc":"9114:23:32","nodeType":"YulFunctionCall","src":"9114:23:32"},{"kind":"number","nativeSrc":"9139:2:32","nodeType":"YulLiteral","src":"9139:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"9110:3:32","nodeType":"YulIdentifier","src":"9110:3:32"},"nativeSrc":"9110:32:32","nodeType":"YulFunctionCall","src":"9110:32:32"},"nativeSrc":"9107:119:32","nodeType":"YulIf","src":"9107:119:32"},{"nativeSrc":"9236:117:32","nodeType":"YulBlock","src":"9236:117:32","statements":[{"nativeSrc":"9251:15:32","nodeType":"YulVariableDeclaration","src":"9251:15:32","value":{"kind":"number","nativeSrc":"9265:1:32","nodeType":"YulLiteral","src":"9265:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9255:6:32","nodeType":"YulTypedName","src":"9255:6:32","type":""}]},{"nativeSrc":"9280:63:32","nodeType":"YulAssignment","src":"9280:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9315:9:32","nodeType":"YulIdentifier","src":"9315:9:32"},{"name":"offset","nativeSrc":"9326:6:32","nodeType":"YulIdentifier","src":"9326:6:32"}],"functionName":{"name":"add","nativeSrc":"9311:3:32","nodeType":"YulIdentifier","src":"9311:3:32"},"nativeSrc":"9311:22:32","nodeType":"YulFunctionCall","src":"9311:22:32"},{"name":"dataEnd","nativeSrc":"9335:7:32","nodeType":"YulIdentifier","src":"9335:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9290:20:32","nodeType":"YulIdentifier","src":"9290:20:32"},"nativeSrc":"9290:53:32","nodeType":"YulFunctionCall","src":"9290:53:32"},"variableNames":[{"name":"value0","nativeSrc":"9280:6:32","nodeType":"YulIdentifier","src":"9280:6:32"}]}]},{"nativeSrc":"9363:118:32","nodeType":"YulBlock","src":"9363:118:32","statements":[{"nativeSrc":"9378:16:32","nodeType":"YulVariableDeclaration","src":"9378:16:32","value":{"kind":"number","nativeSrc":"9392:2:32","nodeType":"YulLiteral","src":"9392:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9382:6:32","nodeType":"YulTypedName","src":"9382:6:32","type":""}]},{"nativeSrc":"9408:63:32","nodeType":"YulAssignment","src":"9408:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9443:9:32","nodeType":"YulIdentifier","src":"9443:9:32"},{"name":"offset","nativeSrc":"9454:6:32","nodeType":"YulIdentifier","src":"9454:6:32"}],"functionName":{"name":"add","nativeSrc":"9439:3:32","nodeType":"YulIdentifier","src":"9439:3:32"},"nativeSrc":"9439:22:32","nodeType":"YulFunctionCall","src":"9439:22:32"},{"name":"dataEnd","nativeSrc":"9463:7:32","nodeType":"YulIdentifier","src":"9463:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9418:20:32","nodeType":"YulIdentifier","src":"9418:20:32"},"nativeSrc":"9418:53:32","nodeType":"YulFunctionCall","src":"9418:53:32"},"variableNames":[{"name":"value1","nativeSrc":"9408:6:32","nodeType":"YulIdentifier","src":"9408:6:32"}]}]},{"nativeSrc":"9491:118:32","nodeType":"YulBlock","src":"9491:118:32","statements":[{"nativeSrc":"9506:16:32","nodeType":"YulVariableDeclaration","src":"9506:16:32","value":{"kind":"number","nativeSrc":"9520:2:32","nodeType":"YulLiteral","src":"9520:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9510:6:32","nodeType":"YulTypedName","src":"9510:6:32","type":""}]},{"nativeSrc":"9536:63:32","nodeType":"YulAssignment","src":"9536:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9571:9:32","nodeType":"YulIdentifier","src":"9571:9:32"},{"name":"offset","nativeSrc":"9582:6:32","nodeType":"YulIdentifier","src":"9582:6:32"}],"functionName":{"name":"add","nativeSrc":"9567:3:32","nodeType":"YulIdentifier","src":"9567:3:32"},"nativeSrc":"9567:22:32","nodeType":"YulFunctionCall","src":"9567:22:32"},{"name":"dataEnd","nativeSrc":"9591:7:32","nodeType":"YulIdentifier","src":"9591:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9546:20:32","nodeType":"YulIdentifier","src":"9546:20:32"},"nativeSrc":"9546:53:32","nodeType":"YulFunctionCall","src":"9546:53:32"},"variableNames":[{"name":"value2","nativeSrc":"9536:6:32","nodeType":"YulIdentifier","src":"9536:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"8997:619:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9051:9:32","nodeType":"YulTypedName","src":"9051:9:32","type":""},{"name":"dataEnd","nativeSrc":"9062:7:32","nodeType":"YulTypedName","src":"9062:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9074:6:32","nodeType":"YulTypedName","src":"9074:6:32","type":""},{"name":"value1","nativeSrc":"9082:6:32","nodeType":"YulTypedName","src":"9082:6:32","type":""},{"name":"value2","nativeSrc":"9090:6:32","nodeType":"YulTypedName","src":"9090:6:32","type":""}],"src":"8997:619:32"},{"body":{"nativeSrc":"9705:391:32","nodeType":"YulBlock","src":"9705:391:32","statements":[{"body":{"nativeSrc":"9751:83:32","nodeType":"YulBlock","src":"9751:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9753:77:32","nodeType":"YulIdentifier","src":"9753:77:32"},"nativeSrc":"9753:79:32","nodeType":"YulFunctionCall","src":"9753:79:32"},"nativeSrc":"9753:79:32","nodeType":"YulExpressionStatement","src":"9753:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9726:7:32","nodeType":"YulIdentifier","src":"9726:7:32"},{"name":"headStart","nativeSrc":"9735:9:32","nodeType":"YulIdentifier","src":"9735:9:32"}],"functionName":{"name":"sub","nativeSrc":"9722:3:32","nodeType":"YulIdentifier","src":"9722:3:32"},"nativeSrc":"9722:23:32","nodeType":"YulFunctionCall","src":"9722:23:32"},{"kind":"number","nativeSrc":"9747:2:32","nodeType":"YulLiteral","src":"9747:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9718:3:32","nodeType":"YulIdentifier","src":"9718:3:32"},"nativeSrc":"9718:32:32","nodeType":"YulFunctionCall","src":"9718:32:32"},"nativeSrc":"9715:119:32","nodeType":"YulIf","src":"9715:119:32"},{"nativeSrc":"9844:117:32","nodeType":"YulBlock","src":"9844:117:32","statements":[{"nativeSrc":"9859:15:32","nodeType":"YulVariableDeclaration","src":"9859:15:32","value":{"kind":"number","nativeSrc":"9873:1:32","nodeType":"YulLiteral","src":"9873:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9863:6:32","nodeType":"YulTypedName","src":"9863:6:32","type":""}]},{"nativeSrc":"9888:63:32","nodeType":"YulAssignment","src":"9888:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9923:9:32","nodeType":"YulIdentifier","src":"9923:9:32"},{"name":"offset","nativeSrc":"9934:6:32","nodeType":"YulIdentifier","src":"9934:6:32"}],"functionName":{"name":"add","nativeSrc":"9919:3:32","nodeType":"YulIdentifier","src":"9919:3:32"},"nativeSrc":"9919:22:32","nodeType":"YulFunctionCall","src":"9919:22:32"},{"name":"dataEnd","nativeSrc":"9943:7:32","nodeType":"YulIdentifier","src":"9943:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9898:20:32","nodeType":"YulIdentifier","src":"9898:20:32"},"nativeSrc":"9898:53:32","nodeType":"YulFunctionCall","src":"9898:53:32"},"variableNames":[{"name":"value0","nativeSrc":"9888:6:32","nodeType":"YulIdentifier","src":"9888:6:32"}]}]},{"nativeSrc":"9971:118:32","nodeType":"YulBlock","src":"9971:118:32","statements":[{"nativeSrc":"9986:16:32","nodeType":"YulVariableDeclaration","src":"9986:16:32","value":{"kind":"number","nativeSrc":"10000:2:32","nodeType":"YulLiteral","src":"10000:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9990:6:32","nodeType":"YulTypedName","src":"9990:6:32","type":""}]},{"nativeSrc":"10016:63:32","nodeType":"YulAssignment","src":"10016:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10051:9:32","nodeType":"YulIdentifier","src":"10051:9:32"},{"name":"offset","nativeSrc":"10062:6:32","nodeType":"YulIdentifier","src":"10062:6:32"}],"functionName":{"name":"add","nativeSrc":"10047:3:32","nodeType":"YulIdentifier","src":"10047:3:32"},"nativeSrc":"10047:22:32","nodeType":"YulFunctionCall","src":"10047:22:32"},{"name":"dataEnd","nativeSrc":"10071:7:32","nodeType":"YulIdentifier","src":"10071:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10026:20:32","nodeType":"YulIdentifier","src":"10026:20:32"},"nativeSrc":"10026:53:32","nodeType":"YulFunctionCall","src":"10026:53:32"},"variableNames":[{"name":"value1","nativeSrc":"10016:6:32","nodeType":"YulIdentifier","src":"10016:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"9622:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9667:9:32","nodeType":"YulTypedName","src":"9667:9:32","type":""},{"name":"dataEnd","nativeSrc":"9678:7:32","nodeType":"YulTypedName","src":"9678:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9690:6:32","nodeType":"YulTypedName","src":"9690:6:32","type":""},{"name":"value1","nativeSrc":"9698:6:32","nodeType":"YulTypedName","src":"9698:6:32","type":""}],"src":"9622:474:32"},{"body":{"nativeSrc":"10228:206:32","nodeType":"YulBlock","src":"10228:206:32","statements":[{"nativeSrc":"10238:26:32","nodeType":"YulAssignment","src":"10238:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"10250:9:32","nodeType":"YulIdentifier","src":"10250:9:32"},{"kind":"number","nativeSrc":"10261:2:32","nodeType":"YulLiteral","src":"10261:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10246:3:32","nodeType":"YulIdentifier","src":"10246:3:32"},"nativeSrc":"10246:18:32","nodeType":"YulFunctionCall","src":"10246:18:32"},"variableNames":[{"name":"tail","nativeSrc":"10238:4:32","nodeType":"YulIdentifier","src":"10238:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10318:6:32","nodeType":"YulIdentifier","src":"10318:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"10331:9:32","nodeType":"YulIdentifier","src":"10331:9:32"},{"kind":"number","nativeSrc":"10342:1:32","nodeType":"YulLiteral","src":"10342:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10327:3:32","nodeType":"YulIdentifier","src":"10327:3:32"},"nativeSrc":"10327:17:32","nodeType":"YulFunctionCall","src":"10327:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10274:43:32","nodeType":"YulIdentifier","src":"10274:43:32"},"nativeSrc":"10274:71:32","nodeType":"YulFunctionCall","src":"10274:71:32"},"nativeSrc":"10274:71:32","nodeType":"YulExpressionStatement","src":"10274:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10399:6:32","nodeType":"YulIdentifier","src":"10399:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"10412:9:32","nodeType":"YulIdentifier","src":"10412:9:32"},{"kind":"number","nativeSrc":"10423:2:32","nodeType":"YulLiteral","src":"10423:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10408:3:32","nodeType":"YulIdentifier","src":"10408:3:32"},"nativeSrc":"10408:18:32","nodeType":"YulFunctionCall","src":"10408:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10355:43:32","nodeType":"YulIdentifier","src":"10355:43:32"},"nativeSrc":"10355:72:32","nodeType":"YulFunctionCall","src":"10355:72:32"},"nativeSrc":"10355:72:32","nodeType":"YulExpressionStatement","src":"10355:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"10102:332:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10192:9:32","nodeType":"YulTypedName","src":"10192:9:32","type":""},{"name":"value1","nativeSrc":"10204:6:32","nodeType":"YulTypedName","src":"10204:6:32","type":""},{"name":"value0","nativeSrc":"10212:6:32","nodeType":"YulTypedName","src":"10212:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10223:4:32","nodeType":"YulTypedName","src":"10223:4:32","type":""}],"src":"10102:332:32"},{"body":{"nativeSrc":"10517:78:32","nodeType":"YulBlock","src":"10517:78:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10534:3:32","nodeType":"YulIdentifier","src":"10534:3:32"},{"arguments":[{"name":"value","nativeSrc":"10582:5:32","nodeType":"YulIdentifier","src":"10582:5:32"}],"functionName":{"name":"convert_t_enum$_PhaseType_$8455_to_t_uint8","nativeSrc":"10539:42:32","nodeType":"YulIdentifier","src":"10539:42:32"},"nativeSrc":"10539:49:32","nodeType":"YulFunctionCall","src":"10539:49:32"}],"functionName":{"name":"mstore","nativeSrc":"10527:6:32","nodeType":"YulIdentifier","src":"10527:6:32"},"nativeSrc":"10527:62:32","nodeType":"YulFunctionCall","src":"10527:62:32"},"nativeSrc":"10527:62:32","nodeType":"YulExpressionStatement","src":"10527:62:32"}]},"name":"abi_encode_t_enum$_PhaseType_$8455_to_t_uint8_fromStack","nativeSrc":"10440:155:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10505:5:32","nodeType":"YulTypedName","src":"10505:5:32","type":""},{"name":"pos","nativeSrc":"10512:3:32","nodeType":"YulTypedName","src":"10512:3:32","type":""}],"src":"10440:155:32"},{"body":{"nativeSrc":"10666:53:32","nodeType":"YulBlock","src":"10666:53:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10683:3:32","nodeType":"YulIdentifier","src":"10683:3:32"},{"arguments":[{"name":"value","nativeSrc":"10706:5:32","nodeType":"YulIdentifier","src":"10706:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10688:17:32","nodeType":"YulIdentifier","src":"10688:17:32"},"nativeSrc":"10688:24:32","nodeType":"YulFunctionCall","src":"10688:24:32"}],"functionName":{"name":"mstore","nativeSrc":"10676:6:32","nodeType":"YulIdentifier","src":"10676:6:32"},"nativeSrc":"10676:37:32","nodeType":"YulFunctionCall","src":"10676:37:32"},"nativeSrc":"10676:37:32","nodeType":"YulExpressionStatement","src":"10676:37:32"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10601:118:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10654:5:32","nodeType":"YulTypedName","src":"10654:5:32","type":""},{"name":"pos","nativeSrc":"10661:3:32","nodeType":"YulTypedName","src":"10661:3:32","type":""}],"src":"10601:118:32"},{"body":{"nativeSrc":"11031:715:32","nodeType":"YulBlock","src":"11031:715:32","statements":[{"nativeSrc":"11041:27:32","nodeType":"YulAssignment","src":"11041:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"11053:9:32","nodeType":"YulIdentifier","src":"11053:9:32"},{"kind":"number","nativeSrc":"11064:3:32","nodeType":"YulLiteral","src":"11064:3:32","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"11049:3:32","nodeType":"YulIdentifier","src":"11049:3:32"},"nativeSrc":"11049:19:32","nodeType":"YulFunctionCall","src":"11049:19:32"},"variableNames":[{"name":"tail","nativeSrc":"11041:4:32","nodeType":"YulIdentifier","src":"11041:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11134:6:32","nodeType":"YulIdentifier","src":"11134:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11147:9:32","nodeType":"YulIdentifier","src":"11147:9:32"},{"kind":"number","nativeSrc":"11158:1:32","nodeType":"YulLiteral","src":"11158:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11143:3:32","nodeType":"YulIdentifier","src":"11143:3:32"},"nativeSrc":"11143:17:32","nodeType":"YulFunctionCall","src":"11143:17:32"}],"functionName":{"name":"abi_encode_t_enum$_PhaseType_$8455_to_t_uint8_fromStack","nativeSrc":"11078:55:32","nodeType":"YulIdentifier","src":"11078:55:32"},"nativeSrc":"11078:83:32","nodeType":"YulFunctionCall","src":"11078:83:32"},"nativeSrc":"11078:83:32","nodeType":"YulExpressionStatement","src":"11078:83:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11215:6:32","nodeType":"YulIdentifier","src":"11215:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11228:9:32","nodeType":"YulIdentifier","src":"11228:9:32"},{"kind":"number","nativeSrc":"11239:2:32","nodeType":"YulLiteral","src":"11239:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11224:3:32","nodeType":"YulIdentifier","src":"11224:3:32"},"nativeSrc":"11224:18:32","nodeType":"YulFunctionCall","src":"11224:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11171:43:32","nodeType":"YulIdentifier","src":"11171:43:32"},"nativeSrc":"11171:72:32","nodeType":"YulFunctionCall","src":"11171:72:32"},"nativeSrc":"11171:72:32","nodeType":"YulExpressionStatement","src":"11171:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11297:6:32","nodeType":"YulIdentifier","src":"11297:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11310:9:32","nodeType":"YulIdentifier","src":"11310:9:32"},{"kind":"number","nativeSrc":"11321:2:32","nodeType":"YulLiteral","src":"11321:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11306:3:32","nodeType":"YulIdentifier","src":"11306:3:32"},"nativeSrc":"11306:18:32","nodeType":"YulFunctionCall","src":"11306:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11253:43:32","nodeType":"YulIdentifier","src":"11253:43:32"},"nativeSrc":"11253:72:32","nodeType":"YulFunctionCall","src":"11253:72:32"},"nativeSrc":"11253:72:32","nodeType":"YulExpressionStatement","src":"11253:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"11379:6:32","nodeType":"YulIdentifier","src":"11379:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11392:9:32","nodeType":"YulIdentifier","src":"11392:9:32"},{"kind":"number","nativeSrc":"11403:2:32","nodeType":"YulLiteral","src":"11403:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11388:3:32","nodeType":"YulIdentifier","src":"11388:3:32"},"nativeSrc":"11388:18:32","nodeType":"YulFunctionCall","src":"11388:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11335:43:32","nodeType":"YulIdentifier","src":"11335:43:32"},"nativeSrc":"11335:72:32","nodeType":"YulFunctionCall","src":"11335:72:32"},"nativeSrc":"11335:72:32","nodeType":"YulExpressionStatement","src":"11335:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"11461:6:32","nodeType":"YulIdentifier","src":"11461:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11474:9:32","nodeType":"YulIdentifier","src":"11474:9:32"},{"kind":"number","nativeSrc":"11485:3:32","nodeType":"YulLiteral","src":"11485:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11470:3:32","nodeType":"YulIdentifier","src":"11470:3:32"},"nativeSrc":"11470:19:32","nodeType":"YulFunctionCall","src":"11470:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11417:43:32","nodeType":"YulIdentifier","src":"11417:43:32"},"nativeSrc":"11417:73:32","nodeType":"YulFunctionCall","src":"11417:73:32"},"nativeSrc":"11417:73:32","nodeType":"YulExpressionStatement","src":"11417:73:32"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"11544:6:32","nodeType":"YulIdentifier","src":"11544:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11557:9:32","nodeType":"YulIdentifier","src":"11557:9:32"},{"kind":"number","nativeSrc":"11568:3:32","nodeType":"YulLiteral","src":"11568:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"11553:3:32","nodeType":"YulIdentifier","src":"11553:3:32"},"nativeSrc":"11553:19:32","nodeType":"YulFunctionCall","src":"11553:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11500:43:32","nodeType":"YulIdentifier","src":"11500:43:32"},"nativeSrc":"11500:73:32","nodeType":"YulFunctionCall","src":"11500:73:32"},"nativeSrc":"11500:73:32","nodeType":"YulExpressionStatement","src":"11500:73:32"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"11627:6:32","nodeType":"YulIdentifier","src":"11627:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11640:9:32","nodeType":"YulIdentifier","src":"11640:9:32"},{"kind":"number","nativeSrc":"11651:3:32","nodeType":"YulLiteral","src":"11651:3:32","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"11636:3:32","nodeType":"YulIdentifier","src":"11636:3:32"},"nativeSrc":"11636:19:32","nodeType":"YulFunctionCall","src":"11636:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11583:43:32","nodeType":"YulIdentifier","src":"11583:43:32"},"nativeSrc":"11583:73:32","nodeType":"YulFunctionCall","src":"11583:73:32"},"nativeSrc":"11583:73:32","nodeType":"YulExpressionStatement","src":"11583:73:32"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"11710:6:32","nodeType":"YulIdentifier","src":"11710:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"11723:9:32","nodeType":"YulIdentifier","src":"11723:9:32"},{"kind":"number","nativeSrc":"11734:3:32","nodeType":"YulLiteral","src":"11734:3:32","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"11719:3:32","nodeType":"YulIdentifier","src":"11719:3:32"},"nativeSrc":"11719:19:32","nodeType":"YulFunctionCall","src":"11719:19:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"11666:43:32","nodeType":"YulIdentifier","src":"11666:43:32"},"nativeSrc":"11666:73:32","nodeType":"YulFunctionCall","src":"11666:73:32"},"nativeSrc":"11666:73:32","nodeType":"YulExpressionStatement","src":"11666:73:32"}]},"name":"abi_encode_tuple_t_enum$_PhaseType_$8455_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nativeSrc":"10725:1021:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10947:9:32","nodeType":"YulTypedName","src":"10947:9:32","type":""},{"name":"value7","nativeSrc":"10959:6:32","nodeType":"YulTypedName","src":"10959:6:32","type":""},{"name":"value6","nativeSrc":"10967:6:32","nodeType":"YulTypedName","src":"10967:6:32","type":""},{"name":"value5","nativeSrc":"10975:6:32","nodeType":"YulTypedName","src":"10975:6:32","type":""},{"name":"value4","nativeSrc":"10983:6:32","nodeType":"YulTypedName","src":"10983:6:32","type":""},{"name":"value3","nativeSrc":"10991:6:32","nodeType":"YulTypedName","src":"10991:6:32","type":""},{"name":"value2","nativeSrc":"10999:6:32","nodeType":"YulTypedName","src":"10999:6:32","type":""},{"name":"value1","nativeSrc":"11007:6:32","nodeType":"YulTypedName","src":"11007:6:32","type":""},{"name":"value0","nativeSrc":"11015:6:32","nodeType":"YulTypedName","src":"11015:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11026:4:32","nodeType":"YulTypedName","src":"11026:4:32","type":""}],"src":"10725:1021:32"},{"body":{"nativeSrc":"11809:56:32","nodeType":"YulBlock","src":"11809:56:32","statements":[{"body":{"nativeSrc":"11843:16:32","nodeType":"YulBlock","src":"11843:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11852:1:32","nodeType":"YulLiteral","src":"11852:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"11855:1:32","nodeType":"YulLiteral","src":"11855:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11845:6:32","nodeType":"YulIdentifier","src":"11845:6:32"},"nativeSrc":"11845:12:32","nodeType":"YulFunctionCall","src":"11845:12:32"},"nativeSrc":"11845:12:32","nodeType":"YulExpressionStatement","src":"11845:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11832:5:32","nodeType":"YulIdentifier","src":"11832:5:32"},{"kind":"number","nativeSrc":"11839:1:32","nodeType":"YulLiteral","src":"11839:1:32","type":"","value":"4"}],"functionName":{"name":"lt","nativeSrc":"11829:2:32","nodeType":"YulIdentifier","src":"11829:2:32"},"nativeSrc":"11829:12:32","nodeType":"YulFunctionCall","src":"11829:12:32"}],"functionName":{"name":"iszero","nativeSrc":"11822:6:32","nodeType":"YulIdentifier","src":"11822:6:32"},"nativeSrc":"11822:20:32","nodeType":"YulFunctionCall","src":"11822:20:32"},"nativeSrc":"11819:40:32","nodeType":"YulIf","src":"11819:40:32"}]},"name":"validator_revert_t_enum$_PhaseType_$8455","nativeSrc":"11752:113:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11802:5:32","nodeType":"YulTypedName","src":"11802:5:32","type":""}],"src":"11752:113:32"},{"body":{"nativeSrc":"11937:101:32","nodeType":"YulBlock","src":"11937:101:32","statements":[{"nativeSrc":"11947:29:32","nodeType":"YulAssignment","src":"11947:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"11969:6:32","nodeType":"YulIdentifier","src":"11969:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"11956:12:32","nodeType":"YulIdentifier","src":"11956:12:32"},"nativeSrc":"11956:20:32","nodeType":"YulFunctionCall","src":"11956:20:32"},"variableNames":[{"name":"value","nativeSrc":"11947:5:32","nodeType":"YulIdentifier","src":"11947:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12026:5:32","nodeType":"YulIdentifier","src":"12026:5:32"}],"functionName":{"name":"validator_revert_t_enum$_PhaseType_$8455","nativeSrc":"11985:40:32","nodeType":"YulIdentifier","src":"11985:40:32"},"nativeSrc":"11985:47:32","nodeType":"YulFunctionCall","src":"11985:47:32"},"nativeSrc":"11985:47:32","nodeType":"YulExpressionStatement","src":"11985:47:32"}]},"name":"abi_decode_t_enum$_PhaseType_$8455","nativeSrc":"11871:167:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11915:6:32","nodeType":"YulTypedName","src":"11915:6:32","type":""},{"name":"end","nativeSrc":"11923:3:32","nodeType":"YulTypedName","src":"11923:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11931:5:32","nodeType":"YulTypedName","src":"11931:5:32","type":""}],"src":"11871:167:32"},{"body":{"nativeSrc":"12087:79:32","nodeType":"YulBlock","src":"12087:79:32","statements":[{"body":{"nativeSrc":"12144:16:32","nodeType":"YulBlock","src":"12144:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12153:1:32","nodeType":"YulLiteral","src":"12153:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"12156:1:32","nodeType":"YulLiteral","src":"12156:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12146:6:32","nodeType":"YulIdentifier","src":"12146:6:32"},"nativeSrc":"12146:12:32","nodeType":"YulFunctionCall","src":"12146:12:32"},"nativeSrc":"12146:12:32","nodeType":"YulExpressionStatement","src":"12146:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12110:5:32","nodeType":"YulIdentifier","src":"12110:5:32"},{"arguments":[{"name":"value","nativeSrc":"12135:5:32","nodeType":"YulIdentifier","src":"12135:5:32"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12117:17:32","nodeType":"YulIdentifier","src":"12117:17:32"},"nativeSrc":"12117:24:32","nodeType":"YulFunctionCall","src":"12117:24:32"}],"functionName":{"name":"eq","nativeSrc":"12107:2:32","nodeType":"YulIdentifier","src":"12107:2:32"},"nativeSrc":"12107:35:32","nodeType":"YulFunctionCall","src":"12107:35:32"}],"functionName":{"name":"iszero","nativeSrc":"12100:6:32","nodeType":"YulIdentifier","src":"12100:6:32"},"nativeSrc":"12100:43:32","nodeType":"YulFunctionCall","src":"12100:43:32"},"nativeSrc":"12097:63:32","nodeType":"YulIf","src":"12097:63:32"}]},"name":"validator_revert_t_bytes32","nativeSrc":"12044:122:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12080:5:32","nodeType":"YulTypedName","src":"12080:5:32","type":""}],"src":"12044:122:32"},{"body":{"nativeSrc":"12224:87:32","nodeType":"YulBlock","src":"12224:87:32","statements":[{"nativeSrc":"12234:29:32","nodeType":"YulAssignment","src":"12234:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"12256:6:32","nodeType":"YulIdentifier","src":"12256:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"12243:12:32","nodeType":"YulIdentifier","src":"12243:12:32"},"nativeSrc":"12243:20:32","nodeType":"YulFunctionCall","src":"12243:20:32"},"variableNames":[{"name":"value","nativeSrc":"12234:5:32","nodeType":"YulIdentifier","src":"12234:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12299:5:32","nodeType":"YulIdentifier","src":"12299:5:32"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"12272:26:32","nodeType":"YulIdentifier","src":"12272:26:32"},"nativeSrc":"12272:33:32","nodeType":"YulFunctionCall","src":"12272:33:32"},"nativeSrc":"12272:33:32","nodeType":"YulExpressionStatement","src":"12272:33:32"}]},"name":"abi_decode_t_bytes32","nativeSrc":"12172:139:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12202:6:32","nodeType":"YulTypedName","src":"12202:6:32","type":""},{"name":"end","nativeSrc":"12210:3:32","nodeType":"YulTypedName","src":"12210:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12218:5:32","nodeType":"YulTypedName","src":"12218:5:32","type":""}],"src":"12172:139:32"},{"body":{"nativeSrc":"12499:1049:32","nodeType":"YulBlock","src":"12499:1049:32","statements":[{"body":{"nativeSrc":"12546:83:32","nodeType":"YulBlock","src":"12546:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12548:77:32","nodeType":"YulIdentifier","src":"12548:77:32"},"nativeSrc":"12548:79:32","nodeType":"YulFunctionCall","src":"12548:79:32"},"nativeSrc":"12548:79:32","nodeType":"YulExpressionStatement","src":"12548:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12520:7:32","nodeType":"YulIdentifier","src":"12520:7:32"},{"name":"headStart","nativeSrc":"12529:9:32","nodeType":"YulIdentifier","src":"12529:9:32"}],"functionName":{"name":"sub","nativeSrc":"12516:3:32","nodeType":"YulIdentifier","src":"12516:3:32"},"nativeSrc":"12516:23:32","nodeType":"YulFunctionCall","src":"12516:23:32"},{"kind":"number","nativeSrc":"12541:3:32","nodeType":"YulLiteral","src":"12541:3:32","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"12512:3:32","nodeType":"YulIdentifier","src":"12512:3:32"},"nativeSrc":"12512:33:32","nodeType":"YulFunctionCall","src":"12512:33:32"},"nativeSrc":"12509:120:32","nodeType":"YulIf","src":"12509:120:32"},{"nativeSrc":"12639:131:32","nodeType":"YulBlock","src":"12639:131:32","statements":[{"nativeSrc":"12654:15:32","nodeType":"YulVariableDeclaration","src":"12654:15:32","value":{"kind":"number","nativeSrc":"12668:1:32","nodeType":"YulLiteral","src":"12668:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12658:6:32","nodeType":"YulTypedName","src":"12658:6:32","type":""}]},{"nativeSrc":"12683:77:32","nodeType":"YulAssignment","src":"12683:77:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12732:9:32","nodeType":"YulIdentifier","src":"12732:9:32"},{"name":"offset","nativeSrc":"12743:6:32","nodeType":"YulIdentifier","src":"12743:6:32"}],"functionName":{"name":"add","nativeSrc":"12728:3:32","nodeType":"YulIdentifier","src":"12728:3:32"},"nativeSrc":"12728:22:32","nodeType":"YulFunctionCall","src":"12728:22:32"},{"name":"dataEnd","nativeSrc":"12752:7:32","nodeType":"YulIdentifier","src":"12752:7:32"}],"functionName":{"name":"abi_decode_t_enum$_PhaseType_$8455","nativeSrc":"12693:34:32","nodeType":"YulIdentifier","src":"12693:34:32"},"nativeSrc":"12693:67:32","nodeType":"YulFunctionCall","src":"12693:67:32"},"variableNames":[{"name":"value0","nativeSrc":"12683:6:32","nodeType":"YulIdentifier","src":"12683:6:32"}]}]},{"nativeSrc":"12780:118:32","nodeType":"YulBlock","src":"12780:118:32","statements":[{"nativeSrc":"12795:16:32","nodeType":"YulVariableDeclaration","src":"12795:16:32","value":{"kind":"number","nativeSrc":"12809:2:32","nodeType":"YulLiteral","src":"12809:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12799:6:32","nodeType":"YulTypedName","src":"12799:6:32","type":""}]},{"nativeSrc":"12825:63:32","nodeType":"YulAssignment","src":"12825:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12860:9:32","nodeType":"YulIdentifier","src":"12860:9:32"},{"name":"offset","nativeSrc":"12871:6:32","nodeType":"YulIdentifier","src":"12871:6:32"}],"functionName":{"name":"add","nativeSrc":"12856:3:32","nodeType":"YulIdentifier","src":"12856:3:32"},"nativeSrc":"12856:22:32","nodeType":"YulFunctionCall","src":"12856:22:32"},{"name":"dataEnd","nativeSrc":"12880:7:32","nodeType":"YulIdentifier","src":"12880:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12835:20:32","nodeType":"YulIdentifier","src":"12835:20:32"},"nativeSrc":"12835:53:32","nodeType":"YulFunctionCall","src":"12835:53:32"},"variableNames":[{"name":"value1","nativeSrc":"12825:6:32","nodeType":"YulIdentifier","src":"12825:6:32"}]}]},{"nativeSrc":"12908:118:32","nodeType":"YulBlock","src":"12908:118:32","statements":[{"nativeSrc":"12923:16:32","nodeType":"YulVariableDeclaration","src":"12923:16:32","value":{"kind":"number","nativeSrc":"12937:2:32","nodeType":"YulLiteral","src":"12937:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"12927:6:32","nodeType":"YulTypedName","src":"12927:6:32","type":""}]},{"nativeSrc":"12953:63:32","nodeType":"YulAssignment","src":"12953:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12988:9:32","nodeType":"YulIdentifier","src":"12988:9:32"},{"name":"offset","nativeSrc":"12999:6:32","nodeType":"YulIdentifier","src":"12999:6:32"}],"functionName":{"name":"add","nativeSrc":"12984:3:32","nodeType":"YulIdentifier","src":"12984:3:32"},"nativeSrc":"12984:22:32","nodeType":"YulFunctionCall","src":"12984:22:32"},{"name":"dataEnd","nativeSrc":"13008:7:32","nodeType":"YulIdentifier","src":"13008:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12963:20:32","nodeType":"YulIdentifier","src":"12963:20:32"},"nativeSrc":"12963:53:32","nodeType":"YulFunctionCall","src":"12963:53:32"},"variableNames":[{"name":"value2","nativeSrc":"12953:6:32","nodeType":"YulIdentifier","src":"12953:6:32"}]}]},{"nativeSrc":"13036:118:32","nodeType":"YulBlock","src":"13036:118:32","statements":[{"nativeSrc":"13051:16:32","nodeType":"YulVariableDeclaration","src":"13051:16:32","value":{"kind":"number","nativeSrc":"13065:2:32","nodeType":"YulLiteral","src":"13065:2:32","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"13055:6:32","nodeType":"YulTypedName","src":"13055:6:32","type":""}]},{"nativeSrc":"13081:63:32","nodeType":"YulAssignment","src":"13081:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13116:9:32","nodeType":"YulIdentifier","src":"13116:9:32"},{"name":"offset","nativeSrc":"13127:6:32","nodeType":"YulIdentifier","src":"13127:6:32"}],"functionName":{"name":"add","nativeSrc":"13112:3:32","nodeType":"YulIdentifier","src":"13112:3:32"},"nativeSrc":"13112:22:32","nodeType":"YulFunctionCall","src":"13112:22:32"},{"name":"dataEnd","nativeSrc":"13136:7:32","nodeType":"YulIdentifier","src":"13136:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13091:20:32","nodeType":"YulIdentifier","src":"13091:20:32"},"nativeSrc":"13091:53:32","nodeType":"YulFunctionCall","src":"13091:53:32"},"variableNames":[{"name":"value3","nativeSrc":"13081:6:32","nodeType":"YulIdentifier","src":"13081:6:32"}]}]},{"nativeSrc":"13164:119:32","nodeType":"YulBlock","src":"13164:119:32","statements":[{"nativeSrc":"13179:17:32","nodeType":"YulVariableDeclaration","src":"13179:17:32","value":{"kind":"number","nativeSrc":"13193:3:32","nodeType":"YulLiteral","src":"13193:3:32","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"13183:6:32","nodeType":"YulTypedName","src":"13183:6:32","type":""}]},{"nativeSrc":"13210:63:32","nodeType":"YulAssignment","src":"13210:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13245:9:32","nodeType":"YulIdentifier","src":"13245:9:32"},{"name":"offset","nativeSrc":"13256:6:32","nodeType":"YulIdentifier","src":"13256:6:32"}],"functionName":{"name":"add","nativeSrc":"13241:3:32","nodeType":"YulIdentifier","src":"13241:3:32"},"nativeSrc":"13241:22:32","nodeType":"YulFunctionCall","src":"13241:22:32"},{"name":"dataEnd","nativeSrc":"13265:7:32","nodeType":"YulIdentifier","src":"13265:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13220:20:32","nodeType":"YulIdentifier","src":"13220:20:32"},"nativeSrc":"13220:53:32","nodeType":"YulFunctionCall","src":"13220:53:32"},"variableNames":[{"name":"value4","nativeSrc":"13210:6:32","nodeType":"YulIdentifier","src":"13210:6:32"}]}]},{"nativeSrc":"13293:119:32","nodeType":"YulBlock","src":"13293:119:32","statements":[{"nativeSrc":"13308:17:32","nodeType":"YulVariableDeclaration","src":"13308:17:32","value":{"kind":"number","nativeSrc":"13322:3:32","nodeType":"YulLiteral","src":"13322:3:32","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"13312:6:32","nodeType":"YulTypedName","src":"13312:6:32","type":""}]},{"nativeSrc":"13339:63:32","nodeType":"YulAssignment","src":"13339:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13374:9:32","nodeType":"YulIdentifier","src":"13374:9:32"},{"name":"offset","nativeSrc":"13385:6:32","nodeType":"YulIdentifier","src":"13385:6:32"}],"functionName":{"name":"add","nativeSrc":"13370:3:32","nodeType":"YulIdentifier","src":"13370:3:32"},"nativeSrc":"13370:22:32","nodeType":"YulFunctionCall","src":"13370:22:32"},{"name":"dataEnd","nativeSrc":"13394:7:32","nodeType":"YulIdentifier","src":"13394:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13349:20:32","nodeType":"YulIdentifier","src":"13349:20:32"},"nativeSrc":"13349:53:32","nodeType":"YulFunctionCall","src":"13349:53:32"},"variableNames":[{"name":"value5","nativeSrc":"13339:6:32","nodeType":"YulIdentifier","src":"13339:6:32"}]}]},{"nativeSrc":"13422:119:32","nodeType":"YulBlock","src":"13422:119:32","statements":[{"nativeSrc":"13437:17:32","nodeType":"YulVariableDeclaration","src":"13437:17:32","value":{"kind":"number","nativeSrc":"13451:3:32","nodeType":"YulLiteral","src":"13451:3:32","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"13441:6:32","nodeType":"YulTypedName","src":"13441:6:32","type":""}]},{"nativeSrc":"13468:63:32","nodeType":"YulAssignment","src":"13468:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13503:9:32","nodeType":"YulIdentifier","src":"13503:9:32"},{"name":"offset","nativeSrc":"13514:6:32","nodeType":"YulIdentifier","src":"13514:6:32"}],"functionName":{"name":"add","nativeSrc":"13499:3:32","nodeType":"YulIdentifier","src":"13499:3:32"},"nativeSrc":"13499:22:32","nodeType":"YulFunctionCall","src":"13499:22:32"},{"name":"dataEnd","nativeSrc":"13523:7:32","nodeType":"YulIdentifier","src":"13523:7:32"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"13478:20:32","nodeType":"YulIdentifier","src":"13478:20:32"},"nativeSrc":"13478:53:32","nodeType":"YulFunctionCall","src":"13478:53:32"},"variableNames":[{"name":"value6","nativeSrc":"13468:6:32","nodeType":"YulIdentifier","src":"13468:6:32"}]}]}]},"name":"abi_decode_tuple_t_enum$_PhaseType_$8455t_uint256t_uint256t_uint256t_uint256t_uint256t_bytes32","nativeSrc":"12317:1231:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12421:9:32","nodeType":"YulTypedName","src":"12421:9:32","type":""},{"name":"dataEnd","nativeSrc":"12432:7:32","nodeType":"YulTypedName","src":"12432:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12444:6:32","nodeType":"YulTypedName","src":"12444:6:32","type":""},{"name":"value1","nativeSrc":"12452:6:32","nodeType":"YulTypedName","src":"12452:6:32","type":""},{"name":"value2","nativeSrc":"12460:6:32","nodeType":"YulTypedName","src":"12460:6:32","type":""},{"name":"value3","nativeSrc":"12468:6:32","nodeType":"YulTypedName","src":"12468:6:32","type":""},{"name":"value4","nativeSrc":"12476:6:32","nodeType":"YulTypedName","src":"12476:6:32","type":""},{"name":"value5","nativeSrc":"12484:6:32","nodeType":"YulTypedName","src":"12484:6:32","type":""},{"name":"value6","nativeSrc":"12492:6:32","nodeType":"YulTypedName","src":"12492:6:32","type":""}],"src":"12317:1231:32"},{"body":{"nativeSrc":"13620:263:32","nodeType":"YulBlock","src":"13620:263:32","statements":[{"body":{"nativeSrc":"13666:83:32","nodeType":"YulBlock","src":"13666:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13668:77:32","nodeType":"YulIdentifier","src":"13668:77:32"},"nativeSrc":"13668:79:32","nodeType":"YulFunctionCall","src":"13668:79:32"},"nativeSrc":"13668:79:32","nodeType":"YulExpressionStatement","src":"13668:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13641:7:32","nodeType":"YulIdentifier","src":"13641:7:32"},{"name":"headStart","nativeSrc":"13650:9:32","nodeType":"YulIdentifier","src":"13650:9:32"}],"functionName":{"name":"sub","nativeSrc":"13637:3:32","nodeType":"YulIdentifier","src":"13637:3:32"},"nativeSrc":"13637:23:32","nodeType":"YulFunctionCall","src":"13637:23:32"},{"kind":"number","nativeSrc":"13662:2:32","nodeType":"YulLiteral","src":"13662:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13633:3:32","nodeType":"YulIdentifier","src":"13633:3:32"},"nativeSrc":"13633:32:32","nodeType":"YulFunctionCall","src":"13633:32:32"},"nativeSrc":"13630:119:32","nodeType":"YulIf","src":"13630:119:32"},{"nativeSrc":"13759:117:32","nodeType":"YulBlock","src":"13759:117:32","statements":[{"nativeSrc":"13774:15:32","nodeType":"YulVariableDeclaration","src":"13774:15:32","value":{"kind":"number","nativeSrc":"13788:1:32","nodeType":"YulLiteral","src":"13788:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13778:6:32","nodeType":"YulTypedName","src":"13778:6:32","type":""}]},{"nativeSrc":"13803:63:32","nodeType":"YulAssignment","src":"13803:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13838:9:32","nodeType":"YulIdentifier","src":"13838:9:32"},{"name":"offset","nativeSrc":"13849:6:32","nodeType":"YulIdentifier","src":"13849:6:32"}],"functionName":{"name":"add","nativeSrc":"13834:3:32","nodeType":"YulIdentifier","src":"13834:3:32"},"nativeSrc":"13834:22:32","nodeType":"YulFunctionCall","src":"13834:22:32"},{"name":"dataEnd","nativeSrc":"13858:7:32","nodeType":"YulIdentifier","src":"13858:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13813:20:32","nodeType":"YulIdentifier","src":"13813:20:32"},"nativeSrc":"13813:53:32","nodeType":"YulFunctionCall","src":"13813:53:32"},"variableNames":[{"name":"value0","nativeSrc":"13803:6:32","nodeType":"YulIdentifier","src":"13803:6:32"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"13554:329:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13590:9:32","nodeType":"YulTypedName","src":"13590:9:32","type":""},{"name":"dataEnd","nativeSrc":"13601:7:32","nodeType":"YulTypedName","src":"13601:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13613:6:32","nodeType":"YulTypedName","src":"13613:6:32","type":""}],"src":"13554:329:32"},{"body":{"nativeSrc":"13963:40:32","nodeType":"YulBlock","src":"13963:40:32","statements":[{"nativeSrc":"13974:22:32","nodeType":"YulAssignment","src":"13974:22:32","value":{"arguments":[{"name":"value","nativeSrc":"13990:5:32","nodeType":"YulIdentifier","src":"13990:5:32"}],"functionName":{"name":"mload","nativeSrc":"13984:5:32","nodeType":"YulIdentifier","src":"13984:5:32"},"nativeSrc":"13984:12:32","nodeType":"YulFunctionCall","src":"13984:12:32"},"variableNames":[{"name":"length","nativeSrc":"13974:6:32","nodeType":"YulIdentifier","src":"13974:6:32"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"13889:114:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13946:5:32","nodeType":"YulTypedName","src":"13946:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"13956:6:32","nodeType":"YulTypedName","src":"13956:6:32","type":""}],"src":"13889:114:32"},{"body":{"nativeSrc":"14120:73:32","nodeType":"YulBlock","src":"14120:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14137:3:32","nodeType":"YulIdentifier","src":"14137:3:32"},{"name":"length","nativeSrc":"14142:6:32","nodeType":"YulIdentifier","src":"14142:6:32"}],"functionName":{"name":"mstore","nativeSrc":"14130:6:32","nodeType":"YulIdentifier","src":"14130:6:32"},"nativeSrc":"14130:19:32","nodeType":"YulFunctionCall","src":"14130:19:32"},"nativeSrc":"14130:19:32","nodeType":"YulExpressionStatement","src":"14130:19:32"},{"nativeSrc":"14158:29:32","nodeType":"YulAssignment","src":"14158:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"14177:3:32","nodeType":"YulIdentifier","src":"14177:3:32"},{"kind":"number","nativeSrc":"14182:4:32","nodeType":"YulLiteral","src":"14182:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14173:3:32","nodeType":"YulIdentifier","src":"14173:3:32"},"nativeSrc":"14173:14:32","nodeType":"YulFunctionCall","src":"14173:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"14158:11:32","nodeType":"YulIdentifier","src":"14158:11:32"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"14009:184:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14092:3:32","nodeType":"YulTypedName","src":"14092:3:32","type":""},{"name":"length","nativeSrc":"14097:6:32","nodeType":"YulTypedName","src":"14097:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14108:11:32","nodeType":"YulTypedName","src":"14108:11:32","type":""}],"src":"14009:184:32"},{"body":{"nativeSrc":"14271:60:32","nodeType":"YulBlock","src":"14271:60:32","statements":[{"nativeSrc":"14281:11:32","nodeType":"YulAssignment","src":"14281:11:32","value":{"name":"ptr","nativeSrc":"14289:3:32","nodeType":"YulIdentifier","src":"14289:3:32"},"variableNames":[{"name":"data","nativeSrc":"14281:4:32","nodeType":"YulIdentifier","src":"14281:4:32"}]},{"nativeSrc":"14302:22:32","nodeType":"YulAssignment","src":"14302:22:32","value":{"arguments":[{"name":"ptr","nativeSrc":"14314:3:32","nodeType":"YulIdentifier","src":"14314:3:32"},{"kind":"number","nativeSrc":"14319:4:32","nodeType":"YulLiteral","src":"14319:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14310:3:32","nodeType":"YulIdentifier","src":"14310:3:32"},"nativeSrc":"14310:14:32","nodeType":"YulFunctionCall","src":"14310:14:32"},"variableNames":[{"name":"data","nativeSrc":"14302:4:32","nodeType":"YulIdentifier","src":"14302:4:32"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14199:132:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14258:3:32","nodeType":"YulTypedName","src":"14258:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"14266:4:32","nodeType":"YulTypedName","src":"14266:4:32","type":""}],"src":"14199:132:32"},{"body":{"nativeSrc":"14417:99:32","nodeType":"YulBlock","src":"14417:99:32","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"14461:6:32","nodeType":"YulIdentifier","src":"14461:6:32"},{"name":"pos","nativeSrc":"14469:3:32","nodeType":"YulIdentifier","src":"14469:3:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"14427:33:32","nodeType":"YulIdentifier","src":"14427:33:32"},"nativeSrc":"14427:46:32","nodeType":"YulFunctionCall","src":"14427:46:32"},"nativeSrc":"14427:46:32","nodeType":"YulExpressionStatement","src":"14427:46:32"},{"nativeSrc":"14482:28:32","nodeType":"YulAssignment","src":"14482:28:32","value":{"arguments":[{"name":"pos","nativeSrc":"14500:3:32","nodeType":"YulIdentifier","src":"14500:3:32"},{"kind":"number","nativeSrc":"14505:4:32","nodeType":"YulLiteral","src":"14505:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14496:3:32","nodeType":"YulIdentifier","src":"14496:3:32"},"nativeSrc":"14496:14:32","nodeType":"YulFunctionCall","src":"14496:14:32"},"variableNames":[{"name":"updatedPos","nativeSrc":"14482:10:32","nodeType":"YulIdentifier","src":"14482:10:32"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"14337:179:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"14390:6:32","nodeType":"YulTypedName","src":"14390:6:32","type":""},{"name":"pos","nativeSrc":"14398:3:32","nodeType":"YulTypedName","src":"14398:3:32","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"14406:10:32","nodeType":"YulTypedName","src":"14406:10:32","type":""}],"src":"14337:179:32"},{"body":{"nativeSrc":"14597:38:32","nodeType":"YulBlock","src":"14597:38:32","statements":[{"nativeSrc":"14607:22:32","nodeType":"YulAssignment","src":"14607:22:32","value":{"arguments":[{"name":"ptr","nativeSrc":"14619:3:32","nodeType":"YulIdentifier","src":"14619:3:32"},{"kind":"number","nativeSrc":"14624:4:32","nodeType":"YulLiteral","src":"14624:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14615:3:32","nodeType":"YulIdentifier","src":"14615:3:32"},"nativeSrc":"14615:14:32","nodeType":"YulFunctionCall","src":"14615:14:32"},"variableNames":[{"name":"next","nativeSrc":"14607:4:32","nodeType":"YulIdentifier","src":"14607:4:32"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14522:113:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14584:3:32","nodeType":"YulTypedName","src":"14584:3:32","type":""}],"returnVariables":[{"name":"next","nativeSrc":"14592:4:32","nodeType":"YulTypedName","src":"14592:4:32","type":""}],"src":"14522:113:32"},{"body":{"nativeSrc":"14795:608:32","nodeType":"YulBlock","src":"14795:608:32","statements":[{"nativeSrc":"14805:68:32","nodeType":"YulVariableDeclaration","src":"14805:68:32","value":{"arguments":[{"name":"value","nativeSrc":"14867:5:32","nodeType":"YulIdentifier","src":"14867:5:32"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14819:47:32","nodeType":"YulIdentifier","src":"14819:47:32"},"nativeSrc":"14819:54:32","nodeType":"YulFunctionCall","src":"14819:54:32"},"variables":[{"name":"length","nativeSrc":"14809:6:32","nodeType":"YulTypedName","src":"14809:6:32","type":""}]},{"nativeSrc":"14882:93:32","nodeType":"YulAssignment","src":"14882:93:32","value":{"arguments":[{"name":"pos","nativeSrc":"14963:3:32","nodeType":"YulIdentifier","src":"14963:3:32"},{"name":"length","nativeSrc":"14968:6:32","nodeType":"YulIdentifier","src":"14968:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"14889:73:32","nodeType":"YulIdentifier","src":"14889:73:32"},"nativeSrc":"14889:86:32","nodeType":"YulFunctionCall","src":"14889:86:32"},"variableNames":[{"name":"pos","nativeSrc":"14882:3:32","nodeType":"YulIdentifier","src":"14882:3:32"}]},{"nativeSrc":"14984:71:32","nodeType":"YulVariableDeclaration","src":"14984:71:32","value":{"arguments":[{"name":"value","nativeSrc":"15049:5:32","nodeType":"YulIdentifier","src":"15049:5:32"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"14999:49:32","nodeType":"YulIdentifier","src":"14999:49:32"},"nativeSrc":"14999:56:32","nodeType":"YulFunctionCall","src":"14999:56:32"},"variables":[{"name":"baseRef","nativeSrc":"14988:7:32","nodeType":"YulTypedName","src":"14988:7:32","type":""}]},{"nativeSrc":"15064:21:32","nodeType":"YulVariableDeclaration","src":"15064:21:32","value":{"name":"baseRef","nativeSrc":"15078:7:32","nodeType":"YulIdentifier","src":"15078:7:32"},"variables":[{"name":"srcPtr","nativeSrc":"15068:6:32","nodeType":"YulTypedName","src":"15068:6:32","type":""}]},{"body":{"nativeSrc":"15154:224:32","nodeType":"YulBlock","src":"15154:224:32","statements":[{"nativeSrc":"15168:34:32","nodeType":"YulVariableDeclaration","src":"15168:34:32","value":{"arguments":[{"name":"srcPtr","nativeSrc":"15195:6:32","nodeType":"YulIdentifier","src":"15195:6:32"}],"functionName":{"name":"mload","nativeSrc":"15189:5:32","nodeType":"YulIdentifier","src":"15189:5:32"},"nativeSrc":"15189:13:32","nodeType":"YulFunctionCall","src":"15189:13:32"},"variables":[{"name":"elementValue0","nativeSrc":"15172:13:32","nodeType":"YulTypedName","src":"15172:13:32","type":""}]},{"nativeSrc":"15215:70:32","nodeType":"YulAssignment","src":"15215:70:32","value":{"arguments":[{"name":"elementValue0","nativeSrc":"15266:13:32","nodeType":"YulIdentifier","src":"15266:13:32"},{"name":"pos","nativeSrc":"15281:3:32","nodeType":"YulIdentifier","src":"15281:3:32"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"15222:43:32","nodeType":"YulIdentifier","src":"15222:43:32"},"nativeSrc":"15222:63:32","nodeType":"YulFunctionCall","src":"15222:63:32"},"variableNames":[{"name":"pos","nativeSrc":"15215:3:32","nodeType":"YulIdentifier","src":"15215:3:32"}]},{"nativeSrc":"15298:70:32","nodeType":"YulAssignment","src":"15298:70:32","value":{"arguments":[{"name":"srcPtr","nativeSrc":"15361:6:32","nodeType":"YulIdentifier","src":"15361:6:32"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"15308:52:32","nodeType":"YulIdentifier","src":"15308:52:32"},"nativeSrc":"15308:60:32","nodeType":"YulFunctionCall","src":"15308:60:32"},"variableNames":[{"name":"srcPtr","nativeSrc":"15298:6:32","nodeType":"YulIdentifier","src":"15298:6:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"15116:1:32","nodeType":"YulIdentifier","src":"15116:1:32"},{"name":"length","nativeSrc":"15119:6:32","nodeType":"YulIdentifier","src":"15119:6:32"}],"functionName":{"name":"lt","nativeSrc":"15113:2:32","nodeType":"YulIdentifier","src":"15113:2:32"},"nativeSrc":"15113:13:32","nodeType":"YulFunctionCall","src":"15113:13:32"},"nativeSrc":"15094:284:32","nodeType":"YulForLoop","post":{"nativeSrc":"15127:18:32","nodeType":"YulBlock","src":"15127:18:32","statements":[{"nativeSrc":"15129:14:32","nodeType":"YulAssignment","src":"15129:14:32","value":{"arguments":[{"name":"i","nativeSrc":"15138:1:32","nodeType":"YulIdentifier","src":"15138:1:32"},{"kind":"number","nativeSrc":"15141:1:32","nodeType":"YulLiteral","src":"15141:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15134:3:32","nodeType":"YulIdentifier","src":"15134:3:32"},"nativeSrc":"15134:9:32","nodeType":"YulFunctionCall","src":"15134:9:32"},"variableNames":[{"name":"i","nativeSrc":"15129:1:32","nodeType":"YulIdentifier","src":"15129:1:32"}]}]},"pre":{"nativeSrc":"15098:14:32","nodeType":"YulBlock","src":"15098:14:32","statements":[{"nativeSrc":"15100:10:32","nodeType":"YulVariableDeclaration","src":"15100:10:32","value":{"kind":"number","nativeSrc":"15109:1:32","nodeType":"YulLiteral","src":"15109:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"15104:1:32","nodeType":"YulTypedName","src":"15104:1:32","type":""}]}]},"src":"15094:284:32"},{"nativeSrc":"15387:10:32","nodeType":"YulAssignment","src":"15387:10:32","value":{"name":"pos","nativeSrc":"15394:3:32","nodeType":"YulIdentifier","src":"15394:3:32"},"variableNames":[{"name":"end","nativeSrc":"15387:3:32","nodeType":"YulIdentifier","src":"15387:3:32"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"14671:732:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14774:5:32","nodeType":"YulTypedName","src":"14774:5:32","type":""},{"name":"pos","nativeSrc":"14781:3:32","nodeType":"YulTypedName","src":"14781:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14790:3:32","nodeType":"YulTypedName","src":"14790:3:32","type":""}],"src":"14671:732:32"},{"body":{"nativeSrc":"15557:225:32","nodeType":"YulBlock","src":"15557:225:32","statements":[{"nativeSrc":"15567:26:32","nodeType":"YulAssignment","src":"15567:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"15579:9:32","nodeType":"YulIdentifier","src":"15579:9:32"},{"kind":"number","nativeSrc":"15590:2:32","nodeType":"YulLiteral","src":"15590:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15575:3:32","nodeType":"YulIdentifier","src":"15575:3:32"},"nativeSrc":"15575:18:32","nodeType":"YulFunctionCall","src":"15575:18:32"},"variableNames":[{"name":"tail","nativeSrc":"15567:4:32","nodeType":"YulIdentifier","src":"15567:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15614:9:32","nodeType":"YulIdentifier","src":"15614:9:32"},{"kind":"number","nativeSrc":"15625:1:32","nodeType":"YulLiteral","src":"15625:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15610:3:32","nodeType":"YulIdentifier","src":"15610:3:32"},"nativeSrc":"15610:17:32","nodeType":"YulFunctionCall","src":"15610:17:32"},{"arguments":[{"name":"tail","nativeSrc":"15633:4:32","nodeType":"YulIdentifier","src":"15633:4:32"},{"name":"headStart","nativeSrc":"15639:9:32","nodeType":"YulIdentifier","src":"15639:9:32"}],"functionName":{"name":"sub","nativeSrc":"15629:3:32","nodeType":"YulIdentifier","src":"15629:3:32"},"nativeSrc":"15629:20:32","nodeType":"YulFunctionCall","src":"15629:20:32"}],"functionName":{"name":"mstore","nativeSrc":"15603:6:32","nodeType":"YulIdentifier","src":"15603:6:32"},"nativeSrc":"15603:47:32","nodeType":"YulFunctionCall","src":"15603:47:32"},"nativeSrc":"15603:47:32","nodeType":"YulExpressionStatement","src":"15603:47:32"},{"nativeSrc":"15659:116:32","nodeType":"YulAssignment","src":"15659:116:32","value":{"arguments":[{"name":"value0","nativeSrc":"15761:6:32","nodeType":"YulIdentifier","src":"15761:6:32"},{"name":"tail","nativeSrc":"15770:4:32","nodeType":"YulIdentifier","src":"15770:4:32"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"15667:93:32","nodeType":"YulIdentifier","src":"15667:93:32"},"nativeSrc":"15667:108:32","nodeType":"YulFunctionCall","src":"15667:108:32"},"variableNames":[{"name":"tail","nativeSrc":"15659:4:32","nodeType":"YulIdentifier","src":"15659:4:32"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"15409:373:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15529:9:32","nodeType":"YulTypedName","src":"15529:9:32","type":""},{"name":"value0","nativeSrc":"15541:6:32","nodeType":"YulTypedName","src":"15541:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15552:4:32","nodeType":"YulTypedName","src":"15552:4:32","type":""}],"src":"15409:373:32"},{"body":{"nativeSrc":"15832:105:32","nodeType":"YulBlock","src":"15832:105:32","statements":[{"nativeSrc":"15842:89:32","nodeType":"YulAssignment","src":"15842:89:32","value":{"arguments":[{"name":"value","nativeSrc":"15857:5:32","nodeType":"YulIdentifier","src":"15857:5:32"},{"kind":"number","nativeSrc":"15864:66:32","nodeType":"YulLiteral","src":"15864:66:32","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"15853:3:32","nodeType":"YulIdentifier","src":"15853:3:32"},"nativeSrc":"15853:78:32","nodeType":"YulFunctionCall","src":"15853:78:32"},"variableNames":[{"name":"cleaned","nativeSrc":"15842:7:32","nodeType":"YulIdentifier","src":"15842:7:32"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"15788:149:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15814:5:32","nodeType":"YulTypedName","src":"15814:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"15824:7:32","nodeType":"YulTypedName","src":"15824:7:32","type":""}],"src":"15788:149:32"},{"body":{"nativeSrc":"16006:52:32","nodeType":"YulBlock","src":"16006:52:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16023:3:32","nodeType":"YulIdentifier","src":"16023:3:32"},{"arguments":[{"name":"value","nativeSrc":"16045:5:32","nodeType":"YulIdentifier","src":"16045:5:32"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"16028:16:32","nodeType":"YulIdentifier","src":"16028:16:32"},"nativeSrc":"16028:23:32","nodeType":"YulFunctionCall","src":"16028:23:32"}],"functionName":{"name":"mstore","nativeSrc":"16016:6:32","nodeType":"YulIdentifier","src":"16016:6:32"},"nativeSrc":"16016:36:32","nodeType":"YulFunctionCall","src":"16016:36:32"},"nativeSrc":"16016:36:32","nodeType":"YulExpressionStatement","src":"16016:36:32"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"15943:115:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15994:5:32","nodeType":"YulTypedName","src":"15994:5:32","type":""},{"name":"pos","nativeSrc":"16001:3:32","nodeType":"YulTypedName","src":"16001:3:32","type":""}],"src":"15943:115:32"},{"body":{"nativeSrc":"16418:861:32","nodeType":"YulBlock","src":"16418:861:32","statements":[{"nativeSrc":"16428:27:32","nodeType":"YulAssignment","src":"16428:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"16440:9:32","nodeType":"YulIdentifier","src":"16440:9:32"},{"kind":"number","nativeSrc":"16451:3:32","nodeType":"YulLiteral","src":"16451:3:32","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"16436:3:32","nodeType":"YulIdentifier","src":"16436:3:32"},"nativeSrc":"16436:19:32","nodeType":"YulFunctionCall","src":"16436:19:32"},"variableNames":[{"name":"tail","nativeSrc":"16428:4:32","nodeType":"YulIdentifier","src":"16428:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16507:6:32","nodeType":"YulIdentifier","src":"16507:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"16520:9:32","nodeType":"YulIdentifier","src":"16520:9:32"},{"kind":"number","nativeSrc":"16531:1:32","nodeType":"YulLiteral","src":"16531:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16516:3:32","nodeType":"YulIdentifier","src":"16516:3:32"},"nativeSrc":"16516:17:32","nodeType":"YulFunctionCall","src":"16516:17:32"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"16465:41:32","nodeType":"YulIdentifier","src":"16465:41:32"},"nativeSrc":"16465:69:32","nodeType":"YulFunctionCall","src":"16465:69:32"},"nativeSrc":"16465:69:32","nodeType":"YulExpressionStatement","src":"16465:69:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16555:9:32","nodeType":"YulIdentifier","src":"16555:9:32"},{"kind":"number","nativeSrc":"16566:2:32","nodeType":"YulLiteral","src":"16566:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16551:3:32","nodeType":"YulIdentifier","src":"16551:3:32"},"nativeSrc":"16551:18:32","nodeType":"YulFunctionCall","src":"16551:18:32"},{"arguments":[{"name":"tail","nativeSrc":"16575:4:32","nodeType":"YulIdentifier","src":"16575:4:32"},{"name":"headStart","nativeSrc":"16581:9:32","nodeType":"YulIdentifier","src":"16581:9:32"}],"functionName":{"name":"sub","nativeSrc":"16571:3:32","nodeType":"YulIdentifier","src":"16571:3:32"},"nativeSrc":"16571:20:32","nodeType":"YulFunctionCall","src":"16571:20:32"}],"functionName":{"name":"mstore","nativeSrc":"16544:6:32","nodeType":"YulIdentifier","src":"16544:6:32"},"nativeSrc":"16544:48:32","nodeType":"YulFunctionCall","src":"16544:48:32"},"nativeSrc":"16544:48:32","nodeType":"YulExpressionStatement","src":"16544:48:32"},{"nativeSrc":"16601:86:32","nodeType":"YulAssignment","src":"16601:86:32","value":{"arguments":[{"name":"value1","nativeSrc":"16673:6:32","nodeType":"YulIdentifier","src":"16673:6:32"},{"name":"tail","nativeSrc":"16682:4:32","nodeType":"YulIdentifier","src":"16682:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"16609:63:32","nodeType":"YulIdentifier","src":"16609:63:32"},"nativeSrc":"16609:78:32","nodeType":"YulFunctionCall","src":"16609:78:32"},"variableNames":[{"name":"tail","nativeSrc":"16601:4:32","nodeType":"YulIdentifier","src":"16601:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16708:9:32","nodeType":"YulIdentifier","src":"16708:9:32"},{"kind":"number","nativeSrc":"16719:2:32","nodeType":"YulLiteral","src":"16719:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16704:3:32","nodeType":"YulIdentifier","src":"16704:3:32"},"nativeSrc":"16704:18:32","nodeType":"YulFunctionCall","src":"16704:18:32"},{"arguments":[{"name":"tail","nativeSrc":"16728:4:32","nodeType":"YulIdentifier","src":"16728:4:32"},{"name":"headStart","nativeSrc":"16734:9:32","nodeType":"YulIdentifier","src":"16734:9:32"}],"functionName":{"name":"sub","nativeSrc":"16724:3:32","nodeType":"YulIdentifier","src":"16724:3:32"},"nativeSrc":"16724:20:32","nodeType":"YulFunctionCall","src":"16724:20:32"}],"functionName":{"name":"mstore","nativeSrc":"16697:6:32","nodeType":"YulIdentifier","src":"16697:6:32"},"nativeSrc":"16697:48:32","nodeType":"YulFunctionCall","src":"16697:48:32"},"nativeSrc":"16697:48:32","nodeType":"YulExpressionStatement","src":"16697:48:32"},{"nativeSrc":"16754:86:32","nodeType":"YulAssignment","src":"16754:86:32","value":{"arguments":[{"name":"value2","nativeSrc":"16826:6:32","nodeType":"YulIdentifier","src":"16826:6:32"},{"name":"tail","nativeSrc":"16835:4:32","nodeType":"YulIdentifier","src":"16835:4:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"16762:63:32","nodeType":"YulIdentifier","src":"16762:63:32"},"nativeSrc":"16762:78:32","nodeType":"YulFunctionCall","src":"16762:78:32"},"variableNames":[{"name":"tail","nativeSrc":"16754:4:32","nodeType":"YulIdentifier","src":"16754:4:32"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"16894:6:32","nodeType":"YulIdentifier","src":"16894:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"16907:9:32","nodeType":"YulIdentifier","src":"16907:9:32"},{"kind":"number","nativeSrc":"16918:2:32","nodeType":"YulLiteral","src":"16918:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16903:3:32","nodeType":"YulIdentifier","src":"16903:3:32"},"nativeSrc":"16903:18:32","nodeType":"YulFunctionCall","src":"16903:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16850:43:32","nodeType":"YulIdentifier","src":"16850:43:32"},"nativeSrc":"16850:72:32","nodeType":"YulFunctionCall","src":"16850:72:32"},"nativeSrc":"16850:72:32","nodeType":"YulExpressionStatement","src":"16850:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"16976:6:32","nodeType":"YulIdentifier","src":"16976:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"16989:9:32","nodeType":"YulIdentifier","src":"16989:9:32"},{"kind":"number","nativeSrc":"17000:3:32","nodeType":"YulLiteral","src":"17000:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16985:3:32","nodeType":"YulIdentifier","src":"16985:3:32"},"nativeSrc":"16985:19:32","nodeType":"YulFunctionCall","src":"16985:19:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16932:43:32","nodeType":"YulIdentifier","src":"16932:43:32"},"nativeSrc":"16932:73:32","nodeType":"YulFunctionCall","src":"16932:73:32"},"nativeSrc":"16932:73:32","nodeType":"YulExpressionStatement","src":"16932:73:32"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"17059:6:32","nodeType":"YulIdentifier","src":"17059:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"17072:9:32","nodeType":"YulIdentifier","src":"17072:9:32"},{"kind":"number","nativeSrc":"17083:3:32","nodeType":"YulLiteral","src":"17083:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"17068:3:32","nodeType":"YulIdentifier","src":"17068:3:32"},"nativeSrc":"17068:19:32","nodeType":"YulFunctionCall","src":"17068:19:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"17015:43:32","nodeType":"YulIdentifier","src":"17015:43:32"},"nativeSrc":"17015:73:32","nodeType":"YulFunctionCall","src":"17015:73:32"},"nativeSrc":"17015:73:32","nodeType":"YulExpressionStatement","src":"17015:73:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17109:9:32","nodeType":"YulIdentifier","src":"17109:9:32"},{"kind":"number","nativeSrc":"17120:3:32","nodeType":"YulLiteral","src":"17120:3:32","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"17105:3:32","nodeType":"YulIdentifier","src":"17105:3:32"},"nativeSrc":"17105:19:32","nodeType":"YulFunctionCall","src":"17105:19:32"},{"arguments":[{"name":"tail","nativeSrc":"17130:4:32","nodeType":"YulIdentifier","src":"17130:4:32"},{"name":"headStart","nativeSrc":"17136:9:32","nodeType":"YulIdentifier","src":"17136:9:32"}],"functionName":{"name":"sub","nativeSrc":"17126:3:32","nodeType":"YulIdentifier","src":"17126:3:32"},"nativeSrc":"17126:20:32","nodeType":"YulFunctionCall","src":"17126:20:32"}],"functionName":{"name":"mstore","nativeSrc":"17098:6:32","nodeType":"YulIdentifier","src":"17098:6:32"},"nativeSrc":"17098:49:32","nodeType":"YulFunctionCall","src":"17098:49:32"},"nativeSrc":"17098:49:32","nodeType":"YulExpressionStatement","src":"17098:49:32"},{"nativeSrc":"17156:116:32","nodeType":"YulAssignment","src":"17156:116:32","value":{"arguments":[{"name":"value6","nativeSrc":"17258:6:32","nodeType":"YulIdentifier","src":"17258:6:32"},{"name":"tail","nativeSrc":"17267:4:32","nodeType":"YulIdentifier","src":"17267:4:32"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"17164:93:32","nodeType":"YulIdentifier","src":"17164:93:32"},"nativeSrc":"17164:108:32","nodeType":"YulFunctionCall","src":"17164:108:32"},"variableNames":[{"name":"tail","nativeSrc":"17156:4:32","nodeType":"YulIdentifier","src":"17156:4:32"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"16064:1215:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16342:9:32","nodeType":"YulTypedName","src":"16342:9:32","type":""},{"name":"value6","nativeSrc":"16354:6:32","nodeType":"YulTypedName","src":"16354:6:32","type":""},{"name":"value5","nativeSrc":"16362:6:32","nodeType":"YulTypedName","src":"16362:6:32","type":""},{"name":"value4","nativeSrc":"16370:6:32","nodeType":"YulTypedName","src":"16370:6:32","type":""},{"name":"value3","nativeSrc":"16378:6:32","nodeType":"YulTypedName","src":"16378:6:32","type":""},{"name":"value2","nativeSrc":"16386:6:32","nodeType":"YulTypedName","src":"16386:6:32","type":""},{"name":"value1","nativeSrc":"16394:6:32","nodeType":"YulTypedName","src":"16394:6:32","type":""},{"name":"value0","nativeSrc":"16402:6:32","nodeType":"YulTypedName","src":"16402:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16413:4:32","nodeType":"YulTypedName","src":"16413:4:32","type":""}],"src":"16064:1215:32"},{"body":{"nativeSrc":"17374:28:32","nodeType":"YulBlock","src":"17374:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17391:1:32","nodeType":"YulLiteral","src":"17391:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"17394:1:32","nodeType":"YulLiteral","src":"17394:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"17384:6:32","nodeType":"YulIdentifier","src":"17384:6:32"},"nativeSrc":"17384:12:32","nodeType":"YulFunctionCall","src":"17384:12:32"},"nativeSrc":"17384:12:32","nodeType":"YulExpressionStatement","src":"17384:12:32"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"17285:117:32","nodeType":"YulFunctionDefinition","src":"17285:117:32"},{"body":{"nativeSrc":"17497:28:32","nodeType":"YulBlock","src":"17497:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17514:1:32","nodeType":"YulLiteral","src":"17514:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"17517:1:32","nodeType":"YulLiteral","src":"17517:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"17507:6:32","nodeType":"YulIdentifier","src":"17507:6:32"},"nativeSrc":"17507:12:32","nodeType":"YulFunctionCall","src":"17507:12:32"},"nativeSrc":"17507:12:32","nodeType":"YulExpressionStatement","src":"17507:12:32"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"17408:117:32","nodeType":"YulFunctionDefinition","src":"17408:117:32"},{"body":{"nativeSrc":"17620:28:32","nodeType":"YulBlock","src":"17620:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17637:1:32","nodeType":"YulLiteral","src":"17637:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"17640:1:32","nodeType":"YulLiteral","src":"17640:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"17630:6:32","nodeType":"YulIdentifier","src":"17630:6:32"},"nativeSrc":"17630:12:32","nodeType":"YulFunctionCall","src":"17630:12:32"},"nativeSrc":"17630:12:32","nodeType":"YulExpressionStatement","src":"17630:12:32"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"17531:117:32","nodeType":"YulFunctionDefinition","src":"17531:117:32"},{"body":{"nativeSrc":"17743:478:32","nodeType":"YulBlock","src":"17743:478:32","statements":[{"body":{"nativeSrc":"17792:83:32","nodeType":"YulBlock","src":"17792:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"17794:77:32","nodeType":"YulIdentifier","src":"17794:77:32"},"nativeSrc":"17794:79:32","nodeType":"YulFunctionCall","src":"17794:79:32"},"nativeSrc":"17794:79:32","nodeType":"YulExpressionStatement","src":"17794:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"17771:6:32","nodeType":"YulIdentifier","src":"17771:6:32"},{"kind":"number","nativeSrc":"17779:4:32","nodeType":"YulLiteral","src":"17779:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"17767:3:32","nodeType":"YulIdentifier","src":"17767:3:32"},"nativeSrc":"17767:17:32","nodeType":"YulFunctionCall","src":"17767:17:32"},{"name":"end","nativeSrc":"17786:3:32","nodeType":"YulIdentifier","src":"17786:3:32"}],"functionName":{"name":"slt","nativeSrc":"17763:3:32","nodeType":"YulIdentifier","src":"17763:3:32"},"nativeSrc":"17763:27:32","nodeType":"YulFunctionCall","src":"17763:27:32"}],"functionName":{"name":"iszero","nativeSrc":"17756:6:32","nodeType":"YulIdentifier","src":"17756:6:32"},"nativeSrc":"17756:35:32","nodeType":"YulFunctionCall","src":"17756:35:32"},"nativeSrc":"17753:122:32","nodeType":"YulIf","src":"17753:122:32"},{"nativeSrc":"17884:30:32","nodeType":"YulAssignment","src":"17884:30:32","value":{"arguments":[{"name":"offset","nativeSrc":"17907:6:32","nodeType":"YulIdentifier","src":"17907:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"17894:12:32","nodeType":"YulIdentifier","src":"17894:12:32"},"nativeSrc":"17894:20:32","nodeType":"YulFunctionCall","src":"17894:20:32"},"variableNames":[{"name":"length","nativeSrc":"17884:6:32","nodeType":"YulIdentifier","src":"17884:6:32"}]},{"body":{"nativeSrc":"17957:83:32","nodeType":"YulBlock","src":"17957:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"17959:77:32","nodeType":"YulIdentifier","src":"17959:77:32"},"nativeSrc":"17959:79:32","nodeType":"YulFunctionCall","src":"17959:79:32"},"nativeSrc":"17959:79:32","nodeType":"YulExpressionStatement","src":"17959:79:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"17929:6:32","nodeType":"YulIdentifier","src":"17929:6:32"},{"kind":"number","nativeSrc":"17937:18:32","nodeType":"YulLiteral","src":"17937:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17926:2:32","nodeType":"YulIdentifier","src":"17926:2:32"},"nativeSrc":"17926:30:32","nodeType":"YulFunctionCall","src":"17926:30:32"},"nativeSrc":"17923:117:32","nodeType":"YulIf","src":"17923:117:32"},{"nativeSrc":"18049:29:32","nodeType":"YulAssignment","src":"18049:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"18065:6:32","nodeType":"YulIdentifier","src":"18065:6:32"},{"kind":"number","nativeSrc":"18073:4:32","nodeType":"YulLiteral","src":"18073:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18061:3:32","nodeType":"YulIdentifier","src":"18061:3:32"},"nativeSrc":"18061:17:32","nodeType":"YulFunctionCall","src":"18061:17:32"},"variableNames":[{"name":"arrayPos","nativeSrc":"18049:8:32","nodeType":"YulIdentifier","src":"18049:8:32"}]},{"body":{"nativeSrc":"18132:83:32","nodeType":"YulBlock","src":"18132:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"18134:77:32","nodeType":"YulIdentifier","src":"18134:77:32"},"nativeSrc":"18134:79:32","nodeType":"YulFunctionCall","src":"18134:79:32"},"nativeSrc":"18134:79:32","nodeType":"YulExpressionStatement","src":"18134:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"18097:8:32","nodeType":"YulIdentifier","src":"18097:8:32"},{"arguments":[{"name":"length","nativeSrc":"18111:6:32","nodeType":"YulIdentifier","src":"18111:6:32"},{"kind":"number","nativeSrc":"18119:4:32","nodeType":"YulLiteral","src":"18119:4:32","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"18107:3:32","nodeType":"YulIdentifier","src":"18107:3:32"},"nativeSrc":"18107:17:32","nodeType":"YulFunctionCall","src":"18107:17:32"}],"functionName":{"name":"add","nativeSrc":"18093:3:32","nodeType":"YulIdentifier","src":"18093:3:32"},"nativeSrc":"18093:32:32","nodeType":"YulFunctionCall","src":"18093:32:32"},{"name":"end","nativeSrc":"18127:3:32","nodeType":"YulIdentifier","src":"18127:3:32"}],"functionName":{"name":"gt","nativeSrc":"18090:2:32","nodeType":"YulIdentifier","src":"18090:2:32"},"nativeSrc":"18090:41:32","nodeType":"YulFunctionCall","src":"18090:41:32"},"nativeSrc":"18087:128:32","nodeType":"YulIf","src":"18087:128:32"}]},"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"17668:553:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17710:6:32","nodeType":"YulTypedName","src":"17710:6:32","type":""},{"name":"end","nativeSrc":"17718:3:32","nodeType":"YulTypedName","src":"17718:3:32","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"17726:8:32","nodeType":"YulTypedName","src":"17726:8:32","type":""},{"name":"length","nativeSrc":"17736:6:32","nodeType":"YulTypedName","src":"17736:6:32","type":""}],"src":"17668:553:32"},{"body":{"nativeSrc":"18314:478:32","nodeType":"YulBlock","src":"18314:478:32","statements":[{"body":{"nativeSrc":"18363:83:32","nodeType":"YulBlock","src":"18363:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"18365:77:32","nodeType":"YulIdentifier","src":"18365:77:32"},"nativeSrc":"18365:79:32","nodeType":"YulFunctionCall","src":"18365:79:32"},"nativeSrc":"18365:79:32","nodeType":"YulExpressionStatement","src":"18365:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"18342:6:32","nodeType":"YulIdentifier","src":"18342:6:32"},{"kind":"number","nativeSrc":"18350:4:32","nodeType":"YulLiteral","src":"18350:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"18338:3:32","nodeType":"YulIdentifier","src":"18338:3:32"},"nativeSrc":"18338:17:32","nodeType":"YulFunctionCall","src":"18338:17:32"},{"name":"end","nativeSrc":"18357:3:32","nodeType":"YulIdentifier","src":"18357:3:32"}],"functionName":{"name":"slt","nativeSrc":"18334:3:32","nodeType":"YulIdentifier","src":"18334:3:32"},"nativeSrc":"18334:27:32","nodeType":"YulFunctionCall","src":"18334:27:32"}],"functionName":{"name":"iszero","nativeSrc":"18327:6:32","nodeType":"YulIdentifier","src":"18327:6:32"},"nativeSrc":"18327:35:32","nodeType":"YulFunctionCall","src":"18327:35:32"},"nativeSrc":"18324:122:32","nodeType":"YulIf","src":"18324:122:32"},{"nativeSrc":"18455:30:32","nodeType":"YulAssignment","src":"18455:30:32","value":{"arguments":[{"name":"offset","nativeSrc":"18478:6:32","nodeType":"YulIdentifier","src":"18478:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"18465:12:32","nodeType":"YulIdentifier","src":"18465:12:32"},"nativeSrc":"18465:20:32","nodeType":"YulFunctionCall","src":"18465:20:32"},"variableNames":[{"name":"length","nativeSrc":"18455:6:32","nodeType":"YulIdentifier","src":"18455:6:32"}]},{"body":{"nativeSrc":"18528:83:32","nodeType":"YulBlock","src":"18528:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"18530:77:32","nodeType":"YulIdentifier","src":"18530:77:32"},"nativeSrc":"18530:79:32","nodeType":"YulFunctionCall","src":"18530:79:32"},"nativeSrc":"18530:79:32","nodeType":"YulExpressionStatement","src":"18530:79:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"18500:6:32","nodeType":"YulIdentifier","src":"18500:6:32"},{"kind":"number","nativeSrc":"18508:18:32","nodeType":"YulLiteral","src":"18508:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18497:2:32","nodeType":"YulIdentifier","src":"18497:2:32"},"nativeSrc":"18497:30:32","nodeType":"YulFunctionCall","src":"18497:30:32"},"nativeSrc":"18494:117:32","nodeType":"YulIf","src":"18494:117:32"},{"nativeSrc":"18620:29:32","nodeType":"YulAssignment","src":"18620:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"18636:6:32","nodeType":"YulIdentifier","src":"18636:6:32"},{"kind":"number","nativeSrc":"18644:4:32","nodeType":"YulLiteral","src":"18644:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18632:3:32","nodeType":"YulIdentifier","src":"18632:3:32"},"nativeSrc":"18632:17:32","nodeType":"YulFunctionCall","src":"18632:17:32"},"variableNames":[{"name":"arrayPos","nativeSrc":"18620:8:32","nodeType":"YulIdentifier","src":"18620:8:32"}]},{"body":{"nativeSrc":"18703:83:32","nodeType":"YulBlock","src":"18703:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"18705:77:32","nodeType":"YulIdentifier","src":"18705:77:32"},"nativeSrc":"18705:79:32","nodeType":"YulFunctionCall","src":"18705:79:32"},"nativeSrc":"18705:79:32","nodeType":"YulExpressionStatement","src":"18705:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"18668:8:32","nodeType":"YulIdentifier","src":"18668:8:32"},{"arguments":[{"name":"length","nativeSrc":"18682:6:32","nodeType":"YulIdentifier","src":"18682:6:32"},{"kind":"number","nativeSrc":"18690:4:32","nodeType":"YulLiteral","src":"18690:4:32","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"18678:3:32","nodeType":"YulIdentifier","src":"18678:3:32"},"nativeSrc":"18678:17:32","nodeType":"YulFunctionCall","src":"18678:17:32"}],"functionName":{"name":"add","nativeSrc":"18664:3:32","nodeType":"YulIdentifier","src":"18664:3:32"},"nativeSrc":"18664:32:32","nodeType":"YulFunctionCall","src":"18664:32:32"},{"name":"end","nativeSrc":"18698:3:32","nodeType":"YulIdentifier","src":"18698:3:32"}],"functionName":{"name":"gt","nativeSrc":"18661:2:32","nodeType":"YulIdentifier","src":"18661:2:32"},"nativeSrc":"18661:41:32","nodeType":"YulFunctionCall","src":"18661:41:32"},"nativeSrc":"18658:128:32","nodeType":"YulIf","src":"18658:128:32"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"18240:552:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"18281:6:32","nodeType":"YulTypedName","src":"18281:6:32","type":""},{"name":"end","nativeSrc":"18289:3:32","nodeType":"YulTypedName","src":"18289:3:32","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"18297:8:32","nodeType":"YulTypedName","src":"18297:8:32","type":""},{"name":"length","nativeSrc":"18307:6:32","nodeType":"YulTypedName","src":"18307:6:32","type":""}],"src":"18240:552:32"},{"body":{"nativeSrc":"18905:478:32","nodeType":"YulBlock","src":"18905:478:32","statements":[{"body":{"nativeSrc":"18954:83:32","nodeType":"YulBlock","src":"18954:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"18956:77:32","nodeType":"YulIdentifier","src":"18956:77:32"},"nativeSrc":"18956:79:32","nodeType":"YulFunctionCall","src":"18956:79:32"},"nativeSrc":"18956:79:32","nodeType":"YulExpressionStatement","src":"18956:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"18933:6:32","nodeType":"YulIdentifier","src":"18933:6:32"},{"kind":"number","nativeSrc":"18941:4:32","nodeType":"YulLiteral","src":"18941:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"18929:3:32","nodeType":"YulIdentifier","src":"18929:3:32"},"nativeSrc":"18929:17:32","nodeType":"YulFunctionCall","src":"18929:17:32"},{"name":"end","nativeSrc":"18948:3:32","nodeType":"YulIdentifier","src":"18948:3:32"}],"functionName":{"name":"slt","nativeSrc":"18925:3:32","nodeType":"YulIdentifier","src":"18925:3:32"},"nativeSrc":"18925:27:32","nodeType":"YulFunctionCall","src":"18925:27:32"}],"functionName":{"name":"iszero","nativeSrc":"18918:6:32","nodeType":"YulIdentifier","src":"18918:6:32"},"nativeSrc":"18918:35:32","nodeType":"YulFunctionCall","src":"18918:35:32"},"nativeSrc":"18915:122:32","nodeType":"YulIf","src":"18915:122:32"},{"nativeSrc":"19046:30:32","nodeType":"YulAssignment","src":"19046:30:32","value":{"arguments":[{"name":"offset","nativeSrc":"19069:6:32","nodeType":"YulIdentifier","src":"19069:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"19056:12:32","nodeType":"YulIdentifier","src":"19056:12:32"},"nativeSrc":"19056:20:32","nodeType":"YulFunctionCall","src":"19056:20:32"},"variableNames":[{"name":"length","nativeSrc":"19046:6:32","nodeType":"YulIdentifier","src":"19046:6:32"}]},{"body":{"nativeSrc":"19119:83:32","nodeType":"YulBlock","src":"19119:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"19121:77:32","nodeType":"YulIdentifier","src":"19121:77:32"},"nativeSrc":"19121:79:32","nodeType":"YulFunctionCall","src":"19121:79:32"},"nativeSrc":"19121:79:32","nodeType":"YulExpressionStatement","src":"19121:79:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"19091:6:32","nodeType":"YulIdentifier","src":"19091:6:32"},{"kind":"number","nativeSrc":"19099:18:32","nodeType":"YulLiteral","src":"19099:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19088:2:32","nodeType":"YulIdentifier","src":"19088:2:32"},"nativeSrc":"19088:30:32","nodeType":"YulFunctionCall","src":"19088:30:32"},"nativeSrc":"19085:117:32","nodeType":"YulIf","src":"19085:117:32"},{"nativeSrc":"19211:29:32","nodeType":"YulAssignment","src":"19211:29:32","value":{"arguments":[{"name":"offset","nativeSrc":"19227:6:32","nodeType":"YulIdentifier","src":"19227:6:32"},{"kind":"number","nativeSrc":"19235:4:32","nodeType":"YulLiteral","src":"19235:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19223:3:32","nodeType":"YulIdentifier","src":"19223:3:32"},"nativeSrc":"19223:17:32","nodeType":"YulFunctionCall","src":"19223:17:32"},"variableNames":[{"name":"arrayPos","nativeSrc":"19211:8:32","nodeType":"YulIdentifier","src":"19211:8:32"}]},{"body":{"nativeSrc":"19294:83:32","nodeType":"YulBlock","src":"19294:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"19296:77:32","nodeType":"YulIdentifier","src":"19296:77:32"},"nativeSrc":"19296:79:32","nodeType":"YulFunctionCall","src":"19296:79:32"},"nativeSrc":"19296:79:32","nodeType":"YulExpressionStatement","src":"19296:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"19259:8:32","nodeType":"YulIdentifier","src":"19259:8:32"},{"arguments":[{"name":"length","nativeSrc":"19273:6:32","nodeType":"YulIdentifier","src":"19273:6:32"},{"kind":"number","nativeSrc":"19281:4:32","nodeType":"YulLiteral","src":"19281:4:32","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"19269:3:32","nodeType":"YulIdentifier","src":"19269:3:32"},"nativeSrc":"19269:17:32","nodeType":"YulFunctionCall","src":"19269:17:32"}],"functionName":{"name":"add","nativeSrc":"19255:3:32","nodeType":"YulIdentifier","src":"19255:3:32"},"nativeSrc":"19255:32:32","nodeType":"YulFunctionCall","src":"19255:32:32"},{"name":"end","nativeSrc":"19289:3:32","nodeType":"YulIdentifier","src":"19289:3:32"}],"functionName":{"name":"gt","nativeSrc":"19252:2:32","nodeType":"YulIdentifier","src":"19252:2:32"},"nativeSrc":"19252:41:32","nodeType":"YulFunctionCall","src":"19252:41:32"},"nativeSrc":"19249:128:32","nodeType":"YulIf","src":"19249:128:32"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"18815:568:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"18872:6:32","nodeType":"YulTypedName","src":"18872:6:32","type":""},{"name":"end","nativeSrc":"18880:3:32","nodeType":"YulTypedName","src":"18880:3:32","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"18888:8:32","nodeType":"YulTypedName","src":"18888:8:32","type":""},{"name":"length","nativeSrc":"18898:6:32","nodeType":"YulTypedName","src":"18898:6:32","type":""}],"src":"18815:568:32"},{"body":{"nativeSrc":"19614:1460:32","nodeType":"YulBlock","src":"19614:1460:32","statements":[{"body":{"nativeSrc":"19661:83:32","nodeType":"YulBlock","src":"19661:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19663:77:32","nodeType":"YulIdentifier","src":"19663:77:32"},"nativeSrc":"19663:79:32","nodeType":"YulFunctionCall","src":"19663:79:32"},"nativeSrc":"19663:79:32","nodeType":"YulExpressionStatement","src":"19663:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19635:7:32","nodeType":"YulIdentifier","src":"19635:7:32"},{"name":"headStart","nativeSrc":"19644:9:32","nodeType":"YulIdentifier","src":"19644:9:32"}],"functionName":{"name":"sub","nativeSrc":"19631:3:32","nodeType":"YulIdentifier","src":"19631:3:32"},"nativeSrc":"19631:23:32","nodeType":"YulFunctionCall","src":"19631:23:32"},{"kind":"number","nativeSrc":"19656:3:32","nodeType":"YulLiteral","src":"19656:3:32","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"19627:3:32","nodeType":"YulIdentifier","src":"19627:3:32"},"nativeSrc":"19627:33:32","nodeType":"YulFunctionCall","src":"19627:33:32"},"nativeSrc":"19624:120:32","nodeType":"YulIf","src":"19624:120:32"},{"nativeSrc":"19754:117:32","nodeType":"YulBlock","src":"19754:117:32","statements":[{"nativeSrc":"19769:15:32","nodeType":"YulVariableDeclaration","src":"19769:15:32","value":{"kind":"number","nativeSrc":"19783:1:32","nodeType":"YulLiteral","src":"19783:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19773:6:32","nodeType":"YulTypedName","src":"19773:6:32","type":""}]},{"nativeSrc":"19798:63:32","nodeType":"YulAssignment","src":"19798:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19833:9:32","nodeType":"YulIdentifier","src":"19833:9:32"},{"name":"offset","nativeSrc":"19844:6:32","nodeType":"YulIdentifier","src":"19844:6:32"}],"functionName":{"name":"add","nativeSrc":"19829:3:32","nodeType":"YulIdentifier","src":"19829:3:32"},"nativeSrc":"19829:22:32","nodeType":"YulFunctionCall","src":"19829:22:32"},{"name":"dataEnd","nativeSrc":"19853:7:32","nodeType":"YulIdentifier","src":"19853:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"19808:20:32","nodeType":"YulIdentifier","src":"19808:20:32"},"nativeSrc":"19808:53:32","nodeType":"YulFunctionCall","src":"19808:53:32"},"variableNames":[{"name":"value0","nativeSrc":"19798:6:32","nodeType":"YulIdentifier","src":"19798:6:32"}]}]},{"nativeSrc":"19881:298:32","nodeType":"YulBlock","src":"19881:298:32","statements":[{"nativeSrc":"19896:46:32","nodeType":"YulVariableDeclaration","src":"19896:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19927:9:32","nodeType":"YulIdentifier","src":"19927:9:32"},{"kind":"number","nativeSrc":"19938:2:32","nodeType":"YulLiteral","src":"19938:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19923:3:32","nodeType":"YulIdentifier","src":"19923:3:32"},"nativeSrc":"19923:18:32","nodeType":"YulFunctionCall","src":"19923:18:32"}],"functionName":{"name":"calldataload","nativeSrc":"19910:12:32","nodeType":"YulIdentifier","src":"19910:12:32"},"nativeSrc":"19910:32:32","nodeType":"YulFunctionCall","src":"19910:32:32"},"variables":[{"name":"offset","nativeSrc":"19900:6:32","nodeType":"YulTypedName","src":"19900:6:32","type":""}]},{"body":{"nativeSrc":"19989:83:32","nodeType":"YulBlock","src":"19989:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"19991:77:32","nodeType":"YulIdentifier","src":"19991:77:32"},"nativeSrc":"19991:79:32","nodeType":"YulFunctionCall","src":"19991:79:32"},"nativeSrc":"19991:79:32","nodeType":"YulExpressionStatement","src":"19991:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"19961:6:32","nodeType":"YulIdentifier","src":"19961:6:32"},{"kind":"number","nativeSrc":"19969:18:32","nodeType":"YulLiteral","src":"19969:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19958:2:32","nodeType":"YulIdentifier","src":"19958:2:32"},"nativeSrc":"19958:30:32","nodeType":"YulFunctionCall","src":"19958:30:32"},"nativeSrc":"19955:117:32","nodeType":"YulIf","src":"19955:117:32"},{"nativeSrc":"20086:83:32","nodeType":"YulAssignment","src":"20086:83:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20141:9:32","nodeType":"YulIdentifier","src":"20141:9:32"},{"name":"offset","nativeSrc":"20152:6:32","nodeType":"YulIdentifier","src":"20152:6:32"}],"functionName":{"name":"add","nativeSrc":"20137:3:32","nodeType":"YulIdentifier","src":"20137:3:32"},"nativeSrc":"20137:22:32","nodeType":"YulFunctionCall","src":"20137:22:32"},{"name":"dataEnd","nativeSrc":"20161:7:32","nodeType":"YulIdentifier","src":"20161:7:32"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"20104:32:32","nodeType":"YulIdentifier","src":"20104:32:32"},"nativeSrc":"20104:65:32","nodeType":"YulFunctionCall","src":"20104:65:32"},"variableNames":[{"name":"value1","nativeSrc":"20086:6:32","nodeType":"YulIdentifier","src":"20086:6:32"},{"name":"value2","nativeSrc":"20094:6:32","nodeType":"YulIdentifier","src":"20094:6:32"}]}]},{"nativeSrc":"20189:118:32","nodeType":"YulBlock","src":"20189:118:32","statements":[{"nativeSrc":"20204:16:32","nodeType":"YulVariableDeclaration","src":"20204:16:32","value":{"kind":"number","nativeSrc":"20218:2:32","nodeType":"YulLiteral","src":"20218:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"20208:6:32","nodeType":"YulTypedName","src":"20208:6:32","type":""}]},{"nativeSrc":"20234:63:32","nodeType":"YulAssignment","src":"20234:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20269:9:32","nodeType":"YulIdentifier","src":"20269:9:32"},{"name":"offset","nativeSrc":"20280:6:32","nodeType":"YulIdentifier","src":"20280:6:32"}],"functionName":{"name":"add","nativeSrc":"20265:3:32","nodeType":"YulIdentifier","src":"20265:3:32"},"nativeSrc":"20265:22:32","nodeType":"YulFunctionCall","src":"20265:22:32"},{"name":"dataEnd","nativeSrc":"20289:7:32","nodeType":"YulIdentifier","src":"20289:7:32"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"20244:20:32","nodeType":"YulIdentifier","src":"20244:20:32"},"nativeSrc":"20244:53:32","nodeType":"YulFunctionCall","src":"20244:53:32"},"variableNames":[{"name":"value3","nativeSrc":"20234:6:32","nodeType":"YulIdentifier","src":"20234:6:32"}]}]},{"nativeSrc":"20317:118:32","nodeType":"YulBlock","src":"20317:118:32","statements":[{"nativeSrc":"20332:16:32","nodeType":"YulVariableDeclaration","src":"20332:16:32","value":{"kind":"number","nativeSrc":"20346:2:32","nodeType":"YulLiteral","src":"20346:2:32","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"20336:6:32","nodeType":"YulTypedName","src":"20336:6:32","type":""}]},{"nativeSrc":"20362:63:32","nodeType":"YulAssignment","src":"20362:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20397:9:32","nodeType":"YulIdentifier","src":"20397:9:32"},{"name":"offset","nativeSrc":"20408:6:32","nodeType":"YulIdentifier","src":"20408:6:32"}],"functionName":{"name":"add","nativeSrc":"20393:3:32","nodeType":"YulIdentifier","src":"20393:3:32"},"nativeSrc":"20393:22:32","nodeType":"YulFunctionCall","src":"20393:22:32"},{"name":"dataEnd","nativeSrc":"20417:7:32","nodeType":"YulIdentifier","src":"20417:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"20372:20:32","nodeType":"YulIdentifier","src":"20372:20:32"},"nativeSrc":"20372:53:32","nodeType":"YulFunctionCall","src":"20372:53:32"},"variableNames":[{"name":"value4","nativeSrc":"20362:6:32","nodeType":"YulIdentifier","src":"20362:6:32"}]}]},{"nativeSrc":"20445:298:32","nodeType":"YulBlock","src":"20445:298:32","statements":[{"nativeSrc":"20460:47:32","nodeType":"YulVariableDeclaration","src":"20460:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20491:9:32","nodeType":"YulIdentifier","src":"20491:9:32"},{"kind":"number","nativeSrc":"20502:3:32","nodeType":"YulLiteral","src":"20502:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"20487:3:32","nodeType":"YulIdentifier","src":"20487:3:32"},"nativeSrc":"20487:19:32","nodeType":"YulFunctionCall","src":"20487:19:32"}],"functionName":{"name":"calldataload","nativeSrc":"20474:12:32","nodeType":"YulIdentifier","src":"20474:12:32"},"nativeSrc":"20474:33:32","nodeType":"YulFunctionCall","src":"20474:33:32"},"variables":[{"name":"offset","nativeSrc":"20464:6:32","nodeType":"YulTypedName","src":"20464:6:32","type":""}]},{"body":{"nativeSrc":"20554:83:32","nodeType":"YulBlock","src":"20554:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20556:77:32","nodeType":"YulIdentifier","src":"20556:77:32"},"nativeSrc":"20556:79:32","nodeType":"YulFunctionCall","src":"20556:79:32"},"nativeSrc":"20556:79:32","nodeType":"YulExpressionStatement","src":"20556:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20526:6:32","nodeType":"YulIdentifier","src":"20526:6:32"},{"kind":"number","nativeSrc":"20534:18:32","nodeType":"YulLiteral","src":"20534:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20523:2:32","nodeType":"YulIdentifier","src":"20523:2:32"},"nativeSrc":"20523:30:32","nodeType":"YulFunctionCall","src":"20523:30:32"},"nativeSrc":"20520:117:32","nodeType":"YulIf","src":"20520:117:32"},{"nativeSrc":"20651:82:32","nodeType":"YulAssignment","src":"20651:82:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20705:9:32","nodeType":"YulIdentifier","src":"20705:9:32"},{"name":"offset","nativeSrc":"20716:6:32","nodeType":"YulIdentifier","src":"20716:6:32"}],"functionName":{"name":"add","nativeSrc":"20701:3:32","nodeType":"YulIdentifier","src":"20701:3:32"},"nativeSrc":"20701:22:32","nodeType":"YulFunctionCall","src":"20701:22:32"},{"name":"dataEnd","nativeSrc":"20725:7:32","nodeType":"YulIdentifier","src":"20725:7:32"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"20669:31:32","nodeType":"YulIdentifier","src":"20669:31:32"},"nativeSrc":"20669:64:32","nodeType":"YulFunctionCall","src":"20669:64:32"},"variableNames":[{"name":"value5","nativeSrc":"20651:6:32","nodeType":"YulIdentifier","src":"20651:6:32"},{"name":"value6","nativeSrc":"20659:6:32","nodeType":"YulIdentifier","src":"20659:6:32"}]}]},{"nativeSrc":"20753:314:32","nodeType":"YulBlock","src":"20753:314:32","statements":[{"nativeSrc":"20768:47:32","nodeType":"YulVariableDeclaration","src":"20768:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20799:9:32","nodeType":"YulIdentifier","src":"20799:9:32"},{"kind":"number","nativeSrc":"20810:3:32","nodeType":"YulLiteral","src":"20810:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"20795:3:32","nodeType":"YulIdentifier","src":"20795:3:32"},"nativeSrc":"20795:19:32","nodeType":"YulFunctionCall","src":"20795:19:32"}],"functionName":{"name":"calldataload","nativeSrc":"20782:12:32","nodeType":"YulIdentifier","src":"20782:12:32"},"nativeSrc":"20782:33:32","nodeType":"YulFunctionCall","src":"20782:33:32"},"variables":[{"name":"offset","nativeSrc":"20772:6:32","nodeType":"YulTypedName","src":"20772:6:32","type":""}]},{"body":{"nativeSrc":"20862:83:32","nodeType":"YulBlock","src":"20862:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20864:77:32","nodeType":"YulIdentifier","src":"20864:77:32"},"nativeSrc":"20864:79:32","nodeType":"YulFunctionCall","src":"20864:79:32"},"nativeSrc":"20864:79:32","nodeType":"YulExpressionStatement","src":"20864:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20834:6:32","nodeType":"YulIdentifier","src":"20834:6:32"},{"kind":"number","nativeSrc":"20842:18:32","nodeType":"YulLiteral","src":"20842:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20831:2:32","nodeType":"YulIdentifier","src":"20831:2:32"},"nativeSrc":"20831:30:32","nodeType":"YulFunctionCall","src":"20831:30:32"},"nativeSrc":"20828:117:32","nodeType":"YulIf","src":"20828:117:32"},{"nativeSrc":"20959:98:32","nodeType":"YulAssignment","src":"20959:98:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21029:9:32","nodeType":"YulIdentifier","src":"21029:9:32"},{"name":"offset","nativeSrc":"21040:6:32","nodeType":"YulIdentifier","src":"21040:6:32"}],"functionName":{"name":"add","nativeSrc":"21025:3:32","nodeType":"YulIdentifier","src":"21025:3:32"},"nativeSrc":"21025:22:32","nodeType":"YulFunctionCall","src":"21025:22:32"},{"name":"dataEnd","nativeSrc":"21049:7:32","nodeType":"YulIdentifier","src":"21049:7:32"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"20977:47:32","nodeType":"YulIdentifier","src":"20977:47:32"},"nativeSrc":"20977:80:32","nodeType":"YulFunctionCall","src":"20977:80:32"},"variableNames":[{"name":"value7","nativeSrc":"20959:6:32","nodeType":"YulIdentifier","src":"20959:6:32"},{"name":"value8","nativeSrc":"20967:6:32","nodeType":"YulIdentifier","src":"20967:6:32"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_calldata_ptrt_bytes32t_uint256t_bytes_calldata_ptrt_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"19389:1685:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19520:9:32","nodeType":"YulTypedName","src":"19520:9:32","type":""},{"name":"dataEnd","nativeSrc":"19531:7:32","nodeType":"YulTypedName","src":"19531:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19543:6:32","nodeType":"YulTypedName","src":"19543:6:32","type":""},{"name":"value1","nativeSrc":"19551:6:32","nodeType":"YulTypedName","src":"19551:6:32","type":""},{"name":"value2","nativeSrc":"19559:6:32","nodeType":"YulTypedName","src":"19559:6:32","type":""},{"name":"value3","nativeSrc":"19567:6:32","nodeType":"YulTypedName","src":"19567:6:32","type":""},{"name":"value4","nativeSrc":"19575:6:32","nodeType":"YulTypedName","src":"19575:6:32","type":""},{"name":"value5","nativeSrc":"19583:6:32","nodeType":"YulTypedName","src":"19583:6:32","type":""},{"name":"value6","nativeSrc":"19591:6:32","nodeType":"YulTypedName","src":"19591:6:32","type":""},{"name":"value7","nativeSrc":"19599:6:32","nodeType":"YulTypedName","src":"19599:6:32","type":""},{"name":"value8","nativeSrc":"19607:6:32","nodeType":"YulTypedName","src":"19607:6:32","type":""}],"src":"19389:1685:32"},{"body":{"nativeSrc":"21160:388:32","nodeType":"YulBlock","src":"21160:388:32","statements":[{"body":{"nativeSrc":"21206:83:32","nodeType":"YulBlock","src":"21206:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21208:77:32","nodeType":"YulIdentifier","src":"21208:77:32"},"nativeSrc":"21208:79:32","nodeType":"YulFunctionCall","src":"21208:79:32"},"nativeSrc":"21208:79:32","nodeType":"YulExpressionStatement","src":"21208:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"21181:7:32","nodeType":"YulIdentifier","src":"21181:7:32"},{"name":"headStart","nativeSrc":"21190:9:32","nodeType":"YulIdentifier","src":"21190:9:32"}],"functionName":{"name":"sub","nativeSrc":"21177:3:32","nodeType":"YulIdentifier","src":"21177:3:32"},"nativeSrc":"21177:23:32","nodeType":"YulFunctionCall","src":"21177:23:32"},{"kind":"number","nativeSrc":"21202:2:32","nodeType":"YulLiteral","src":"21202:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"21173:3:32","nodeType":"YulIdentifier","src":"21173:3:32"},"nativeSrc":"21173:32:32","nodeType":"YulFunctionCall","src":"21173:32:32"},"nativeSrc":"21170:119:32","nodeType":"YulIf","src":"21170:119:32"},{"nativeSrc":"21299:117:32","nodeType":"YulBlock","src":"21299:117:32","statements":[{"nativeSrc":"21314:15:32","nodeType":"YulVariableDeclaration","src":"21314:15:32","value":{"kind":"number","nativeSrc":"21328:1:32","nodeType":"YulLiteral","src":"21328:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21318:6:32","nodeType":"YulTypedName","src":"21318:6:32","type":""}]},{"nativeSrc":"21343:63:32","nodeType":"YulAssignment","src":"21343:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21378:9:32","nodeType":"YulIdentifier","src":"21378:9:32"},{"name":"offset","nativeSrc":"21389:6:32","nodeType":"YulIdentifier","src":"21389:6:32"}],"functionName":{"name":"add","nativeSrc":"21374:3:32","nodeType":"YulIdentifier","src":"21374:3:32"},"nativeSrc":"21374:22:32","nodeType":"YulFunctionCall","src":"21374:22:32"},{"name":"dataEnd","nativeSrc":"21398:7:32","nodeType":"YulIdentifier","src":"21398:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21353:20:32","nodeType":"YulIdentifier","src":"21353:20:32"},"nativeSrc":"21353:53:32","nodeType":"YulFunctionCall","src":"21353:53:32"},"variableNames":[{"name":"value0","nativeSrc":"21343:6:32","nodeType":"YulIdentifier","src":"21343:6:32"}]}]},{"nativeSrc":"21426:115:32","nodeType":"YulBlock","src":"21426:115:32","statements":[{"nativeSrc":"21441:16:32","nodeType":"YulVariableDeclaration","src":"21441:16:32","value":{"kind":"number","nativeSrc":"21455:2:32","nodeType":"YulLiteral","src":"21455:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"21445:6:32","nodeType":"YulTypedName","src":"21445:6:32","type":""}]},{"nativeSrc":"21471:60:32","nodeType":"YulAssignment","src":"21471:60:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21503:9:32","nodeType":"YulIdentifier","src":"21503:9:32"},{"name":"offset","nativeSrc":"21514:6:32","nodeType":"YulIdentifier","src":"21514:6:32"}],"functionName":{"name":"add","nativeSrc":"21499:3:32","nodeType":"YulIdentifier","src":"21499:3:32"},"nativeSrc":"21499:22:32","nodeType":"YulFunctionCall","src":"21499:22:32"},{"name":"dataEnd","nativeSrc":"21523:7:32","nodeType":"YulIdentifier","src":"21523:7:32"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"21481:17:32","nodeType":"YulIdentifier","src":"21481:17:32"},"nativeSrc":"21481:50:32","nodeType":"YulFunctionCall","src":"21481:50:32"},"variableNames":[{"name":"value1","nativeSrc":"21471:6:32","nodeType":"YulIdentifier","src":"21471:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"21080:468:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21122:9:32","nodeType":"YulTypedName","src":"21122:9:32","type":""},{"name":"dataEnd","nativeSrc":"21133:7:32","nodeType":"YulTypedName","src":"21133:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"21145:6:32","nodeType":"YulTypedName","src":"21145:6:32","type":""},{"name":"value1","nativeSrc":"21153:6:32","nodeType":"YulTypedName","src":"21153:6:32","type":""}],"src":"21080:468:32"},{"body":{"nativeSrc":"21643:28:32","nodeType":"YulBlock","src":"21643:28:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21660:1:32","nodeType":"YulLiteral","src":"21660:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"21663:1:32","nodeType":"YulLiteral","src":"21663:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"21653:6:32","nodeType":"YulIdentifier","src":"21653:6:32"},"nativeSrc":"21653:12:32","nodeType":"YulFunctionCall","src":"21653:12:32"},"nativeSrc":"21653:12:32","nodeType":"YulExpressionStatement","src":"21653:12:32"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"21554:117:32","nodeType":"YulFunctionDefinition","src":"21554:117:32"},{"body":{"nativeSrc":"21705:152:32","nodeType":"YulBlock","src":"21705:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21722:1:32","nodeType":"YulLiteral","src":"21722:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"21725:77:32","nodeType":"YulLiteral","src":"21725:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21715:6:32","nodeType":"YulIdentifier","src":"21715:6:32"},"nativeSrc":"21715:88:32","nodeType":"YulFunctionCall","src":"21715:88:32"},"nativeSrc":"21715:88:32","nodeType":"YulExpressionStatement","src":"21715:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21819:1:32","nodeType":"YulLiteral","src":"21819:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"21822:4:32","nodeType":"YulLiteral","src":"21822:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"21812:6:32","nodeType":"YulIdentifier","src":"21812:6:32"},"nativeSrc":"21812:15:32","nodeType":"YulFunctionCall","src":"21812:15:32"},"nativeSrc":"21812:15:32","nodeType":"YulExpressionStatement","src":"21812:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21843:1:32","nodeType":"YulLiteral","src":"21843:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"21846:4:32","nodeType":"YulLiteral","src":"21846:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21836:6:32","nodeType":"YulIdentifier","src":"21836:6:32"},"nativeSrc":"21836:15:32","nodeType":"YulFunctionCall","src":"21836:15:32"},"nativeSrc":"21836:15:32","nodeType":"YulExpressionStatement","src":"21836:15:32"}]},"name":"panic_error_0x41","nativeSrc":"21677:180:32","nodeType":"YulFunctionDefinition","src":"21677:180:32"},{"body":{"nativeSrc":"21906:238:32","nodeType":"YulBlock","src":"21906:238:32","statements":[{"nativeSrc":"21916:58:32","nodeType":"YulVariableDeclaration","src":"21916:58:32","value":{"arguments":[{"name":"memPtr","nativeSrc":"21938:6:32","nodeType":"YulIdentifier","src":"21938:6:32"},{"arguments":[{"name":"size","nativeSrc":"21968:4:32","nodeType":"YulIdentifier","src":"21968:4:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"21946:21:32","nodeType":"YulIdentifier","src":"21946:21:32"},"nativeSrc":"21946:27:32","nodeType":"YulFunctionCall","src":"21946:27:32"}],"functionName":{"name":"add","nativeSrc":"21934:3:32","nodeType":"YulIdentifier","src":"21934:3:32"},"nativeSrc":"21934:40:32","nodeType":"YulFunctionCall","src":"21934:40:32"},"variables":[{"name":"newFreePtr","nativeSrc":"21920:10:32","nodeType":"YulTypedName","src":"21920:10:32","type":""}]},{"body":{"nativeSrc":"22085:22:32","nodeType":"YulBlock","src":"22085:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"22087:16:32","nodeType":"YulIdentifier","src":"22087:16:32"},"nativeSrc":"22087:18:32","nodeType":"YulFunctionCall","src":"22087:18:32"},"nativeSrc":"22087:18:32","nodeType":"YulExpressionStatement","src":"22087:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"22028:10:32","nodeType":"YulIdentifier","src":"22028:10:32"},{"kind":"number","nativeSrc":"22040:18:32","nodeType":"YulLiteral","src":"22040:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"22025:2:32","nodeType":"YulIdentifier","src":"22025:2:32"},"nativeSrc":"22025:34:32","nodeType":"YulFunctionCall","src":"22025:34:32"},{"arguments":[{"name":"newFreePtr","nativeSrc":"22064:10:32","nodeType":"YulIdentifier","src":"22064:10:32"},{"name":"memPtr","nativeSrc":"22076:6:32","nodeType":"YulIdentifier","src":"22076:6:32"}],"functionName":{"name":"lt","nativeSrc":"22061:2:32","nodeType":"YulIdentifier","src":"22061:2:32"},"nativeSrc":"22061:22:32","nodeType":"YulFunctionCall","src":"22061:22:32"}],"functionName":{"name":"or","nativeSrc":"22022:2:32","nodeType":"YulIdentifier","src":"22022:2:32"},"nativeSrc":"22022:62:32","nodeType":"YulFunctionCall","src":"22022:62:32"},"nativeSrc":"22019:88:32","nodeType":"YulIf","src":"22019:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22123:2:32","nodeType":"YulLiteral","src":"22123:2:32","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"22127:10:32","nodeType":"YulIdentifier","src":"22127:10:32"}],"functionName":{"name":"mstore","nativeSrc":"22116:6:32","nodeType":"YulIdentifier","src":"22116:6:32"},"nativeSrc":"22116:22:32","nodeType":"YulFunctionCall","src":"22116:22:32"},"nativeSrc":"22116:22:32","nodeType":"YulExpressionStatement","src":"22116:22:32"}]},"name":"finalize_allocation","nativeSrc":"21863:281:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"21892:6:32","nodeType":"YulTypedName","src":"21892:6:32","type":""},{"name":"size","nativeSrc":"21900:4:32","nodeType":"YulTypedName","src":"21900:4:32","type":""}],"src":"21863:281:32"},{"body":{"nativeSrc":"22191:88:32","nodeType":"YulBlock","src":"22191:88:32","statements":[{"nativeSrc":"22201:30:32","nodeType":"YulAssignment","src":"22201:30:32","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"22211:18:32","nodeType":"YulIdentifier","src":"22211:18:32"},"nativeSrc":"22211:20:32","nodeType":"YulFunctionCall","src":"22211:20:32"},"variableNames":[{"name":"memPtr","nativeSrc":"22201:6:32","nodeType":"YulIdentifier","src":"22201:6:32"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"22260:6:32","nodeType":"YulIdentifier","src":"22260:6:32"},{"name":"size","nativeSrc":"22268:4:32","nodeType":"YulIdentifier","src":"22268:4:32"}],"functionName":{"name":"finalize_allocation","nativeSrc":"22240:19:32","nodeType":"YulIdentifier","src":"22240:19:32"},"nativeSrc":"22240:33:32","nodeType":"YulFunctionCall","src":"22240:33:32"},"nativeSrc":"22240:33:32","nodeType":"YulExpressionStatement","src":"22240:33:32"}]},"name":"allocate_memory","nativeSrc":"22150:129:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"22175:4:32","nodeType":"YulTypedName","src":"22175:4:32","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"22184:6:32","nodeType":"YulTypedName","src":"22184:6:32","type":""}],"src":"22150:129:32"},{"body":{"nativeSrc":"22351:241:32","nodeType":"YulBlock","src":"22351:241:32","statements":[{"body":{"nativeSrc":"22456:22:32","nodeType":"YulBlock","src":"22456:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"22458:16:32","nodeType":"YulIdentifier","src":"22458:16:32"},"nativeSrc":"22458:18:32","nodeType":"YulFunctionCall","src":"22458:18:32"},"nativeSrc":"22458:18:32","nodeType":"YulExpressionStatement","src":"22458:18:32"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"22428:6:32","nodeType":"YulIdentifier","src":"22428:6:32"},{"kind":"number","nativeSrc":"22436:18:32","nodeType":"YulLiteral","src":"22436:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"22425:2:32","nodeType":"YulIdentifier","src":"22425:2:32"},"nativeSrc":"22425:30:32","nodeType":"YulFunctionCall","src":"22425:30:32"},"nativeSrc":"22422:56:32","nodeType":"YulIf","src":"22422:56:32"},{"nativeSrc":"22488:37:32","nodeType":"YulAssignment","src":"22488:37:32","value":{"arguments":[{"name":"length","nativeSrc":"22518:6:32","nodeType":"YulIdentifier","src":"22518:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"22496:21:32","nodeType":"YulIdentifier","src":"22496:21:32"},"nativeSrc":"22496:29:32","nodeType":"YulFunctionCall","src":"22496:29:32"},"variableNames":[{"name":"size","nativeSrc":"22488:4:32","nodeType":"YulIdentifier","src":"22488:4:32"}]},{"nativeSrc":"22562:23:32","nodeType":"YulAssignment","src":"22562:23:32","value":{"arguments":[{"name":"size","nativeSrc":"22574:4:32","nodeType":"YulIdentifier","src":"22574:4:32"},{"kind":"number","nativeSrc":"22580:4:32","nodeType":"YulLiteral","src":"22580:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22570:3:32","nodeType":"YulIdentifier","src":"22570:3:32"},"nativeSrc":"22570:15:32","nodeType":"YulFunctionCall","src":"22570:15:32"},"variableNames":[{"name":"size","nativeSrc":"22562:4:32","nodeType":"YulIdentifier","src":"22562:4:32"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"22285:307:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"22335:6:32","nodeType":"YulTypedName","src":"22335:6:32","type":""}],"returnVariables":[{"name":"size","nativeSrc":"22346:4:32","nodeType":"YulTypedName","src":"22346:4:32","type":""}],"src":"22285:307:32"},{"body":{"nativeSrc":"22662:84:32","nodeType":"YulBlock","src":"22662:84:32","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"22686:3:32","nodeType":"YulIdentifier","src":"22686:3:32"},{"name":"src","nativeSrc":"22691:3:32","nodeType":"YulIdentifier","src":"22691:3:32"},{"name":"length","nativeSrc":"22696:6:32","nodeType":"YulIdentifier","src":"22696:6:32"}],"functionName":{"name":"calldatacopy","nativeSrc":"22673:12:32","nodeType":"YulIdentifier","src":"22673:12:32"},"nativeSrc":"22673:30:32","nodeType":"YulFunctionCall","src":"22673:30:32"},"nativeSrc":"22673:30:32","nodeType":"YulExpressionStatement","src":"22673:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"22723:3:32","nodeType":"YulIdentifier","src":"22723:3:32"},{"name":"length","nativeSrc":"22728:6:32","nodeType":"YulIdentifier","src":"22728:6:32"}],"functionName":{"name":"add","nativeSrc":"22719:3:32","nodeType":"YulIdentifier","src":"22719:3:32"},"nativeSrc":"22719:16:32","nodeType":"YulFunctionCall","src":"22719:16:32"},{"kind":"number","nativeSrc":"22737:1:32","nodeType":"YulLiteral","src":"22737:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"22712:6:32","nodeType":"YulIdentifier","src":"22712:6:32"},"nativeSrc":"22712:27:32","nodeType":"YulFunctionCall","src":"22712:27:32"},"nativeSrc":"22712:27:32","nodeType":"YulExpressionStatement","src":"22712:27:32"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"22598:148:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"22644:3:32","nodeType":"YulTypedName","src":"22644:3:32","type":""},{"name":"dst","nativeSrc":"22649:3:32","nodeType":"YulTypedName","src":"22649:3:32","type":""},{"name":"length","nativeSrc":"22654:6:32","nodeType":"YulTypedName","src":"22654:6:32","type":""}],"src":"22598:148:32"},{"body":{"nativeSrc":"22835:340:32","nodeType":"YulBlock","src":"22835:340:32","statements":[{"nativeSrc":"22845:74:32","nodeType":"YulAssignment","src":"22845:74:32","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"22911:6:32","nodeType":"YulIdentifier","src":"22911:6:32"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"22870:40:32","nodeType":"YulIdentifier","src":"22870:40:32"},"nativeSrc":"22870:48:32","nodeType":"YulFunctionCall","src":"22870:48:32"}],"functionName":{"name":"allocate_memory","nativeSrc":"22854:15:32","nodeType":"YulIdentifier","src":"22854:15:32"},"nativeSrc":"22854:65:32","nodeType":"YulFunctionCall","src":"22854:65:32"},"variableNames":[{"name":"array","nativeSrc":"22845:5:32","nodeType":"YulIdentifier","src":"22845:5:32"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"22935:5:32","nodeType":"YulIdentifier","src":"22935:5:32"},{"name":"length","nativeSrc":"22942:6:32","nodeType":"YulIdentifier","src":"22942:6:32"}],"functionName":{"name":"mstore","nativeSrc":"22928:6:32","nodeType":"YulIdentifier","src":"22928:6:32"},"nativeSrc":"22928:21:32","nodeType":"YulFunctionCall","src":"22928:21:32"},"nativeSrc":"22928:21:32","nodeType":"YulExpressionStatement","src":"22928:21:32"},{"nativeSrc":"22958:27:32","nodeType":"YulVariableDeclaration","src":"22958:27:32","value":{"arguments":[{"name":"array","nativeSrc":"22973:5:32","nodeType":"YulIdentifier","src":"22973:5:32"},{"kind":"number","nativeSrc":"22980:4:32","nodeType":"YulLiteral","src":"22980:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22969:3:32","nodeType":"YulIdentifier","src":"22969:3:32"},"nativeSrc":"22969:16:32","nodeType":"YulFunctionCall","src":"22969:16:32"},"variables":[{"name":"dst","nativeSrc":"22962:3:32","nodeType":"YulTypedName","src":"22962:3:32","type":""}]},{"body":{"nativeSrc":"23023:83:32","nodeType":"YulBlock","src":"23023:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"23025:77:32","nodeType":"YulIdentifier","src":"23025:77:32"},"nativeSrc":"23025:79:32","nodeType":"YulFunctionCall","src":"23025:79:32"},"nativeSrc":"23025:79:32","nodeType":"YulExpressionStatement","src":"23025:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"23004:3:32","nodeType":"YulIdentifier","src":"23004:3:32"},{"name":"length","nativeSrc":"23009:6:32","nodeType":"YulIdentifier","src":"23009:6:32"}],"functionName":{"name":"add","nativeSrc":"23000:3:32","nodeType":"YulIdentifier","src":"23000:3:32"},"nativeSrc":"23000:16:32","nodeType":"YulFunctionCall","src":"23000:16:32"},{"name":"end","nativeSrc":"23018:3:32","nodeType":"YulIdentifier","src":"23018:3:32"}],"functionName":{"name":"gt","nativeSrc":"22997:2:32","nodeType":"YulIdentifier","src":"22997:2:32"},"nativeSrc":"22997:25:32","nodeType":"YulFunctionCall","src":"22997:25:32"},"nativeSrc":"22994:112:32","nodeType":"YulIf","src":"22994:112:32"},{"expression":{"arguments":[{"name":"src","nativeSrc":"23152:3:32","nodeType":"YulIdentifier","src":"23152:3:32"},{"name":"dst","nativeSrc":"23157:3:32","nodeType":"YulIdentifier","src":"23157:3:32"},{"name":"length","nativeSrc":"23162:6:32","nodeType":"YulIdentifier","src":"23162:6:32"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"23115:36:32","nodeType":"YulIdentifier","src":"23115:36:32"},"nativeSrc":"23115:54:32","nodeType":"YulFunctionCall","src":"23115:54:32"},"nativeSrc":"23115:54:32","nodeType":"YulExpressionStatement","src":"23115:54:32"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"22752:423:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"22808:3:32","nodeType":"YulTypedName","src":"22808:3:32","type":""},{"name":"length","nativeSrc":"22813:6:32","nodeType":"YulTypedName","src":"22813:6:32","type":""},{"name":"end","nativeSrc":"22821:3:32","nodeType":"YulTypedName","src":"22821:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"22829:5:32","nodeType":"YulTypedName","src":"22829:5:32","type":""}],"src":"22752:423:32"},{"body":{"nativeSrc":"23255:277:32","nodeType":"YulBlock","src":"23255:277:32","statements":[{"body":{"nativeSrc":"23304:83:32","nodeType":"YulBlock","src":"23304:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"23306:77:32","nodeType":"YulIdentifier","src":"23306:77:32"},"nativeSrc":"23306:79:32","nodeType":"YulFunctionCall","src":"23306:79:32"},"nativeSrc":"23306:79:32","nodeType":"YulExpressionStatement","src":"23306:79:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"23283:6:32","nodeType":"YulIdentifier","src":"23283:6:32"},{"kind":"number","nativeSrc":"23291:4:32","nodeType":"YulLiteral","src":"23291:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"23279:3:32","nodeType":"YulIdentifier","src":"23279:3:32"},"nativeSrc":"23279:17:32","nodeType":"YulFunctionCall","src":"23279:17:32"},{"name":"end","nativeSrc":"23298:3:32","nodeType":"YulIdentifier","src":"23298:3:32"}],"functionName":{"name":"slt","nativeSrc":"23275:3:32","nodeType":"YulIdentifier","src":"23275:3:32"},"nativeSrc":"23275:27:32","nodeType":"YulFunctionCall","src":"23275:27:32"}],"functionName":{"name":"iszero","nativeSrc":"23268:6:32","nodeType":"YulIdentifier","src":"23268:6:32"},"nativeSrc":"23268:35:32","nodeType":"YulFunctionCall","src":"23268:35:32"},"nativeSrc":"23265:122:32","nodeType":"YulIf","src":"23265:122:32"},{"nativeSrc":"23396:34:32","nodeType":"YulVariableDeclaration","src":"23396:34:32","value":{"arguments":[{"name":"offset","nativeSrc":"23423:6:32","nodeType":"YulIdentifier","src":"23423:6:32"}],"functionName":{"name":"calldataload","nativeSrc":"23410:12:32","nodeType":"YulIdentifier","src":"23410:12:32"},"nativeSrc":"23410:20:32","nodeType":"YulFunctionCall","src":"23410:20:32"},"variables":[{"name":"length","nativeSrc":"23400:6:32","nodeType":"YulTypedName","src":"23400:6:32","type":""}]},{"nativeSrc":"23439:87:32","nodeType":"YulAssignment","src":"23439:87:32","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"23499:6:32","nodeType":"YulIdentifier","src":"23499:6:32"},{"kind":"number","nativeSrc":"23507:4:32","nodeType":"YulLiteral","src":"23507:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23495:3:32","nodeType":"YulIdentifier","src":"23495:3:32"},"nativeSrc":"23495:17:32","nodeType":"YulFunctionCall","src":"23495:17:32"},{"name":"length","nativeSrc":"23514:6:32","nodeType":"YulIdentifier","src":"23514:6:32"},{"name":"end","nativeSrc":"23522:3:32","nodeType":"YulIdentifier","src":"23522:3:32"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"23448:46:32","nodeType":"YulIdentifier","src":"23448:46:32"},"nativeSrc":"23448:78:32","nodeType":"YulFunctionCall","src":"23448:78:32"},"variableNames":[{"name":"array","nativeSrc":"23439:5:32","nodeType":"YulIdentifier","src":"23439:5:32"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"23194:338:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"23233:6:32","nodeType":"YulTypedName","src":"23233:6:32","type":""},{"name":"end","nativeSrc":"23241:3:32","nodeType":"YulTypedName","src":"23241:3:32","type":""}],"returnVariables":[{"name":"array","nativeSrc":"23249:5:32","nodeType":"YulTypedName","src":"23249:5:32","type":""}],"src":"23194:338:32"},{"body":{"nativeSrc":"23664:817:32","nodeType":"YulBlock","src":"23664:817:32","statements":[{"body":{"nativeSrc":"23711:83:32","nodeType":"YulBlock","src":"23711:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"23713:77:32","nodeType":"YulIdentifier","src":"23713:77:32"},"nativeSrc":"23713:79:32","nodeType":"YulFunctionCall","src":"23713:79:32"},"nativeSrc":"23713:79:32","nodeType":"YulExpressionStatement","src":"23713:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23685:7:32","nodeType":"YulIdentifier","src":"23685:7:32"},{"name":"headStart","nativeSrc":"23694:9:32","nodeType":"YulIdentifier","src":"23694:9:32"}],"functionName":{"name":"sub","nativeSrc":"23681:3:32","nodeType":"YulIdentifier","src":"23681:3:32"},"nativeSrc":"23681:23:32","nodeType":"YulFunctionCall","src":"23681:23:32"},{"kind":"number","nativeSrc":"23706:3:32","nodeType":"YulLiteral","src":"23706:3:32","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"23677:3:32","nodeType":"YulIdentifier","src":"23677:3:32"},"nativeSrc":"23677:33:32","nodeType":"YulFunctionCall","src":"23677:33:32"},"nativeSrc":"23674:120:32","nodeType":"YulIf","src":"23674:120:32"},{"nativeSrc":"23804:117:32","nodeType":"YulBlock","src":"23804:117:32","statements":[{"nativeSrc":"23819:15:32","nodeType":"YulVariableDeclaration","src":"23819:15:32","value":{"kind":"number","nativeSrc":"23833:1:32","nodeType":"YulLiteral","src":"23833:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23823:6:32","nodeType":"YulTypedName","src":"23823:6:32","type":""}]},{"nativeSrc":"23848:63:32","nodeType":"YulAssignment","src":"23848:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23883:9:32","nodeType":"YulIdentifier","src":"23883:9:32"},{"name":"offset","nativeSrc":"23894:6:32","nodeType":"YulIdentifier","src":"23894:6:32"}],"functionName":{"name":"add","nativeSrc":"23879:3:32","nodeType":"YulIdentifier","src":"23879:3:32"},"nativeSrc":"23879:22:32","nodeType":"YulFunctionCall","src":"23879:22:32"},{"name":"dataEnd","nativeSrc":"23903:7:32","nodeType":"YulIdentifier","src":"23903:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"23858:20:32","nodeType":"YulIdentifier","src":"23858:20:32"},"nativeSrc":"23858:53:32","nodeType":"YulFunctionCall","src":"23858:53:32"},"variableNames":[{"name":"value0","nativeSrc":"23848:6:32","nodeType":"YulIdentifier","src":"23848:6:32"}]}]},{"nativeSrc":"23931:118:32","nodeType":"YulBlock","src":"23931:118:32","statements":[{"nativeSrc":"23946:16:32","nodeType":"YulVariableDeclaration","src":"23946:16:32","value":{"kind":"number","nativeSrc":"23960:2:32","nodeType":"YulLiteral","src":"23960:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"23950:6:32","nodeType":"YulTypedName","src":"23950:6:32","type":""}]},{"nativeSrc":"23976:63:32","nodeType":"YulAssignment","src":"23976:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24011:9:32","nodeType":"YulIdentifier","src":"24011:9:32"},{"name":"offset","nativeSrc":"24022:6:32","nodeType":"YulIdentifier","src":"24022:6:32"}],"functionName":{"name":"add","nativeSrc":"24007:3:32","nodeType":"YulIdentifier","src":"24007:3:32"},"nativeSrc":"24007:22:32","nodeType":"YulFunctionCall","src":"24007:22:32"},{"name":"dataEnd","nativeSrc":"24031:7:32","nodeType":"YulIdentifier","src":"24031:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"23986:20:32","nodeType":"YulIdentifier","src":"23986:20:32"},"nativeSrc":"23986:53:32","nodeType":"YulFunctionCall","src":"23986:53:32"},"variableNames":[{"name":"value1","nativeSrc":"23976:6:32","nodeType":"YulIdentifier","src":"23976:6:32"}]}]},{"nativeSrc":"24059:118:32","nodeType":"YulBlock","src":"24059:118:32","statements":[{"nativeSrc":"24074:16:32","nodeType":"YulVariableDeclaration","src":"24074:16:32","value":{"kind":"number","nativeSrc":"24088:2:32","nodeType":"YulLiteral","src":"24088:2:32","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"24078:6:32","nodeType":"YulTypedName","src":"24078:6:32","type":""}]},{"nativeSrc":"24104:63:32","nodeType":"YulAssignment","src":"24104:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24139:9:32","nodeType":"YulIdentifier","src":"24139:9:32"},{"name":"offset","nativeSrc":"24150:6:32","nodeType":"YulIdentifier","src":"24150:6:32"}],"functionName":{"name":"add","nativeSrc":"24135:3:32","nodeType":"YulIdentifier","src":"24135:3:32"},"nativeSrc":"24135:22:32","nodeType":"YulFunctionCall","src":"24135:22:32"},{"name":"dataEnd","nativeSrc":"24159:7:32","nodeType":"YulIdentifier","src":"24159:7:32"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"24114:20:32","nodeType":"YulIdentifier","src":"24114:20:32"},"nativeSrc":"24114:53:32","nodeType":"YulFunctionCall","src":"24114:53:32"},"variableNames":[{"name":"value2","nativeSrc":"24104:6:32","nodeType":"YulIdentifier","src":"24104:6:32"}]}]},{"nativeSrc":"24187:287:32","nodeType":"YulBlock","src":"24187:287:32","statements":[{"nativeSrc":"24202:46:32","nodeType":"YulVariableDeclaration","src":"24202:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24233:9:32","nodeType":"YulIdentifier","src":"24233:9:32"},{"kind":"number","nativeSrc":"24244:2:32","nodeType":"YulLiteral","src":"24244:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24229:3:32","nodeType":"YulIdentifier","src":"24229:3:32"},"nativeSrc":"24229:18:32","nodeType":"YulFunctionCall","src":"24229:18:32"}],"functionName":{"name":"calldataload","nativeSrc":"24216:12:32","nodeType":"YulIdentifier","src":"24216:12:32"},"nativeSrc":"24216:32:32","nodeType":"YulFunctionCall","src":"24216:32:32"},"variables":[{"name":"offset","nativeSrc":"24206:6:32","nodeType":"YulTypedName","src":"24206:6:32","type":""}]},{"body":{"nativeSrc":"24295:83:32","nodeType":"YulBlock","src":"24295:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"24297:77:32","nodeType":"YulIdentifier","src":"24297:77:32"},"nativeSrc":"24297:79:32","nodeType":"YulFunctionCall","src":"24297:79:32"},"nativeSrc":"24297:79:32","nodeType":"YulExpressionStatement","src":"24297:79:32"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"24267:6:32","nodeType":"YulIdentifier","src":"24267:6:32"},{"kind":"number","nativeSrc":"24275:18:32","nodeType":"YulLiteral","src":"24275:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"24264:2:32","nodeType":"YulIdentifier","src":"24264:2:32"},"nativeSrc":"24264:30:32","nodeType":"YulFunctionCall","src":"24264:30:32"},"nativeSrc":"24261:117:32","nodeType":"YulIf","src":"24261:117:32"},{"nativeSrc":"24392:72:32","nodeType":"YulAssignment","src":"24392:72:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24436:9:32","nodeType":"YulIdentifier","src":"24436:9:32"},{"name":"offset","nativeSrc":"24447:6:32","nodeType":"YulIdentifier","src":"24447:6:32"}],"functionName":{"name":"add","nativeSrc":"24432:3:32","nodeType":"YulIdentifier","src":"24432:3:32"},"nativeSrc":"24432:22:32","nodeType":"YulFunctionCall","src":"24432:22:32"},{"name":"dataEnd","nativeSrc":"24456:7:32","nodeType":"YulIdentifier","src":"24456:7:32"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"24402:29:32","nodeType":"YulIdentifier","src":"24402:29:32"},"nativeSrc":"24402:62:32","nodeType":"YulFunctionCall","src":"24402:62:32"},"variableNames":[{"name":"value3","nativeSrc":"24392:6:32","nodeType":"YulIdentifier","src":"24392:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"23538:943:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23610:9:32","nodeType":"YulTypedName","src":"23610:9:32","type":""},{"name":"dataEnd","nativeSrc":"23621:7:32","nodeType":"YulTypedName","src":"23621:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23633:6:32","nodeType":"YulTypedName","src":"23633:6:32","type":""},{"name":"value1","nativeSrc":"23641:6:32","nodeType":"YulTypedName","src":"23641:6:32","type":""},{"name":"value2","nativeSrc":"23649:6:32","nodeType":"YulTypedName","src":"23649:6:32","type":""},{"name":"value3","nativeSrc":"23657:6:32","nodeType":"YulTypedName","src":"23657:6:32","type":""}],"src":"23538:943:32"},{"body":{"nativeSrc":"24531:65:32","nodeType":"YulBlock","src":"24531:65:32","statements":[{"nativeSrc":"24541:49:32","nodeType":"YulAssignment","src":"24541:49:32","value":{"arguments":[{"name":"value","nativeSrc":"24556:5:32","nodeType":"YulIdentifier","src":"24556:5:32"},{"kind":"number","nativeSrc":"24563:26:32","nodeType":"YulLiteral","src":"24563:26:32","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"24552:3:32","nodeType":"YulIdentifier","src":"24552:3:32"},"nativeSrc":"24552:38:32","nodeType":"YulFunctionCall","src":"24552:38:32"},"variableNames":[{"name":"cleaned","nativeSrc":"24541:7:32","nodeType":"YulIdentifier","src":"24541:7:32"}]}]},"name":"cleanup_t_uint96","nativeSrc":"24487:109:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24513:5:32","nodeType":"YulTypedName","src":"24513:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"24523:7:32","nodeType":"YulTypedName","src":"24523:7:32","type":""}],"src":"24487:109:32"},{"body":{"nativeSrc":"24665:52:32","nodeType":"YulBlock","src":"24665:52:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24682:3:32","nodeType":"YulIdentifier","src":"24682:3:32"},{"arguments":[{"name":"value","nativeSrc":"24704:5:32","nodeType":"YulIdentifier","src":"24704:5:32"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"24687:16:32","nodeType":"YulIdentifier","src":"24687:16:32"},"nativeSrc":"24687:23:32","nodeType":"YulFunctionCall","src":"24687:23:32"}],"functionName":{"name":"mstore","nativeSrc":"24675:6:32","nodeType":"YulIdentifier","src":"24675:6:32"},"nativeSrc":"24675:36:32","nodeType":"YulFunctionCall","src":"24675:36:32"},"nativeSrc":"24675:36:32","nodeType":"YulExpressionStatement","src":"24675:36:32"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nativeSrc":"24602:115:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24653:5:32","nodeType":"YulTypedName","src":"24653:5:32","type":""},{"name":"pos","nativeSrc":"24660:3:32","nodeType":"YulTypedName","src":"24660:3:32","type":""}],"src":"24602:115:32"},{"body":{"nativeSrc":"24819:122:32","nodeType":"YulBlock","src":"24819:122:32","statements":[{"nativeSrc":"24829:26:32","nodeType":"YulAssignment","src":"24829:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"24841:9:32","nodeType":"YulIdentifier","src":"24841:9:32"},{"kind":"number","nativeSrc":"24852:2:32","nodeType":"YulLiteral","src":"24852:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24837:3:32","nodeType":"YulIdentifier","src":"24837:3:32"},"nativeSrc":"24837:18:32","nodeType":"YulFunctionCall","src":"24837:18:32"},"variableNames":[{"name":"tail","nativeSrc":"24829:4:32","nodeType":"YulIdentifier","src":"24829:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24907:6:32","nodeType":"YulIdentifier","src":"24907:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"24920:9:32","nodeType":"YulIdentifier","src":"24920:9:32"},{"kind":"number","nativeSrc":"24931:1:32","nodeType":"YulLiteral","src":"24931:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24916:3:32","nodeType":"YulIdentifier","src":"24916:3:32"},"nativeSrc":"24916:17:32","nodeType":"YulFunctionCall","src":"24916:17:32"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nativeSrc":"24865:41:32","nodeType":"YulIdentifier","src":"24865:41:32"},"nativeSrc":"24865:69:32","nodeType":"YulFunctionCall","src":"24865:69:32"},"nativeSrc":"24865:69:32","nodeType":"YulExpressionStatement","src":"24865:69:32"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nativeSrc":"24723:218:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24791:9:32","nodeType":"YulTypedName","src":"24791:9:32","type":""},{"name":"value0","nativeSrc":"24803:6:32","nodeType":"YulTypedName","src":"24803:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24814:4:32","nodeType":"YulTypedName","src":"24814:4:32","type":""}],"src":"24723:218:32"},{"body":{"nativeSrc":"25030:391:32","nodeType":"YulBlock","src":"25030:391:32","statements":[{"body":{"nativeSrc":"25076:83:32","nodeType":"YulBlock","src":"25076:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"25078:77:32","nodeType":"YulIdentifier","src":"25078:77:32"},"nativeSrc":"25078:79:32","nodeType":"YulFunctionCall","src":"25078:79:32"},"nativeSrc":"25078:79:32","nodeType":"YulExpressionStatement","src":"25078:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"25051:7:32","nodeType":"YulIdentifier","src":"25051:7:32"},{"name":"headStart","nativeSrc":"25060:9:32","nodeType":"YulIdentifier","src":"25060:9:32"}],"functionName":{"name":"sub","nativeSrc":"25047:3:32","nodeType":"YulIdentifier","src":"25047:3:32"},"nativeSrc":"25047:23:32","nodeType":"YulFunctionCall","src":"25047:23:32"},{"kind":"number","nativeSrc":"25072:2:32","nodeType":"YulLiteral","src":"25072:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"25043:3:32","nodeType":"YulIdentifier","src":"25043:3:32"},"nativeSrc":"25043:32:32","nodeType":"YulFunctionCall","src":"25043:32:32"},"nativeSrc":"25040:119:32","nodeType":"YulIf","src":"25040:119:32"},{"nativeSrc":"25169:117:32","nodeType":"YulBlock","src":"25169:117:32","statements":[{"nativeSrc":"25184:15:32","nodeType":"YulVariableDeclaration","src":"25184:15:32","value":{"kind":"number","nativeSrc":"25198:1:32","nodeType":"YulLiteral","src":"25198:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"25188:6:32","nodeType":"YulTypedName","src":"25188:6:32","type":""}]},{"nativeSrc":"25213:63:32","nodeType":"YulAssignment","src":"25213:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25248:9:32","nodeType":"YulIdentifier","src":"25248:9:32"},{"name":"offset","nativeSrc":"25259:6:32","nodeType":"YulIdentifier","src":"25259:6:32"}],"functionName":{"name":"add","nativeSrc":"25244:3:32","nodeType":"YulIdentifier","src":"25244:3:32"},"nativeSrc":"25244:22:32","nodeType":"YulFunctionCall","src":"25244:22:32"},{"name":"dataEnd","nativeSrc":"25268:7:32","nodeType":"YulIdentifier","src":"25268:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"25223:20:32","nodeType":"YulIdentifier","src":"25223:20:32"},"nativeSrc":"25223:53:32","nodeType":"YulFunctionCall","src":"25223:53:32"},"variableNames":[{"name":"value0","nativeSrc":"25213:6:32","nodeType":"YulIdentifier","src":"25213:6:32"}]}]},{"nativeSrc":"25296:118:32","nodeType":"YulBlock","src":"25296:118:32","statements":[{"nativeSrc":"25311:16:32","nodeType":"YulVariableDeclaration","src":"25311:16:32","value":{"kind":"number","nativeSrc":"25325:2:32","nodeType":"YulLiteral","src":"25325:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"25315:6:32","nodeType":"YulTypedName","src":"25315:6:32","type":""}]},{"nativeSrc":"25341:63:32","nodeType":"YulAssignment","src":"25341:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25376:9:32","nodeType":"YulIdentifier","src":"25376:9:32"},{"name":"offset","nativeSrc":"25387:6:32","nodeType":"YulIdentifier","src":"25387:6:32"}],"functionName":{"name":"add","nativeSrc":"25372:3:32","nodeType":"YulIdentifier","src":"25372:3:32"},"nativeSrc":"25372:22:32","nodeType":"YulFunctionCall","src":"25372:22:32"},{"name":"dataEnd","nativeSrc":"25396:7:32","nodeType":"YulIdentifier","src":"25396:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"25351:20:32","nodeType":"YulIdentifier","src":"25351:20:32"},"nativeSrc":"25351:53:32","nodeType":"YulFunctionCall","src":"25351:53:32"},"variableNames":[{"name":"value1","nativeSrc":"25341:6:32","nodeType":"YulIdentifier","src":"25341:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"24947:474:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24992:9:32","nodeType":"YulTypedName","src":"24992:9:32","type":""},{"name":"dataEnd","nativeSrc":"25003:7:32","nodeType":"YulTypedName","src":"25003:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"25015:6:32","nodeType":"YulTypedName","src":"25015:6:32","type":""},{"name":"value1","nativeSrc":"25023:6:32","nodeType":"YulTypedName","src":"25023:6:32","type":""}],"src":"24947:474:32"},{"body":{"nativeSrc":"25525:124:32","nodeType":"YulBlock","src":"25525:124:32","statements":[{"nativeSrc":"25535:26:32","nodeType":"YulAssignment","src":"25535:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"25547:9:32","nodeType":"YulIdentifier","src":"25547:9:32"},{"kind":"number","nativeSrc":"25558:2:32","nodeType":"YulLiteral","src":"25558:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25543:3:32","nodeType":"YulIdentifier","src":"25543:3:32"},"nativeSrc":"25543:18:32","nodeType":"YulFunctionCall","src":"25543:18:32"},"variableNames":[{"name":"tail","nativeSrc":"25535:4:32","nodeType":"YulIdentifier","src":"25535:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"25615:6:32","nodeType":"YulIdentifier","src":"25615:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"25628:9:32","nodeType":"YulIdentifier","src":"25628:9:32"},{"kind":"number","nativeSrc":"25639:1:32","nodeType":"YulLiteral","src":"25639:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25624:3:32","nodeType":"YulIdentifier","src":"25624:3:32"},"nativeSrc":"25624:17:32","nodeType":"YulFunctionCall","src":"25624:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"25571:43:32","nodeType":"YulIdentifier","src":"25571:43:32"},"nativeSrc":"25571:71:32","nodeType":"YulFunctionCall","src":"25571:71:32"},"nativeSrc":"25571:71:32","nodeType":"YulExpressionStatement","src":"25571:71:32"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"25427:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25497:9:32","nodeType":"YulTypedName","src":"25497:9:32","type":""},{"name":"value0","nativeSrc":"25509:6:32","nodeType":"YulTypedName","src":"25509:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25520:4:32","nodeType":"YulTypedName","src":"25520:4:32","type":""}],"src":"25427:222:32"},{"body":{"nativeSrc":"25752:405:32","nodeType":"YulBlock","src":"25752:405:32","statements":[{"body":{"nativeSrc":"25798:83:32","nodeType":"YulBlock","src":"25798:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"25800:77:32","nodeType":"YulIdentifier","src":"25800:77:32"},"nativeSrc":"25800:79:32","nodeType":"YulFunctionCall","src":"25800:79:32"},"nativeSrc":"25800:79:32","nodeType":"YulExpressionStatement","src":"25800:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"25773:7:32","nodeType":"YulIdentifier","src":"25773:7:32"},{"name":"headStart","nativeSrc":"25782:9:32","nodeType":"YulIdentifier","src":"25782:9:32"}],"functionName":{"name":"sub","nativeSrc":"25769:3:32","nodeType":"YulIdentifier","src":"25769:3:32"},"nativeSrc":"25769:23:32","nodeType":"YulFunctionCall","src":"25769:23:32"},{"kind":"number","nativeSrc":"25794:2:32","nodeType":"YulLiteral","src":"25794:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"25765:3:32","nodeType":"YulIdentifier","src":"25765:3:32"},"nativeSrc":"25765:32:32","nodeType":"YulFunctionCall","src":"25765:32:32"},"nativeSrc":"25762:119:32","nodeType":"YulIf","src":"25762:119:32"},{"nativeSrc":"25891:117:32","nodeType":"YulBlock","src":"25891:117:32","statements":[{"nativeSrc":"25906:15:32","nodeType":"YulVariableDeclaration","src":"25906:15:32","value":{"kind":"number","nativeSrc":"25920:1:32","nodeType":"YulLiteral","src":"25920:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"25910:6:32","nodeType":"YulTypedName","src":"25910:6:32","type":""}]},{"nativeSrc":"25935:63:32","nodeType":"YulAssignment","src":"25935:63:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25970:9:32","nodeType":"YulIdentifier","src":"25970:9:32"},{"name":"offset","nativeSrc":"25981:6:32","nodeType":"YulIdentifier","src":"25981:6:32"}],"functionName":{"name":"add","nativeSrc":"25966:3:32","nodeType":"YulIdentifier","src":"25966:3:32"},"nativeSrc":"25966:22:32","nodeType":"YulFunctionCall","src":"25966:22:32"},{"name":"dataEnd","nativeSrc":"25990:7:32","nodeType":"YulIdentifier","src":"25990:7:32"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"25945:20:32","nodeType":"YulIdentifier","src":"25945:20:32"},"nativeSrc":"25945:53:32","nodeType":"YulFunctionCall","src":"25945:53:32"},"variableNames":[{"name":"value0","nativeSrc":"25935:6:32","nodeType":"YulIdentifier","src":"25935:6:32"}]}]},{"nativeSrc":"26018:132:32","nodeType":"YulBlock","src":"26018:132:32","statements":[{"nativeSrc":"26033:16:32","nodeType":"YulVariableDeclaration","src":"26033:16:32","value":{"kind":"number","nativeSrc":"26047:2:32","nodeType":"YulLiteral","src":"26047:2:32","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"26037:6:32","nodeType":"YulTypedName","src":"26037:6:32","type":""}]},{"nativeSrc":"26063:77:32","nodeType":"YulAssignment","src":"26063:77:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26112:9:32","nodeType":"YulIdentifier","src":"26112:9:32"},{"name":"offset","nativeSrc":"26123:6:32","nodeType":"YulIdentifier","src":"26123:6:32"}],"functionName":{"name":"add","nativeSrc":"26108:3:32","nodeType":"YulIdentifier","src":"26108:3:32"},"nativeSrc":"26108:22:32","nodeType":"YulFunctionCall","src":"26108:22:32"},{"name":"dataEnd","nativeSrc":"26132:7:32","nodeType":"YulIdentifier","src":"26132:7:32"}],"functionName":{"name":"abi_decode_t_enum$_PhaseType_$8455","nativeSrc":"26073:34:32","nodeType":"YulIdentifier","src":"26073:34:32"},"nativeSrc":"26073:67:32","nodeType":"YulFunctionCall","src":"26073:67:32"},"variableNames":[{"name":"value1","nativeSrc":"26063:6:32","nodeType":"YulIdentifier","src":"26063:6:32"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_PhaseType_$8455","nativeSrc":"25655:502:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25714:9:32","nodeType":"YulTypedName","src":"25714:9:32","type":""},{"name":"dataEnd","nativeSrc":"25725:7:32","nodeType":"YulTypedName","src":"25725:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"25737:6:32","nodeType":"YulTypedName","src":"25737:6:32","type":""},{"name":"value1","nativeSrc":"25745:6:32","nodeType":"YulTypedName","src":"25745:6:32","type":""}],"src":"25655:502:32"},{"body":{"nativeSrc":"26191:152:32","nodeType":"YulBlock","src":"26191:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"26208:1:32","nodeType":"YulLiteral","src":"26208:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"26211:77:32","nodeType":"YulLiteral","src":"26211:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"26201:6:32","nodeType":"YulIdentifier","src":"26201:6:32"},"nativeSrc":"26201:88:32","nodeType":"YulFunctionCall","src":"26201:88:32"},"nativeSrc":"26201:88:32","nodeType":"YulExpressionStatement","src":"26201:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26305:1:32","nodeType":"YulLiteral","src":"26305:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"26308:4:32","nodeType":"YulLiteral","src":"26308:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"26298:6:32","nodeType":"YulIdentifier","src":"26298:6:32"},"nativeSrc":"26298:15:32","nodeType":"YulFunctionCall","src":"26298:15:32"},"nativeSrc":"26298:15:32","nodeType":"YulExpressionStatement","src":"26298:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26329:1:32","nodeType":"YulLiteral","src":"26329:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"26332:4:32","nodeType":"YulLiteral","src":"26332:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"26322:6:32","nodeType":"YulIdentifier","src":"26322:6:32"},"nativeSrc":"26322:15:32","nodeType":"YulFunctionCall","src":"26322:15:32"},"nativeSrc":"26322:15:32","nodeType":"YulExpressionStatement","src":"26322:15:32"}]},"name":"panic_error_0x22","nativeSrc":"26163:180:32","nodeType":"YulFunctionDefinition","src":"26163:180:32"},{"body":{"nativeSrc":"26400:269:32","nodeType":"YulBlock","src":"26400:269:32","statements":[{"nativeSrc":"26410:22:32","nodeType":"YulAssignment","src":"26410:22:32","value":{"arguments":[{"name":"data","nativeSrc":"26424:4:32","nodeType":"YulIdentifier","src":"26424:4:32"},{"kind":"number","nativeSrc":"26430:1:32","nodeType":"YulLiteral","src":"26430:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"26420:3:32","nodeType":"YulIdentifier","src":"26420:3:32"},"nativeSrc":"26420:12:32","nodeType":"YulFunctionCall","src":"26420:12:32"},"variableNames":[{"name":"length","nativeSrc":"26410:6:32","nodeType":"YulIdentifier","src":"26410:6:32"}]},{"nativeSrc":"26441:38:32","nodeType":"YulVariableDeclaration","src":"26441:38:32","value":{"arguments":[{"name":"data","nativeSrc":"26471:4:32","nodeType":"YulIdentifier","src":"26471:4:32"},{"kind":"number","nativeSrc":"26477:1:32","nodeType":"YulLiteral","src":"26477:1:32","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"26467:3:32","nodeType":"YulIdentifier","src":"26467:3:32"},"nativeSrc":"26467:12:32","nodeType":"YulFunctionCall","src":"26467:12:32"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"26445:18:32","nodeType":"YulTypedName","src":"26445:18:32","type":""}]},{"body":{"nativeSrc":"26518:51:32","nodeType":"YulBlock","src":"26518:51:32","statements":[{"nativeSrc":"26532:27:32","nodeType":"YulAssignment","src":"26532:27:32","value":{"arguments":[{"name":"length","nativeSrc":"26546:6:32","nodeType":"YulIdentifier","src":"26546:6:32"},{"kind":"number","nativeSrc":"26554:4:32","nodeType":"YulLiteral","src":"26554:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"26542:3:32","nodeType":"YulIdentifier","src":"26542:3:32"},"nativeSrc":"26542:17:32","nodeType":"YulFunctionCall","src":"26542:17:32"},"variableNames":[{"name":"length","nativeSrc":"26532:6:32","nodeType":"YulIdentifier","src":"26532:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"26498:18:32","nodeType":"YulIdentifier","src":"26498:18:32"}],"functionName":{"name":"iszero","nativeSrc":"26491:6:32","nodeType":"YulIdentifier","src":"26491:6:32"},"nativeSrc":"26491:26:32","nodeType":"YulFunctionCall","src":"26491:26:32"},"nativeSrc":"26488:81:32","nodeType":"YulIf","src":"26488:81:32"},{"body":{"nativeSrc":"26621:42:32","nodeType":"YulBlock","src":"26621:42:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"26635:16:32","nodeType":"YulIdentifier","src":"26635:16:32"},"nativeSrc":"26635:18:32","nodeType":"YulFunctionCall","src":"26635:18:32"},"nativeSrc":"26635:18:32","nodeType":"YulExpressionStatement","src":"26635:18:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"26585:18:32","nodeType":"YulIdentifier","src":"26585:18:32"},{"arguments":[{"name":"length","nativeSrc":"26608:6:32","nodeType":"YulIdentifier","src":"26608:6:32"},{"kind":"number","nativeSrc":"26616:2:32","nodeType":"YulLiteral","src":"26616:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"26605:2:32","nodeType":"YulIdentifier","src":"26605:2:32"},"nativeSrc":"26605:14:32","nodeType":"YulFunctionCall","src":"26605:14:32"}],"functionName":{"name":"eq","nativeSrc":"26582:2:32","nodeType":"YulIdentifier","src":"26582:2:32"},"nativeSrc":"26582:38:32","nodeType":"YulFunctionCall","src":"26582:38:32"},"nativeSrc":"26579:84:32","nodeType":"YulIf","src":"26579:84:32"}]},"name":"extract_byte_array_length","nativeSrc":"26349:320:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"26384:4:32","nodeType":"YulTypedName","src":"26384:4:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"26393:6:32","nodeType":"YulTypedName","src":"26393:6:32","type":""}],"src":"26349:320:32"},{"body":{"nativeSrc":"26703:152:32","nodeType":"YulBlock","src":"26703:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"26720:1:32","nodeType":"YulLiteral","src":"26720:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"26723:77:32","nodeType":"YulLiteral","src":"26723:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"26713:6:32","nodeType":"YulIdentifier","src":"26713:6:32"},"nativeSrc":"26713:88:32","nodeType":"YulFunctionCall","src":"26713:88:32"},"nativeSrc":"26713:88:32","nodeType":"YulExpressionStatement","src":"26713:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26817:1:32","nodeType":"YulLiteral","src":"26817:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"26820:4:32","nodeType":"YulLiteral","src":"26820:4:32","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"26810:6:32","nodeType":"YulIdentifier","src":"26810:6:32"},"nativeSrc":"26810:15:32","nodeType":"YulFunctionCall","src":"26810:15:32"},"nativeSrc":"26810:15:32","nodeType":"YulExpressionStatement","src":"26810:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26841:1:32","nodeType":"YulLiteral","src":"26841:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"26844:4:32","nodeType":"YulLiteral","src":"26844:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"26834:6:32","nodeType":"YulIdentifier","src":"26834:6:32"},"nativeSrc":"26834:15:32","nodeType":"YulFunctionCall","src":"26834:15:32"},"nativeSrc":"26834:15:32","nodeType":"YulExpressionStatement","src":"26834:15:32"}]},"name":"panic_error_0x32","nativeSrc":"26675:180:32","nodeType":"YulFunctionDefinition","src":"26675:180:32"},{"body":{"nativeSrc":"27015:288:32","nodeType":"YulBlock","src":"27015:288:32","statements":[{"nativeSrc":"27025:26:32","nodeType":"YulAssignment","src":"27025:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"27037:9:32","nodeType":"YulIdentifier","src":"27037:9:32"},{"kind":"number","nativeSrc":"27048:2:32","nodeType":"YulLiteral","src":"27048:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27033:3:32","nodeType":"YulIdentifier","src":"27033:3:32"},"nativeSrc":"27033:18:32","nodeType":"YulFunctionCall","src":"27033:18:32"},"variableNames":[{"name":"tail","nativeSrc":"27025:4:32","nodeType":"YulIdentifier","src":"27025:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27105:6:32","nodeType":"YulIdentifier","src":"27105:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"27118:9:32","nodeType":"YulIdentifier","src":"27118:9:32"},{"kind":"number","nativeSrc":"27129:1:32","nodeType":"YulLiteral","src":"27129:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27114:3:32","nodeType":"YulIdentifier","src":"27114:3:32"},"nativeSrc":"27114:17:32","nodeType":"YulFunctionCall","src":"27114:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"27061:43:32","nodeType":"YulIdentifier","src":"27061:43:32"},"nativeSrc":"27061:71:32","nodeType":"YulFunctionCall","src":"27061:71:32"},"nativeSrc":"27061:71:32","nodeType":"YulExpressionStatement","src":"27061:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27186:6:32","nodeType":"YulIdentifier","src":"27186:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"27199:9:32","nodeType":"YulIdentifier","src":"27199:9:32"},{"kind":"number","nativeSrc":"27210:2:32","nodeType":"YulLiteral","src":"27210:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27195:3:32","nodeType":"YulIdentifier","src":"27195:3:32"},"nativeSrc":"27195:18:32","nodeType":"YulFunctionCall","src":"27195:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27142:43:32","nodeType":"YulIdentifier","src":"27142:43:32"},"nativeSrc":"27142:72:32","nodeType":"YulFunctionCall","src":"27142:72:32"},"nativeSrc":"27142:72:32","nodeType":"YulExpressionStatement","src":"27142:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"27268:6:32","nodeType":"YulIdentifier","src":"27268:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"27281:9:32","nodeType":"YulIdentifier","src":"27281:9:32"},{"kind":"number","nativeSrc":"27292:2:32","nodeType":"YulLiteral","src":"27292:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27277:3:32","nodeType":"YulIdentifier","src":"27277:3:32"},"nativeSrc":"27277:18:32","nodeType":"YulFunctionCall","src":"27277:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"27224:43:32","nodeType":"YulIdentifier","src":"27224:43:32"},"nativeSrc":"27224:72:32","nodeType":"YulFunctionCall","src":"27224:72:32"},"nativeSrc":"27224:72:32","nodeType":"YulExpressionStatement","src":"27224:72:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"26861:442:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26971:9:32","nodeType":"YulTypedName","src":"26971:9:32","type":""},{"name":"value2","nativeSrc":"26983:6:32","nodeType":"YulTypedName","src":"26983:6:32","type":""},{"name":"value1","nativeSrc":"26991:6:32","nodeType":"YulTypedName","src":"26991:6:32","type":""},{"name":"value0","nativeSrc":"26999:6:32","nodeType":"YulTypedName","src":"26999:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27010:4:32","nodeType":"YulTypedName","src":"27010:4:32","type":""}],"src":"26861:442:32"},{"body":{"nativeSrc":"27337:152:32","nodeType":"YulBlock","src":"27337:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"27354:1:32","nodeType":"YulLiteral","src":"27354:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"27357:77:32","nodeType":"YulLiteral","src":"27357:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"27347:6:32","nodeType":"YulIdentifier","src":"27347:6:32"},"nativeSrc":"27347:88:32","nodeType":"YulFunctionCall","src":"27347:88:32"},"nativeSrc":"27347:88:32","nodeType":"YulExpressionStatement","src":"27347:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27451:1:32","nodeType":"YulLiteral","src":"27451:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"27454:4:32","nodeType":"YulLiteral","src":"27454:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"27444:6:32","nodeType":"YulIdentifier","src":"27444:6:32"},"nativeSrc":"27444:15:32","nodeType":"YulFunctionCall","src":"27444:15:32"},"nativeSrc":"27444:15:32","nodeType":"YulExpressionStatement","src":"27444:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27475:1:32","nodeType":"YulLiteral","src":"27475:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"27478:4:32","nodeType":"YulLiteral","src":"27478:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"27468:6:32","nodeType":"YulIdentifier","src":"27468:6:32"},"nativeSrc":"27468:15:32","nodeType":"YulFunctionCall","src":"27468:15:32"},"nativeSrc":"27468:15:32","nodeType":"YulExpressionStatement","src":"27468:15:32"}]},"name":"panic_error_0x11","nativeSrc":"27309:180:32","nodeType":"YulFunctionDefinition","src":"27309:180:32"},{"body":{"nativeSrc":"27543:362:32","nodeType":"YulBlock","src":"27543:362:32","statements":[{"nativeSrc":"27553:25:32","nodeType":"YulAssignment","src":"27553:25:32","value":{"arguments":[{"name":"x","nativeSrc":"27576:1:32","nodeType":"YulIdentifier","src":"27576:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"27558:17:32","nodeType":"YulIdentifier","src":"27558:17:32"},"nativeSrc":"27558:20:32","nodeType":"YulFunctionCall","src":"27558:20:32"},"variableNames":[{"name":"x","nativeSrc":"27553:1:32","nodeType":"YulIdentifier","src":"27553:1:32"}]},{"nativeSrc":"27587:25:32","nodeType":"YulAssignment","src":"27587:25:32","value":{"arguments":[{"name":"y","nativeSrc":"27610:1:32","nodeType":"YulIdentifier","src":"27610:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"27592:17:32","nodeType":"YulIdentifier","src":"27592:17:32"},"nativeSrc":"27592:20:32","nodeType":"YulFunctionCall","src":"27592:20:32"},"variableNames":[{"name":"y","nativeSrc":"27587:1:32","nodeType":"YulIdentifier","src":"27587:1:32"}]},{"nativeSrc":"27621:28:32","nodeType":"YulVariableDeclaration","src":"27621:28:32","value":{"arguments":[{"name":"x","nativeSrc":"27644:1:32","nodeType":"YulIdentifier","src":"27644:1:32"},{"name":"y","nativeSrc":"27647:1:32","nodeType":"YulIdentifier","src":"27647:1:32"}],"functionName":{"name":"mul","nativeSrc":"27640:3:32","nodeType":"YulIdentifier","src":"27640:3:32"},"nativeSrc":"27640:9:32","nodeType":"YulFunctionCall","src":"27640:9:32"},"variables":[{"name":"product_raw","nativeSrc":"27625:11:32","nodeType":"YulTypedName","src":"27625:11:32","type":""}]},{"nativeSrc":"27658:41:32","nodeType":"YulAssignment","src":"27658:41:32","value":{"arguments":[{"name":"product_raw","nativeSrc":"27687:11:32","nodeType":"YulIdentifier","src":"27687:11:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"27669:17:32","nodeType":"YulIdentifier","src":"27669:17:32"},"nativeSrc":"27669:30:32","nodeType":"YulFunctionCall","src":"27669:30:32"},"variableNames":[{"name":"product","nativeSrc":"27658:7:32","nodeType":"YulIdentifier","src":"27658:7:32"}]},{"body":{"nativeSrc":"27876:22:32","nodeType":"YulBlock","src":"27876:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"27878:16:32","nodeType":"YulIdentifier","src":"27878:16:32"},"nativeSrc":"27878:18:32","nodeType":"YulFunctionCall","src":"27878:18:32"},"nativeSrc":"27878:18:32","nodeType":"YulExpressionStatement","src":"27878:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"27809:1:32","nodeType":"YulIdentifier","src":"27809:1:32"}],"functionName":{"name":"iszero","nativeSrc":"27802:6:32","nodeType":"YulIdentifier","src":"27802:6:32"},"nativeSrc":"27802:9:32","nodeType":"YulFunctionCall","src":"27802:9:32"},{"arguments":[{"name":"y","nativeSrc":"27832:1:32","nodeType":"YulIdentifier","src":"27832:1:32"},{"arguments":[{"name":"product","nativeSrc":"27839:7:32","nodeType":"YulIdentifier","src":"27839:7:32"},{"name":"x","nativeSrc":"27848:1:32","nodeType":"YulIdentifier","src":"27848:1:32"}],"functionName":{"name":"div","nativeSrc":"27835:3:32","nodeType":"YulIdentifier","src":"27835:3:32"},"nativeSrc":"27835:15:32","nodeType":"YulFunctionCall","src":"27835:15:32"}],"functionName":{"name":"eq","nativeSrc":"27829:2:32","nodeType":"YulIdentifier","src":"27829:2:32"},"nativeSrc":"27829:22:32","nodeType":"YulFunctionCall","src":"27829:22:32"}],"functionName":{"name":"or","nativeSrc":"27782:2:32","nodeType":"YulIdentifier","src":"27782:2:32"},"nativeSrc":"27782:83:32","nodeType":"YulFunctionCall","src":"27782:83:32"}],"functionName":{"name":"iszero","nativeSrc":"27762:6:32","nodeType":"YulIdentifier","src":"27762:6:32"},"nativeSrc":"27762:113:32","nodeType":"YulFunctionCall","src":"27762:113:32"},"nativeSrc":"27759:139:32","nodeType":"YulIf","src":"27759:139:32"}]},"name":"checked_mul_t_uint256","nativeSrc":"27495:410:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"27526:1:32","nodeType":"YulTypedName","src":"27526:1:32","type":""},{"name":"y","nativeSrc":"27529:1:32","nodeType":"YulTypedName","src":"27529:1:32","type":""}],"returnVariables":[{"name":"product","nativeSrc":"27535:7:32","nodeType":"YulTypedName","src":"27535:7:32","type":""}],"src":"27495:410:32"},{"body":{"nativeSrc":"27939:152:32","nodeType":"YulBlock","src":"27939:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"27956:1:32","nodeType":"YulLiteral","src":"27956:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"27959:77:32","nodeType":"YulLiteral","src":"27959:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"27949:6:32","nodeType":"YulIdentifier","src":"27949:6:32"},"nativeSrc":"27949:88:32","nodeType":"YulFunctionCall","src":"27949:88:32"},"nativeSrc":"27949:88:32","nodeType":"YulExpressionStatement","src":"27949:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28053:1:32","nodeType":"YulLiteral","src":"28053:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"28056:4:32","nodeType":"YulLiteral","src":"28056:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"28046:6:32","nodeType":"YulIdentifier","src":"28046:6:32"},"nativeSrc":"28046:15:32","nodeType":"YulFunctionCall","src":"28046:15:32"},"nativeSrc":"28046:15:32","nodeType":"YulExpressionStatement","src":"28046:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28077:1:32","nodeType":"YulLiteral","src":"28077:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"28080:4:32","nodeType":"YulLiteral","src":"28080:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"28070:6:32","nodeType":"YulIdentifier","src":"28070:6:32"},"nativeSrc":"28070:15:32","nodeType":"YulFunctionCall","src":"28070:15:32"},"nativeSrc":"28070:15:32","nodeType":"YulExpressionStatement","src":"28070:15:32"}]},"name":"panic_error_0x12","nativeSrc":"27911:180:32","nodeType":"YulFunctionDefinition","src":"27911:180:32"},{"body":{"nativeSrc":"28139:143:32","nodeType":"YulBlock","src":"28139:143:32","statements":[{"nativeSrc":"28149:25:32","nodeType":"YulAssignment","src":"28149:25:32","value":{"arguments":[{"name":"x","nativeSrc":"28172:1:32","nodeType":"YulIdentifier","src":"28172:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"28154:17:32","nodeType":"YulIdentifier","src":"28154:17:32"},"nativeSrc":"28154:20:32","nodeType":"YulFunctionCall","src":"28154:20:32"},"variableNames":[{"name":"x","nativeSrc":"28149:1:32","nodeType":"YulIdentifier","src":"28149:1:32"}]},{"nativeSrc":"28183:25:32","nodeType":"YulAssignment","src":"28183:25:32","value":{"arguments":[{"name":"y","nativeSrc":"28206:1:32","nodeType":"YulIdentifier","src":"28206:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"28188:17:32","nodeType":"YulIdentifier","src":"28188:17:32"},"nativeSrc":"28188:20:32","nodeType":"YulFunctionCall","src":"28188:20:32"},"variableNames":[{"name":"y","nativeSrc":"28183:1:32","nodeType":"YulIdentifier","src":"28183:1:32"}]},{"body":{"nativeSrc":"28230:22:32","nodeType":"YulBlock","src":"28230:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"28232:16:32","nodeType":"YulIdentifier","src":"28232:16:32"},"nativeSrc":"28232:18:32","nodeType":"YulFunctionCall","src":"28232:18:32"},"nativeSrc":"28232:18:32","nodeType":"YulExpressionStatement","src":"28232:18:32"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"28227:1:32","nodeType":"YulIdentifier","src":"28227:1:32"}],"functionName":{"name":"iszero","nativeSrc":"28220:6:32","nodeType":"YulIdentifier","src":"28220:6:32"},"nativeSrc":"28220:9:32","nodeType":"YulFunctionCall","src":"28220:9:32"},"nativeSrc":"28217:35:32","nodeType":"YulIf","src":"28217:35:32"},{"nativeSrc":"28262:14:32","nodeType":"YulAssignment","src":"28262:14:32","value":{"arguments":[{"name":"x","nativeSrc":"28271:1:32","nodeType":"YulIdentifier","src":"28271:1:32"},{"name":"y","nativeSrc":"28274:1:32","nodeType":"YulIdentifier","src":"28274:1:32"}],"functionName":{"name":"div","nativeSrc":"28267:3:32","nodeType":"YulIdentifier","src":"28267:3:32"},"nativeSrc":"28267:9:32","nodeType":"YulFunctionCall","src":"28267:9:32"},"variableNames":[{"name":"r","nativeSrc":"28262:1:32","nodeType":"YulIdentifier","src":"28262:1:32"}]}]},"name":"checked_div_t_uint256","nativeSrc":"28097:185:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"28128:1:32","nodeType":"YulTypedName","src":"28128:1:32","type":""},{"name":"y","nativeSrc":"28131:1:32","nodeType":"YulTypedName","src":"28131:1:32","type":""}],"returnVariables":[{"name":"r","nativeSrc":"28137:1:32","nodeType":"YulTypedName","src":"28137:1:32","type":""}],"src":"28097:185:32"},{"body":{"nativeSrc":"28394:62:32","nodeType":"YulBlock","src":"28394:62:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"28416:6:32","nodeType":"YulIdentifier","src":"28416:6:32"},{"kind":"number","nativeSrc":"28424:1:32","nodeType":"YulLiteral","src":"28424:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28412:3:32","nodeType":"YulIdentifier","src":"28412:3:32"},"nativeSrc":"28412:14:32","nodeType":"YulFunctionCall","src":"28412:14:32"},{"hexValue":"496e76616c69642074696d652072616e6765","kind":"string","nativeSrc":"28428:20:32","nodeType":"YulLiteral","src":"28428:20:32","type":"","value":"Invalid time range"}],"functionName":{"name":"mstore","nativeSrc":"28405:6:32","nodeType":"YulIdentifier","src":"28405:6:32"},"nativeSrc":"28405:44:32","nodeType":"YulFunctionCall","src":"28405:44:32"},"nativeSrc":"28405:44:32","nodeType":"YulExpressionStatement","src":"28405:44:32"}]},"name":"store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc","nativeSrc":"28288:168:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"28386:6:32","nodeType":"YulTypedName","src":"28386:6:32","type":""}],"src":"28288:168:32"},{"body":{"nativeSrc":"28608:220:32","nodeType":"YulBlock","src":"28608:220:32","statements":[{"nativeSrc":"28618:74:32","nodeType":"YulAssignment","src":"28618:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"28684:3:32","nodeType":"YulIdentifier","src":"28684:3:32"},{"kind":"number","nativeSrc":"28689:2:32","nodeType":"YulLiteral","src":"28689:2:32","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"28625:58:32","nodeType":"YulIdentifier","src":"28625:58:32"},"nativeSrc":"28625:67:32","nodeType":"YulFunctionCall","src":"28625:67:32"},"variableNames":[{"name":"pos","nativeSrc":"28618:3:32","nodeType":"YulIdentifier","src":"28618:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28790:3:32","nodeType":"YulIdentifier","src":"28790:3:32"}],"functionName":{"name":"store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc","nativeSrc":"28701:88:32","nodeType":"YulIdentifier","src":"28701:88:32"},"nativeSrc":"28701:93:32","nodeType":"YulFunctionCall","src":"28701:93:32"},"nativeSrc":"28701:93:32","nodeType":"YulExpressionStatement","src":"28701:93:32"},{"nativeSrc":"28803:19:32","nodeType":"YulAssignment","src":"28803:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"28814:3:32","nodeType":"YulIdentifier","src":"28814:3:32"},{"kind":"number","nativeSrc":"28819:2:32","nodeType":"YulLiteral","src":"28819:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28810:3:32","nodeType":"YulIdentifier","src":"28810:3:32"},"nativeSrc":"28810:12:32","nodeType":"YulFunctionCall","src":"28810:12:32"},"variableNames":[{"name":"end","nativeSrc":"28803:3:32","nodeType":"YulIdentifier","src":"28803:3:32"}]}]},"name":"abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack","nativeSrc":"28462:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28596:3:32","nodeType":"YulTypedName","src":"28596:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28604:3:32","nodeType":"YulTypedName","src":"28604:3:32","type":""}],"src":"28462:366:32"},{"body":{"nativeSrc":"29005:248:32","nodeType":"YulBlock","src":"29005:248:32","statements":[{"nativeSrc":"29015:26:32","nodeType":"YulAssignment","src":"29015:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"29027:9:32","nodeType":"YulIdentifier","src":"29027:9:32"},{"kind":"number","nativeSrc":"29038:2:32","nodeType":"YulLiteral","src":"29038:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29023:3:32","nodeType":"YulIdentifier","src":"29023:3:32"},"nativeSrc":"29023:18:32","nodeType":"YulFunctionCall","src":"29023:18:32"},"variableNames":[{"name":"tail","nativeSrc":"29015:4:32","nodeType":"YulIdentifier","src":"29015:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29062:9:32","nodeType":"YulIdentifier","src":"29062:9:32"},{"kind":"number","nativeSrc":"29073:1:32","nodeType":"YulLiteral","src":"29073:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29058:3:32","nodeType":"YulIdentifier","src":"29058:3:32"},"nativeSrc":"29058:17:32","nodeType":"YulFunctionCall","src":"29058:17:32"},{"arguments":[{"name":"tail","nativeSrc":"29081:4:32","nodeType":"YulIdentifier","src":"29081:4:32"},{"name":"headStart","nativeSrc":"29087:9:32","nodeType":"YulIdentifier","src":"29087:9:32"}],"functionName":{"name":"sub","nativeSrc":"29077:3:32","nodeType":"YulIdentifier","src":"29077:3:32"},"nativeSrc":"29077:20:32","nodeType":"YulFunctionCall","src":"29077:20:32"}],"functionName":{"name":"mstore","nativeSrc":"29051:6:32","nodeType":"YulIdentifier","src":"29051:6:32"},"nativeSrc":"29051:47:32","nodeType":"YulFunctionCall","src":"29051:47:32"},"nativeSrc":"29051:47:32","nodeType":"YulExpressionStatement","src":"29051:47:32"},{"nativeSrc":"29107:139:32","nodeType":"YulAssignment","src":"29107:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"29241:4:32","nodeType":"YulIdentifier","src":"29241:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack","nativeSrc":"29115:124:32","nodeType":"YulIdentifier","src":"29115:124:32"},"nativeSrc":"29115:131:32","nodeType":"YulFunctionCall","src":"29115:131:32"},"variableNames":[{"name":"tail","nativeSrc":"29107:4:32","nodeType":"YulIdentifier","src":"29107:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28834:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28985:9:32","nodeType":"YulTypedName","src":"28985:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29000:4:32","nodeType":"YulTypedName","src":"29000:4:32","type":""}],"src":"28834:419:32"},{"body":{"nativeSrc":"29365:124:32","nodeType":"YulBlock","src":"29365:124:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"29387:6:32","nodeType":"YulIdentifier","src":"29387:6:32"},{"kind":"number","nativeSrc":"29395:1:32","nodeType":"YulLiteral","src":"29395:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29383:3:32","nodeType":"YulIdentifier","src":"29383:3:32"},"nativeSrc":"29383:14:32","nodeType":"YulFunctionCall","src":"29383:14:32"},{"hexValue":"496e76616c6964206d6178207065722077616c6c657420666f72206e6f6e2d70","kind":"string","nativeSrc":"29399:34:32","nodeType":"YulLiteral","src":"29399:34:32","type":"","value":"Invalid max per wallet for non-p"}],"functionName":{"name":"mstore","nativeSrc":"29376:6:32","nodeType":"YulIdentifier","src":"29376:6:32"},"nativeSrc":"29376:58:32","nodeType":"YulFunctionCall","src":"29376:58:32"},"nativeSrc":"29376:58:32","nodeType":"YulExpressionStatement","src":"29376:58:32"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"29455:6:32","nodeType":"YulIdentifier","src":"29455:6:32"},{"kind":"number","nativeSrc":"29463:2:32","nodeType":"YulLiteral","src":"29463:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29451:3:32","nodeType":"YulIdentifier","src":"29451:3:32"},"nativeSrc":"29451:15:32","nodeType":"YulFunctionCall","src":"29451:15:32"},{"hexValue":"75626c6963207068617365","kind":"string","nativeSrc":"29468:13:32","nodeType":"YulLiteral","src":"29468:13:32","type":"","value":"ublic phase"}],"functionName":{"name":"mstore","nativeSrc":"29444:6:32","nodeType":"YulIdentifier","src":"29444:6:32"},"nativeSrc":"29444:38:32","nodeType":"YulFunctionCall","src":"29444:38:32"},"nativeSrc":"29444:38:32","nodeType":"YulExpressionStatement","src":"29444:38:32"}]},"name":"store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3","nativeSrc":"29259:230:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"29357:6:32","nodeType":"YulTypedName","src":"29357:6:32","type":""}],"src":"29259:230:32"},{"body":{"nativeSrc":"29641:220:32","nodeType":"YulBlock","src":"29641:220:32","statements":[{"nativeSrc":"29651:74:32","nodeType":"YulAssignment","src":"29651:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"29717:3:32","nodeType":"YulIdentifier","src":"29717:3:32"},{"kind":"number","nativeSrc":"29722:2:32","nodeType":"YulLiteral","src":"29722:2:32","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"29658:58:32","nodeType":"YulIdentifier","src":"29658:58:32"},"nativeSrc":"29658:67:32","nodeType":"YulFunctionCall","src":"29658:67:32"},"variableNames":[{"name":"pos","nativeSrc":"29651:3:32","nodeType":"YulIdentifier","src":"29651:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"29823:3:32","nodeType":"YulIdentifier","src":"29823:3:32"}],"functionName":{"name":"store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3","nativeSrc":"29734:88:32","nodeType":"YulIdentifier","src":"29734:88:32"},"nativeSrc":"29734:93:32","nodeType":"YulFunctionCall","src":"29734:93:32"},"nativeSrc":"29734:93:32","nodeType":"YulExpressionStatement","src":"29734:93:32"},{"nativeSrc":"29836:19:32","nodeType":"YulAssignment","src":"29836:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"29847:3:32","nodeType":"YulIdentifier","src":"29847:3:32"},{"kind":"number","nativeSrc":"29852:2:32","nodeType":"YulLiteral","src":"29852:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29843:3:32","nodeType":"YulIdentifier","src":"29843:3:32"},"nativeSrc":"29843:12:32","nodeType":"YulFunctionCall","src":"29843:12:32"},"variableNames":[{"name":"end","nativeSrc":"29836:3:32","nodeType":"YulIdentifier","src":"29836:3:32"}]}]},"name":"abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack","nativeSrc":"29495:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"29629:3:32","nodeType":"YulTypedName","src":"29629:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"29637:3:32","nodeType":"YulTypedName","src":"29637:3:32","type":""}],"src":"29495:366:32"},{"body":{"nativeSrc":"30038:248:32","nodeType":"YulBlock","src":"30038:248:32","statements":[{"nativeSrc":"30048:26:32","nodeType":"YulAssignment","src":"30048:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"30060:9:32","nodeType":"YulIdentifier","src":"30060:9:32"},{"kind":"number","nativeSrc":"30071:2:32","nodeType":"YulLiteral","src":"30071:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30056:3:32","nodeType":"YulIdentifier","src":"30056:3:32"},"nativeSrc":"30056:18:32","nodeType":"YulFunctionCall","src":"30056:18:32"},"variableNames":[{"name":"tail","nativeSrc":"30048:4:32","nodeType":"YulIdentifier","src":"30048:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30095:9:32","nodeType":"YulIdentifier","src":"30095:9:32"},{"kind":"number","nativeSrc":"30106:1:32","nodeType":"YulLiteral","src":"30106:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30091:3:32","nodeType":"YulIdentifier","src":"30091:3:32"},"nativeSrc":"30091:17:32","nodeType":"YulFunctionCall","src":"30091:17:32"},{"arguments":[{"name":"tail","nativeSrc":"30114:4:32","nodeType":"YulIdentifier","src":"30114:4:32"},{"name":"headStart","nativeSrc":"30120:9:32","nodeType":"YulIdentifier","src":"30120:9:32"}],"functionName":{"name":"sub","nativeSrc":"30110:3:32","nodeType":"YulIdentifier","src":"30110:3:32"},"nativeSrc":"30110:20:32","nodeType":"YulFunctionCall","src":"30110:20:32"}],"functionName":{"name":"mstore","nativeSrc":"30084:6:32","nodeType":"YulIdentifier","src":"30084:6:32"},"nativeSrc":"30084:47:32","nodeType":"YulFunctionCall","src":"30084:47:32"},"nativeSrc":"30084:47:32","nodeType":"YulExpressionStatement","src":"30084:47:32"},{"nativeSrc":"30140:139:32","nodeType":"YulAssignment","src":"30140:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"30274:4:32","nodeType":"YulIdentifier","src":"30274:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack","nativeSrc":"30148:124:32","nodeType":"YulIdentifier","src":"30148:124:32"},"nativeSrc":"30148:131:32","nodeType":"YulFunctionCall","src":"30148:131:32"},"variableNames":[{"name":"tail","nativeSrc":"30140:4:32","nodeType":"YulIdentifier","src":"30140:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"29867:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30018:9:32","nodeType":"YulTypedName","src":"30018:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30033:4:32","nodeType":"YulTypedName","src":"30033:4:32","type":""}],"src":"29867:419:32"},{"body":{"nativeSrc":"30398:121:32","nodeType":"YulBlock","src":"30398:121:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"30420:6:32","nodeType":"YulIdentifier","src":"30420:6:32"},{"kind":"number","nativeSrc":"30428:1:32","nodeType":"YulLiteral","src":"30428:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30416:3:32","nodeType":"YulIdentifier","src":"30416:3:32"},"nativeSrc":"30416:14:32","nodeType":"YulFunctionCall","src":"30416:14:32"},{"hexValue":"4d65726b6c6520726f6f7420726571756972656420666f722077686974656c69","kind":"string","nativeSrc":"30432:34:32","nodeType":"YulLiteral","src":"30432:34:32","type":"","value":"Merkle root required for whiteli"}],"functionName":{"name":"mstore","nativeSrc":"30409:6:32","nodeType":"YulIdentifier","src":"30409:6:32"},"nativeSrc":"30409:58:32","nodeType":"YulFunctionCall","src":"30409:58:32"},"nativeSrc":"30409:58:32","nodeType":"YulExpressionStatement","src":"30409:58:32"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"30488:6:32","nodeType":"YulIdentifier","src":"30488:6:32"},{"kind":"number","nativeSrc":"30496:2:32","nodeType":"YulLiteral","src":"30496:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30484:3:32","nodeType":"YulIdentifier","src":"30484:3:32"},"nativeSrc":"30484:15:32","nodeType":"YulFunctionCall","src":"30484:15:32"},{"hexValue":"7374207068617365","kind":"string","nativeSrc":"30501:10:32","nodeType":"YulLiteral","src":"30501:10:32","type":"","value":"st phase"}],"functionName":{"name":"mstore","nativeSrc":"30477:6:32","nodeType":"YulIdentifier","src":"30477:6:32"},"nativeSrc":"30477:35:32","nodeType":"YulFunctionCall","src":"30477:35:32"},"nativeSrc":"30477:35:32","nodeType":"YulExpressionStatement","src":"30477:35:32"}]},"name":"store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef","nativeSrc":"30292:227:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"30390:6:32","nodeType":"YulTypedName","src":"30390:6:32","type":""}],"src":"30292:227:32"},{"body":{"nativeSrc":"30671:220:32","nodeType":"YulBlock","src":"30671:220:32","statements":[{"nativeSrc":"30681:74:32","nodeType":"YulAssignment","src":"30681:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"30747:3:32","nodeType":"YulIdentifier","src":"30747:3:32"},{"kind":"number","nativeSrc":"30752:2:32","nodeType":"YulLiteral","src":"30752:2:32","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"30688:58:32","nodeType":"YulIdentifier","src":"30688:58:32"},"nativeSrc":"30688:67:32","nodeType":"YulFunctionCall","src":"30688:67:32"},"variableNames":[{"name":"pos","nativeSrc":"30681:3:32","nodeType":"YulIdentifier","src":"30681:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"30853:3:32","nodeType":"YulIdentifier","src":"30853:3:32"}],"functionName":{"name":"store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef","nativeSrc":"30764:88:32","nodeType":"YulIdentifier","src":"30764:88:32"},"nativeSrc":"30764:93:32","nodeType":"YulFunctionCall","src":"30764:93:32"},"nativeSrc":"30764:93:32","nodeType":"YulExpressionStatement","src":"30764:93:32"},{"nativeSrc":"30866:19:32","nodeType":"YulAssignment","src":"30866:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"30877:3:32","nodeType":"YulIdentifier","src":"30877:3:32"},{"kind":"number","nativeSrc":"30882:2:32","nodeType":"YulLiteral","src":"30882:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"30873:3:32","nodeType":"YulIdentifier","src":"30873:3:32"},"nativeSrc":"30873:12:32","nodeType":"YulFunctionCall","src":"30873:12:32"},"variableNames":[{"name":"end","nativeSrc":"30866:3:32","nodeType":"YulIdentifier","src":"30866:3:32"}]}]},"name":"abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack","nativeSrc":"30525:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"30659:3:32","nodeType":"YulTypedName","src":"30659:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30667:3:32","nodeType":"YulTypedName","src":"30667:3:32","type":""}],"src":"30525:366:32"},{"body":{"nativeSrc":"31068:248:32","nodeType":"YulBlock","src":"31068:248:32","statements":[{"nativeSrc":"31078:26:32","nodeType":"YulAssignment","src":"31078:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"31090:9:32","nodeType":"YulIdentifier","src":"31090:9:32"},{"kind":"number","nativeSrc":"31101:2:32","nodeType":"YulLiteral","src":"31101:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31086:3:32","nodeType":"YulIdentifier","src":"31086:3:32"},"nativeSrc":"31086:18:32","nodeType":"YulFunctionCall","src":"31086:18:32"},"variableNames":[{"name":"tail","nativeSrc":"31078:4:32","nodeType":"YulIdentifier","src":"31078:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31125:9:32","nodeType":"YulIdentifier","src":"31125:9:32"},{"kind":"number","nativeSrc":"31136:1:32","nodeType":"YulLiteral","src":"31136:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31121:3:32","nodeType":"YulIdentifier","src":"31121:3:32"},"nativeSrc":"31121:17:32","nodeType":"YulFunctionCall","src":"31121:17:32"},{"arguments":[{"name":"tail","nativeSrc":"31144:4:32","nodeType":"YulIdentifier","src":"31144:4:32"},{"name":"headStart","nativeSrc":"31150:9:32","nodeType":"YulIdentifier","src":"31150:9:32"}],"functionName":{"name":"sub","nativeSrc":"31140:3:32","nodeType":"YulIdentifier","src":"31140:3:32"},"nativeSrc":"31140:20:32","nodeType":"YulFunctionCall","src":"31140:20:32"}],"functionName":{"name":"mstore","nativeSrc":"31114:6:32","nodeType":"YulIdentifier","src":"31114:6:32"},"nativeSrc":"31114:47:32","nodeType":"YulFunctionCall","src":"31114:47:32"},"nativeSrc":"31114:47:32","nodeType":"YulExpressionStatement","src":"31114:47:32"},{"nativeSrc":"31170:139:32","nodeType":"YulAssignment","src":"31170:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"31304:4:32","nodeType":"YulIdentifier","src":"31304:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack","nativeSrc":"31178:124:32","nodeType":"YulIdentifier","src":"31178:124:32"},"nativeSrc":"31178:131:32","nodeType":"YulFunctionCall","src":"31178:131:32"},"variableNames":[{"name":"tail","nativeSrc":"31170:4:32","nodeType":"YulIdentifier","src":"31170:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"30897:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31048:9:32","nodeType":"YulTypedName","src":"31048:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31063:4:32","nodeType":"YulTypedName","src":"31063:4:32","type":""}],"src":"30897:419:32"},{"body":{"nativeSrc":"31428:120:32","nodeType":"YulBlock","src":"31428:120:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31450:6:32","nodeType":"YulIdentifier","src":"31450:6:32"},{"kind":"number","nativeSrc":"31458:1:32","nodeType":"YulLiteral","src":"31458:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31446:3:32","nodeType":"YulIdentifier","src":"31446:3:32"},"nativeSrc":"31446:14:32","nodeType":"YulFunctionCall","src":"31446:14:32"},{"hexValue":"50686173652074696d65206f7665726c6170732077697468206578697374696e","kind":"string","nativeSrc":"31462:34:32","nodeType":"YulLiteral","src":"31462:34:32","type":"","value":"Phase time overlaps with existin"}],"functionName":{"name":"mstore","nativeSrc":"31439:6:32","nodeType":"YulIdentifier","src":"31439:6:32"},"nativeSrc":"31439:58:32","nodeType":"YulFunctionCall","src":"31439:58:32"},"nativeSrc":"31439:58:32","nodeType":"YulExpressionStatement","src":"31439:58:32"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31518:6:32","nodeType":"YulIdentifier","src":"31518:6:32"},{"kind":"number","nativeSrc":"31526:2:32","nodeType":"YulLiteral","src":"31526:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31514:3:32","nodeType":"YulIdentifier","src":"31514:3:32"},"nativeSrc":"31514:15:32","nodeType":"YulFunctionCall","src":"31514:15:32"},{"hexValue":"67207068617365","kind":"string","nativeSrc":"31531:9:32","nodeType":"YulLiteral","src":"31531:9:32","type":"","value":"g phase"}],"functionName":{"name":"mstore","nativeSrc":"31507:6:32","nodeType":"YulIdentifier","src":"31507:6:32"},"nativeSrc":"31507:34:32","nodeType":"YulFunctionCall","src":"31507:34:32"},"nativeSrc":"31507:34:32","nodeType":"YulExpressionStatement","src":"31507:34:32"}]},"name":"store_literal_in_memory_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8","nativeSrc":"31322:226:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"31420:6:32","nodeType":"YulTypedName","src":"31420:6:32","type":""}],"src":"31322:226:32"},{"body":{"nativeSrc":"31700:220:32","nodeType":"YulBlock","src":"31700:220:32","statements":[{"nativeSrc":"31710:74:32","nodeType":"YulAssignment","src":"31710:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"31776:3:32","nodeType":"YulIdentifier","src":"31776:3:32"},{"kind":"number","nativeSrc":"31781:2:32","nodeType":"YulLiteral","src":"31781:2:32","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"31717:58:32","nodeType":"YulIdentifier","src":"31717:58:32"},"nativeSrc":"31717:67:32","nodeType":"YulFunctionCall","src":"31717:67:32"},"variableNames":[{"name":"pos","nativeSrc":"31710:3:32","nodeType":"YulIdentifier","src":"31710:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"31882:3:32","nodeType":"YulIdentifier","src":"31882:3:32"}],"functionName":{"name":"store_literal_in_memory_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8","nativeSrc":"31793:88:32","nodeType":"YulIdentifier","src":"31793:88:32"},"nativeSrc":"31793:93:32","nodeType":"YulFunctionCall","src":"31793:93:32"},"nativeSrc":"31793:93:32","nodeType":"YulExpressionStatement","src":"31793:93:32"},{"nativeSrc":"31895:19:32","nodeType":"YulAssignment","src":"31895:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"31906:3:32","nodeType":"YulIdentifier","src":"31906:3:32"},{"kind":"number","nativeSrc":"31911:2:32","nodeType":"YulLiteral","src":"31911:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"31902:3:32","nodeType":"YulIdentifier","src":"31902:3:32"},"nativeSrc":"31902:12:32","nodeType":"YulFunctionCall","src":"31902:12:32"},"variableNames":[{"name":"end","nativeSrc":"31895:3:32","nodeType":"YulIdentifier","src":"31895:3:32"}]}]},"name":"abi_encode_t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8_to_t_string_memory_ptr_fromStack","nativeSrc":"31554:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31688:3:32","nodeType":"YulTypedName","src":"31688:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31696:3:32","nodeType":"YulTypedName","src":"31696:3:32","type":""}],"src":"31554:366:32"},{"body":{"nativeSrc":"32097:248:32","nodeType":"YulBlock","src":"32097:248:32","statements":[{"nativeSrc":"32107:26:32","nodeType":"YulAssignment","src":"32107:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"32119:9:32","nodeType":"YulIdentifier","src":"32119:9:32"},{"kind":"number","nativeSrc":"32130:2:32","nodeType":"YulLiteral","src":"32130:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32115:3:32","nodeType":"YulIdentifier","src":"32115:3:32"},"nativeSrc":"32115:18:32","nodeType":"YulFunctionCall","src":"32115:18:32"},"variableNames":[{"name":"tail","nativeSrc":"32107:4:32","nodeType":"YulIdentifier","src":"32107:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32154:9:32","nodeType":"YulIdentifier","src":"32154:9:32"},{"kind":"number","nativeSrc":"32165:1:32","nodeType":"YulLiteral","src":"32165:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32150:3:32","nodeType":"YulIdentifier","src":"32150:3:32"},"nativeSrc":"32150:17:32","nodeType":"YulFunctionCall","src":"32150:17:32"},{"arguments":[{"name":"tail","nativeSrc":"32173:4:32","nodeType":"YulIdentifier","src":"32173:4:32"},{"name":"headStart","nativeSrc":"32179:9:32","nodeType":"YulIdentifier","src":"32179:9:32"}],"functionName":{"name":"sub","nativeSrc":"32169:3:32","nodeType":"YulIdentifier","src":"32169:3:32"},"nativeSrc":"32169:20:32","nodeType":"YulFunctionCall","src":"32169:20:32"}],"functionName":{"name":"mstore","nativeSrc":"32143:6:32","nodeType":"YulIdentifier","src":"32143:6:32"},"nativeSrc":"32143:47:32","nodeType":"YulFunctionCall","src":"32143:47:32"},"nativeSrc":"32143:47:32","nodeType":"YulExpressionStatement","src":"32143:47:32"},{"nativeSrc":"32199:139:32","nodeType":"YulAssignment","src":"32199:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"32333:4:32","nodeType":"YulIdentifier","src":"32333:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8_to_t_string_memory_ptr_fromStack","nativeSrc":"32207:124:32","nodeType":"YulIdentifier","src":"32207:124:32"},"nativeSrc":"32207:131:32","nodeType":"YulFunctionCall","src":"32207:131:32"},"variableNames":[{"name":"tail","nativeSrc":"32199:4:32","nodeType":"YulIdentifier","src":"32199:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"31926:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32077:9:32","nodeType":"YulTypedName","src":"32077:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32092:4:32","nodeType":"YulTypedName","src":"32092:4:32","type":""}],"src":"31926:419:32"},{"body":{"nativeSrc":"32489:218:32","nodeType":"YulBlock","src":"32489:218:32","statements":[{"nativeSrc":"32499:26:32","nodeType":"YulAssignment","src":"32499:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"32511:9:32","nodeType":"YulIdentifier","src":"32511:9:32"},{"kind":"number","nativeSrc":"32522:2:32","nodeType":"YulLiteral","src":"32522:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"32507:3:32","nodeType":"YulIdentifier","src":"32507:3:32"},"nativeSrc":"32507:18:32","nodeType":"YulFunctionCall","src":"32507:18:32"},"variableNames":[{"name":"tail","nativeSrc":"32499:4:32","nodeType":"YulIdentifier","src":"32499:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"32591:6:32","nodeType":"YulIdentifier","src":"32591:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"32604:9:32","nodeType":"YulIdentifier","src":"32604:9:32"},{"kind":"number","nativeSrc":"32615:1:32","nodeType":"YulLiteral","src":"32615:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32600:3:32","nodeType":"YulIdentifier","src":"32600:3:32"},"nativeSrc":"32600:17:32","nodeType":"YulFunctionCall","src":"32600:17:32"}],"functionName":{"name":"abi_encode_t_enum$_PhaseType_$8455_to_t_uint8_fromStack","nativeSrc":"32535:55:32","nodeType":"YulIdentifier","src":"32535:55:32"},"nativeSrc":"32535:83:32","nodeType":"YulFunctionCall","src":"32535:83:32"},"nativeSrc":"32535:83:32","nodeType":"YulExpressionStatement","src":"32535:83:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"32672:6:32","nodeType":"YulIdentifier","src":"32672:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"32685:9:32","nodeType":"YulIdentifier","src":"32685:9:32"},{"kind":"number","nativeSrc":"32696:2:32","nodeType":"YulLiteral","src":"32696:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32681:3:32","nodeType":"YulIdentifier","src":"32681:3:32"},"nativeSrc":"32681:18:32","nodeType":"YulFunctionCall","src":"32681:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"32628:43:32","nodeType":"YulIdentifier","src":"32628:43:32"},"nativeSrc":"32628:72:32","nodeType":"YulFunctionCall","src":"32628:72:32"},"nativeSrc":"32628:72:32","nodeType":"YulExpressionStatement","src":"32628:72:32"}]},"name":"abi_encode_tuple_t_enum$_PhaseType_$8455_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"32351:356:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32453:9:32","nodeType":"YulTypedName","src":"32453:9:32","type":""},{"name":"value1","nativeSrc":"32465:6:32","nodeType":"YulTypedName","src":"32465:6:32","type":""},{"name":"value0","nativeSrc":"32473:6:32","nodeType":"YulTypedName","src":"32473:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32484:4:32","nodeType":"YulTypedName","src":"32484:4:32","type":""}],"src":"32351:356:32"},{"body":{"nativeSrc":"32819:62:32","nodeType":"YulBlock","src":"32819:62:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"32841:6:32","nodeType":"YulIdentifier","src":"32841:6:32"},{"kind":"number","nativeSrc":"32849:1:32","nodeType":"YulLiteral","src":"32849:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32837:3:32","nodeType":"YulIdentifier","src":"32837:3:32"},"nativeSrc":"32837:14:32","nodeType":"YulFunctionCall","src":"32837:14:32"},{"hexValue":"436f6e747261637420697320706175736564","kind":"string","nativeSrc":"32853:20:32","nodeType":"YulLiteral","src":"32853:20:32","type":"","value":"Contract is paused"}],"functionName":{"name":"mstore","nativeSrc":"32830:6:32","nodeType":"YulIdentifier","src":"32830:6:32"},"nativeSrc":"32830:44:32","nodeType":"YulFunctionCall","src":"32830:44:32"},"nativeSrc":"32830:44:32","nodeType":"YulExpressionStatement","src":"32830:44:32"}]},"name":"store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d","nativeSrc":"32713:168:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"32811:6:32","nodeType":"YulTypedName","src":"32811:6:32","type":""}],"src":"32713:168:32"},{"body":{"nativeSrc":"33033:220:32","nodeType":"YulBlock","src":"33033:220:32","statements":[{"nativeSrc":"33043:74:32","nodeType":"YulAssignment","src":"33043:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"33109:3:32","nodeType":"YulIdentifier","src":"33109:3:32"},{"kind":"number","nativeSrc":"33114:2:32","nodeType":"YulLiteral","src":"33114:2:32","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"33050:58:32","nodeType":"YulIdentifier","src":"33050:58:32"},"nativeSrc":"33050:67:32","nodeType":"YulFunctionCall","src":"33050:67:32"},"variableNames":[{"name":"pos","nativeSrc":"33043:3:32","nodeType":"YulIdentifier","src":"33043:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"33215:3:32","nodeType":"YulIdentifier","src":"33215:3:32"}],"functionName":{"name":"store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d","nativeSrc":"33126:88:32","nodeType":"YulIdentifier","src":"33126:88:32"},"nativeSrc":"33126:93:32","nodeType":"YulFunctionCall","src":"33126:93:32"},"nativeSrc":"33126:93:32","nodeType":"YulExpressionStatement","src":"33126:93:32"},{"nativeSrc":"33228:19:32","nodeType":"YulAssignment","src":"33228:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"33239:3:32","nodeType":"YulIdentifier","src":"33239:3:32"},{"kind":"number","nativeSrc":"33244:2:32","nodeType":"YulLiteral","src":"33244:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33235:3:32","nodeType":"YulIdentifier","src":"33235:3:32"},"nativeSrc":"33235:12:32","nodeType":"YulFunctionCall","src":"33235:12:32"},"variableNames":[{"name":"end","nativeSrc":"33228:3:32","nodeType":"YulIdentifier","src":"33228:3:32"}]}]},"name":"abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack","nativeSrc":"32887:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"33021:3:32","nodeType":"YulTypedName","src":"33021:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"33029:3:32","nodeType":"YulTypedName","src":"33029:3:32","type":""}],"src":"32887:366:32"},{"body":{"nativeSrc":"33430:248:32","nodeType":"YulBlock","src":"33430:248:32","statements":[{"nativeSrc":"33440:26:32","nodeType":"YulAssignment","src":"33440:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"33452:9:32","nodeType":"YulIdentifier","src":"33452:9:32"},{"kind":"number","nativeSrc":"33463:2:32","nodeType":"YulLiteral","src":"33463:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33448:3:32","nodeType":"YulIdentifier","src":"33448:3:32"},"nativeSrc":"33448:18:32","nodeType":"YulFunctionCall","src":"33448:18:32"},"variableNames":[{"name":"tail","nativeSrc":"33440:4:32","nodeType":"YulIdentifier","src":"33440:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33487:9:32","nodeType":"YulIdentifier","src":"33487:9:32"},{"kind":"number","nativeSrc":"33498:1:32","nodeType":"YulLiteral","src":"33498:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33483:3:32","nodeType":"YulIdentifier","src":"33483:3:32"},"nativeSrc":"33483:17:32","nodeType":"YulFunctionCall","src":"33483:17:32"},{"arguments":[{"name":"tail","nativeSrc":"33506:4:32","nodeType":"YulIdentifier","src":"33506:4:32"},{"name":"headStart","nativeSrc":"33512:9:32","nodeType":"YulIdentifier","src":"33512:9:32"}],"functionName":{"name":"sub","nativeSrc":"33502:3:32","nodeType":"YulIdentifier","src":"33502:3:32"},"nativeSrc":"33502:20:32","nodeType":"YulFunctionCall","src":"33502:20:32"}],"functionName":{"name":"mstore","nativeSrc":"33476:6:32","nodeType":"YulIdentifier","src":"33476:6:32"},"nativeSrc":"33476:47:32","nodeType":"YulFunctionCall","src":"33476:47:32"},"nativeSrc":"33476:47:32","nodeType":"YulExpressionStatement","src":"33476:47:32"},{"nativeSrc":"33532:139:32","nodeType":"YulAssignment","src":"33532:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"33666:4:32","nodeType":"YulIdentifier","src":"33666:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack","nativeSrc":"33540:124:32","nodeType":"YulIdentifier","src":"33540:124:32"},"nativeSrc":"33540:131:32","nodeType":"YulFunctionCall","src":"33540:131:32"},"variableNames":[{"name":"tail","nativeSrc":"33532:4:32","nodeType":"YulIdentifier","src":"33532:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"33259:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33410:9:32","nodeType":"YulTypedName","src":"33410:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33425:4:32","nodeType":"YulTypedName","src":"33425:4:32","type":""}],"src":"33259:419:32"},{"body":{"nativeSrc":"33726:52:32","nodeType":"YulBlock","src":"33726:52:32","statements":[{"nativeSrc":"33736:35:32","nodeType":"YulAssignment","src":"33736:35:32","value":{"arguments":[{"kind":"number","nativeSrc":"33761:2:32","nodeType":"YulLiteral","src":"33761:2:32","type":"","value":"96"},{"name":"value","nativeSrc":"33765:5:32","nodeType":"YulIdentifier","src":"33765:5:32"}],"functionName":{"name":"shl","nativeSrc":"33757:3:32","nodeType":"YulIdentifier","src":"33757:3:32"},"nativeSrc":"33757:14:32","nodeType":"YulFunctionCall","src":"33757:14:32"},"variableNames":[{"name":"newValue","nativeSrc":"33736:8:32","nodeType":"YulIdentifier","src":"33736:8:32"}]}]},"name":"shift_left_96","nativeSrc":"33684:94:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33707:5:32","nodeType":"YulTypedName","src":"33707:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"33717:8:32","nodeType":"YulTypedName","src":"33717:8:32","type":""}],"src":"33684:94:32"},{"body":{"nativeSrc":"33831:47:32","nodeType":"YulBlock","src":"33831:47:32","statements":[{"nativeSrc":"33841:31:32","nodeType":"YulAssignment","src":"33841:31:32","value":{"arguments":[{"name":"value","nativeSrc":"33866:5:32","nodeType":"YulIdentifier","src":"33866:5:32"}],"functionName":{"name":"shift_left_96","nativeSrc":"33852:13:32","nodeType":"YulIdentifier","src":"33852:13:32"},"nativeSrc":"33852:20:32","nodeType":"YulFunctionCall","src":"33852:20:32"},"variableNames":[{"name":"aligned","nativeSrc":"33841:7:32","nodeType":"YulIdentifier","src":"33841:7:32"}]}]},"name":"leftAlign_t_uint160","nativeSrc":"33784:94:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33813:5:32","nodeType":"YulTypedName","src":"33813:5:32","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"33823:7:32","nodeType":"YulTypedName","src":"33823:7:32","type":""}],"src":"33784:94:32"},{"body":{"nativeSrc":"33931:53:32","nodeType":"YulBlock","src":"33931:53:32","statements":[{"nativeSrc":"33941:37:32","nodeType":"YulAssignment","src":"33941:37:32","value":{"arguments":[{"name":"value","nativeSrc":"33972:5:32","nodeType":"YulIdentifier","src":"33972:5:32"}],"functionName":{"name":"leftAlign_t_uint160","nativeSrc":"33952:19:32","nodeType":"YulIdentifier","src":"33952:19:32"},"nativeSrc":"33952:26:32","nodeType":"YulFunctionCall","src":"33952:26:32"},"variableNames":[{"name":"aligned","nativeSrc":"33941:7:32","nodeType":"YulIdentifier","src":"33941:7:32"}]}]},"name":"leftAlign_t_address","nativeSrc":"33884:100:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33913:5:32","nodeType":"YulTypedName","src":"33913:5:32","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"33923:7:32","nodeType":"YulTypedName","src":"33923:7:32","type":""}],"src":"33884:100:32"},{"body":{"nativeSrc":"34073:74:32","nodeType":"YulBlock","src":"34073:74:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"34090:3:32","nodeType":"YulIdentifier","src":"34090:3:32"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"34133:5:32","nodeType":"YulIdentifier","src":"34133:5:32"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"34115:17:32","nodeType":"YulIdentifier","src":"34115:17:32"},"nativeSrc":"34115:24:32","nodeType":"YulFunctionCall","src":"34115:24:32"}],"functionName":{"name":"leftAlign_t_address","nativeSrc":"34095:19:32","nodeType":"YulIdentifier","src":"34095:19:32"},"nativeSrc":"34095:45:32","nodeType":"YulFunctionCall","src":"34095:45:32"}],"functionName":{"name":"mstore","nativeSrc":"34083:6:32","nodeType":"YulIdentifier","src":"34083:6:32"},"nativeSrc":"34083:58:32","nodeType":"YulFunctionCall","src":"34083:58:32"},"nativeSrc":"34083:58:32","nodeType":"YulExpressionStatement","src":"34083:58:32"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"33990:157:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34061:5:32","nodeType":"YulTypedName","src":"34061:5:32","type":""},{"name":"pos","nativeSrc":"34068:3:32","nodeType":"YulTypedName","src":"34068:3:32","type":""}],"src":"33990:157:32"},{"body":{"nativeSrc":"34269:140:32","nodeType":"YulBlock","src":"34269:140:32","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"34342:6:32","nodeType":"YulIdentifier","src":"34342:6:32"},{"name":"pos","nativeSrc":"34351:3:32","nodeType":"YulIdentifier","src":"34351:3:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"34280:61:32","nodeType":"YulIdentifier","src":"34280:61:32"},"nativeSrc":"34280:75:32","nodeType":"YulFunctionCall","src":"34280:75:32"},"nativeSrc":"34280:75:32","nodeType":"YulExpressionStatement","src":"34280:75:32"},{"nativeSrc":"34364:19:32","nodeType":"YulAssignment","src":"34364:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"34375:3:32","nodeType":"YulIdentifier","src":"34375:3:32"},{"kind":"number","nativeSrc":"34380:2:32","nodeType":"YulLiteral","src":"34380:2:32","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"34371:3:32","nodeType":"YulIdentifier","src":"34371:3:32"},"nativeSrc":"34371:12:32","nodeType":"YulFunctionCall","src":"34371:12:32"},"variableNames":[{"name":"pos","nativeSrc":"34364:3:32","nodeType":"YulIdentifier","src":"34364:3:32"}]},{"nativeSrc":"34393:10:32","nodeType":"YulAssignment","src":"34393:10:32","value":{"name":"pos","nativeSrc":"34400:3:32","nodeType":"YulIdentifier","src":"34400:3:32"},"variableNames":[{"name":"end","nativeSrc":"34393:3:32","nodeType":"YulIdentifier","src":"34393:3:32"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nativeSrc":"34153:256:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"34248:3:32","nodeType":"YulTypedName","src":"34248:3:32","type":""},{"name":"value0","nativeSrc":"34254:6:32","nodeType":"YulTypedName","src":"34254:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"34265:3:32","nodeType":"YulTypedName","src":"34265:3:32","type":""}],"src":"34153:256:32"},{"body":{"nativeSrc":"34521:74:32","nodeType":"YulBlock","src":"34521:74:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"34543:6:32","nodeType":"YulIdentifier","src":"34543:6:32"},{"kind":"number","nativeSrc":"34551:1:32","nodeType":"YulLiteral","src":"34551:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34539:3:32","nodeType":"YulIdentifier","src":"34539:3:32"},"nativeSrc":"34539:14:32","nodeType":"YulFunctionCall","src":"34539:14:32"},{"hexValue":"4e6f742077686974656c697374656420666f722074686973207068617365","kind":"string","nativeSrc":"34555:32:32","nodeType":"YulLiteral","src":"34555:32:32","type":"","value":"Not whitelisted for this phase"}],"functionName":{"name":"mstore","nativeSrc":"34532:6:32","nodeType":"YulIdentifier","src":"34532:6:32"},"nativeSrc":"34532:56:32","nodeType":"YulFunctionCall","src":"34532:56:32"},"nativeSrc":"34532:56:32","nodeType":"YulExpressionStatement","src":"34532:56:32"}]},"name":"store_literal_in_memory_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585","nativeSrc":"34415:180:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"34513:6:32","nodeType":"YulTypedName","src":"34513:6:32","type":""}],"src":"34415:180:32"},{"body":{"nativeSrc":"34747:220:32","nodeType":"YulBlock","src":"34747:220:32","statements":[{"nativeSrc":"34757:74:32","nodeType":"YulAssignment","src":"34757:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"34823:3:32","nodeType":"YulIdentifier","src":"34823:3:32"},{"kind":"number","nativeSrc":"34828:2:32","nodeType":"YulLiteral","src":"34828:2:32","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"34764:58:32","nodeType":"YulIdentifier","src":"34764:58:32"},"nativeSrc":"34764:67:32","nodeType":"YulFunctionCall","src":"34764:67:32"},"variableNames":[{"name":"pos","nativeSrc":"34757:3:32","nodeType":"YulIdentifier","src":"34757:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"34929:3:32","nodeType":"YulIdentifier","src":"34929:3:32"}],"functionName":{"name":"store_literal_in_memory_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585","nativeSrc":"34840:88:32","nodeType":"YulIdentifier","src":"34840:88:32"},"nativeSrc":"34840:93:32","nodeType":"YulFunctionCall","src":"34840:93:32"},"nativeSrc":"34840:93:32","nodeType":"YulExpressionStatement","src":"34840:93:32"},{"nativeSrc":"34942:19:32","nodeType":"YulAssignment","src":"34942:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"34953:3:32","nodeType":"YulIdentifier","src":"34953:3:32"},{"kind":"number","nativeSrc":"34958:2:32","nodeType":"YulLiteral","src":"34958:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34949:3:32","nodeType":"YulIdentifier","src":"34949:3:32"},"nativeSrc":"34949:12:32","nodeType":"YulFunctionCall","src":"34949:12:32"},"variableNames":[{"name":"end","nativeSrc":"34942:3:32","nodeType":"YulIdentifier","src":"34942:3:32"}]}]},"name":"abi_encode_t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585_to_t_string_memory_ptr_fromStack","nativeSrc":"34601:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"34735:3:32","nodeType":"YulTypedName","src":"34735:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"34743:3:32","nodeType":"YulTypedName","src":"34743:3:32","type":""}],"src":"34601:366:32"},{"body":{"nativeSrc":"35144:248:32","nodeType":"YulBlock","src":"35144:248:32","statements":[{"nativeSrc":"35154:26:32","nodeType":"YulAssignment","src":"35154:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"35166:9:32","nodeType":"YulIdentifier","src":"35166:9:32"},{"kind":"number","nativeSrc":"35177:2:32","nodeType":"YulLiteral","src":"35177:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35162:3:32","nodeType":"YulIdentifier","src":"35162:3:32"},"nativeSrc":"35162:18:32","nodeType":"YulFunctionCall","src":"35162:18:32"},"variableNames":[{"name":"tail","nativeSrc":"35154:4:32","nodeType":"YulIdentifier","src":"35154:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"35201:9:32","nodeType":"YulIdentifier","src":"35201:9:32"},{"kind":"number","nativeSrc":"35212:1:32","nodeType":"YulLiteral","src":"35212:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35197:3:32","nodeType":"YulIdentifier","src":"35197:3:32"},"nativeSrc":"35197:17:32","nodeType":"YulFunctionCall","src":"35197:17:32"},{"arguments":[{"name":"tail","nativeSrc":"35220:4:32","nodeType":"YulIdentifier","src":"35220:4:32"},{"name":"headStart","nativeSrc":"35226:9:32","nodeType":"YulIdentifier","src":"35226:9:32"}],"functionName":{"name":"sub","nativeSrc":"35216:3:32","nodeType":"YulIdentifier","src":"35216:3:32"},"nativeSrc":"35216:20:32","nodeType":"YulFunctionCall","src":"35216:20:32"}],"functionName":{"name":"mstore","nativeSrc":"35190:6:32","nodeType":"YulIdentifier","src":"35190:6:32"},"nativeSrc":"35190:47:32","nodeType":"YulFunctionCall","src":"35190:47:32"},"nativeSrc":"35190:47:32","nodeType":"YulExpressionStatement","src":"35190:47:32"},{"nativeSrc":"35246:139:32","nodeType":"YulAssignment","src":"35246:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"35380:4:32","nodeType":"YulIdentifier","src":"35380:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585_to_t_string_memory_ptr_fromStack","nativeSrc":"35254:124:32","nodeType":"YulIdentifier","src":"35254:124:32"},"nativeSrc":"35254:131:32","nodeType":"YulFunctionCall","src":"35254:131:32"},"variableNames":[{"name":"tail","nativeSrc":"35246:4:32","nodeType":"YulIdentifier","src":"35246:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"34973:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35124:9:32","nodeType":"YulTypedName","src":"35124:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35139:4:32","nodeType":"YulTypedName","src":"35139:4:32","type":""}],"src":"34973:419:32"},{"body":{"nativeSrc":"35442:147:32","nodeType":"YulBlock","src":"35442:147:32","statements":[{"nativeSrc":"35452:25:32","nodeType":"YulAssignment","src":"35452:25:32","value":{"arguments":[{"name":"x","nativeSrc":"35475:1:32","nodeType":"YulIdentifier","src":"35475:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"35457:17:32","nodeType":"YulIdentifier","src":"35457:17:32"},"nativeSrc":"35457:20:32","nodeType":"YulFunctionCall","src":"35457:20:32"},"variableNames":[{"name":"x","nativeSrc":"35452:1:32","nodeType":"YulIdentifier","src":"35452:1:32"}]},{"nativeSrc":"35486:25:32","nodeType":"YulAssignment","src":"35486:25:32","value":{"arguments":[{"name":"y","nativeSrc":"35509:1:32","nodeType":"YulIdentifier","src":"35509:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"35491:17:32","nodeType":"YulIdentifier","src":"35491:17:32"},"nativeSrc":"35491:20:32","nodeType":"YulFunctionCall","src":"35491:20:32"},"variableNames":[{"name":"y","nativeSrc":"35486:1:32","nodeType":"YulIdentifier","src":"35486:1:32"}]},{"nativeSrc":"35520:16:32","nodeType":"YulAssignment","src":"35520:16:32","value":{"arguments":[{"name":"x","nativeSrc":"35531:1:32","nodeType":"YulIdentifier","src":"35531:1:32"},{"name":"y","nativeSrc":"35534:1:32","nodeType":"YulIdentifier","src":"35534:1:32"}],"functionName":{"name":"add","nativeSrc":"35527:3:32","nodeType":"YulIdentifier","src":"35527:3:32"},"nativeSrc":"35527:9:32","nodeType":"YulFunctionCall","src":"35527:9:32"},"variableNames":[{"name":"sum","nativeSrc":"35520:3:32","nodeType":"YulIdentifier","src":"35520:3:32"}]},{"body":{"nativeSrc":"35560:22:32","nodeType":"YulBlock","src":"35560:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"35562:16:32","nodeType":"YulIdentifier","src":"35562:16:32"},"nativeSrc":"35562:18:32","nodeType":"YulFunctionCall","src":"35562:18:32"},"nativeSrc":"35562:18:32","nodeType":"YulExpressionStatement","src":"35562:18:32"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"35552:1:32","nodeType":"YulIdentifier","src":"35552:1:32"},{"name":"sum","nativeSrc":"35555:3:32","nodeType":"YulIdentifier","src":"35555:3:32"}],"functionName":{"name":"gt","nativeSrc":"35549:2:32","nodeType":"YulIdentifier","src":"35549:2:32"},"nativeSrc":"35549:10:32","nodeType":"YulFunctionCall","src":"35549:10:32"},"nativeSrc":"35546:36:32","nodeType":"YulIf","src":"35546:36:32"}]},"name":"checked_add_t_uint256","nativeSrc":"35398:191:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"35429:1:32","nodeType":"YulTypedName","src":"35429:1:32","type":""},{"name":"y","nativeSrc":"35432:1:32","nodeType":"YulTypedName","src":"35432:1:32","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"35438:3:32","nodeType":"YulTypedName","src":"35438:3:32","type":""}],"src":"35398:191:32"},{"body":{"nativeSrc":"35701:61:32","nodeType":"YulBlock","src":"35701:61:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"35723:6:32","nodeType":"YulIdentifier","src":"35723:6:32"},{"kind":"number","nativeSrc":"35731:1:32","nodeType":"YulLiteral","src":"35731:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35719:3:32","nodeType":"YulIdentifier","src":"35719:3:32"},"nativeSrc":"35719:14:32","nodeType":"YulFunctionCall","src":"35719:14:32"},{"hexValue":"5369676e61747572652065787069726564","kind":"string","nativeSrc":"35735:19:32","nodeType":"YulLiteral","src":"35735:19:32","type":"","value":"Signature expired"}],"functionName":{"name":"mstore","nativeSrc":"35712:6:32","nodeType":"YulIdentifier","src":"35712:6:32"},"nativeSrc":"35712:43:32","nodeType":"YulFunctionCall","src":"35712:43:32"},"nativeSrc":"35712:43:32","nodeType":"YulExpressionStatement","src":"35712:43:32"}]},"name":"store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","nativeSrc":"35595:167:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"35693:6:32","nodeType":"YulTypedName","src":"35693:6:32","type":""}],"src":"35595:167:32"},{"body":{"nativeSrc":"35914:220:32","nodeType":"YulBlock","src":"35914:220:32","statements":[{"nativeSrc":"35924:74:32","nodeType":"YulAssignment","src":"35924:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"35990:3:32","nodeType":"YulIdentifier","src":"35990:3:32"},{"kind":"number","nativeSrc":"35995:2:32","nodeType":"YulLiteral","src":"35995:2:32","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"35931:58:32","nodeType":"YulIdentifier","src":"35931:58:32"},"nativeSrc":"35931:67:32","nodeType":"YulFunctionCall","src":"35931:67:32"},"variableNames":[{"name":"pos","nativeSrc":"35924:3:32","nodeType":"YulIdentifier","src":"35924:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"36096:3:32","nodeType":"YulIdentifier","src":"36096:3:32"}],"functionName":{"name":"store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","nativeSrc":"36007:88:32","nodeType":"YulIdentifier","src":"36007:88:32"},"nativeSrc":"36007:93:32","nodeType":"YulFunctionCall","src":"36007:93:32"},"nativeSrc":"36007:93:32","nodeType":"YulExpressionStatement","src":"36007:93:32"},{"nativeSrc":"36109:19:32","nodeType":"YulAssignment","src":"36109:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"36120:3:32","nodeType":"YulIdentifier","src":"36120:3:32"},{"kind":"number","nativeSrc":"36125:2:32","nodeType":"YulLiteral","src":"36125:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36116:3:32","nodeType":"YulIdentifier","src":"36116:3:32"},"nativeSrc":"36116:12:32","nodeType":"YulFunctionCall","src":"36116:12:32"},"variableNames":[{"name":"end","nativeSrc":"36109:3:32","nodeType":"YulIdentifier","src":"36109:3:32"}]}]},"name":"abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack","nativeSrc":"35768:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"35902:3:32","nodeType":"YulTypedName","src":"35902:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"35910:3:32","nodeType":"YulTypedName","src":"35910:3:32","type":""}],"src":"35768:366:32"},{"body":{"nativeSrc":"36311:248:32","nodeType":"YulBlock","src":"36311:248:32","statements":[{"nativeSrc":"36321:26:32","nodeType":"YulAssignment","src":"36321:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"36333:9:32","nodeType":"YulIdentifier","src":"36333:9:32"},{"kind":"number","nativeSrc":"36344:2:32","nodeType":"YulLiteral","src":"36344:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36329:3:32","nodeType":"YulIdentifier","src":"36329:3:32"},"nativeSrc":"36329:18:32","nodeType":"YulFunctionCall","src":"36329:18:32"},"variableNames":[{"name":"tail","nativeSrc":"36321:4:32","nodeType":"YulIdentifier","src":"36321:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36368:9:32","nodeType":"YulIdentifier","src":"36368:9:32"},{"kind":"number","nativeSrc":"36379:1:32","nodeType":"YulLiteral","src":"36379:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36364:3:32","nodeType":"YulIdentifier","src":"36364:3:32"},"nativeSrc":"36364:17:32","nodeType":"YulFunctionCall","src":"36364:17:32"},{"arguments":[{"name":"tail","nativeSrc":"36387:4:32","nodeType":"YulIdentifier","src":"36387:4:32"},{"name":"headStart","nativeSrc":"36393:9:32","nodeType":"YulIdentifier","src":"36393:9:32"}],"functionName":{"name":"sub","nativeSrc":"36383:3:32","nodeType":"YulIdentifier","src":"36383:3:32"},"nativeSrc":"36383:20:32","nodeType":"YulFunctionCall","src":"36383:20:32"}],"functionName":{"name":"mstore","nativeSrc":"36357:6:32","nodeType":"YulIdentifier","src":"36357:6:32"},"nativeSrc":"36357:47:32","nodeType":"YulFunctionCall","src":"36357:47:32"},"nativeSrc":"36357:47:32","nodeType":"YulExpressionStatement","src":"36357:47:32"},{"nativeSrc":"36413:139:32","nodeType":"YulAssignment","src":"36413:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"36547:4:32","nodeType":"YulIdentifier","src":"36547:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack","nativeSrc":"36421:124:32","nodeType":"YulIdentifier","src":"36421:124:32"},"nativeSrc":"36421:131:32","nodeType":"YulFunctionCall","src":"36421:131:32"},"variableNames":[{"name":"tail","nativeSrc":"36413:4:32","nodeType":"YulIdentifier","src":"36413:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"36140:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"36291:9:32","nodeType":"YulTypedName","src":"36291:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36306:4:32","nodeType":"YulTypedName","src":"36306:4:32","type":""}],"src":"36140:419:32"},{"body":{"nativeSrc":"36671:66:32","nodeType":"YulBlock","src":"36671:66:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"36693:6:32","nodeType":"YulIdentifier","src":"36693:6:32"},{"kind":"number","nativeSrc":"36701:1:32","nodeType":"YulLiteral","src":"36701:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36689:3:32","nodeType":"YulIdentifier","src":"36689:3:32"},"nativeSrc":"36689:14:32","nodeType":"YulFunctionCall","src":"36689:14:32"},{"hexValue":"5369676e617475726520616c72656164792075736564","kind":"string","nativeSrc":"36705:24:32","nodeType":"YulLiteral","src":"36705:24:32","type":"","value":"Signature already used"}],"functionName":{"name":"mstore","nativeSrc":"36682:6:32","nodeType":"YulIdentifier","src":"36682:6:32"},"nativeSrc":"36682:48:32","nodeType":"YulFunctionCall","src":"36682:48:32"},"nativeSrc":"36682:48:32","nodeType":"YulExpressionStatement","src":"36682:48:32"}]},"name":"store_literal_in_memory_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8","nativeSrc":"36565:172:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"36663:6:32","nodeType":"YulTypedName","src":"36663:6:32","type":""}],"src":"36565:172:32"},{"body":{"nativeSrc":"36889:220:32","nodeType":"YulBlock","src":"36889:220:32","statements":[{"nativeSrc":"36899:74:32","nodeType":"YulAssignment","src":"36899:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"36965:3:32","nodeType":"YulIdentifier","src":"36965:3:32"},{"kind":"number","nativeSrc":"36970:2:32","nodeType":"YulLiteral","src":"36970:2:32","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"36906:58:32","nodeType":"YulIdentifier","src":"36906:58:32"},"nativeSrc":"36906:67:32","nodeType":"YulFunctionCall","src":"36906:67:32"},"variableNames":[{"name":"pos","nativeSrc":"36899:3:32","nodeType":"YulIdentifier","src":"36899:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"37071:3:32","nodeType":"YulIdentifier","src":"37071:3:32"}],"functionName":{"name":"store_literal_in_memory_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8","nativeSrc":"36982:88:32","nodeType":"YulIdentifier","src":"36982:88:32"},"nativeSrc":"36982:93:32","nodeType":"YulFunctionCall","src":"36982:93:32"},"nativeSrc":"36982:93:32","nodeType":"YulExpressionStatement","src":"36982:93:32"},{"nativeSrc":"37084:19:32","nodeType":"YulAssignment","src":"37084:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"37095:3:32","nodeType":"YulIdentifier","src":"37095:3:32"},{"kind":"number","nativeSrc":"37100:2:32","nodeType":"YulLiteral","src":"37100:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37091:3:32","nodeType":"YulIdentifier","src":"37091:3:32"},"nativeSrc":"37091:12:32","nodeType":"YulFunctionCall","src":"37091:12:32"},"variableNames":[{"name":"end","nativeSrc":"37084:3:32","nodeType":"YulIdentifier","src":"37084:3:32"}]}]},"name":"abi_encode_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8_to_t_string_memory_ptr_fromStack","nativeSrc":"36743:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"36877:3:32","nodeType":"YulTypedName","src":"36877:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"36885:3:32","nodeType":"YulTypedName","src":"36885:3:32","type":""}],"src":"36743:366:32"},{"body":{"nativeSrc":"37286:248:32","nodeType":"YulBlock","src":"37286:248:32","statements":[{"nativeSrc":"37296:26:32","nodeType":"YulAssignment","src":"37296:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"37308:9:32","nodeType":"YulIdentifier","src":"37308:9:32"},{"kind":"number","nativeSrc":"37319:2:32","nodeType":"YulLiteral","src":"37319:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37304:3:32","nodeType":"YulIdentifier","src":"37304:3:32"},"nativeSrc":"37304:18:32","nodeType":"YulFunctionCall","src":"37304:18:32"},"variableNames":[{"name":"tail","nativeSrc":"37296:4:32","nodeType":"YulIdentifier","src":"37296:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"37343:9:32","nodeType":"YulIdentifier","src":"37343:9:32"},{"kind":"number","nativeSrc":"37354:1:32","nodeType":"YulLiteral","src":"37354:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37339:3:32","nodeType":"YulIdentifier","src":"37339:3:32"},"nativeSrc":"37339:17:32","nodeType":"YulFunctionCall","src":"37339:17:32"},{"arguments":[{"name":"tail","nativeSrc":"37362:4:32","nodeType":"YulIdentifier","src":"37362:4:32"},{"name":"headStart","nativeSrc":"37368:9:32","nodeType":"YulIdentifier","src":"37368:9:32"}],"functionName":{"name":"sub","nativeSrc":"37358:3:32","nodeType":"YulIdentifier","src":"37358:3:32"},"nativeSrc":"37358:20:32","nodeType":"YulFunctionCall","src":"37358:20:32"}],"functionName":{"name":"mstore","nativeSrc":"37332:6:32","nodeType":"YulIdentifier","src":"37332:6:32"},"nativeSrc":"37332:47:32","nodeType":"YulFunctionCall","src":"37332:47:32"},"nativeSrc":"37332:47:32","nodeType":"YulExpressionStatement","src":"37332:47:32"},{"nativeSrc":"37388:139:32","nodeType":"YulAssignment","src":"37388:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"37522:4:32","nodeType":"YulIdentifier","src":"37522:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8_to_t_string_memory_ptr_fromStack","nativeSrc":"37396:124:32","nodeType":"YulIdentifier","src":"37396:124:32"},"nativeSrc":"37396:131:32","nodeType":"YulFunctionCall","src":"37396:131:32"},"variableNames":[{"name":"tail","nativeSrc":"37388:4:32","nodeType":"YulIdentifier","src":"37388:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"37115:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"37266:9:32","nodeType":"YulTypedName","src":"37266:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"37281:4:32","nodeType":"YulTypedName","src":"37281:4:32","type":""}],"src":"37115:419:32"},{"body":{"nativeSrc":"37653:34:32","nodeType":"YulBlock","src":"37653:34:32","statements":[{"nativeSrc":"37663:18:32","nodeType":"YulAssignment","src":"37663:18:32","value":{"name":"pos","nativeSrc":"37678:3:32","nodeType":"YulIdentifier","src":"37678:3:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"37663:11:32","nodeType":"YulIdentifier","src":"37663:11:32"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"37540:147:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"37625:3:32","nodeType":"YulTypedName","src":"37625:3:32","type":""},{"name":"length","nativeSrc":"37630:6:32","nodeType":"YulTypedName","src":"37630:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"37641:11:32","nodeType":"YulTypedName","src":"37641:11:32","type":""}],"src":"37540:147:32"},{"body":{"nativeSrc":"37833:209:32","nodeType":"YulBlock","src":"37833:209:32","statements":[{"nativeSrc":"37843:95:32","nodeType":"YulAssignment","src":"37843:95:32","value":{"arguments":[{"name":"pos","nativeSrc":"37926:3:32","nodeType":"YulIdentifier","src":"37926:3:32"},{"name":"length","nativeSrc":"37931:6:32","nodeType":"YulIdentifier","src":"37931:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"37850:75:32","nodeType":"YulIdentifier","src":"37850:75:32"},"nativeSrc":"37850:88:32","nodeType":"YulFunctionCall","src":"37850:88:32"},"variableNames":[{"name":"pos","nativeSrc":"37843:3:32","nodeType":"YulIdentifier","src":"37843:3:32"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"37985:5:32","nodeType":"YulIdentifier","src":"37985:5:32"},{"name":"pos","nativeSrc":"37992:3:32","nodeType":"YulIdentifier","src":"37992:3:32"},{"name":"length","nativeSrc":"37997:6:32","nodeType":"YulIdentifier","src":"37997:6:32"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"37948:36:32","nodeType":"YulIdentifier","src":"37948:36:32"},"nativeSrc":"37948:56:32","nodeType":"YulFunctionCall","src":"37948:56:32"},"nativeSrc":"37948:56:32","nodeType":"YulExpressionStatement","src":"37948:56:32"},{"nativeSrc":"38013:23:32","nodeType":"YulAssignment","src":"38013:23:32","value":{"arguments":[{"name":"pos","nativeSrc":"38024:3:32","nodeType":"YulIdentifier","src":"38024:3:32"},{"name":"length","nativeSrc":"38029:6:32","nodeType":"YulIdentifier","src":"38029:6:32"}],"functionName":{"name":"add","nativeSrc":"38020:3:32","nodeType":"YulIdentifier","src":"38020:3:32"},"nativeSrc":"38020:16:32","nodeType":"YulFunctionCall","src":"38020:16:32"},"variableNames":[{"name":"end","nativeSrc":"38013:3:32","nodeType":"YulIdentifier","src":"38013:3:32"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"37715:327:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"37806:5:32","nodeType":"YulTypedName","src":"37806:5:32","type":""},{"name":"length","nativeSrc":"37813:6:32","nodeType":"YulTypedName","src":"37813:6:32","type":""},{"name":"pos","nativeSrc":"37821:3:32","nodeType":"YulTypedName","src":"37821:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"37829:3:32","nodeType":"YulTypedName","src":"37829:3:32","type":""}],"src":"37715:327:32"},{"body":{"nativeSrc":"38192:147:32","nodeType":"YulBlock","src":"38192:147:32","statements":[{"nativeSrc":"38203:110:32","nodeType":"YulAssignment","src":"38203:110:32","value":{"arguments":[{"name":"value0","nativeSrc":"38292:6:32","nodeType":"YulIdentifier","src":"38292:6:32"},{"name":"value1","nativeSrc":"38300:6:32","nodeType":"YulIdentifier","src":"38300:6:32"},{"name":"pos","nativeSrc":"38309:3:32","nodeType":"YulIdentifier","src":"38309:3:32"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"38210:81:32","nodeType":"YulIdentifier","src":"38210:81:32"},"nativeSrc":"38210:103:32","nodeType":"YulFunctionCall","src":"38210:103:32"},"variableNames":[{"name":"pos","nativeSrc":"38203:3:32","nodeType":"YulIdentifier","src":"38203:3:32"}]},{"nativeSrc":"38323:10:32","nodeType":"YulAssignment","src":"38323:10:32","value":{"name":"pos","nativeSrc":"38330:3:32","nodeType":"YulIdentifier","src":"38330:3:32"},"variableNames":[{"name":"end","nativeSrc":"38323:3:32","nodeType":"YulIdentifier","src":"38323:3:32"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"38048:291:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"38163:3:32","nodeType":"YulTypedName","src":"38163:3:32","type":""},{"name":"value1","nativeSrc":"38169:6:32","nodeType":"YulTypedName","src":"38169:6:32","type":""},{"name":"value0","nativeSrc":"38177:6:32","nodeType":"YulTypedName","src":"38177:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"38188:3:32","nodeType":"YulTypedName","src":"38188:3:32","type":""}],"src":"38048:291:32"},{"body":{"nativeSrc":"38639:703:32","nodeType":"YulBlock","src":"38639:703:32","statements":[{"nativeSrc":"38649:27:32","nodeType":"YulAssignment","src":"38649:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"38661:9:32","nodeType":"YulIdentifier","src":"38661:9:32"},{"kind":"number","nativeSrc":"38672:3:32","nodeType":"YulLiteral","src":"38672:3:32","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"38657:3:32","nodeType":"YulIdentifier","src":"38657:3:32"},"nativeSrc":"38657:19:32","nodeType":"YulFunctionCall","src":"38657:19:32"},"variableNames":[{"name":"tail","nativeSrc":"38649:4:32","nodeType":"YulIdentifier","src":"38649:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"38730:6:32","nodeType":"YulIdentifier","src":"38730:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"38743:9:32","nodeType":"YulIdentifier","src":"38743:9:32"},{"kind":"number","nativeSrc":"38754:1:32","nodeType":"YulLiteral","src":"38754:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38739:3:32","nodeType":"YulIdentifier","src":"38739:3:32"},"nativeSrc":"38739:17:32","nodeType":"YulFunctionCall","src":"38739:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"38686:43:32","nodeType":"YulIdentifier","src":"38686:43:32"},"nativeSrc":"38686:71:32","nodeType":"YulFunctionCall","src":"38686:71:32"},"nativeSrc":"38686:71:32","nodeType":"YulExpressionStatement","src":"38686:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"38811:6:32","nodeType":"YulIdentifier","src":"38811:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"38824:9:32","nodeType":"YulIdentifier","src":"38824:9:32"},{"kind":"number","nativeSrc":"38835:2:32","nodeType":"YulLiteral","src":"38835:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38820:3:32","nodeType":"YulIdentifier","src":"38820:3:32"},"nativeSrc":"38820:18:32","nodeType":"YulFunctionCall","src":"38820:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"38767:43:32","nodeType":"YulIdentifier","src":"38767:43:32"},"nativeSrc":"38767:72:32","nodeType":"YulFunctionCall","src":"38767:72:32"},"nativeSrc":"38767:72:32","nodeType":"YulExpressionStatement","src":"38767:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"38893:6:32","nodeType":"YulIdentifier","src":"38893:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"38906:9:32","nodeType":"YulIdentifier","src":"38906:9:32"},{"kind":"number","nativeSrc":"38917:2:32","nodeType":"YulLiteral","src":"38917:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"38902:3:32","nodeType":"YulIdentifier","src":"38902:3:32"},"nativeSrc":"38902:18:32","nodeType":"YulFunctionCall","src":"38902:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"38849:43:32","nodeType":"YulIdentifier","src":"38849:43:32"},"nativeSrc":"38849:72:32","nodeType":"YulFunctionCall","src":"38849:72:32"},"nativeSrc":"38849:72:32","nodeType":"YulExpressionStatement","src":"38849:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"38975:6:32","nodeType":"YulIdentifier","src":"38975:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"38988:9:32","nodeType":"YulIdentifier","src":"38988:9:32"},{"kind":"number","nativeSrc":"38999:2:32","nodeType":"YulLiteral","src":"38999:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"38984:3:32","nodeType":"YulIdentifier","src":"38984:3:32"},"nativeSrc":"38984:18:32","nodeType":"YulFunctionCall","src":"38984:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"38931:43:32","nodeType":"YulIdentifier","src":"38931:43:32"},"nativeSrc":"38931:72:32","nodeType":"YulFunctionCall","src":"38931:72:32"},"nativeSrc":"38931:72:32","nodeType":"YulExpressionStatement","src":"38931:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"39057:6:32","nodeType":"YulIdentifier","src":"39057:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"39070:9:32","nodeType":"YulIdentifier","src":"39070:9:32"},{"kind":"number","nativeSrc":"39081:3:32","nodeType":"YulLiteral","src":"39081:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"39066:3:32","nodeType":"YulIdentifier","src":"39066:3:32"},"nativeSrc":"39066:19:32","nodeType":"YulFunctionCall","src":"39066:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"39013:43:32","nodeType":"YulIdentifier","src":"39013:43:32"},"nativeSrc":"39013:73:32","nodeType":"YulFunctionCall","src":"39013:73:32"},"nativeSrc":"39013:73:32","nodeType":"YulExpressionStatement","src":"39013:73:32"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"39140:6:32","nodeType":"YulIdentifier","src":"39140:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"39153:9:32","nodeType":"YulIdentifier","src":"39153:9:32"},{"kind":"number","nativeSrc":"39164:3:32","nodeType":"YulLiteral","src":"39164:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"39149:3:32","nodeType":"YulIdentifier","src":"39149:3:32"},"nativeSrc":"39149:19:32","nodeType":"YulFunctionCall","src":"39149:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"39096:43:32","nodeType":"YulIdentifier","src":"39096:43:32"},"nativeSrc":"39096:73:32","nodeType":"YulFunctionCall","src":"39096:73:32"},"nativeSrc":"39096:73:32","nodeType":"YulExpressionStatement","src":"39096:73:32"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"39223:6:32","nodeType":"YulIdentifier","src":"39223:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"39236:9:32","nodeType":"YulIdentifier","src":"39236:9:32"},{"kind":"number","nativeSrc":"39247:3:32","nodeType":"YulLiteral","src":"39247:3:32","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"39232:3:32","nodeType":"YulIdentifier","src":"39232:3:32"},"nativeSrc":"39232:19:32","nodeType":"YulFunctionCall","src":"39232:19:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"39179:43:32","nodeType":"YulIdentifier","src":"39179:43:32"},"nativeSrc":"39179:73:32","nodeType":"YulFunctionCall","src":"39179:73:32"},"nativeSrc":"39179:73:32","nodeType":"YulExpressionStatement","src":"39179:73:32"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"39306:6:32","nodeType":"YulIdentifier","src":"39306:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"39319:9:32","nodeType":"YulIdentifier","src":"39319:9:32"},{"kind":"number","nativeSrc":"39330:3:32","nodeType":"YulLiteral","src":"39330:3:32","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"39315:3:32","nodeType":"YulIdentifier","src":"39315:3:32"},"nativeSrc":"39315:19:32","nodeType":"YulFunctionCall","src":"39315:19:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"39262:43:32","nodeType":"YulIdentifier","src":"39262:43:32"},"nativeSrc":"39262:73:32","nodeType":"YulFunctionCall","src":"39262:73:32"},"nativeSrc":"39262:73:32","nodeType":"YulExpressionStatement","src":"39262:73:32"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_bytes32_t_uint256__to_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_bytes32_t_uint256__fromStack_reversed","nativeSrc":"38345:997:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38555:9:32","nodeType":"YulTypedName","src":"38555:9:32","type":""},{"name":"value7","nativeSrc":"38567:6:32","nodeType":"YulTypedName","src":"38567:6:32","type":""},{"name":"value6","nativeSrc":"38575:6:32","nodeType":"YulTypedName","src":"38575:6:32","type":""},{"name":"value5","nativeSrc":"38583:6:32","nodeType":"YulTypedName","src":"38583:6:32","type":""},{"name":"value4","nativeSrc":"38591:6:32","nodeType":"YulTypedName","src":"38591:6:32","type":""},{"name":"value3","nativeSrc":"38599:6:32","nodeType":"YulTypedName","src":"38599:6:32","type":""},{"name":"value2","nativeSrc":"38607:6:32","nodeType":"YulTypedName","src":"38607:6:32","type":""},{"name":"value1","nativeSrc":"38615:6:32","nodeType":"YulTypedName","src":"38615:6:32","type":""},{"name":"value0","nativeSrc":"38623:6:32","nodeType":"YulTypedName","src":"38623:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38634:4:32","nodeType":"YulTypedName","src":"38634:4:32","type":""}],"src":"38345:997:32"},{"body":{"nativeSrc":"39454:61:32","nodeType":"YulBlock","src":"39454:61:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"39476:6:32","nodeType":"YulIdentifier","src":"39476:6:32"},{"kind":"number","nativeSrc":"39484:1:32","nodeType":"YulLiteral","src":"39484:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39472:3:32","nodeType":"YulIdentifier","src":"39472:3:32"},"nativeSrc":"39472:14:32","nodeType":"YulFunctionCall","src":"39472:14:32"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nativeSrc":"39488:19:32","nodeType":"YulLiteral","src":"39488:19:32","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nativeSrc":"39465:6:32","nodeType":"YulIdentifier","src":"39465:6:32"},"nativeSrc":"39465:43:32","nodeType":"YulFunctionCall","src":"39465:43:32"},"nativeSrc":"39465:43:32","nodeType":"YulExpressionStatement","src":"39465:43:32"}]},"name":"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","nativeSrc":"39348:167:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"39446:6:32","nodeType":"YulTypedName","src":"39446:6:32","type":""}],"src":"39348:167:32"},{"body":{"nativeSrc":"39667:220:32","nodeType":"YulBlock","src":"39667:220:32","statements":[{"nativeSrc":"39677:74:32","nodeType":"YulAssignment","src":"39677:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"39743:3:32","nodeType":"YulIdentifier","src":"39743:3:32"},{"kind":"number","nativeSrc":"39748:2:32","nodeType":"YulLiteral","src":"39748:2:32","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"39684:58:32","nodeType":"YulIdentifier","src":"39684:58:32"},"nativeSrc":"39684:67:32","nodeType":"YulFunctionCall","src":"39684:67:32"},"variableNames":[{"name":"pos","nativeSrc":"39677:3:32","nodeType":"YulIdentifier","src":"39677:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"39849:3:32","nodeType":"YulIdentifier","src":"39849:3:32"}],"functionName":{"name":"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","nativeSrc":"39760:88:32","nodeType":"YulIdentifier","src":"39760:88:32"},"nativeSrc":"39760:93:32","nodeType":"YulFunctionCall","src":"39760:93:32"},"nativeSrc":"39760:93:32","nodeType":"YulExpressionStatement","src":"39760:93:32"},{"nativeSrc":"39862:19:32","nodeType":"YulAssignment","src":"39862:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"39873:3:32","nodeType":"YulIdentifier","src":"39873:3:32"},{"kind":"number","nativeSrc":"39878:2:32","nodeType":"YulLiteral","src":"39878:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39869:3:32","nodeType":"YulIdentifier","src":"39869:3:32"},"nativeSrc":"39869:12:32","nodeType":"YulFunctionCall","src":"39869:12:32"},"variableNames":[{"name":"end","nativeSrc":"39862:3:32","nodeType":"YulIdentifier","src":"39862:3:32"}]}]},"name":"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack","nativeSrc":"39521:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"39655:3:32","nodeType":"YulTypedName","src":"39655:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"39663:3:32","nodeType":"YulTypedName","src":"39663:3:32","type":""}],"src":"39521:366:32"},{"body":{"nativeSrc":"40064:248:32","nodeType":"YulBlock","src":"40064:248:32","statements":[{"nativeSrc":"40074:26:32","nodeType":"YulAssignment","src":"40074:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"40086:9:32","nodeType":"YulIdentifier","src":"40086:9:32"},{"kind":"number","nativeSrc":"40097:2:32","nodeType":"YulLiteral","src":"40097:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"40082:3:32","nodeType":"YulIdentifier","src":"40082:3:32"},"nativeSrc":"40082:18:32","nodeType":"YulFunctionCall","src":"40082:18:32"},"variableNames":[{"name":"tail","nativeSrc":"40074:4:32","nodeType":"YulIdentifier","src":"40074:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"40121:9:32","nodeType":"YulIdentifier","src":"40121:9:32"},{"kind":"number","nativeSrc":"40132:1:32","nodeType":"YulLiteral","src":"40132:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"40117:3:32","nodeType":"YulIdentifier","src":"40117:3:32"},"nativeSrc":"40117:17:32","nodeType":"YulFunctionCall","src":"40117:17:32"},{"arguments":[{"name":"tail","nativeSrc":"40140:4:32","nodeType":"YulIdentifier","src":"40140:4:32"},{"name":"headStart","nativeSrc":"40146:9:32","nodeType":"YulIdentifier","src":"40146:9:32"}],"functionName":{"name":"sub","nativeSrc":"40136:3:32","nodeType":"YulIdentifier","src":"40136:3:32"},"nativeSrc":"40136:20:32","nodeType":"YulFunctionCall","src":"40136:20:32"}],"functionName":{"name":"mstore","nativeSrc":"40110:6:32","nodeType":"YulIdentifier","src":"40110:6:32"},"nativeSrc":"40110:47:32","nodeType":"YulFunctionCall","src":"40110:47:32"},"nativeSrc":"40110:47:32","nodeType":"YulExpressionStatement","src":"40110:47:32"},{"nativeSrc":"40166:139:32","nodeType":"YulAssignment","src":"40166:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"40300:4:32","nodeType":"YulIdentifier","src":"40300:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack","nativeSrc":"40174:124:32","nodeType":"YulIdentifier","src":"40174:124:32"},"nativeSrc":"40174:131:32","nodeType":"YulFunctionCall","src":"40174:131:32"},"variableNames":[{"name":"tail","nativeSrc":"40166:4:32","nodeType":"YulIdentifier","src":"40166:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"39893:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"40044:9:32","nodeType":"YulTypedName","src":"40044:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"40059:4:32","nodeType":"YulTypedName","src":"40059:4:32","type":""}],"src":"39893:419:32"},{"body":{"nativeSrc":"40424:68:32","nodeType":"YulBlock","src":"40424:68:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"40446:6:32","nodeType":"YulIdentifier","src":"40446:6:32"},{"kind":"number","nativeSrc":"40454:1:32","nodeType":"YulLiteral","src":"40454:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"40442:3:32","nodeType":"YulIdentifier","src":"40442:3:32"},"nativeSrc":"40442:14:32","nodeType":"YulFunctionCall","src":"40442:14:32"},{"hexValue":"496e636f7272656374207061796d656e7420616d6f756e74","kind":"string","nativeSrc":"40458:26:32","nodeType":"YulLiteral","src":"40458:26:32","type":"","value":"Incorrect payment amount"}],"functionName":{"name":"mstore","nativeSrc":"40435:6:32","nodeType":"YulIdentifier","src":"40435:6:32"},"nativeSrc":"40435:50:32","nodeType":"YulFunctionCall","src":"40435:50:32"},"nativeSrc":"40435:50:32","nodeType":"YulExpressionStatement","src":"40435:50:32"}]},"name":"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","nativeSrc":"40318:174:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"40416:6:32","nodeType":"YulTypedName","src":"40416:6:32","type":""}],"src":"40318:174:32"},{"body":{"nativeSrc":"40644:220:32","nodeType":"YulBlock","src":"40644:220:32","statements":[{"nativeSrc":"40654:74:32","nodeType":"YulAssignment","src":"40654:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"40720:3:32","nodeType":"YulIdentifier","src":"40720:3:32"},{"kind":"number","nativeSrc":"40725:2:32","nodeType":"YulLiteral","src":"40725:2:32","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"40661:58:32","nodeType":"YulIdentifier","src":"40661:58:32"},"nativeSrc":"40661:67:32","nodeType":"YulFunctionCall","src":"40661:67:32"},"variableNames":[{"name":"pos","nativeSrc":"40654:3:32","nodeType":"YulIdentifier","src":"40654:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"40826:3:32","nodeType":"YulIdentifier","src":"40826:3:32"}],"functionName":{"name":"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","nativeSrc":"40737:88:32","nodeType":"YulIdentifier","src":"40737:88:32"},"nativeSrc":"40737:93:32","nodeType":"YulFunctionCall","src":"40737:93:32"},"nativeSrc":"40737:93:32","nodeType":"YulExpressionStatement","src":"40737:93:32"},{"nativeSrc":"40839:19:32","nodeType":"YulAssignment","src":"40839:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"40850:3:32","nodeType":"YulIdentifier","src":"40850:3:32"},{"kind":"number","nativeSrc":"40855:2:32","nodeType":"YulLiteral","src":"40855:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"40846:3:32","nodeType":"YulIdentifier","src":"40846:3:32"},"nativeSrc":"40846:12:32","nodeType":"YulFunctionCall","src":"40846:12:32"},"variableNames":[{"name":"end","nativeSrc":"40839:3:32","nodeType":"YulIdentifier","src":"40839:3:32"}]}]},"name":"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack","nativeSrc":"40498:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"40632:3:32","nodeType":"YulTypedName","src":"40632:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"40640:3:32","nodeType":"YulTypedName","src":"40640:3:32","type":""}],"src":"40498:366:32"},{"body":{"nativeSrc":"41041:248:32","nodeType":"YulBlock","src":"41041:248:32","statements":[{"nativeSrc":"41051:26:32","nodeType":"YulAssignment","src":"41051:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"41063:9:32","nodeType":"YulIdentifier","src":"41063:9:32"},{"kind":"number","nativeSrc":"41074:2:32","nodeType":"YulLiteral","src":"41074:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41059:3:32","nodeType":"YulIdentifier","src":"41059:3:32"},"nativeSrc":"41059:18:32","nodeType":"YulFunctionCall","src":"41059:18:32"},"variableNames":[{"name":"tail","nativeSrc":"41051:4:32","nodeType":"YulIdentifier","src":"41051:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"41098:9:32","nodeType":"YulIdentifier","src":"41098:9:32"},{"kind":"number","nativeSrc":"41109:1:32","nodeType":"YulLiteral","src":"41109:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41094:3:32","nodeType":"YulIdentifier","src":"41094:3:32"},"nativeSrc":"41094:17:32","nodeType":"YulFunctionCall","src":"41094:17:32"},{"arguments":[{"name":"tail","nativeSrc":"41117:4:32","nodeType":"YulIdentifier","src":"41117:4:32"},{"name":"headStart","nativeSrc":"41123:9:32","nodeType":"YulIdentifier","src":"41123:9:32"}],"functionName":{"name":"sub","nativeSrc":"41113:3:32","nodeType":"YulIdentifier","src":"41113:3:32"},"nativeSrc":"41113:20:32","nodeType":"YulFunctionCall","src":"41113:20:32"}],"functionName":{"name":"mstore","nativeSrc":"41087:6:32","nodeType":"YulIdentifier","src":"41087:6:32"},"nativeSrc":"41087:47:32","nodeType":"YulFunctionCall","src":"41087:47:32"},"nativeSrc":"41087:47:32","nodeType":"YulExpressionStatement","src":"41087:47:32"},{"nativeSrc":"41143:139:32","nodeType":"YulAssignment","src":"41143:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"41277:4:32","nodeType":"YulIdentifier","src":"41277:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack","nativeSrc":"41151:124:32","nodeType":"YulIdentifier","src":"41151:124:32"},"nativeSrc":"41151:131:32","nodeType":"YulFunctionCall","src":"41151:131:32"},"variableNames":[{"name":"tail","nativeSrc":"41143:4:32","nodeType":"YulIdentifier","src":"41143:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"40870:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41021:9:32","nodeType":"YulTypedName","src":"41021:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"41036:4:32","nodeType":"YulTypedName","src":"41036:4:32","type":""}],"src":"40870:419:32"},{"body":{"nativeSrc":"41401:70:32","nodeType":"YulBlock","src":"41401:70:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"41423:6:32","nodeType":"YulIdentifier","src":"41423:6:32"},{"kind":"number","nativeSrc":"41431:1:32","nodeType":"YulLiteral","src":"41431:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41419:3:32","nodeType":"YulIdentifier","src":"41419:3:32"},"nativeSrc":"41419:14:32","nodeType":"YulFunctionCall","src":"41419:14:32"},{"hexValue":"506861736520737570706c79206c696d69742072656163686564","kind":"string","nativeSrc":"41435:28:32","nodeType":"YulLiteral","src":"41435:28:32","type":"","value":"Phase supply limit reached"}],"functionName":{"name":"mstore","nativeSrc":"41412:6:32","nodeType":"YulIdentifier","src":"41412:6:32"},"nativeSrc":"41412:52:32","nodeType":"YulFunctionCall","src":"41412:52:32"},"nativeSrc":"41412:52:32","nodeType":"YulExpressionStatement","src":"41412:52:32"}]},"name":"store_literal_in_memory_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f","nativeSrc":"41295:176:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"41393:6:32","nodeType":"YulTypedName","src":"41393:6:32","type":""}],"src":"41295:176:32"},{"body":{"nativeSrc":"41623:220:32","nodeType":"YulBlock","src":"41623:220:32","statements":[{"nativeSrc":"41633:74:32","nodeType":"YulAssignment","src":"41633:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"41699:3:32","nodeType":"YulIdentifier","src":"41699:3:32"},{"kind":"number","nativeSrc":"41704:2:32","nodeType":"YulLiteral","src":"41704:2:32","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"41640:58:32","nodeType":"YulIdentifier","src":"41640:58:32"},"nativeSrc":"41640:67:32","nodeType":"YulFunctionCall","src":"41640:67:32"},"variableNames":[{"name":"pos","nativeSrc":"41633:3:32","nodeType":"YulIdentifier","src":"41633:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"41805:3:32","nodeType":"YulIdentifier","src":"41805:3:32"}],"functionName":{"name":"store_literal_in_memory_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f","nativeSrc":"41716:88:32","nodeType":"YulIdentifier","src":"41716:88:32"},"nativeSrc":"41716:93:32","nodeType":"YulFunctionCall","src":"41716:93:32"},"nativeSrc":"41716:93:32","nodeType":"YulExpressionStatement","src":"41716:93:32"},{"nativeSrc":"41818:19:32","nodeType":"YulAssignment","src":"41818:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"41829:3:32","nodeType":"YulIdentifier","src":"41829:3:32"},{"kind":"number","nativeSrc":"41834:2:32","nodeType":"YulLiteral","src":"41834:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41825:3:32","nodeType":"YulIdentifier","src":"41825:3:32"},"nativeSrc":"41825:12:32","nodeType":"YulFunctionCall","src":"41825:12:32"},"variableNames":[{"name":"end","nativeSrc":"41818:3:32","nodeType":"YulIdentifier","src":"41818:3:32"}]}]},"name":"abi_encode_t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f_to_t_string_memory_ptr_fromStack","nativeSrc":"41477:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"41611:3:32","nodeType":"YulTypedName","src":"41611:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"41619:3:32","nodeType":"YulTypedName","src":"41619:3:32","type":""}],"src":"41477:366:32"},{"body":{"nativeSrc":"42020:248:32","nodeType":"YulBlock","src":"42020:248:32","statements":[{"nativeSrc":"42030:26:32","nodeType":"YulAssignment","src":"42030:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"42042:9:32","nodeType":"YulIdentifier","src":"42042:9:32"},{"kind":"number","nativeSrc":"42053:2:32","nodeType":"YulLiteral","src":"42053:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"42038:3:32","nodeType":"YulIdentifier","src":"42038:3:32"},"nativeSrc":"42038:18:32","nodeType":"YulFunctionCall","src":"42038:18:32"},"variableNames":[{"name":"tail","nativeSrc":"42030:4:32","nodeType":"YulIdentifier","src":"42030:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"42077:9:32","nodeType":"YulIdentifier","src":"42077:9:32"},{"kind":"number","nativeSrc":"42088:1:32","nodeType":"YulLiteral","src":"42088:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"42073:3:32","nodeType":"YulIdentifier","src":"42073:3:32"},"nativeSrc":"42073:17:32","nodeType":"YulFunctionCall","src":"42073:17:32"},{"arguments":[{"name":"tail","nativeSrc":"42096:4:32","nodeType":"YulIdentifier","src":"42096:4:32"},{"name":"headStart","nativeSrc":"42102:9:32","nodeType":"YulIdentifier","src":"42102:9:32"}],"functionName":{"name":"sub","nativeSrc":"42092:3:32","nodeType":"YulIdentifier","src":"42092:3:32"},"nativeSrc":"42092:20:32","nodeType":"YulFunctionCall","src":"42092:20:32"}],"functionName":{"name":"mstore","nativeSrc":"42066:6:32","nodeType":"YulIdentifier","src":"42066:6:32"},"nativeSrc":"42066:47:32","nodeType":"YulFunctionCall","src":"42066:47:32"},"nativeSrc":"42066:47:32","nodeType":"YulExpressionStatement","src":"42066:47:32"},{"nativeSrc":"42122:139:32","nodeType":"YulAssignment","src":"42122:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"42256:4:32","nodeType":"YulIdentifier","src":"42256:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f_to_t_string_memory_ptr_fromStack","nativeSrc":"42130:124:32","nodeType":"YulIdentifier","src":"42130:124:32"},"nativeSrc":"42130:131:32","nodeType":"YulFunctionCall","src":"42130:131:32"},"variableNames":[{"name":"tail","nativeSrc":"42122:4:32","nodeType":"YulIdentifier","src":"42122:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"41849:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"42000:9:32","nodeType":"YulTypedName","src":"42000:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"42015:4:32","nodeType":"YulTypedName","src":"42015:4:32","type":""}],"src":"41849:419:32"},{"body":{"nativeSrc":"42380:116:32","nodeType":"YulBlock","src":"42380:116:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"42402:6:32","nodeType":"YulIdentifier","src":"42402:6:32"},{"kind":"number","nativeSrc":"42410:1:32","nodeType":"YulLiteral","src":"42410:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"42398:3:32","nodeType":"YulIdentifier","src":"42398:3:32"},"nativeSrc":"42398:14:32","nodeType":"YulFunctionCall","src":"42398:14:32"},{"hexValue":"57616c6c6574206c696d6974207265616368656420666f722074686973207068","kind":"string","nativeSrc":"42414:34:32","nodeType":"YulLiteral","src":"42414:34:32","type":"","value":"Wallet limit reached for this ph"}],"functionName":{"name":"mstore","nativeSrc":"42391:6:32","nodeType":"YulIdentifier","src":"42391:6:32"},"nativeSrc":"42391:58:32","nodeType":"YulFunctionCall","src":"42391:58:32"},"nativeSrc":"42391:58:32","nodeType":"YulExpressionStatement","src":"42391:58:32"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"42470:6:32","nodeType":"YulIdentifier","src":"42470:6:32"},{"kind":"number","nativeSrc":"42478:2:32","nodeType":"YulLiteral","src":"42478:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"42466:3:32","nodeType":"YulIdentifier","src":"42466:3:32"},"nativeSrc":"42466:15:32","nodeType":"YulFunctionCall","src":"42466:15:32"},{"hexValue":"617365","kind":"string","nativeSrc":"42483:5:32","nodeType":"YulLiteral","src":"42483:5:32","type":"","value":"ase"}],"functionName":{"name":"mstore","nativeSrc":"42459:6:32","nodeType":"YulIdentifier","src":"42459:6:32"},"nativeSrc":"42459:30:32","nodeType":"YulFunctionCall","src":"42459:30:32"},"nativeSrc":"42459:30:32","nodeType":"YulExpressionStatement","src":"42459:30:32"}]},"name":"store_literal_in_memory_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37","nativeSrc":"42274:222:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"42372:6:32","nodeType":"YulTypedName","src":"42372:6:32","type":""}],"src":"42274:222:32"},{"body":{"nativeSrc":"42648:220:32","nodeType":"YulBlock","src":"42648:220:32","statements":[{"nativeSrc":"42658:74:32","nodeType":"YulAssignment","src":"42658:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"42724:3:32","nodeType":"YulIdentifier","src":"42724:3:32"},{"kind":"number","nativeSrc":"42729:2:32","nodeType":"YulLiteral","src":"42729:2:32","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"42665:58:32","nodeType":"YulIdentifier","src":"42665:58:32"},"nativeSrc":"42665:67:32","nodeType":"YulFunctionCall","src":"42665:67:32"},"variableNames":[{"name":"pos","nativeSrc":"42658:3:32","nodeType":"YulIdentifier","src":"42658:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"42830:3:32","nodeType":"YulIdentifier","src":"42830:3:32"}],"functionName":{"name":"store_literal_in_memory_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37","nativeSrc":"42741:88:32","nodeType":"YulIdentifier","src":"42741:88:32"},"nativeSrc":"42741:93:32","nodeType":"YulFunctionCall","src":"42741:93:32"},"nativeSrc":"42741:93:32","nodeType":"YulExpressionStatement","src":"42741:93:32"},{"nativeSrc":"42843:19:32","nodeType":"YulAssignment","src":"42843:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"42854:3:32","nodeType":"YulIdentifier","src":"42854:3:32"},{"kind":"number","nativeSrc":"42859:2:32","nodeType":"YulLiteral","src":"42859:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"42850:3:32","nodeType":"YulIdentifier","src":"42850:3:32"},"nativeSrc":"42850:12:32","nodeType":"YulFunctionCall","src":"42850:12:32"},"variableNames":[{"name":"end","nativeSrc":"42843:3:32","nodeType":"YulIdentifier","src":"42843:3:32"}]}]},"name":"abi_encode_t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37_to_t_string_memory_ptr_fromStack","nativeSrc":"42502:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"42636:3:32","nodeType":"YulTypedName","src":"42636:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"42644:3:32","nodeType":"YulTypedName","src":"42644:3:32","type":""}],"src":"42502:366:32"},{"body":{"nativeSrc":"43045:248:32","nodeType":"YulBlock","src":"43045:248:32","statements":[{"nativeSrc":"43055:26:32","nodeType":"YulAssignment","src":"43055:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"43067:9:32","nodeType":"YulIdentifier","src":"43067:9:32"},{"kind":"number","nativeSrc":"43078:2:32","nodeType":"YulLiteral","src":"43078:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"43063:3:32","nodeType":"YulIdentifier","src":"43063:3:32"},"nativeSrc":"43063:18:32","nodeType":"YulFunctionCall","src":"43063:18:32"},"variableNames":[{"name":"tail","nativeSrc":"43055:4:32","nodeType":"YulIdentifier","src":"43055:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"43102:9:32","nodeType":"YulIdentifier","src":"43102:9:32"},{"kind":"number","nativeSrc":"43113:1:32","nodeType":"YulLiteral","src":"43113:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43098:3:32","nodeType":"YulIdentifier","src":"43098:3:32"},"nativeSrc":"43098:17:32","nodeType":"YulFunctionCall","src":"43098:17:32"},{"arguments":[{"name":"tail","nativeSrc":"43121:4:32","nodeType":"YulIdentifier","src":"43121:4:32"},{"name":"headStart","nativeSrc":"43127:9:32","nodeType":"YulIdentifier","src":"43127:9:32"}],"functionName":{"name":"sub","nativeSrc":"43117:3:32","nodeType":"YulIdentifier","src":"43117:3:32"},"nativeSrc":"43117:20:32","nodeType":"YulFunctionCall","src":"43117:20:32"}],"functionName":{"name":"mstore","nativeSrc":"43091:6:32","nodeType":"YulIdentifier","src":"43091:6:32"},"nativeSrc":"43091:47:32","nodeType":"YulFunctionCall","src":"43091:47:32"},"nativeSrc":"43091:47:32","nodeType":"YulExpressionStatement","src":"43091:47:32"},{"nativeSrc":"43147:139:32","nodeType":"YulAssignment","src":"43147:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"43281:4:32","nodeType":"YulIdentifier","src":"43281:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37_to_t_string_memory_ptr_fromStack","nativeSrc":"43155:124:32","nodeType":"YulIdentifier","src":"43155:124:32"},"nativeSrc":"43155:131:32","nodeType":"YulFunctionCall","src":"43155:131:32"},"variableNames":[{"name":"tail","nativeSrc":"43147:4:32","nodeType":"YulIdentifier","src":"43147:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"42874:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43025:9:32","nodeType":"YulTypedName","src":"43025:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"43040:4:32","nodeType":"YulTypedName","src":"43040:4:32","type":""}],"src":"42874:419:32"},{"body":{"nativeSrc":"43409:136:32","nodeType":"YulBlock","src":"43409:136:32","statements":[{"nativeSrc":"43419:26:32","nodeType":"YulAssignment","src":"43419:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"43431:9:32","nodeType":"YulIdentifier","src":"43431:9:32"},{"kind":"number","nativeSrc":"43442:2:32","nodeType":"YulLiteral","src":"43442:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"43427:3:32","nodeType":"YulIdentifier","src":"43427:3:32"},"nativeSrc":"43427:18:32","nodeType":"YulFunctionCall","src":"43427:18:32"},"variableNames":[{"name":"tail","nativeSrc":"43419:4:32","nodeType":"YulIdentifier","src":"43419:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"43511:6:32","nodeType":"YulIdentifier","src":"43511:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"43524:9:32","nodeType":"YulIdentifier","src":"43524:9:32"},{"kind":"number","nativeSrc":"43535:1:32","nodeType":"YulLiteral","src":"43535:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43520:3:32","nodeType":"YulIdentifier","src":"43520:3:32"},"nativeSrc":"43520:17:32","nodeType":"YulFunctionCall","src":"43520:17:32"}],"functionName":{"name":"abi_encode_t_enum$_PhaseType_$8455_to_t_uint8_fromStack","nativeSrc":"43455:55:32","nodeType":"YulIdentifier","src":"43455:55:32"},"nativeSrc":"43455:83:32","nodeType":"YulFunctionCall","src":"43455:83:32"},"nativeSrc":"43455:83:32","nodeType":"YulExpressionStatement","src":"43455:83:32"}]},"name":"abi_encode_tuple_t_enum$_PhaseType_$8455__to_t_uint8__fromStack_reversed","nativeSrc":"43299:246:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43381:9:32","nodeType":"YulTypedName","src":"43381:9:32","type":""},{"name":"value0","nativeSrc":"43393:6:32","nodeType":"YulTypedName","src":"43393:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"43404:4:32","nodeType":"YulTypedName","src":"43404:4:32","type":""}],"src":"43299:246:32"},{"body":{"nativeSrc":"43657:59:32","nodeType":"YulBlock","src":"43657:59:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"43679:6:32","nodeType":"YulIdentifier","src":"43679:6:32"},{"kind":"number","nativeSrc":"43687:1:32","nodeType":"YulLiteral","src":"43687:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43675:3:32","nodeType":"YulIdentifier","src":"43675:3:32"},"nativeSrc":"43675:14:32","nodeType":"YulFunctionCall","src":"43675:14:32"},{"hexValue":"4e6f20616374697665207068617365","kind":"string","nativeSrc":"43691:17:32","nodeType":"YulLiteral","src":"43691:17:32","type":"","value":"No active phase"}],"functionName":{"name":"mstore","nativeSrc":"43668:6:32","nodeType":"YulIdentifier","src":"43668:6:32"},"nativeSrc":"43668:41:32","nodeType":"YulFunctionCall","src":"43668:41:32"},"nativeSrc":"43668:41:32","nodeType":"YulExpressionStatement","src":"43668:41:32"}]},"name":"store_literal_in_memory_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367","nativeSrc":"43551:165:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"43649:6:32","nodeType":"YulTypedName","src":"43649:6:32","type":""}],"src":"43551:165:32"},{"body":{"nativeSrc":"43868:220:32","nodeType":"YulBlock","src":"43868:220:32","statements":[{"nativeSrc":"43878:74:32","nodeType":"YulAssignment","src":"43878:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"43944:3:32","nodeType":"YulIdentifier","src":"43944:3:32"},{"kind":"number","nativeSrc":"43949:2:32","nodeType":"YulLiteral","src":"43949:2:32","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"43885:58:32","nodeType":"YulIdentifier","src":"43885:58:32"},"nativeSrc":"43885:67:32","nodeType":"YulFunctionCall","src":"43885:67:32"},"variableNames":[{"name":"pos","nativeSrc":"43878:3:32","nodeType":"YulIdentifier","src":"43878:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"44050:3:32","nodeType":"YulIdentifier","src":"44050:3:32"}],"functionName":{"name":"store_literal_in_memory_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367","nativeSrc":"43961:88:32","nodeType":"YulIdentifier","src":"43961:88:32"},"nativeSrc":"43961:93:32","nodeType":"YulFunctionCall","src":"43961:93:32"},"nativeSrc":"43961:93:32","nodeType":"YulExpressionStatement","src":"43961:93:32"},{"nativeSrc":"44063:19:32","nodeType":"YulAssignment","src":"44063:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"44074:3:32","nodeType":"YulIdentifier","src":"44074:3:32"},{"kind":"number","nativeSrc":"44079:2:32","nodeType":"YulLiteral","src":"44079:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"44070:3:32","nodeType":"YulIdentifier","src":"44070:3:32"},"nativeSrc":"44070:12:32","nodeType":"YulFunctionCall","src":"44070:12:32"},"variableNames":[{"name":"end","nativeSrc":"44063:3:32","nodeType":"YulIdentifier","src":"44063:3:32"}]}]},"name":"abi_encode_t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367_to_t_string_memory_ptr_fromStack","nativeSrc":"43722:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"43856:3:32","nodeType":"YulTypedName","src":"43856:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"43864:3:32","nodeType":"YulTypedName","src":"43864:3:32","type":""}],"src":"43722:366:32"},{"body":{"nativeSrc":"44265:248:32","nodeType":"YulBlock","src":"44265:248:32","statements":[{"nativeSrc":"44275:26:32","nodeType":"YulAssignment","src":"44275:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"44287:9:32","nodeType":"YulIdentifier","src":"44287:9:32"},{"kind":"number","nativeSrc":"44298:2:32","nodeType":"YulLiteral","src":"44298:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"44283:3:32","nodeType":"YulIdentifier","src":"44283:3:32"},"nativeSrc":"44283:18:32","nodeType":"YulFunctionCall","src":"44283:18:32"},"variableNames":[{"name":"tail","nativeSrc":"44275:4:32","nodeType":"YulIdentifier","src":"44275:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"44322:9:32","nodeType":"YulIdentifier","src":"44322:9:32"},{"kind":"number","nativeSrc":"44333:1:32","nodeType":"YulLiteral","src":"44333:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"44318:3:32","nodeType":"YulIdentifier","src":"44318:3:32"},"nativeSrc":"44318:17:32","nodeType":"YulFunctionCall","src":"44318:17:32"},{"arguments":[{"name":"tail","nativeSrc":"44341:4:32","nodeType":"YulIdentifier","src":"44341:4:32"},{"name":"headStart","nativeSrc":"44347:9:32","nodeType":"YulIdentifier","src":"44347:9:32"}],"functionName":{"name":"sub","nativeSrc":"44337:3:32","nodeType":"YulIdentifier","src":"44337:3:32"},"nativeSrc":"44337:20:32","nodeType":"YulFunctionCall","src":"44337:20:32"}],"functionName":{"name":"mstore","nativeSrc":"44311:6:32","nodeType":"YulIdentifier","src":"44311:6:32"},"nativeSrc":"44311:47:32","nodeType":"YulFunctionCall","src":"44311:47:32"},"nativeSrc":"44311:47:32","nodeType":"YulExpressionStatement","src":"44311:47:32"},{"nativeSrc":"44367:139:32","nodeType":"YulAssignment","src":"44367:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"44501:4:32","nodeType":"YulIdentifier","src":"44501:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367_to_t_string_memory_ptr_fromStack","nativeSrc":"44375:124:32","nodeType":"YulIdentifier","src":"44375:124:32"},"nativeSrc":"44375:131:32","nodeType":"YulFunctionCall","src":"44375:131:32"},"variableNames":[{"name":"tail","nativeSrc":"44367:4:32","nodeType":"YulIdentifier","src":"44367:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"44094:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"44245:9:32","nodeType":"YulTypedName","src":"44245:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"44260:4:32","nodeType":"YulTypedName","src":"44260:4:32","type":""}],"src":"44094:419:32"},{"body":{"nativeSrc":"44625:8:32","nodeType":"YulBlock","src":"44625:8:32","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"44519:114:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"44617:6:32","nodeType":"YulTypedName","src":"44617:6:32","type":""}],"src":"44519:114:32"},{"body":{"nativeSrc":"44802:235:32","nodeType":"YulBlock","src":"44802:235:32","statements":[{"nativeSrc":"44812:90:32","nodeType":"YulAssignment","src":"44812:90:32","value":{"arguments":[{"name":"pos","nativeSrc":"44895:3:32","nodeType":"YulIdentifier","src":"44895:3:32"},{"kind":"number","nativeSrc":"44900:1:32","nodeType":"YulLiteral","src":"44900:1:32","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"44819:75:32","nodeType":"YulIdentifier","src":"44819:75:32"},"nativeSrc":"44819:83:32","nodeType":"YulFunctionCall","src":"44819:83:32"},"variableNames":[{"name":"pos","nativeSrc":"44812:3:32","nodeType":"YulIdentifier","src":"44812:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"45000:3:32","nodeType":"YulIdentifier","src":"45000:3:32"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"44911:88:32","nodeType":"YulIdentifier","src":"44911:88:32"},"nativeSrc":"44911:93:32","nodeType":"YulFunctionCall","src":"44911:93:32"},"nativeSrc":"44911:93:32","nodeType":"YulExpressionStatement","src":"44911:93:32"},{"nativeSrc":"45013:18:32","nodeType":"YulAssignment","src":"45013:18:32","value":{"arguments":[{"name":"pos","nativeSrc":"45024:3:32","nodeType":"YulIdentifier","src":"45024:3:32"},{"kind":"number","nativeSrc":"45029:1:32","nodeType":"YulLiteral","src":"45029:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"45020:3:32","nodeType":"YulIdentifier","src":"45020:3:32"},"nativeSrc":"45020:11:32","nodeType":"YulFunctionCall","src":"45020:11:32"},"variableNames":[{"name":"end","nativeSrc":"45013:3:32","nodeType":"YulIdentifier","src":"45013:3:32"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"44639:398:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"44790:3:32","nodeType":"YulTypedName","src":"44790:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"44798:3:32","nodeType":"YulTypedName","src":"44798:3:32","type":""}],"src":"44639:398:32"},{"body":{"nativeSrc":"45231:191:32","nodeType":"YulBlock","src":"45231:191:32","statements":[{"nativeSrc":"45242:154:32","nodeType":"YulAssignment","src":"45242:154:32","value":{"arguments":[{"name":"pos","nativeSrc":"45392:3:32","nodeType":"YulIdentifier","src":"45392:3:32"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"45249:141:32","nodeType":"YulIdentifier","src":"45249:141:32"},"nativeSrc":"45249:147:32","nodeType":"YulFunctionCall","src":"45249:147:32"},"variableNames":[{"name":"pos","nativeSrc":"45242:3:32","nodeType":"YulIdentifier","src":"45242:3:32"}]},{"nativeSrc":"45406:10:32","nodeType":"YulAssignment","src":"45406:10:32","value":{"name":"pos","nativeSrc":"45413:3:32","nodeType":"YulIdentifier","src":"45413:3:32"},"variableNames":[{"name":"end","nativeSrc":"45406:3:32","nodeType":"YulIdentifier","src":"45406:3:32"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"45043:379:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"45218:3:32","nodeType":"YulTypedName","src":"45218:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"45227:3:32","nodeType":"YulTypedName","src":"45227:3:32","type":""}],"src":"45043:379:32"},{"body":{"nativeSrc":"45534:72:32","nodeType":"YulBlock","src":"45534:72:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"45556:6:32","nodeType":"YulIdentifier","src":"45556:6:32"},{"kind":"number","nativeSrc":"45564:1:32","nodeType":"YulLiteral","src":"45564:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"45552:3:32","nodeType":"YulIdentifier","src":"45552:3:32"},"nativeSrc":"45552:14:32","nodeType":"YulFunctionCall","src":"45552:14:32"},{"hexValue":"506c6174666f726d20666565207472616e73666572206661696c6564","kind":"string","nativeSrc":"45568:30:32","nodeType":"YulLiteral","src":"45568:30:32","type":"","value":"Platform fee transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"45545:6:32","nodeType":"YulIdentifier","src":"45545:6:32"},"nativeSrc":"45545:54:32","nodeType":"YulFunctionCall","src":"45545:54:32"},"nativeSrc":"45545:54:32","nodeType":"YulExpressionStatement","src":"45545:54:32"}]},"name":"store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3","nativeSrc":"45428:178:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"45526:6:32","nodeType":"YulTypedName","src":"45526:6:32","type":""}],"src":"45428:178:32"},{"body":{"nativeSrc":"45758:220:32","nodeType":"YulBlock","src":"45758:220:32","statements":[{"nativeSrc":"45768:74:32","nodeType":"YulAssignment","src":"45768:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"45834:3:32","nodeType":"YulIdentifier","src":"45834:3:32"},{"kind":"number","nativeSrc":"45839:2:32","nodeType":"YulLiteral","src":"45839:2:32","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"45775:58:32","nodeType":"YulIdentifier","src":"45775:58:32"},"nativeSrc":"45775:67:32","nodeType":"YulFunctionCall","src":"45775:67:32"},"variableNames":[{"name":"pos","nativeSrc":"45768:3:32","nodeType":"YulIdentifier","src":"45768:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"45940:3:32","nodeType":"YulIdentifier","src":"45940:3:32"}],"functionName":{"name":"store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3","nativeSrc":"45851:88:32","nodeType":"YulIdentifier","src":"45851:88:32"},"nativeSrc":"45851:93:32","nodeType":"YulFunctionCall","src":"45851:93:32"},"nativeSrc":"45851:93:32","nodeType":"YulExpressionStatement","src":"45851:93:32"},{"nativeSrc":"45953:19:32","nodeType":"YulAssignment","src":"45953:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"45964:3:32","nodeType":"YulIdentifier","src":"45964:3:32"},{"kind":"number","nativeSrc":"45969:2:32","nodeType":"YulLiteral","src":"45969:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"45960:3:32","nodeType":"YulIdentifier","src":"45960:3:32"},"nativeSrc":"45960:12:32","nodeType":"YulFunctionCall","src":"45960:12:32"},"variableNames":[{"name":"end","nativeSrc":"45953:3:32","nodeType":"YulIdentifier","src":"45953:3:32"}]}]},"name":"abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack","nativeSrc":"45612:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"45746:3:32","nodeType":"YulTypedName","src":"45746:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"45754:3:32","nodeType":"YulTypedName","src":"45754:3:32","type":""}],"src":"45612:366:32"},{"body":{"nativeSrc":"46155:248:32","nodeType":"YulBlock","src":"46155:248:32","statements":[{"nativeSrc":"46165:26:32","nodeType":"YulAssignment","src":"46165:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"46177:9:32","nodeType":"YulIdentifier","src":"46177:9:32"},{"kind":"number","nativeSrc":"46188:2:32","nodeType":"YulLiteral","src":"46188:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"46173:3:32","nodeType":"YulIdentifier","src":"46173:3:32"},"nativeSrc":"46173:18:32","nodeType":"YulFunctionCall","src":"46173:18:32"},"variableNames":[{"name":"tail","nativeSrc":"46165:4:32","nodeType":"YulIdentifier","src":"46165:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"46212:9:32","nodeType":"YulIdentifier","src":"46212:9:32"},{"kind":"number","nativeSrc":"46223:1:32","nodeType":"YulLiteral","src":"46223:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"46208:3:32","nodeType":"YulIdentifier","src":"46208:3:32"},"nativeSrc":"46208:17:32","nodeType":"YulFunctionCall","src":"46208:17:32"},{"arguments":[{"name":"tail","nativeSrc":"46231:4:32","nodeType":"YulIdentifier","src":"46231:4:32"},{"name":"headStart","nativeSrc":"46237:9:32","nodeType":"YulIdentifier","src":"46237:9:32"}],"functionName":{"name":"sub","nativeSrc":"46227:3:32","nodeType":"YulIdentifier","src":"46227:3:32"},"nativeSrc":"46227:20:32","nodeType":"YulFunctionCall","src":"46227:20:32"}],"functionName":{"name":"mstore","nativeSrc":"46201:6:32","nodeType":"YulIdentifier","src":"46201:6:32"},"nativeSrc":"46201:47:32","nodeType":"YulFunctionCall","src":"46201:47:32"},"nativeSrc":"46201:47:32","nodeType":"YulExpressionStatement","src":"46201:47:32"},{"nativeSrc":"46257:139:32","nodeType":"YulAssignment","src":"46257:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"46391:4:32","nodeType":"YulIdentifier","src":"46391:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack","nativeSrc":"46265:124:32","nodeType":"YulIdentifier","src":"46265:124:32"},"nativeSrc":"46265:131:32","nodeType":"YulFunctionCall","src":"46265:131:32"},"variableNames":[{"name":"tail","nativeSrc":"46257:4:32","nodeType":"YulIdentifier","src":"46257:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"45984:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"46135:9:32","nodeType":"YulTypedName","src":"46135:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"46150:4:32","nodeType":"YulTypedName","src":"46150:4:32","type":""}],"src":"45984:419:32"},{"body":{"nativeSrc":"46454:149:32","nodeType":"YulBlock","src":"46454:149:32","statements":[{"nativeSrc":"46464:25:32","nodeType":"YulAssignment","src":"46464:25:32","value":{"arguments":[{"name":"x","nativeSrc":"46487:1:32","nodeType":"YulIdentifier","src":"46487:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"46469:17:32","nodeType":"YulIdentifier","src":"46469:17:32"},"nativeSrc":"46469:20:32","nodeType":"YulFunctionCall","src":"46469:20:32"},"variableNames":[{"name":"x","nativeSrc":"46464:1:32","nodeType":"YulIdentifier","src":"46464:1:32"}]},{"nativeSrc":"46498:25:32","nodeType":"YulAssignment","src":"46498:25:32","value":{"arguments":[{"name":"y","nativeSrc":"46521:1:32","nodeType":"YulIdentifier","src":"46521:1:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"46503:17:32","nodeType":"YulIdentifier","src":"46503:17:32"},"nativeSrc":"46503:20:32","nodeType":"YulFunctionCall","src":"46503:20:32"},"variableNames":[{"name":"y","nativeSrc":"46498:1:32","nodeType":"YulIdentifier","src":"46498:1:32"}]},{"nativeSrc":"46532:17:32","nodeType":"YulAssignment","src":"46532:17:32","value":{"arguments":[{"name":"x","nativeSrc":"46544:1:32","nodeType":"YulIdentifier","src":"46544:1:32"},{"name":"y","nativeSrc":"46547:1:32","nodeType":"YulIdentifier","src":"46547:1:32"}],"functionName":{"name":"sub","nativeSrc":"46540:3:32","nodeType":"YulIdentifier","src":"46540:3:32"},"nativeSrc":"46540:9:32","nodeType":"YulFunctionCall","src":"46540:9:32"},"variableNames":[{"name":"diff","nativeSrc":"46532:4:32","nodeType":"YulIdentifier","src":"46532:4:32"}]},{"body":{"nativeSrc":"46574:22:32","nodeType":"YulBlock","src":"46574:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"46576:16:32","nodeType":"YulIdentifier","src":"46576:16:32"},"nativeSrc":"46576:18:32","nodeType":"YulFunctionCall","src":"46576:18:32"},"nativeSrc":"46576:18:32","nodeType":"YulExpressionStatement","src":"46576:18:32"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"46565:4:32","nodeType":"YulIdentifier","src":"46565:4:32"},{"name":"x","nativeSrc":"46571:1:32","nodeType":"YulIdentifier","src":"46571:1:32"}],"functionName":{"name":"gt","nativeSrc":"46562:2:32","nodeType":"YulIdentifier","src":"46562:2:32"},"nativeSrc":"46562:11:32","nodeType":"YulFunctionCall","src":"46562:11:32"},"nativeSrc":"46559:37:32","nodeType":"YulIf","src":"46559:37:32"}]},"name":"checked_sub_t_uint256","nativeSrc":"46409:194:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"46440:1:32","nodeType":"YulTypedName","src":"46440:1:32","type":""},{"name":"y","nativeSrc":"46443:1:32","nodeType":"YulTypedName","src":"46443:1:32","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"46449:4:32","nodeType":"YulTypedName","src":"46449:4:32","type":""}],"src":"46409:194:32"},{"body":{"nativeSrc":"46715:69:32","nodeType":"YulBlock","src":"46715:69:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"46737:6:32","nodeType":"YulIdentifier","src":"46737:6:32"},{"kind":"number","nativeSrc":"46745:1:32","nodeType":"YulLiteral","src":"46745:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"46733:3:32","nodeType":"YulIdentifier","src":"46733:3:32"},"nativeSrc":"46733:14:32","nodeType":"YulFunctionCall","src":"46733:14:32"},{"hexValue":"4f776e657220666565207472616e73666572206661696c6564","kind":"string","nativeSrc":"46749:27:32","nodeType":"YulLiteral","src":"46749:27:32","type":"","value":"Owner fee transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"46726:6:32","nodeType":"YulIdentifier","src":"46726:6:32"},"nativeSrc":"46726:51:32","nodeType":"YulFunctionCall","src":"46726:51:32"},"nativeSrc":"46726:51:32","nodeType":"YulExpressionStatement","src":"46726:51:32"}]},"name":"store_literal_in_memory_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e","nativeSrc":"46609:175:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"46707:6:32","nodeType":"YulTypedName","src":"46707:6:32","type":""}],"src":"46609:175:32"},{"body":{"nativeSrc":"46936:220:32","nodeType":"YulBlock","src":"46936:220:32","statements":[{"nativeSrc":"46946:74:32","nodeType":"YulAssignment","src":"46946:74:32","value":{"arguments":[{"name":"pos","nativeSrc":"47012:3:32","nodeType":"YulIdentifier","src":"47012:3:32"},{"kind":"number","nativeSrc":"47017:2:32","nodeType":"YulLiteral","src":"47017:2:32","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"46953:58:32","nodeType":"YulIdentifier","src":"46953:58:32"},"nativeSrc":"46953:67:32","nodeType":"YulFunctionCall","src":"46953:67:32"},"variableNames":[{"name":"pos","nativeSrc":"46946:3:32","nodeType":"YulIdentifier","src":"46946:3:32"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"47118:3:32","nodeType":"YulIdentifier","src":"47118:3:32"}],"functionName":{"name":"store_literal_in_memory_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e","nativeSrc":"47029:88:32","nodeType":"YulIdentifier","src":"47029:88:32"},"nativeSrc":"47029:93:32","nodeType":"YulFunctionCall","src":"47029:93:32"},"nativeSrc":"47029:93:32","nodeType":"YulExpressionStatement","src":"47029:93:32"},{"nativeSrc":"47131:19:32","nodeType":"YulAssignment","src":"47131:19:32","value":{"arguments":[{"name":"pos","nativeSrc":"47142:3:32","nodeType":"YulIdentifier","src":"47142:3:32"},{"kind":"number","nativeSrc":"47147:2:32","nodeType":"YulLiteral","src":"47147:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"47138:3:32","nodeType":"YulIdentifier","src":"47138:3:32"},"nativeSrc":"47138:12:32","nodeType":"YulFunctionCall","src":"47138:12:32"},"variableNames":[{"name":"end","nativeSrc":"47131:3:32","nodeType":"YulIdentifier","src":"47131:3:32"}]}]},"name":"abi_encode_t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e_to_t_string_memory_ptr_fromStack","nativeSrc":"46790:366:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"46924:3:32","nodeType":"YulTypedName","src":"46924:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"46932:3:32","nodeType":"YulTypedName","src":"46932:3:32","type":""}],"src":"46790:366:32"},{"body":{"nativeSrc":"47333:248:32","nodeType":"YulBlock","src":"47333:248:32","statements":[{"nativeSrc":"47343:26:32","nodeType":"YulAssignment","src":"47343:26:32","value":{"arguments":[{"name":"headStart","nativeSrc":"47355:9:32","nodeType":"YulIdentifier","src":"47355:9:32"},{"kind":"number","nativeSrc":"47366:2:32","nodeType":"YulLiteral","src":"47366:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"47351:3:32","nodeType":"YulIdentifier","src":"47351:3:32"},"nativeSrc":"47351:18:32","nodeType":"YulFunctionCall","src":"47351:18:32"},"variableNames":[{"name":"tail","nativeSrc":"47343:4:32","nodeType":"YulIdentifier","src":"47343:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"47390:9:32","nodeType":"YulIdentifier","src":"47390:9:32"},{"kind":"number","nativeSrc":"47401:1:32","nodeType":"YulLiteral","src":"47401:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"47386:3:32","nodeType":"YulIdentifier","src":"47386:3:32"},"nativeSrc":"47386:17:32","nodeType":"YulFunctionCall","src":"47386:17:32"},{"arguments":[{"name":"tail","nativeSrc":"47409:4:32","nodeType":"YulIdentifier","src":"47409:4:32"},{"name":"headStart","nativeSrc":"47415:9:32","nodeType":"YulIdentifier","src":"47415:9:32"}],"functionName":{"name":"sub","nativeSrc":"47405:3:32","nodeType":"YulIdentifier","src":"47405:3:32"},"nativeSrc":"47405:20:32","nodeType":"YulFunctionCall","src":"47405:20:32"}],"functionName":{"name":"mstore","nativeSrc":"47379:6:32","nodeType":"YulIdentifier","src":"47379:6:32"},"nativeSrc":"47379:47:32","nodeType":"YulFunctionCall","src":"47379:47:32"},"nativeSrc":"47379:47:32","nodeType":"YulExpressionStatement","src":"47379:47:32"},{"nativeSrc":"47435:139:32","nodeType":"YulAssignment","src":"47435:139:32","value":{"arguments":[{"name":"tail","nativeSrc":"47569:4:32","nodeType":"YulIdentifier","src":"47569:4:32"}],"functionName":{"name":"abi_encode_t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e_to_t_string_memory_ptr_fromStack","nativeSrc":"47443:124:32","nodeType":"YulIdentifier","src":"47443:124:32"},"nativeSrc":"47443:131:32","nodeType":"YulFunctionCall","src":"47443:131:32"},"variableNames":[{"name":"tail","nativeSrc":"47435:4:32","nodeType":"YulIdentifier","src":"47435:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"47162:419:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"47313:9:32","nodeType":"YulTypedName","src":"47313:9:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"47328:4:32","nodeType":"YulTypedName","src":"47328:4:32","type":""}],"src":"47162:419:32"},{"body":{"nativeSrc":"47630:190:32","nodeType":"YulBlock","src":"47630:190:32","statements":[{"nativeSrc":"47640:33:32","nodeType":"YulAssignment","src":"47640:33:32","value":{"arguments":[{"name":"value","nativeSrc":"47667:5:32","nodeType":"YulIdentifier","src":"47667:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"47649:17:32","nodeType":"YulIdentifier","src":"47649:17:32"},"nativeSrc":"47649:24:32","nodeType":"YulFunctionCall","src":"47649:24:32"},"variableNames":[{"name":"value","nativeSrc":"47640:5:32","nodeType":"YulIdentifier","src":"47640:5:32"}]},{"body":{"nativeSrc":"47763:22:32","nodeType":"YulBlock","src":"47763:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"47765:16:32","nodeType":"YulIdentifier","src":"47765:16:32"},"nativeSrc":"47765:18:32","nodeType":"YulFunctionCall","src":"47765:18:32"},"nativeSrc":"47765:18:32","nodeType":"YulExpressionStatement","src":"47765:18:32"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"47688:5:32","nodeType":"YulIdentifier","src":"47688:5:32"},{"kind":"number","nativeSrc":"47695:66:32","nodeType":"YulLiteral","src":"47695:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"47685:2:32","nodeType":"YulIdentifier","src":"47685:2:32"},"nativeSrc":"47685:77:32","nodeType":"YulFunctionCall","src":"47685:77:32"},"nativeSrc":"47682:103:32","nodeType":"YulIf","src":"47682:103:32"},{"nativeSrc":"47794:20:32","nodeType":"YulAssignment","src":"47794:20:32","value":{"arguments":[{"name":"value","nativeSrc":"47805:5:32","nodeType":"YulIdentifier","src":"47805:5:32"},{"kind":"number","nativeSrc":"47812:1:32","nodeType":"YulLiteral","src":"47812:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"47801:3:32","nodeType":"YulIdentifier","src":"47801:3:32"},"nativeSrc":"47801:13:32","nodeType":"YulFunctionCall","src":"47801:13:32"},"variableNames":[{"name":"ret","nativeSrc":"47794:3:32","nodeType":"YulIdentifier","src":"47794:3:32"}]}]},"name":"increment_t_uint256","nativeSrc":"47587:233:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47616:5:32","nodeType":"YulTypedName","src":"47616:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"47626:3:32","nodeType":"YulTypedName","src":"47626:3:32","type":""}],"src":"47587:233:32"},{"body":{"nativeSrc":"47884:40:32","nodeType":"YulBlock","src":"47884:40:32","statements":[{"nativeSrc":"47895:22:32","nodeType":"YulAssignment","src":"47895:22:32","value":{"arguments":[{"name":"value","nativeSrc":"47911:5:32","nodeType":"YulIdentifier","src":"47911:5:32"}],"functionName":{"name":"mload","nativeSrc":"47905:5:32","nodeType":"YulIdentifier","src":"47905:5:32"},"nativeSrc":"47905:12:32","nodeType":"YulFunctionCall","src":"47905:12:32"},"variableNames":[{"name":"length","nativeSrc":"47895:6:32","nodeType":"YulIdentifier","src":"47895:6:32"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"47826:98:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47867:5:32","nodeType":"YulTypedName","src":"47867:5:32","type":""}],"returnVariables":[{"name":"length","nativeSrc":"47877:6:32","nodeType":"YulTypedName","src":"47877:6:32","type":""}],"src":"47826:98:32"},{"body":{"nativeSrc":"48025:73:32","nodeType":"YulBlock","src":"48025:73:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"48042:3:32","nodeType":"YulIdentifier","src":"48042:3:32"},{"name":"length","nativeSrc":"48047:6:32","nodeType":"YulIdentifier","src":"48047:6:32"}],"functionName":{"name":"mstore","nativeSrc":"48035:6:32","nodeType":"YulIdentifier","src":"48035:6:32"},"nativeSrc":"48035:19:32","nodeType":"YulFunctionCall","src":"48035:19:32"},"nativeSrc":"48035:19:32","nodeType":"YulExpressionStatement","src":"48035:19:32"},{"nativeSrc":"48063:29:32","nodeType":"YulAssignment","src":"48063:29:32","value":{"arguments":[{"name":"pos","nativeSrc":"48082:3:32","nodeType":"YulIdentifier","src":"48082:3:32"},{"kind":"number","nativeSrc":"48087:4:32","nodeType":"YulLiteral","src":"48087:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"48078:3:32","nodeType":"YulIdentifier","src":"48078:3:32"},"nativeSrc":"48078:14:32","nodeType":"YulFunctionCall","src":"48078:14:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"48063:11:32","nodeType":"YulIdentifier","src":"48063:11:32"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"47930:168:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"47997:3:32","nodeType":"YulTypedName","src":"47997:3:32","type":""},{"name":"length","nativeSrc":"48002:6:32","nodeType":"YulTypedName","src":"48002:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"48013:11:32","nodeType":"YulTypedName","src":"48013:11:32","type":""}],"src":"47930:168:32"},{"body":{"nativeSrc":"48194:283:32","nodeType":"YulBlock","src":"48194:283:32","statements":[{"nativeSrc":"48204:52:32","nodeType":"YulVariableDeclaration","src":"48204:52:32","value":{"arguments":[{"name":"value","nativeSrc":"48250:5:32","nodeType":"YulIdentifier","src":"48250:5:32"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"48218:31:32","nodeType":"YulIdentifier","src":"48218:31:32"},"nativeSrc":"48218:38:32","nodeType":"YulFunctionCall","src":"48218:38:32"},"variables":[{"name":"length","nativeSrc":"48208:6:32","nodeType":"YulTypedName","src":"48208:6:32","type":""}]},{"nativeSrc":"48265:77:32","nodeType":"YulAssignment","src":"48265:77:32","value":{"arguments":[{"name":"pos","nativeSrc":"48330:3:32","nodeType":"YulIdentifier","src":"48330:3:32"},{"name":"length","nativeSrc":"48335:6:32","nodeType":"YulIdentifier","src":"48335:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"48272:57:32","nodeType":"YulIdentifier","src":"48272:57:32"},"nativeSrc":"48272:70:32","nodeType":"YulFunctionCall","src":"48272:70:32"},"variableNames":[{"name":"pos","nativeSrc":"48265:3:32","nodeType":"YulIdentifier","src":"48265:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"48390:5:32","nodeType":"YulIdentifier","src":"48390:5:32"},{"kind":"number","nativeSrc":"48397:4:32","nodeType":"YulLiteral","src":"48397:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"48386:3:32","nodeType":"YulIdentifier","src":"48386:3:32"},"nativeSrc":"48386:16:32","nodeType":"YulFunctionCall","src":"48386:16:32"},{"name":"pos","nativeSrc":"48404:3:32","nodeType":"YulIdentifier","src":"48404:3:32"},{"name":"length","nativeSrc":"48409:6:32","nodeType":"YulIdentifier","src":"48409:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"48351:34:32","nodeType":"YulIdentifier","src":"48351:34:32"},"nativeSrc":"48351:65:32","nodeType":"YulFunctionCall","src":"48351:65:32"},"nativeSrc":"48351:65:32","nodeType":"YulExpressionStatement","src":"48351:65:32"},{"nativeSrc":"48425:46:32","nodeType":"YulAssignment","src":"48425:46:32","value":{"arguments":[{"name":"pos","nativeSrc":"48436:3:32","nodeType":"YulIdentifier","src":"48436:3:32"},{"arguments":[{"name":"length","nativeSrc":"48463:6:32","nodeType":"YulIdentifier","src":"48463:6:32"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"48441:21:32","nodeType":"YulIdentifier","src":"48441:21:32"},"nativeSrc":"48441:29:32","nodeType":"YulFunctionCall","src":"48441:29:32"}],"functionName":{"name":"add","nativeSrc":"48432:3:32","nodeType":"YulIdentifier","src":"48432:3:32"},"nativeSrc":"48432:39:32","nodeType":"YulFunctionCall","src":"48432:39:32"},"variableNames":[{"name":"end","nativeSrc":"48425:3:32","nodeType":"YulIdentifier","src":"48425:3:32"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"48104:373:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"48175:5:32","nodeType":"YulTypedName","src":"48175:5:32","type":""},{"name":"pos","nativeSrc":"48182:3:32","nodeType":"YulTypedName","src":"48182:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"48190:3:32","nodeType":"YulTypedName","src":"48190:3:32","type":""}],"src":"48104:373:32"},{"body":{"nativeSrc":"48683:440:32","nodeType":"YulBlock","src":"48683:440:32","statements":[{"nativeSrc":"48693:27:32","nodeType":"YulAssignment","src":"48693:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"48705:9:32","nodeType":"YulIdentifier","src":"48705:9:32"},{"kind":"number","nativeSrc":"48716:3:32","nodeType":"YulLiteral","src":"48716:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"48701:3:32","nodeType":"YulIdentifier","src":"48701:3:32"},"nativeSrc":"48701:19:32","nodeType":"YulFunctionCall","src":"48701:19:32"},"variableNames":[{"name":"tail","nativeSrc":"48693:4:32","nodeType":"YulIdentifier","src":"48693:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"48774:6:32","nodeType":"YulIdentifier","src":"48774:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"48787:9:32","nodeType":"YulIdentifier","src":"48787:9:32"},{"kind":"number","nativeSrc":"48798:1:32","nodeType":"YulLiteral","src":"48798:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"48783:3:32","nodeType":"YulIdentifier","src":"48783:3:32"},"nativeSrc":"48783:17:32","nodeType":"YulFunctionCall","src":"48783:17:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"48730:43:32","nodeType":"YulIdentifier","src":"48730:43:32"},"nativeSrc":"48730:71:32","nodeType":"YulFunctionCall","src":"48730:71:32"},"nativeSrc":"48730:71:32","nodeType":"YulExpressionStatement","src":"48730:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"48855:6:32","nodeType":"YulIdentifier","src":"48855:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"48868:9:32","nodeType":"YulIdentifier","src":"48868:9:32"},{"kind":"number","nativeSrc":"48879:2:32","nodeType":"YulLiteral","src":"48879:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"48864:3:32","nodeType":"YulIdentifier","src":"48864:3:32"},"nativeSrc":"48864:18:32","nodeType":"YulFunctionCall","src":"48864:18:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"48811:43:32","nodeType":"YulIdentifier","src":"48811:43:32"},"nativeSrc":"48811:72:32","nodeType":"YulFunctionCall","src":"48811:72:32"},"nativeSrc":"48811:72:32","nodeType":"YulExpressionStatement","src":"48811:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"48937:6:32","nodeType":"YulIdentifier","src":"48937:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"48950:9:32","nodeType":"YulIdentifier","src":"48950:9:32"},{"kind":"number","nativeSrc":"48961:2:32","nodeType":"YulLiteral","src":"48961:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"48946:3:32","nodeType":"YulIdentifier","src":"48946:3:32"},"nativeSrc":"48946:18:32","nodeType":"YulFunctionCall","src":"48946:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"48893:43:32","nodeType":"YulIdentifier","src":"48893:43:32"},"nativeSrc":"48893:72:32","nodeType":"YulFunctionCall","src":"48893:72:32"},"nativeSrc":"48893:72:32","nodeType":"YulExpressionStatement","src":"48893:72:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"48986:9:32","nodeType":"YulIdentifier","src":"48986:9:32"},{"kind":"number","nativeSrc":"48997:2:32","nodeType":"YulLiteral","src":"48997:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"48982:3:32","nodeType":"YulIdentifier","src":"48982:3:32"},"nativeSrc":"48982:18:32","nodeType":"YulFunctionCall","src":"48982:18:32"},{"arguments":[{"name":"tail","nativeSrc":"49006:4:32","nodeType":"YulIdentifier","src":"49006:4:32"},{"name":"headStart","nativeSrc":"49012:9:32","nodeType":"YulIdentifier","src":"49012:9:32"}],"functionName":{"name":"sub","nativeSrc":"49002:3:32","nodeType":"YulIdentifier","src":"49002:3:32"},"nativeSrc":"49002:20:32","nodeType":"YulFunctionCall","src":"49002:20:32"}],"functionName":{"name":"mstore","nativeSrc":"48975:6:32","nodeType":"YulIdentifier","src":"48975:6:32"},"nativeSrc":"48975:48:32","nodeType":"YulFunctionCall","src":"48975:48:32"},"nativeSrc":"48975:48:32","nodeType":"YulExpressionStatement","src":"48975:48:32"},{"nativeSrc":"49032:84:32","nodeType":"YulAssignment","src":"49032:84:32","value":{"arguments":[{"name":"value3","nativeSrc":"49102:6:32","nodeType":"YulIdentifier","src":"49102:6:32"},{"name":"tail","nativeSrc":"49111:4:32","nodeType":"YulIdentifier","src":"49111:4:32"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"49040:61:32","nodeType":"YulIdentifier","src":"49040:61:32"},"nativeSrc":"49040:76:32","nodeType":"YulFunctionCall","src":"49040:76:32"},"variableNames":[{"name":"tail","nativeSrc":"49032:4:32","nodeType":"YulIdentifier","src":"49032:4:32"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"48483:640:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"48631:9:32","nodeType":"YulTypedName","src":"48631:9:32","type":""},{"name":"value3","nativeSrc":"48643:6:32","nodeType":"YulTypedName","src":"48643:6:32","type":""},{"name":"value2","nativeSrc":"48651:6:32","nodeType":"YulTypedName","src":"48651:6:32","type":""},{"name":"value1","nativeSrc":"48659:6:32","nodeType":"YulTypedName","src":"48659:6:32","type":""},{"name":"value0","nativeSrc":"48667:6:32","nodeType":"YulTypedName","src":"48667:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"48678:4:32","nodeType":"YulTypedName","src":"48678:4:32","type":""}],"src":"48483:640:32"},{"body":{"nativeSrc":"49191:79:32","nodeType":"YulBlock","src":"49191:79:32","statements":[{"nativeSrc":"49201:22:32","nodeType":"YulAssignment","src":"49201:22:32","value":{"arguments":[{"name":"offset","nativeSrc":"49216:6:32","nodeType":"YulIdentifier","src":"49216:6:32"}],"functionName":{"name":"mload","nativeSrc":"49210:5:32","nodeType":"YulIdentifier","src":"49210:5:32"},"nativeSrc":"49210:13:32","nodeType":"YulFunctionCall","src":"49210:13:32"},"variableNames":[{"name":"value","nativeSrc":"49201:5:32","nodeType":"YulIdentifier","src":"49201:5:32"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"49258:5:32","nodeType":"YulIdentifier","src":"49258:5:32"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"49232:25:32","nodeType":"YulIdentifier","src":"49232:25:32"},"nativeSrc":"49232:32:32","nodeType":"YulFunctionCall","src":"49232:32:32"},"nativeSrc":"49232:32:32","nodeType":"YulExpressionStatement","src":"49232:32:32"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"49129:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"49169:6:32","nodeType":"YulTypedName","src":"49169:6:32","type":""},{"name":"end","nativeSrc":"49177:3:32","nodeType":"YulTypedName","src":"49177:3:32","type":""}],"returnVariables":[{"name":"value","nativeSrc":"49185:5:32","nodeType":"YulTypedName","src":"49185:5:32","type":""}],"src":"49129:141:32"},{"body":{"nativeSrc":"49352:273:32","nodeType":"YulBlock","src":"49352:273:32","statements":[{"body":{"nativeSrc":"49398:83:32","nodeType":"YulBlock","src":"49398:83:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"49400:77:32","nodeType":"YulIdentifier","src":"49400:77:32"},"nativeSrc":"49400:79:32","nodeType":"YulFunctionCall","src":"49400:79:32"},"nativeSrc":"49400:79:32","nodeType":"YulExpressionStatement","src":"49400:79:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"49373:7:32","nodeType":"YulIdentifier","src":"49373:7:32"},{"name":"headStart","nativeSrc":"49382:9:32","nodeType":"YulIdentifier","src":"49382:9:32"}],"functionName":{"name":"sub","nativeSrc":"49369:3:32","nodeType":"YulIdentifier","src":"49369:3:32"},"nativeSrc":"49369:23:32","nodeType":"YulFunctionCall","src":"49369:23:32"},{"kind":"number","nativeSrc":"49394:2:32","nodeType":"YulLiteral","src":"49394:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"49365:3:32","nodeType":"YulIdentifier","src":"49365:3:32"},"nativeSrc":"49365:32:32","nodeType":"YulFunctionCall","src":"49365:32:32"},"nativeSrc":"49362:119:32","nodeType":"YulIf","src":"49362:119:32"},{"nativeSrc":"49491:127:32","nodeType":"YulBlock","src":"49491:127:32","statements":[{"nativeSrc":"49506:15:32","nodeType":"YulVariableDeclaration","src":"49506:15:32","value":{"kind":"number","nativeSrc":"49520:1:32","nodeType":"YulLiteral","src":"49520:1:32","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"49510:6:32","nodeType":"YulTypedName","src":"49510:6:32","type":""}]},{"nativeSrc":"49535:73:32","nodeType":"YulAssignment","src":"49535:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"49580:9:32","nodeType":"YulIdentifier","src":"49580:9:32"},{"name":"offset","nativeSrc":"49591:6:32","nodeType":"YulIdentifier","src":"49591:6:32"}],"functionName":{"name":"add","nativeSrc":"49576:3:32","nodeType":"YulIdentifier","src":"49576:3:32"},"nativeSrc":"49576:22:32","nodeType":"YulFunctionCall","src":"49576:22:32"},{"name":"dataEnd","nativeSrc":"49600:7:32","nodeType":"YulIdentifier","src":"49600:7:32"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"49545:30:32","nodeType":"YulIdentifier","src":"49545:30:32"},"nativeSrc":"49545:63:32","nodeType":"YulFunctionCall","src":"49545:63:32"},"variableNames":[{"name":"value0","nativeSrc":"49535:6:32","nodeType":"YulIdentifier","src":"49535:6:32"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"49276:349:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49322:9:32","nodeType":"YulTypedName","src":"49322:9:32","type":""},{"name":"dataEnd","nativeSrc":"49333:7:32","nodeType":"YulTypedName","src":"49333:7:32","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"49345:6:32","nodeType":"YulTypedName","src":"49345:6:32","type":""}],"src":"49276:349:32"},{"body":{"nativeSrc":"49745:34:32","nodeType":"YulBlock","src":"49745:34:32","statements":[{"nativeSrc":"49755:18:32","nodeType":"YulAssignment","src":"49755:18:32","value":{"name":"pos","nativeSrc":"49770:3:32","nodeType":"YulIdentifier","src":"49770:3:32"},"variableNames":[{"name":"updated_pos","nativeSrc":"49755:11:32","nodeType":"YulIdentifier","src":"49755:11:32"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"49631:148:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"49717:3:32","nodeType":"YulTypedName","src":"49717:3:32","type":""},{"name":"length","nativeSrc":"49722:6:32","nodeType":"YulTypedName","src":"49722:6:32","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"49733:11:32","nodeType":"YulTypedName","src":"49733:11:32","type":""}],"src":"49631:148:32"},{"body":{"nativeSrc":"49895:280:32","nodeType":"YulBlock","src":"49895:280:32","statements":[{"nativeSrc":"49905:53:32","nodeType":"YulVariableDeclaration","src":"49905:53:32","value":{"arguments":[{"name":"value","nativeSrc":"49952:5:32","nodeType":"YulIdentifier","src":"49952:5:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"49919:32:32","nodeType":"YulIdentifier","src":"49919:32:32"},"nativeSrc":"49919:39:32","nodeType":"YulFunctionCall","src":"49919:39:32"},"variables":[{"name":"length","nativeSrc":"49909:6:32","nodeType":"YulTypedName","src":"49909:6:32","type":""}]},{"nativeSrc":"49967:96:32","nodeType":"YulAssignment","src":"49967:96:32","value":{"arguments":[{"name":"pos","nativeSrc":"50051:3:32","nodeType":"YulIdentifier","src":"50051:3:32"},{"name":"length","nativeSrc":"50056:6:32","nodeType":"YulIdentifier","src":"50056:6:32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"49974:76:32","nodeType":"YulIdentifier","src":"49974:76:32"},"nativeSrc":"49974:89:32","nodeType":"YulFunctionCall","src":"49974:89:32"},"variableNames":[{"name":"pos","nativeSrc":"49967:3:32","nodeType":"YulIdentifier","src":"49967:3:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"50111:5:32","nodeType":"YulIdentifier","src":"50111:5:32"},{"kind":"number","nativeSrc":"50118:4:32","nodeType":"YulLiteral","src":"50118:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"50107:3:32","nodeType":"YulIdentifier","src":"50107:3:32"},"nativeSrc":"50107:16:32","nodeType":"YulFunctionCall","src":"50107:16:32"},{"name":"pos","nativeSrc":"50125:3:32","nodeType":"YulIdentifier","src":"50125:3:32"},{"name":"length","nativeSrc":"50130:6:32","nodeType":"YulIdentifier","src":"50130:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"50072:34:32","nodeType":"YulIdentifier","src":"50072:34:32"},"nativeSrc":"50072:65:32","nodeType":"YulFunctionCall","src":"50072:65:32"},"nativeSrc":"50072:65:32","nodeType":"YulExpressionStatement","src":"50072:65:32"},{"nativeSrc":"50146:23:32","nodeType":"YulAssignment","src":"50146:23:32","value":{"arguments":[{"name":"pos","nativeSrc":"50157:3:32","nodeType":"YulIdentifier","src":"50157:3:32"},{"name":"length","nativeSrc":"50162:6:32","nodeType":"YulIdentifier","src":"50162:6:32"}],"functionName":{"name":"add","nativeSrc":"50153:3:32","nodeType":"YulIdentifier","src":"50153:3:32"},"nativeSrc":"50153:16:32","nodeType":"YulFunctionCall","src":"50153:16:32"},"variableNames":[{"name":"end","nativeSrc":"50146:3:32","nodeType":"YulIdentifier","src":"50146:3:32"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"49785:390:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49876:5:32","nodeType":"YulTypedName","src":"49876:5:32","type":""},{"name":"pos","nativeSrc":"49883:3:32","nodeType":"YulTypedName","src":"49883:3:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"49891:3:32","nodeType":"YulTypedName","src":"49891:3:32","type":""}],"src":"49785:390:32"},{"body":{"nativeSrc":"50365:251:32","nodeType":"YulBlock","src":"50365:251:32","statements":[{"nativeSrc":"50376:102:32","nodeType":"YulAssignment","src":"50376:102:32","value":{"arguments":[{"name":"value0","nativeSrc":"50465:6:32","nodeType":"YulIdentifier","src":"50465:6:32"},{"name":"pos","nativeSrc":"50474:3:32","nodeType":"YulIdentifier","src":"50474:3:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"50383:81:32","nodeType":"YulIdentifier","src":"50383:81:32"},"nativeSrc":"50383:95:32","nodeType":"YulFunctionCall","src":"50383:95:32"},"variableNames":[{"name":"pos","nativeSrc":"50376:3:32","nodeType":"YulIdentifier","src":"50376:3:32"}]},{"nativeSrc":"50488:102:32","nodeType":"YulAssignment","src":"50488:102:32","value":{"arguments":[{"name":"value1","nativeSrc":"50577:6:32","nodeType":"YulIdentifier","src":"50577:6:32"},{"name":"pos","nativeSrc":"50586:3:32","nodeType":"YulIdentifier","src":"50586:3:32"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"50495:81:32","nodeType":"YulIdentifier","src":"50495:81:32"},"nativeSrc":"50495:95:32","nodeType":"YulFunctionCall","src":"50495:95:32"},"variableNames":[{"name":"pos","nativeSrc":"50488:3:32","nodeType":"YulIdentifier","src":"50488:3:32"}]},{"nativeSrc":"50600:10:32","nodeType":"YulAssignment","src":"50600:10:32","value":{"name":"pos","nativeSrc":"50607:3:32","nodeType":"YulIdentifier","src":"50607:3:32"},"variableNames":[{"name":"end","nativeSrc":"50600:3:32","nodeType":"YulIdentifier","src":"50600:3:32"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"50181:435:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"50336:3:32","nodeType":"YulTypedName","src":"50336:3:32","type":""},{"name":"value1","nativeSrc":"50342:6:32","nodeType":"YulTypedName","src":"50342:6:32","type":""},{"name":"value0","nativeSrc":"50350:6:32","nodeType":"YulTypedName","src":"50350:6:32","type":""}],"returnVariables":[{"name":"end","nativeSrc":"50361:3:32","nodeType":"YulTypedName","src":"50361:3:32","type":""}],"src":"50181:435:32"},{"body":{"nativeSrc":"50676:87:32","nodeType":"YulBlock","src":"50676:87:32","statements":[{"nativeSrc":"50686:11:32","nodeType":"YulAssignment","src":"50686:11:32","value":{"name":"ptr","nativeSrc":"50694:3:32","nodeType":"YulIdentifier","src":"50694:3:32"},"variableNames":[{"name":"data","nativeSrc":"50686:4:32","nodeType":"YulIdentifier","src":"50686:4:32"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"50714:1:32","nodeType":"YulLiteral","src":"50714:1:32","type":"","value":"0"},{"name":"ptr","nativeSrc":"50717:3:32","nodeType":"YulIdentifier","src":"50717:3:32"}],"functionName":{"name":"mstore","nativeSrc":"50707:6:32","nodeType":"YulIdentifier","src":"50707:6:32"},"nativeSrc":"50707:14:32","nodeType":"YulFunctionCall","src":"50707:14:32"},"nativeSrc":"50707:14:32","nodeType":"YulExpressionStatement","src":"50707:14:32"},{"nativeSrc":"50730:26:32","nodeType":"YulAssignment","src":"50730:26:32","value":{"arguments":[{"kind":"number","nativeSrc":"50748:1:32","nodeType":"YulLiteral","src":"50748:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"50751:4:32","nodeType":"YulLiteral","src":"50751:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"50738:9:32","nodeType":"YulIdentifier","src":"50738:9:32"},"nativeSrc":"50738:18:32","nodeType":"YulFunctionCall","src":"50738:18:32"},"variableNames":[{"name":"data","nativeSrc":"50730:4:32","nodeType":"YulIdentifier","src":"50730:4:32"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"50622:141:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"50663:3:32","nodeType":"YulTypedName","src":"50663:3:32","type":""}],"returnVariables":[{"name":"data","nativeSrc":"50671:4:32","nodeType":"YulTypedName","src":"50671:4:32","type":""}],"src":"50622:141:32"},{"body":{"nativeSrc":"50813:49:32","nodeType":"YulBlock","src":"50813:49:32","statements":[{"nativeSrc":"50823:33:32","nodeType":"YulAssignment","src":"50823:33:32","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"50841:5:32","nodeType":"YulIdentifier","src":"50841:5:32"},{"kind":"number","nativeSrc":"50848:2:32","nodeType":"YulLiteral","src":"50848:2:32","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"50837:3:32","nodeType":"YulIdentifier","src":"50837:3:32"},"nativeSrc":"50837:14:32","nodeType":"YulFunctionCall","src":"50837:14:32"},{"kind":"number","nativeSrc":"50853:2:32","nodeType":"YulLiteral","src":"50853:2:32","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"50833:3:32","nodeType":"YulIdentifier","src":"50833:3:32"},"nativeSrc":"50833:23:32","nodeType":"YulFunctionCall","src":"50833:23:32"},"variableNames":[{"name":"result","nativeSrc":"50823:6:32","nodeType":"YulIdentifier","src":"50823:6:32"}]}]},"name":"divide_by_32_ceil","nativeSrc":"50769:93:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"50796:5:32","nodeType":"YulTypedName","src":"50796:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"50806:6:32","nodeType":"YulTypedName","src":"50806:6:32","type":""}],"src":"50769:93:32"},{"body":{"nativeSrc":"50921:54:32","nodeType":"YulBlock","src":"50921:54:32","statements":[{"nativeSrc":"50931:37:32","nodeType":"YulAssignment","src":"50931:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"50956:4:32","nodeType":"YulIdentifier","src":"50956:4:32"},{"name":"value","nativeSrc":"50962:5:32","nodeType":"YulIdentifier","src":"50962:5:32"}],"functionName":{"name":"shl","nativeSrc":"50952:3:32","nodeType":"YulIdentifier","src":"50952:3:32"},"nativeSrc":"50952:16:32","nodeType":"YulFunctionCall","src":"50952:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"50931:8:32","nodeType":"YulIdentifier","src":"50931:8:32"}]}]},"name":"shift_left_dynamic","nativeSrc":"50868:107:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"50896:4:32","nodeType":"YulTypedName","src":"50896:4:32","type":""},{"name":"value","nativeSrc":"50902:5:32","nodeType":"YulTypedName","src":"50902:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"50912:8:32","nodeType":"YulTypedName","src":"50912:8:32","type":""}],"src":"50868:107:32"},{"body":{"nativeSrc":"51057:317:32","nodeType":"YulBlock","src":"51057:317:32","statements":[{"nativeSrc":"51067:35:32","nodeType":"YulVariableDeclaration","src":"51067:35:32","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"51088:10:32","nodeType":"YulIdentifier","src":"51088:10:32"},{"kind":"number","nativeSrc":"51100:1:32","nodeType":"YulLiteral","src":"51100:1:32","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"51084:3:32","nodeType":"YulIdentifier","src":"51084:3:32"},"nativeSrc":"51084:18:32","nodeType":"YulFunctionCall","src":"51084:18:32"},"variables":[{"name":"shiftBits","nativeSrc":"51071:9:32","nodeType":"YulTypedName","src":"51071:9:32","type":""}]},{"nativeSrc":"51111:109:32","nodeType":"YulVariableDeclaration","src":"51111:109:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"51142:9:32","nodeType":"YulIdentifier","src":"51142:9:32"},{"kind":"number","nativeSrc":"51153:66:32","nodeType":"YulLiteral","src":"51153:66:32","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"51123:18:32","nodeType":"YulIdentifier","src":"51123:18:32"},"nativeSrc":"51123:97:32","nodeType":"YulFunctionCall","src":"51123:97:32"},"variables":[{"name":"mask","nativeSrc":"51115:4:32","nodeType":"YulTypedName","src":"51115:4:32","type":""}]},{"nativeSrc":"51229:51:32","nodeType":"YulAssignment","src":"51229:51:32","value":{"arguments":[{"name":"shiftBits","nativeSrc":"51260:9:32","nodeType":"YulIdentifier","src":"51260:9:32"},{"name":"toInsert","nativeSrc":"51271:8:32","nodeType":"YulIdentifier","src":"51271:8:32"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"51241:18:32","nodeType":"YulIdentifier","src":"51241:18:32"},"nativeSrc":"51241:39:32","nodeType":"YulFunctionCall","src":"51241:39:32"},"variableNames":[{"name":"toInsert","nativeSrc":"51229:8:32","nodeType":"YulIdentifier","src":"51229:8:32"}]},{"nativeSrc":"51289:30:32","nodeType":"YulAssignment","src":"51289:30:32","value":{"arguments":[{"name":"value","nativeSrc":"51302:5:32","nodeType":"YulIdentifier","src":"51302:5:32"},{"arguments":[{"name":"mask","nativeSrc":"51313:4:32","nodeType":"YulIdentifier","src":"51313:4:32"}],"functionName":{"name":"not","nativeSrc":"51309:3:32","nodeType":"YulIdentifier","src":"51309:3:32"},"nativeSrc":"51309:9:32","nodeType":"YulFunctionCall","src":"51309:9:32"}],"functionName":{"name":"and","nativeSrc":"51298:3:32","nodeType":"YulIdentifier","src":"51298:3:32"},"nativeSrc":"51298:21:32","nodeType":"YulFunctionCall","src":"51298:21:32"},"variableNames":[{"name":"value","nativeSrc":"51289:5:32","nodeType":"YulIdentifier","src":"51289:5:32"}]},{"nativeSrc":"51328:40:32","nodeType":"YulAssignment","src":"51328:40:32","value":{"arguments":[{"name":"value","nativeSrc":"51341:5:32","nodeType":"YulIdentifier","src":"51341:5:32"},{"arguments":[{"name":"toInsert","nativeSrc":"51352:8:32","nodeType":"YulIdentifier","src":"51352:8:32"},{"name":"mask","nativeSrc":"51362:4:32","nodeType":"YulIdentifier","src":"51362:4:32"}],"functionName":{"name":"and","nativeSrc":"51348:3:32","nodeType":"YulIdentifier","src":"51348:3:32"},"nativeSrc":"51348:19:32","nodeType":"YulFunctionCall","src":"51348:19:32"}],"functionName":{"name":"or","nativeSrc":"51338:2:32","nodeType":"YulIdentifier","src":"51338:2:32"},"nativeSrc":"51338:30:32","nodeType":"YulFunctionCall","src":"51338:30:32"},"variableNames":[{"name":"result","nativeSrc":"51328:6:32","nodeType":"YulIdentifier","src":"51328:6:32"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"50981:393:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"51018:5:32","nodeType":"YulTypedName","src":"51018:5:32","type":""},{"name":"shiftBytes","nativeSrc":"51025:10:32","nodeType":"YulTypedName","src":"51025:10:32","type":""},{"name":"toInsert","nativeSrc":"51037:8:32","nodeType":"YulTypedName","src":"51037:8:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"51050:6:32","nodeType":"YulTypedName","src":"51050:6:32","type":""}],"src":"50981:393:32"},{"body":{"nativeSrc":"51412:28:32","nodeType":"YulBlock","src":"51412:28:32","statements":[{"nativeSrc":"51422:12:32","nodeType":"YulAssignment","src":"51422:12:32","value":{"name":"value","nativeSrc":"51429:5:32","nodeType":"YulIdentifier","src":"51429:5:32"},"variableNames":[{"name":"ret","nativeSrc":"51422:3:32","nodeType":"YulIdentifier","src":"51422:3:32"}]}]},"name":"identity","nativeSrc":"51380:60:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"51398:5:32","nodeType":"YulTypedName","src":"51398:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"51408:3:32","nodeType":"YulTypedName","src":"51408:3:32","type":""}],"src":"51380:60:32"},{"body":{"nativeSrc":"51506:82:32","nodeType":"YulBlock","src":"51506:82:32","statements":[{"nativeSrc":"51516:66:32","nodeType":"YulAssignment","src":"51516:66:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"51574:5:32","nodeType":"YulIdentifier","src":"51574:5:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"51556:17:32","nodeType":"YulIdentifier","src":"51556:17:32"},"nativeSrc":"51556:24:32","nodeType":"YulFunctionCall","src":"51556:24:32"}],"functionName":{"name":"identity","nativeSrc":"51547:8:32","nodeType":"YulIdentifier","src":"51547:8:32"},"nativeSrc":"51547:34:32","nodeType":"YulFunctionCall","src":"51547:34:32"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"51529:17:32","nodeType":"YulIdentifier","src":"51529:17:32"},"nativeSrc":"51529:53:32","nodeType":"YulFunctionCall","src":"51529:53:32"},"variableNames":[{"name":"converted","nativeSrc":"51516:9:32","nodeType":"YulIdentifier","src":"51516:9:32"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"51446:142:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"51486:5:32","nodeType":"YulTypedName","src":"51486:5:32","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"51496:9:32","nodeType":"YulTypedName","src":"51496:9:32","type":""}],"src":"51446:142:32"},{"body":{"nativeSrc":"51641:28:32","nodeType":"YulBlock","src":"51641:28:32","statements":[{"nativeSrc":"51651:12:32","nodeType":"YulAssignment","src":"51651:12:32","value":{"name":"value","nativeSrc":"51658:5:32","nodeType":"YulIdentifier","src":"51658:5:32"},"variableNames":[{"name":"ret","nativeSrc":"51651:3:32","nodeType":"YulIdentifier","src":"51651:3:32"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"51594:75:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"51627:5:32","nodeType":"YulTypedName","src":"51627:5:32","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"51637:3:32","nodeType":"YulTypedName","src":"51637:3:32","type":""}],"src":"51594:75:32"},{"body":{"nativeSrc":"51751:193:32","nodeType":"YulBlock","src":"51751:193:32","statements":[{"nativeSrc":"51761:63:32","nodeType":"YulVariableDeclaration","src":"51761:63:32","value":{"arguments":[{"name":"value_0","nativeSrc":"51816:7:32","nodeType":"YulIdentifier","src":"51816:7:32"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"51785:30:32","nodeType":"YulIdentifier","src":"51785:30:32"},"nativeSrc":"51785:39:32","nodeType":"YulFunctionCall","src":"51785:39:32"},"variables":[{"name":"convertedValue_0","nativeSrc":"51765:16:32","nodeType":"YulTypedName","src":"51765:16:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"51840:4:32","nodeType":"YulIdentifier","src":"51840:4:32"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"51880:4:32","nodeType":"YulIdentifier","src":"51880:4:32"}],"functionName":{"name":"sload","nativeSrc":"51874:5:32","nodeType":"YulIdentifier","src":"51874:5:32"},"nativeSrc":"51874:11:32","nodeType":"YulFunctionCall","src":"51874:11:32"},{"name":"offset","nativeSrc":"51887:6:32","nodeType":"YulIdentifier","src":"51887:6:32"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"51919:16:32","nodeType":"YulIdentifier","src":"51919:16:32"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"51895:23:32","nodeType":"YulIdentifier","src":"51895:23:32"},"nativeSrc":"51895:41:32","nodeType":"YulFunctionCall","src":"51895:41:32"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"51846:27:32","nodeType":"YulIdentifier","src":"51846:27:32"},"nativeSrc":"51846:91:32","nodeType":"YulFunctionCall","src":"51846:91:32"}],"functionName":{"name":"sstore","nativeSrc":"51833:6:32","nodeType":"YulIdentifier","src":"51833:6:32"},"nativeSrc":"51833:105:32","nodeType":"YulFunctionCall","src":"51833:105:32"},"nativeSrc":"51833:105:32","nodeType":"YulExpressionStatement","src":"51833:105:32"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"51675:269:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"51728:4:32","nodeType":"YulTypedName","src":"51728:4:32","type":""},{"name":"offset","nativeSrc":"51734:6:32","nodeType":"YulTypedName","src":"51734:6:32","type":""},{"name":"value_0","nativeSrc":"51742:7:32","nodeType":"YulTypedName","src":"51742:7:32","type":""}],"src":"51675:269:32"},{"body":{"nativeSrc":"51999:24:32","nodeType":"YulBlock","src":"51999:24:32","statements":[{"nativeSrc":"52009:8:32","nodeType":"YulAssignment","src":"52009:8:32","value":{"kind":"number","nativeSrc":"52016:1:32","nodeType":"YulLiteral","src":"52016:1:32","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"52009:3:32","nodeType":"YulIdentifier","src":"52009:3:32"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"51950:73:32","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"51995:3:32","nodeType":"YulTypedName","src":"51995:3:32","type":""}],"src":"51950:73:32"},{"body":{"nativeSrc":"52082:136:32","nodeType":"YulBlock","src":"52082:136:32","statements":[{"nativeSrc":"52092:46:32","nodeType":"YulVariableDeclaration","src":"52092:46:32","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"52106:30:32","nodeType":"YulIdentifier","src":"52106:30:32"},"nativeSrc":"52106:32:32","nodeType":"YulFunctionCall","src":"52106:32:32"},"variables":[{"name":"zero_0","nativeSrc":"52096:6:32","nodeType":"YulTypedName","src":"52096:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"52191:4:32","nodeType":"YulIdentifier","src":"52191:4:32"},{"name":"offset","nativeSrc":"52197:6:32","nodeType":"YulIdentifier","src":"52197:6:32"},{"name":"zero_0","nativeSrc":"52205:6:32","nodeType":"YulIdentifier","src":"52205:6:32"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"52147:43:32","nodeType":"YulIdentifier","src":"52147:43:32"},"nativeSrc":"52147:65:32","nodeType":"YulFunctionCall","src":"52147:65:32"},"nativeSrc":"52147:65:32","nodeType":"YulExpressionStatement","src":"52147:65:32"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"52029:189:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"52068:4:32","nodeType":"YulTypedName","src":"52068:4:32","type":""},{"name":"offset","nativeSrc":"52074:6:32","nodeType":"YulTypedName","src":"52074:6:32","type":""}],"src":"52029:189:32"},{"body":{"nativeSrc":"52274:136:32","nodeType":"YulBlock","src":"52274:136:32","statements":[{"body":{"nativeSrc":"52341:63:32","nodeType":"YulBlock","src":"52341:63:32","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"52385:5:32","nodeType":"YulIdentifier","src":"52385:5:32"},{"kind":"number","nativeSrc":"52392:1:32","nodeType":"YulLiteral","src":"52392:1:32","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"52355:29:32","nodeType":"YulIdentifier","src":"52355:29:32"},"nativeSrc":"52355:39:32","nodeType":"YulFunctionCall","src":"52355:39:32"},"nativeSrc":"52355:39:32","nodeType":"YulExpressionStatement","src":"52355:39:32"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"52294:5:32","nodeType":"YulIdentifier","src":"52294:5:32"},{"name":"end","nativeSrc":"52301:3:32","nodeType":"YulIdentifier","src":"52301:3:32"}],"functionName":{"name":"lt","nativeSrc":"52291:2:32","nodeType":"YulIdentifier","src":"52291:2:32"},"nativeSrc":"52291:14:32","nodeType":"YulFunctionCall","src":"52291:14:32"},"nativeSrc":"52284:120:32","nodeType":"YulForLoop","post":{"nativeSrc":"52306:26:32","nodeType":"YulBlock","src":"52306:26:32","statements":[{"nativeSrc":"52308:22:32","nodeType":"YulAssignment","src":"52308:22:32","value":{"arguments":[{"name":"start","nativeSrc":"52321:5:32","nodeType":"YulIdentifier","src":"52321:5:32"},{"kind":"number","nativeSrc":"52328:1:32","nodeType":"YulLiteral","src":"52328:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"52317:3:32","nodeType":"YulIdentifier","src":"52317:3:32"},"nativeSrc":"52317:13:32","nodeType":"YulFunctionCall","src":"52317:13:32"},"variableNames":[{"name":"start","nativeSrc":"52308:5:32","nodeType":"YulIdentifier","src":"52308:5:32"}]}]},"pre":{"nativeSrc":"52288:2:32","nodeType":"YulBlock","src":"52288:2:32","statements":[]},"src":"52284:120:32"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"52224:186:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"52262:5:32","nodeType":"YulTypedName","src":"52262:5:32","type":""},{"name":"end","nativeSrc":"52269:3:32","nodeType":"YulTypedName","src":"52269:3:32","type":""}],"src":"52224:186:32"},{"body":{"nativeSrc":"52495:464:32","nodeType":"YulBlock","src":"52495:464:32","statements":[{"body":{"nativeSrc":"52521:431:32","nodeType":"YulBlock","src":"52521:431:32","statements":[{"nativeSrc":"52535:54:32","nodeType":"YulVariableDeclaration","src":"52535:54:32","value":{"arguments":[{"name":"array","nativeSrc":"52583:5:32","nodeType":"YulIdentifier","src":"52583:5:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"52551:31:32","nodeType":"YulIdentifier","src":"52551:31:32"},"nativeSrc":"52551:38:32","nodeType":"YulFunctionCall","src":"52551:38:32"},"variables":[{"name":"dataArea","nativeSrc":"52539:8:32","nodeType":"YulTypedName","src":"52539:8:32","type":""}]},{"nativeSrc":"52602:63:32","nodeType":"YulVariableDeclaration","src":"52602:63:32","value":{"arguments":[{"name":"dataArea","nativeSrc":"52625:8:32","nodeType":"YulIdentifier","src":"52625:8:32"},{"arguments":[{"name":"startIndex","nativeSrc":"52653:10:32","nodeType":"YulIdentifier","src":"52653:10:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"52635:17:32","nodeType":"YulIdentifier","src":"52635:17:32"},"nativeSrc":"52635:29:32","nodeType":"YulFunctionCall","src":"52635:29:32"}],"functionName":{"name":"add","nativeSrc":"52621:3:32","nodeType":"YulIdentifier","src":"52621:3:32"},"nativeSrc":"52621:44:32","nodeType":"YulFunctionCall","src":"52621:44:32"},"variables":[{"name":"deleteStart","nativeSrc":"52606:11:32","nodeType":"YulTypedName","src":"52606:11:32","type":""}]},{"body":{"nativeSrc":"52822:27:32","nodeType":"YulBlock","src":"52822:27:32","statements":[{"nativeSrc":"52824:23:32","nodeType":"YulAssignment","src":"52824:23:32","value":{"name":"dataArea","nativeSrc":"52839:8:32","nodeType":"YulIdentifier","src":"52839:8:32"},"variableNames":[{"name":"deleteStart","nativeSrc":"52824:11:32","nodeType":"YulIdentifier","src":"52824:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"52806:10:32","nodeType":"YulIdentifier","src":"52806:10:32"},{"kind":"number","nativeSrc":"52818:2:32","nodeType":"YulLiteral","src":"52818:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"52803:2:32","nodeType":"YulIdentifier","src":"52803:2:32"},"nativeSrc":"52803:18:32","nodeType":"YulFunctionCall","src":"52803:18:32"},"nativeSrc":"52800:49:32","nodeType":"YulIf","src":"52800:49:32"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"52891:11:32","nodeType":"YulIdentifier","src":"52891:11:32"},{"arguments":[{"name":"dataArea","nativeSrc":"52908:8:32","nodeType":"YulIdentifier","src":"52908:8:32"},{"arguments":[{"name":"len","nativeSrc":"52936:3:32","nodeType":"YulIdentifier","src":"52936:3:32"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"52918:17:32","nodeType":"YulIdentifier","src":"52918:17:32"},"nativeSrc":"52918:22:32","nodeType":"YulFunctionCall","src":"52918:22:32"}],"functionName":{"name":"add","nativeSrc":"52904:3:32","nodeType":"YulIdentifier","src":"52904:3:32"},"nativeSrc":"52904:37:32","nodeType":"YulFunctionCall","src":"52904:37:32"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"52862:28:32","nodeType":"YulIdentifier","src":"52862:28:32"},"nativeSrc":"52862:80:32","nodeType":"YulFunctionCall","src":"52862:80:32"},"nativeSrc":"52862:80:32","nodeType":"YulExpressionStatement","src":"52862:80:32"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"52512:3:32","nodeType":"YulIdentifier","src":"52512:3:32"},{"kind":"number","nativeSrc":"52517:2:32","nodeType":"YulLiteral","src":"52517:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"52509:2:32","nodeType":"YulIdentifier","src":"52509:2:32"},"nativeSrc":"52509:11:32","nodeType":"YulFunctionCall","src":"52509:11:32"},"nativeSrc":"52506:446:32","nodeType":"YulIf","src":"52506:446:32"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"52416:543:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"52471:5:32","nodeType":"YulTypedName","src":"52471:5:32","type":""},{"name":"len","nativeSrc":"52478:3:32","nodeType":"YulTypedName","src":"52478:3:32","type":""},{"name":"startIndex","nativeSrc":"52483:10:32","nodeType":"YulTypedName","src":"52483:10:32","type":""}],"src":"52416:543:32"},{"body":{"nativeSrc":"53028:54:32","nodeType":"YulBlock","src":"53028:54:32","statements":[{"nativeSrc":"53038:37:32","nodeType":"YulAssignment","src":"53038:37:32","value":{"arguments":[{"name":"bits","nativeSrc":"53063:4:32","nodeType":"YulIdentifier","src":"53063:4:32"},{"name":"value","nativeSrc":"53069:5:32","nodeType":"YulIdentifier","src":"53069:5:32"}],"functionName":{"name":"shr","nativeSrc":"53059:3:32","nodeType":"YulIdentifier","src":"53059:3:32"},"nativeSrc":"53059:16:32","nodeType":"YulFunctionCall","src":"53059:16:32"},"variableNames":[{"name":"newValue","nativeSrc":"53038:8:32","nodeType":"YulIdentifier","src":"53038:8:32"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"52965:117:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"53003:4:32","nodeType":"YulTypedName","src":"53003:4:32","type":""},{"name":"value","nativeSrc":"53009:5:32","nodeType":"YulTypedName","src":"53009:5:32","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"53019:8:32","nodeType":"YulTypedName","src":"53019:8:32","type":""}],"src":"52965:117:32"},{"body":{"nativeSrc":"53139:118:32","nodeType":"YulBlock","src":"53139:118:32","statements":[{"nativeSrc":"53149:68:32","nodeType":"YulVariableDeclaration","src":"53149:68:32","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"53198:1:32","nodeType":"YulLiteral","src":"53198:1:32","type":"","value":"8"},{"name":"bytes","nativeSrc":"53201:5:32","nodeType":"YulIdentifier","src":"53201:5:32"}],"functionName":{"name":"mul","nativeSrc":"53194:3:32","nodeType":"YulIdentifier","src":"53194:3:32"},"nativeSrc":"53194:13:32","nodeType":"YulFunctionCall","src":"53194:13:32"},{"arguments":[{"kind":"number","nativeSrc":"53213:1:32","nodeType":"YulLiteral","src":"53213:1:32","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"53209:3:32","nodeType":"YulIdentifier","src":"53209:3:32"},"nativeSrc":"53209:6:32","nodeType":"YulFunctionCall","src":"53209:6:32"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"53165:28:32","nodeType":"YulIdentifier","src":"53165:28:32"},"nativeSrc":"53165:51:32","nodeType":"YulFunctionCall","src":"53165:51:32"}],"functionName":{"name":"not","nativeSrc":"53161:3:32","nodeType":"YulIdentifier","src":"53161:3:32"},"nativeSrc":"53161:56:32","nodeType":"YulFunctionCall","src":"53161:56:32"},"variables":[{"name":"mask","nativeSrc":"53153:4:32","nodeType":"YulTypedName","src":"53153:4:32","type":""}]},{"nativeSrc":"53226:25:32","nodeType":"YulAssignment","src":"53226:25:32","value":{"arguments":[{"name":"data","nativeSrc":"53240:4:32","nodeType":"YulIdentifier","src":"53240:4:32"},{"name":"mask","nativeSrc":"53246:4:32","nodeType":"YulIdentifier","src":"53246:4:32"}],"functionName":{"name":"and","nativeSrc":"53236:3:32","nodeType":"YulIdentifier","src":"53236:3:32"},"nativeSrc":"53236:15:32","nodeType":"YulFunctionCall","src":"53236:15:32"},"variableNames":[{"name":"result","nativeSrc":"53226:6:32","nodeType":"YulIdentifier","src":"53226:6:32"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"53088:169:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"53116:4:32","nodeType":"YulTypedName","src":"53116:4:32","type":""},{"name":"bytes","nativeSrc":"53122:5:32","nodeType":"YulTypedName","src":"53122:5:32","type":""}],"returnVariables":[{"name":"result","nativeSrc":"53132:6:32","nodeType":"YulTypedName","src":"53132:6:32","type":""}],"src":"53088:169:32"},{"body":{"nativeSrc":"53343:214:32","nodeType":"YulBlock","src":"53343:214:32","statements":[{"nativeSrc":"53476:37:32","nodeType":"YulAssignment","src":"53476:37:32","value":{"arguments":[{"name":"data","nativeSrc":"53503:4:32","nodeType":"YulIdentifier","src":"53503:4:32"},{"name":"len","nativeSrc":"53509:3:32","nodeType":"YulIdentifier","src":"53509:3:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"53484:18:32","nodeType":"YulIdentifier","src":"53484:18:32"},"nativeSrc":"53484:29:32","nodeType":"YulFunctionCall","src":"53484:29:32"},"variableNames":[{"name":"data","nativeSrc":"53476:4:32","nodeType":"YulIdentifier","src":"53476:4:32"}]},{"nativeSrc":"53522:29:32","nodeType":"YulAssignment","src":"53522:29:32","value":{"arguments":[{"name":"data","nativeSrc":"53533:4:32","nodeType":"YulIdentifier","src":"53533:4:32"},{"arguments":[{"kind":"number","nativeSrc":"53543:1:32","nodeType":"YulLiteral","src":"53543:1:32","type":"","value":"2"},{"name":"len","nativeSrc":"53546:3:32","nodeType":"YulIdentifier","src":"53546:3:32"}],"functionName":{"name":"mul","nativeSrc":"53539:3:32","nodeType":"YulIdentifier","src":"53539:3:32"},"nativeSrc":"53539:11:32","nodeType":"YulFunctionCall","src":"53539:11:32"}],"functionName":{"name":"or","nativeSrc":"53530:2:32","nodeType":"YulIdentifier","src":"53530:2:32"},"nativeSrc":"53530:21:32","nodeType":"YulFunctionCall","src":"53530:21:32"},"variableNames":[{"name":"used","nativeSrc":"53522:4:32","nodeType":"YulIdentifier","src":"53522:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"53262:295:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"53324:4:32","nodeType":"YulTypedName","src":"53324:4:32","type":""},{"name":"len","nativeSrc":"53330:3:32","nodeType":"YulTypedName","src":"53330:3:32","type":""}],"returnVariables":[{"name":"used","nativeSrc":"53338:4:32","nodeType":"YulTypedName","src":"53338:4:32","type":""}],"src":"53262:295:32"},{"body":{"nativeSrc":"53654:1303:32","nodeType":"YulBlock","src":"53654:1303:32","statements":[{"nativeSrc":"53665:51:32","nodeType":"YulVariableDeclaration","src":"53665:51:32","value":{"arguments":[{"name":"src","nativeSrc":"53712:3:32","nodeType":"YulIdentifier","src":"53712:3:32"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"53679:32:32","nodeType":"YulIdentifier","src":"53679:32:32"},"nativeSrc":"53679:37:32","nodeType":"YulFunctionCall","src":"53679:37:32"},"variables":[{"name":"newLen","nativeSrc":"53669:6:32","nodeType":"YulTypedName","src":"53669:6:32","type":""}]},{"body":{"nativeSrc":"53801:22:32","nodeType":"YulBlock","src":"53801:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"53803:16:32","nodeType":"YulIdentifier","src":"53803:16:32"},"nativeSrc":"53803:18:32","nodeType":"YulFunctionCall","src":"53803:18:32"},"nativeSrc":"53803:18:32","nodeType":"YulExpressionStatement","src":"53803:18:32"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"53773:6:32","nodeType":"YulIdentifier","src":"53773:6:32"},{"kind":"number","nativeSrc":"53781:18:32","nodeType":"YulLiteral","src":"53781:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"53770:2:32","nodeType":"YulIdentifier","src":"53770:2:32"},"nativeSrc":"53770:30:32","nodeType":"YulFunctionCall","src":"53770:30:32"},"nativeSrc":"53767:56:32","nodeType":"YulIf","src":"53767:56:32"},{"nativeSrc":"53833:52:32","nodeType":"YulVariableDeclaration","src":"53833:52:32","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"53879:4:32","nodeType":"YulIdentifier","src":"53879:4:32"}],"functionName":{"name":"sload","nativeSrc":"53873:5:32","nodeType":"YulIdentifier","src":"53873:5:32"},"nativeSrc":"53873:11:32","nodeType":"YulFunctionCall","src":"53873:11:32"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"53847:25:32","nodeType":"YulIdentifier","src":"53847:25:32"},"nativeSrc":"53847:38:32","nodeType":"YulFunctionCall","src":"53847:38:32"},"variables":[{"name":"oldLen","nativeSrc":"53837:6:32","nodeType":"YulTypedName","src":"53837:6:32","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"53978:4:32","nodeType":"YulIdentifier","src":"53978:4:32"},{"name":"oldLen","nativeSrc":"53984:6:32","nodeType":"YulIdentifier","src":"53984:6:32"},{"name":"newLen","nativeSrc":"53992:6:32","nodeType":"YulIdentifier","src":"53992:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"53932:45:32","nodeType":"YulIdentifier","src":"53932:45:32"},"nativeSrc":"53932:67:32","nodeType":"YulFunctionCall","src":"53932:67:32"},"nativeSrc":"53932:67:32","nodeType":"YulExpressionStatement","src":"53932:67:32"},{"nativeSrc":"54009:18:32","nodeType":"YulVariableDeclaration","src":"54009:18:32","value":{"kind":"number","nativeSrc":"54026:1:32","nodeType":"YulLiteral","src":"54026:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"54013:9:32","nodeType":"YulTypedName","src":"54013:9:32","type":""}]},{"nativeSrc":"54037:17:32","nodeType":"YulAssignment","src":"54037:17:32","value":{"kind":"number","nativeSrc":"54050:4:32","nodeType":"YulLiteral","src":"54050:4:32","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"54037:9:32","nodeType":"YulIdentifier","src":"54037:9:32"}]},{"cases":[{"body":{"nativeSrc":"54101:611:32","nodeType":"YulBlock","src":"54101:611:32","statements":[{"nativeSrc":"54115:37:32","nodeType":"YulVariableDeclaration","src":"54115:37:32","value":{"arguments":[{"name":"newLen","nativeSrc":"54134:6:32","nodeType":"YulIdentifier","src":"54134:6:32"},{"arguments":[{"kind":"number","nativeSrc":"54146:4:32","nodeType":"YulLiteral","src":"54146:4:32","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"54142:3:32","nodeType":"YulIdentifier","src":"54142:3:32"},"nativeSrc":"54142:9:32","nodeType":"YulFunctionCall","src":"54142:9:32"}],"functionName":{"name":"and","nativeSrc":"54130:3:32","nodeType":"YulIdentifier","src":"54130:3:32"},"nativeSrc":"54130:22:32","nodeType":"YulFunctionCall","src":"54130:22:32"},"variables":[{"name":"loopEnd","nativeSrc":"54119:7:32","nodeType":"YulTypedName","src":"54119:7:32","type":""}]},{"nativeSrc":"54166:51:32","nodeType":"YulVariableDeclaration","src":"54166:51:32","value":{"arguments":[{"name":"slot","nativeSrc":"54212:4:32","nodeType":"YulIdentifier","src":"54212:4:32"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"54180:31:32","nodeType":"YulIdentifier","src":"54180:31:32"},"nativeSrc":"54180:37:32","nodeType":"YulFunctionCall","src":"54180:37:32"},"variables":[{"name":"dstPtr","nativeSrc":"54170:6:32","nodeType":"YulTypedName","src":"54170:6:32","type":""}]},{"nativeSrc":"54230:10:32","nodeType":"YulVariableDeclaration","src":"54230:10:32","value":{"kind":"number","nativeSrc":"54239:1:32","nodeType":"YulLiteral","src":"54239:1:32","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"54234:1:32","nodeType":"YulTypedName","src":"54234:1:32","type":""}]},{"body":{"nativeSrc":"54298:163:32","nodeType":"YulBlock","src":"54298:163:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"54323:6:32","nodeType":"YulIdentifier","src":"54323:6:32"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"54341:3:32","nodeType":"YulIdentifier","src":"54341:3:32"},{"name":"srcOffset","nativeSrc":"54346:9:32","nodeType":"YulIdentifier","src":"54346:9:32"}],"functionName":{"name":"add","nativeSrc":"54337:3:32","nodeType":"YulIdentifier","src":"54337:3:32"},"nativeSrc":"54337:19:32","nodeType":"YulFunctionCall","src":"54337:19:32"}],"functionName":{"name":"mload","nativeSrc":"54331:5:32","nodeType":"YulIdentifier","src":"54331:5:32"},"nativeSrc":"54331:26:32","nodeType":"YulFunctionCall","src":"54331:26:32"}],"functionName":{"name":"sstore","nativeSrc":"54316:6:32","nodeType":"YulIdentifier","src":"54316:6:32"},"nativeSrc":"54316:42:32","nodeType":"YulFunctionCall","src":"54316:42:32"},"nativeSrc":"54316:42:32","nodeType":"YulExpressionStatement","src":"54316:42:32"},{"nativeSrc":"54375:24:32","nodeType":"YulAssignment","src":"54375:24:32","value":{"arguments":[{"name":"dstPtr","nativeSrc":"54389:6:32","nodeType":"YulIdentifier","src":"54389:6:32"},{"kind":"number","nativeSrc":"54397:1:32","nodeType":"YulLiteral","src":"54397:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"54385:3:32","nodeType":"YulIdentifier","src":"54385:3:32"},"nativeSrc":"54385:14:32","nodeType":"YulFunctionCall","src":"54385:14:32"},"variableNames":[{"name":"dstPtr","nativeSrc":"54375:6:32","nodeType":"YulIdentifier","src":"54375:6:32"}]},{"nativeSrc":"54416:31:32","nodeType":"YulAssignment","src":"54416:31:32","value":{"arguments":[{"name":"srcOffset","nativeSrc":"54433:9:32","nodeType":"YulIdentifier","src":"54433:9:32"},{"kind":"number","nativeSrc":"54444:2:32","nodeType":"YulLiteral","src":"54444:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"54429:3:32","nodeType":"YulIdentifier","src":"54429:3:32"},"nativeSrc":"54429:18:32","nodeType":"YulFunctionCall","src":"54429:18:32"},"variableNames":[{"name":"srcOffset","nativeSrc":"54416:9:32","nodeType":"YulIdentifier","src":"54416:9:32"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"54264:1:32","nodeType":"YulIdentifier","src":"54264:1:32"},{"name":"loopEnd","nativeSrc":"54267:7:32","nodeType":"YulIdentifier","src":"54267:7:32"}],"functionName":{"name":"lt","nativeSrc":"54261:2:32","nodeType":"YulIdentifier","src":"54261:2:32"},"nativeSrc":"54261:14:32","nodeType":"YulFunctionCall","src":"54261:14:32"},"nativeSrc":"54253:208:32","nodeType":"YulForLoop","post":{"nativeSrc":"54276:21:32","nodeType":"YulBlock","src":"54276:21:32","statements":[{"nativeSrc":"54278:17:32","nodeType":"YulAssignment","src":"54278:17:32","value":{"arguments":[{"name":"i","nativeSrc":"54287:1:32","nodeType":"YulIdentifier","src":"54287:1:32"},{"kind":"number","nativeSrc":"54290:4:32","nodeType":"YulLiteral","src":"54290:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"54283:3:32","nodeType":"YulIdentifier","src":"54283:3:32"},"nativeSrc":"54283:12:32","nodeType":"YulFunctionCall","src":"54283:12:32"},"variableNames":[{"name":"i","nativeSrc":"54278:1:32","nodeType":"YulIdentifier","src":"54278:1:32"}]}]},"pre":{"nativeSrc":"54257:3:32","nodeType":"YulBlock","src":"54257:3:32","statements":[]},"src":"54253:208:32"},{"body":{"nativeSrc":"54497:156:32","nodeType":"YulBlock","src":"54497:156:32","statements":[{"nativeSrc":"54515:43:32","nodeType":"YulVariableDeclaration","src":"54515:43:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"54542:3:32","nodeType":"YulIdentifier","src":"54542:3:32"},{"name":"srcOffset","nativeSrc":"54547:9:32","nodeType":"YulIdentifier","src":"54547:9:32"}],"functionName":{"name":"add","nativeSrc":"54538:3:32","nodeType":"YulIdentifier","src":"54538:3:32"},"nativeSrc":"54538:19:32","nodeType":"YulFunctionCall","src":"54538:19:32"}],"functionName":{"name":"mload","nativeSrc":"54532:5:32","nodeType":"YulIdentifier","src":"54532:5:32"},"nativeSrc":"54532:26:32","nodeType":"YulFunctionCall","src":"54532:26:32"},"variables":[{"name":"lastValue","nativeSrc":"54519:9:32","nodeType":"YulTypedName","src":"54519:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"54582:6:32","nodeType":"YulIdentifier","src":"54582:6:32"},{"arguments":[{"name":"lastValue","nativeSrc":"54609:9:32","nodeType":"YulIdentifier","src":"54609:9:32"},{"arguments":[{"name":"newLen","nativeSrc":"54624:6:32","nodeType":"YulIdentifier","src":"54624:6:32"},{"kind":"number","nativeSrc":"54632:4:32","nodeType":"YulLiteral","src":"54632:4:32","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"54620:3:32","nodeType":"YulIdentifier","src":"54620:3:32"},"nativeSrc":"54620:17:32","nodeType":"YulFunctionCall","src":"54620:17:32"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"54590:18:32","nodeType":"YulIdentifier","src":"54590:18:32"},"nativeSrc":"54590:48:32","nodeType":"YulFunctionCall","src":"54590:48:32"}],"functionName":{"name":"sstore","nativeSrc":"54575:6:32","nodeType":"YulIdentifier","src":"54575:6:32"},"nativeSrc":"54575:64:32","nodeType":"YulFunctionCall","src":"54575:64:32"},"nativeSrc":"54575:64:32","nodeType":"YulExpressionStatement","src":"54575:64:32"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"54480:7:32","nodeType":"YulIdentifier","src":"54480:7:32"},{"name":"newLen","nativeSrc":"54489:6:32","nodeType":"YulIdentifier","src":"54489:6:32"}],"functionName":{"name":"lt","nativeSrc":"54477:2:32","nodeType":"YulIdentifier","src":"54477:2:32"},"nativeSrc":"54477:19:32","nodeType":"YulFunctionCall","src":"54477:19:32"},"nativeSrc":"54474:179:32","nodeType":"YulIf","src":"54474:179:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"54673:4:32","nodeType":"YulIdentifier","src":"54673:4:32"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"54687:6:32","nodeType":"YulIdentifier","src":"54687:6:32"},{"kind":"number","nativeSrc":"54695:1:32","nodeType":"YulLiteral","src":"54695:1:32","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"54683:3:32","nodeType":"YulIdentifier","src":"54683:3:32"},"nativeSrc":"54683:14:32","nodeType":"YulFunctionCall","src":"54683:14:32"},{"kind":"number","nativeSrc":"54699:1:32","nodeType":"YulLiteral","src":"54699:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"54679:3:32","nodeType":"YulIdentifier","src":"54679:3:32"},"nativeSrc":"54679:22:32","nodeType":"YulFunctionCall","src":"54679:22:32"}],"functionName":{"name":"sstore","nativeSrc":"54666:6:32","nodeType":"YulIdentifier","src":"54666:6:32"},"nativeSrc":"54666:36:32","nodeType":"YulFunctionCall","src":"54666:36:32"},"nativeSrc":"54666:36:32","nodeType":"YulExpressionStatement","src":"54666:36:32"}]},"nativeSrc":"54094:618:32","nodeType":"YulCase","src":"54094:618:32","value":{"kind":"number","nativeSrc":"54099:1:32","nodeType":"YulLiteral","src":"54099:1:32","type":"","value":"1"}},{"body":{"nativeSrc":"54729:222:32","nodeType":"YulBlock","src":"54729:222:32","statements":[{"nativeSrc":"54743:14:32","nodeType":"YulVariableDeclaration","src":"54743:14:32","value":{"kind":"number","nativeSrc":"54756:1:32","nodeType":"YulLiteral","src":"54756:1:32","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"54747:5:32","nodeType":"YulTypedName","src":"54747:5:32","type":""}]},{"body":{"nativeSrc":"54780:67:32","nodeType":"YulBlock","src":"54780:67:32","statements":[{"nativeSrc":"54798:35:32","nodeType":"YulAssignment","src":"54798:35:32","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"54817:3:32","nodeType":"YulIdentifier","src":"54817:3:32"},{"name":"srcOffset","nativeSrc":"54822:9:32","nodeType":"YulIdentifier","src":"54822:9:32"}],"functionName":{"name":"add","nativeSrc":"54813:3:32","nodeType":"YulIdentifier","src":"54813:3:32"},"nativeSrc":"54813:19:32","nodeType":"YulFunctionCall","src":"54813:19:32"}],"functionName":{"name":"mload","nativeSrc":"54807:5:32","nodeType":"YulIdentifier","src":"54807:5:32"},"nativeSrc":"54807:26:32","nodeType":"YulFunctionCall","src":"54807:26:32"},"variableNames":[{"name":"value","nativeSrc":"54798:5:32","nodeType":"YulIdentifier","src":"54798:5:32"}]}]},"condition":{"name":"newLen","nativeSrc":"54773:6:32","nodeType":"YulIdentifier","src":"54773:6:32"},"nativeSrc":"54770:77:32","nodeType":"YulIf","src":"54770:77:32"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"54867:4:32","nodeType":"YulIdentifier","src":"54867:4:32"},{"arguments":[{"name":"value","nativeSrc":"54926:5:32","nodeType":"YulIdentifier","src":"54926:5:32"},{"name":"newLen","nativeSrc":"54933:6:32","nodeType":"YulIdentifier","src":"54933:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"54873:52:32","nodeType":"YulIdentifier","src":"54873:52:32"},"nativeSrc":"54873:67:32","nodeType":"YulFunctionCall","src":"54873:67:32"}],"functionName":{"name":"sstore","nativeSrc":"54860:6:32","nodeType":"YulIdentifier","src":"54860:6:32"},"nativeSrc":"54860:81:32","nodeType":"YulFunctionCall","src":"54860:81:32"},"nativeSrc":"54860:81:32","nodeType":"YulExpressionStatement","src":"54860:81:32"}]},"nativeSrc":"54721:230:32","nodeType":"YulCase","src":"54721:230:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"54074:6:32","nodeType":"YulIdentifier","src":"54074:6:32"},{"kind":"number","nativeSrc":"54082:2:32","nodeType":"YulLiteral","src":"54082:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"54071:2:32","nodeType":"YulIdentifier","src":"54071:2:32"},"nativeSrc":"54071:14:32","nodeType":"YulFunctionCall","src":"54071:14:32"},"nativeSrc":"54064:887:32","nodeType":"YulSwitch","src":"54064:887:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"53562:1395:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"53643:4:32","nodeType":"YulTypedName","src":"53643:4:32","type":""},{"name":"src","nativeSrc":"53649:3:32","nodeType":"YulTypedName","src":"53649:3:32","type":""}],"src":"53562:1395:32"},{"body":{"nativeSrc":"55173:454:32","nodeType":"YulBlock","src":"55173:454:32","statements":[{"nativeSrc":"55183:27:32","nodeType":"YulAssignment","src":"55183:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"55195:9:32","nodeType":"YulIdentifier","src":"55195:9:32"},{"kind":"number","nativeSrc":"55206:3:32","nodeType":"YulLiteral","src":"55206:3:32","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"55191:3:32","nodeType":"YulIdentifier","src":"55191:3:32"},"nativeSrc":"55191:19:32","nodeType":"YulFunctionCall","src":"55191:19:32"},"variableNames":[{"name":"tail","nativeSrc":"55183:4:32","nodeType":"YulIdentifier","src":"55183:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"55264:6:32","nodeType":"YulIdentifier","src":"55264:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"55277:9:32","nodeType":"YulIdentifier","src":"55277:9:32"},{"kind":"number","nativeSrc":"55288:1:32","nodeType":"YulLiteral","src":"55288:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"55273:3:32","nodeType":"YulIdentifier","src":"55273:3:32"},"nativeSrc":"55273:17:32","nodeType":"YulFunctionCall","src":"55273:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"55220:43:32","nodeType":"YulIdentifier","src":"55220:43:32"},"nativeSrc":"55220:71:32","nodeType":"YulFunctionCall","src":"55220:71:32"},"nativeSrc":"55220:71:32","nodeType":"YulExpressionStatement","src":"55220:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"55345:6:32","nodeType":"YulIdentifier","src":"55345:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"55358:9:32","nodeType":"YulIdentifier","src":"55358:9:32"},{"kind":"number","nativeSrc":"55369:2:32","nodeType":"YulLiteral","src":"55369:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"55354:3:32","nodeType":"YulIdentifier","src":"55354:3:32"},"nativeSrc":"55354:18:32","nodeType":"YulFunctionCall","src":"55354:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"55301:43:32","nodeType":"YulIdentifier","src":"55301:43:32"},"nativeSrc":"55301:72:32","nodeType":"YulFunctionCall","src":"55301:72:32"},"nativeSrc":"55301:72:32","nodeType":"YulExpressionStatement","src":"55301:72:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"55427:6:32","nodeType":"YulIdentifier","src":"55427:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"55440:9:32","nodeType":"YulIdentifier","src":"55440:9:32"},{"kind":"number","nativeSrc":"55451:2:32","nodeType":"YulLiteral","src":"55451:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"55436:3:32","nodeType":"YulIdentifier","src":"55436:3:32"},"nativeSrc":"55436:18:32","nodeType":"YulFunctionCall","src":"55436:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"55383:43:32","nodeType":"YulIdentifier","src":"55383:43:32"},"nativeSrc":"55383:72:32","nodeType":"YulFunctionCall","src":"55383:72:32"},"nativeSrc":"55383:72:32","nodeType":"YulExpressionStatement","src":"55383:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"55509:6:32","nodeType":"YulIdentifier","src":"55509:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"55522:9:32","nodeType":"YulIdentifier","src":"55522:9:32"},{"kind":"number","nativeSrc":"55533:2:32","nodeType":"YulLiteral","src":"55533:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"55518:3:32","nodeType":"YulIdentifier","src":"55518:3:32"},"nativeSrc":"55518:18:32","nodeType":"YulFunctionCall","src":"55518:18:32"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"55465:43:32","nodeType":"YulIdentifier","src":"55465:43:32"},"nativeSrc":"55465:72:32","nodeType":"YulFunctionCall","src":"55465:72:32"},"nativeSrc":"55465:72:32","nodeType":"YulExpressionStatement","src":"55465:72:32"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"55591:6:32","nodeType":"YulIdentifier","src":"55591:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"55604:9:32","nodeType":"YulIdentifier","src":"55604:9:32"},{"kind":"number","nativeSrc":"55615:3:32","nodeType":"YulLiteral","src":"55615:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"55600:3:32","nodeType":"YulIdentifier","src":"55600:3:32"},"nativeSrc":"55600:19:32","nodeType":"YulFunctionCall","src":"55600:19:32"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"55547:43:32","nodeType":"YulIdentifier","src":"55547:43:32"},"nativeSrc":"55547:73:32","nodeType":"YulFunctionCall","src":"55547:73:32"},"nativeSrc":"55547:73:32","nodeType":"YulExpressionStatement","src":"55547:73:32"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"54963:664:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"55113:9:32","nodeType":"YulTypedName","src":"55113:9:32","type":""},{"name":"value4","nativeSrc":"55125:6:32","nodeType":"YulTypedName","src":"55125:6:32","type":""},{"name":"value3","nativeSrc":"55133:6:32","nodeType":"YulTypedName","src":"55133:6:32","type":""},{"name":"value2","nativeSrc":"55141:6:32","nodeType":"YulTypedName","src":"55141:6:32","type":""},{"name":"value1","nativeSrc":"55149:6:32","nodeType":"YulTypedName","src":"55149:6:32","type":""},{"name":"value0","nativeSrc":"55157:6:32","nodeType":"YulTypedName","src":"55157:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"55168:4:32","nodeType":"YulTypedName","src":"55168:4:32","type":""}],"src":"54963:664:32"},{"body":{"nativeSrc":"55661:152:32","nodeType":"YulBlock","src":"55661:152:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"55678:1:32","nodeType":"YulLiteral","src":"55678:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"55681:77:32","nodeType":"YulLiteral","src":"55681:77:32","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"55671:6:32","nodeType":"YulIdentifier","src":"55671:6:32"},"nativeSrc":"55671:88:32","nodeType":"YulFunctionCall","src":"55671:88:32"},"nativeSrc":"55671:88:32","nodeType":"YulExpressionStatement","src":"55671:88:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"55775:1:32","nodeType":"YulLiteral","src":"55775:1:32","type":"","value":"4"},{"kind":"number","nativeSrc":"55778:4:32","nodeType":"YulLiteral","src":"55778:4:32","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"55768:6:32","nodeType":"YulIdentifier","src":"55768:6:32"},"nativeSrc":"55768:15:32","nodeType":"YulFunctionCall","src":"55768:15:32"},"nativeSrc":"55768:15:32","nodeType":"YulExpressionStatement","src":"55768:15:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"55799:1:32","nodeType":"YulLiteral","src":"55799:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"55802:4:32","nodeType":"YulLiteral","src":"55802:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"55792:6:32","nodeType":"YulIdentifier","src":"55792:6:32"},"nativeSrc":"55792:15:32","nodeType":"YulFunctionCall","src":"55792:15:32"},"nativeSrc":"55792:15:32","nodeType":"YulExpressionStatement","src":"55792:15:32"}]},"name":"panic_error_0x31","nativeSrc":"55633:180:32","nodeType":"YulFunctionDefinition","src":"55633:180:32"},{"body":{"nativeSrc":"55862:43:32","nodeType":"YulBlock","src":"55862:43:32","statements":[{"nativeSrc":"55872:27:32","nodeType":"YulAssignment","src":"55872:27:32","value":{"arguments":[{"name":"value","nativeSrc":"55887:5:32","nodeType":"YulIdentifier","src":"55887:5:32"},{"kind":"number","nativeSrc":"55894:4:32","nodeType":"YulLiteral","src":"55894:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"55883:3:32","nodeType":"YulIdentifier","src":"55883:3:32"},"nativeSrc":"55883:16:32","nodeType":"YulFunctionCall","src":"55883:16:32"},"variableNames":[{"name":"cleaned","nativeSrc":"55872:7:32","nodeType":"YulIdentifier","src":"55872:7:32"}]}]},"name":"cleanup_t_uint8","nativeSrc":"55819:86:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"55844:5:32","nodeType":"YulTypedName","src":"55844:5:32","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"55854:7:32","nodeType":"YulTypedName","src":"55854:7:32","type":""}],"src":"55819:86:32"},{"body":{"nativeSrc":"55972:51:32","nodeType":"YulBlock","src":"55972:51:32","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"55989:3:32","nodeType":"YulIdentifier","src":"55989:3:32"},{"arguments":[{"name":"value","nativeSrc":"56010:5:32","nodeType":"YulIdentifier","src":"56010:5:32"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"55994:15:32","nodeType":"YulIdentifier","src":"55994:15:32"},"nativeSrc":"55994:22:32","nodeType":"YulFunctionCall","src":"55994:22:32"}],"functionName":{"name":"mstore","nativeSrc":"55982:6:32","nodeType":"YulIdentifier","src":"55982:6:32"},"nativeSrc":"55982:35:32","nodeType":"YulFunctionCall","src":"55982:35:32"},"nativeSrc":"55982:35:32","nodeType":"YulExpressionStatement","src":"55982:35:32"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"55911:112:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"55960:5:32","nodeType":"YulTypedName","src":"55960:5:32","type":""},{"name":"pos","nativeSrc":"55967:3:32","nodeType":"YulTypedName","src":"55967:3:32","type":""}],"src":"55911:112:32"},{"body":{"nativeSrc":"56207:367:32","nodeType":"YulBlock","src":"56207:367:32","statements":[{"nativeSrc":"56217:27:32","nodeType":"YulAssignment","src":"56217:27:32","value":{"arguments":[{"name":"headStart","nativeSrc":"56229:9:32","nodeType":"YulIdentifier","src":"56229:9:32"},{"kind":"number","nativeSrc":"56240:3:32","nodeType":"YulLiteral","src":"56240:3:32","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"56225:3:32","nodeType":"YulIdentifier","src":"56225:3:32"},"nativeSrc":"56225:19:32","nodeType":"YulFunctionCall","src":"56225:19:32"},"variableNames":[{"name":"tail","nativeSrc":"56217:4:32","nodeType":"YulIdentifier","src":"56217:4:32"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"56298:6:32","nodeType":"YulIdentifier","src":"56298:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"56311:9:32","nodeType":"YulIdentifier","src":"56311:9:32"},{"kind":"number","nativeSrc":"56322:1:32","nodeType":"YulLiteral","src":"56322:1:32","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"56307:3:32","nodeType":"YulIdentifier","src":"56307:3:32"},"nativeSrc":"56307:17:32","nodeType":"YulFunctionCall","src":"56307:17:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"56254:43:32","nodeType":"YulIdentifier","src":"56254:43:32"},"nativeSrc":"56254:71:32","nodeType":"YulFunctionCall","src":"56254:71:32"},"nativeSrc":"56254:71:32","nodeType":"YulExpressionStatement","src":"56254:71:32"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"56375:6:32","nodeType":"YulIdentifier","src":"56375:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"56388:9:32","nodeType":"YulIdentifier","src":"56388:9:32"},{"kind":"number","nativeSrc":"56399:2:32","nodeType":"YulLiteral","src":"56399:2:32","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"56384:3:32","nodeType":"YulIdentifier","src":"56384:3:32"},"nativeSrc":"56384:18:32","nodeType":"YulFunctionCall","src":"56384:18:32"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"56335:39:32","nodeType":"YulIdentifier","src":"56335:39:32"},"nativeSrc":"56335:68:32","nodeType":"YulFunctionCall","src":"56335:68:32"},"nativeSrc":"56335:68:32","nodeType":"YulExpressionStatement","src":"56335:68:32"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"56457:6:32","nodeType":"YulIdentifier","src":"56457:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"56470:9:32","nodeType":"YulIdentifier","src":"56470:9:32"},{"kind":"number","nativeSrc":"56481:2:32","nodeType":"YulLiteral","src":"56481:2:32","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"56466:3:32","nodeType":"YulIdentifier","src":"56466:3:32"},"nativeSrc":"56466:18:32","nodeType":"YulFunctionCall","src":"56466:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"56413:43:32","nodeType":"YulIdentifier","src":"56413:43:32"},"nativeSrc":"56413:72:32","nodeType":"YulFunctionCall","src":"56413:72:32"},"nativeSrc":"56413:72:32","nodeType":"YulExpressionStatement","src":"56413:72:32"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"56539:6:32","nodeType":"YulIdentifier","src":"56539:6:32"},{"arguments":[{"name":"headStart","nativeSrc":"56552:9:32","nodeType":"YulIdentifier","src":"56552:9:32"},{"kind":"number","nativeSrc":"56563:2:32","nodeType":"YulLiteral","src":"56563:2:32","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"56548:3:32","nodeType":"YulIdentifier","src":"56548:3:32"},"nativeSrc":"56548:18:32","nodeType":"YulFunctionCall","src":"56548:18:32"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"56495:43:32","nodeType":"YulIdentifier","src":"56495:43:32"},"nativeSrc":"56495:72:32","nodeType":"YulFunctionCall","src":"56495:72:32"},"nativeSrc":"56495:72:32","nodeType":"YulExpressionStatement","src":"56495:72:32"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"56029:545:32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"56155:9:32","nodeType":"YulTypedName","src":"56155:9:32","type":""},{"name":"value3","nativeSrc":"56167:6:32","nodeType":"YulTypedName","src":"56167:6:32","type":""},{"name":"value2","nativeSrc":"56175:6:32","nodeType":"YulTypedName","src":"56175:6:32","type":""},{"name":"value1","nativeSrc":"56183:6:32","nodeType":"YulTypedName","src":"56183:6:32","type":""},{"name":"value0","nativeSrc":"56191:6:32","nodeType":"YulTypedName","src":"56191:6:32","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"56202:4:32","nodeType":"YulTypedName","src":"56202:4:32","type":""}],"src":"56029:545:32"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_PhaseType_$8455(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_PhaseType_$8455(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_PhaseType_$8455(value)\n    }\n\n    function convert_t_enum$_PhaseType_$8455_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_PhaseType_$8455(value)\n    }\n\n    function abi_encode_t_enum$_PhaseType_$8455_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_PhaseType_$8455_to_t_uint8(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    // struct LaunchNFTV3.Phase -> struct LaunchNFTV3.Phase\n    function abi_encode_t_struct$_Phase_$8473_memory_ptr_to_t_struct$_Phase_$8473_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // phaseType\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_enum$_PhaseType_$8455_to_t_uint8(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // startTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // endTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // maxSupply\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // maxPerWallet\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // mintedInPhase\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // merkleRoot\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_struct$_Phase_$8473_memory_ptr__to_t_uint256_t_struct$_Phase_$8473_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_struct$_Phase_$8473_memory_ptr_to_t_struct$_Phase_$8473_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_enum$_PhaseType_$8455_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_PhaseType_$8455_to_t_uint8(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_enum$_PhaseType_$8455_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_enum$_PhaseType_$8455_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function validator_revert_t_enum$_PhaseType_$8455(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_PhaseType_$8455(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_PhaseType_$8455(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_enum$_PhaseType_$8455t_uint256t_uint256t_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_PhaseType_$8455(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptrt_bytes32t_uint256t_bytes_calldata_ptrt_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value7, value8 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_PhaseType_$8455(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_PhaseType_$8455(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid time range\")\n\n    }\n\n    function abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09f8a2e052a5838deb648b011104be7c5823c6ed02601dcd3bd6a82b51d3bcfc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid max per wallet for non-p\")\n\n        mstore(add(memPtr, 32), \"ublic phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc33efff875c6b0b56ff7b9c94fe0113b419e1e1adbbc09fefc92fa16b5ac8e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Merkle root required for whiteli\")\n\n        mstore(add(memPtr, 32), \"st phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d22a7d9811ce87d896bdfc687e1b61b47b69523cfc8b7aee955d9481839bebef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Phase time overlaps with existin\")\n\n        mstore(add(memPtr, 32), \"g phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_79cc11dd2fd43728c024d2c821904220fd98175138b96004562becb6770e95d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_enum$_PhaseType_$8455_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_PhaseType_$8455_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract is paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not whitelisted for this phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bde594e2fd6bb5602ac20305775cce5f9345d12e22795b6a2d8adf280a348585_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517(memPtr) {\n\n        mstore(add(memPtr, 0), \"Signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Signature already used\")\n\n    }\n\n    function abi_encode_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_bytes32_t_uint256__to_t_bytes32_t_address_t_uint256_t_bytes32_t_uint256_t_uint256_t_bytes32_t_uint256__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect payment amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Phase supply limit reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2f3ab405126bc0545ebf5c8468a4bf2adf7f753b85e13cd67e4760c1f33875f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wallet limit reached for this ph\")\n\n        mstore(add(memPtr, 32), \"ase\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad1d0961da36fdf4b8979403be0dcc0e0a6d086ecb9709a8ff7f695ff7530c37_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_enum$_PhaseType_$8455__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_PhaseType_$8455_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367(memPtr) {\n\n        mstore(add(memPtr, 0), \"No active phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3298db8edd905c58a9ca70b7d8a012650d57fabf2563a8054ba7bb8ef6f3367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Platform fee transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner fee transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_898498f14cac8b21f73126935738ab1d5b4f5a41ddf50b1b4715f0581ca7039e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3481":[{"length":32,"start":10937}],"3483":[{"length":32,"start":10896}],"3485":[{"length":32,"start":10810}],"3487":[{"length":32,"start":12941}],"3489":[{"length":32,"start":12974}],"3492":[{"length":32,"start":8740}],"3495":[{"length":32,"start":8799}],"8477":[{"length":32,"start":4824},{"length":32,"start":6072}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xEB13554F EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x838 JUMPI DUP1 PUSH4 0xF7330C2D EQ PUSH2 0x861 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x712 JUMPI DUP1 PUSH4 0xCDD78CFC EQ PUSH2 0x74F JUMPI DUP1 PUSH4 0xDB5E0063 EQ PUSH2 0x77A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x8FF75E82 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x6BE JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x5F2 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x57036078 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x65D65E86 EQ PUSH2 0x536 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x2E37EEF6 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x42D JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x1CE97FD1 EQ PUSH2 0x356 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x72A1319 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x29C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x40F1 JUMP JUMPDEST PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x41E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x42F1 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x435D JUMP JUMPDEST PUSH2 0xA6E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36B PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP3 SWAP2 SWAP1 PUSH2 0x44F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x451F JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x4572 JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP3 SWAP2 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x42F1 JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x451F JUMP JUMPDEST PUSH2 0xE8A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x46C8 JUMP JUMPDEST PUSH2 0xF20 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x520 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54B PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x588 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x476A JUMP JUMPDEST PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B3 PUSH2 0x13B4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x476A JUMP JUMPDEST PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x4846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x607 PUSH2 0x145F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x638 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x4A38 JUMP JUMPDEST PUSH2 0x1533 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x41E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x4B27 JUMP JUMPDEST PUSH2 0x1BA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D3 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x710 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70B SWAP2 SWAP1 PUSH2 0x4C97 JUMP JUMPDEST PUSH2 0x1BD0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x739 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x734 SWAP2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x41E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x764 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x4D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78F PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x4D5C JUMP JUMPDEST PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F7 PUSH2 0x1CC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x822 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x4D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x476A JUMP JUMPDEST PUSH2 0x1CFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x888 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x4DB7 JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x895 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8A9 DUP3 PUSH2 0x1E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x8BF SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8EB SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x938 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x90D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x938 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x91B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x96C JUMPI PUSH2 0x96B PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x12 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x980 JUMPI PUSH2 0x97F PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x9E4 JUMPI POP PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9CE JUMPI PUSH2 0x9CD PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA15 JUMPI POP PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9FF JUMPI PUSH2 0x9FE PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0xA25 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xA39 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA47 DUP3 PUSH2 0x1E7A JUMP JUMPDEST POP PUSH2 0xA51 DUP3 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6A DUP3 DUP3 PUSH2 0xA65 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x1F47 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA76 PUSH2 0x1F59 JUMP JUMPDEST DUP1 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAA PUSH2 0x402B JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0x1FE0 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAE4 JUMPI PUSH2 0xAE3 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAF6 JUMPI PUSH2 0xAF5 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBBC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBD0 DUP4 DUP4 PUSH2 0xBCB PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x2135 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2D JUMPI PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xD37 PUSH2 0x214B JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x4EEC JUMP JUMPDEST PUSH2 0xD69 SWAP2 SWAP1 PUSH2 0x4F5D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEC DUP4 PUSH2 0x12FA JUMP JUMPDEST DUP3 LT PUSH2 0xE31 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP3 SWAP2 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA5 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BD0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB4 PUSH2 0xA93 JUMP JUMPDEST DUP3 LT PUSH2 0xEFA JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF1 SWAP3 SWAP2 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF0E JUMPI PUSH2 0xF0D PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF28 PUSH2 0x1F59 JUMP JUMPDEST DUP4 DUP6 LT PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF61 SWAP1 PUSH2 0x4FDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF91 JUMPI PUSH2 0xF90 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x101F JUMPI PUSH1 0x0 DUP3 GT PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD0 SWAP1 PUSH2 0x506C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x101E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x50FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x117F JUMPI PUSH1 0x0 PUSH1 0x12 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1084 JUMPI PUSH2 0x1083 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1096 JUMPI PUSH2 0x1095 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10F5 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1118 JUMPI POP PUSH2 0x1172 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP8 GT ISZERO DUP1 ISZERO PUSH2 0x1130 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP7 LT ISZERO JUMPDEST ISZERO PUSH2 0x1170 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1167 SWAP1 PUSH2 0x5190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1022 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11A1 JUMPI PUSH2 0x11A0 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x12 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x12 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1232 JUMPI PUSH2 0x1231 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE POP POP DUP1 PUSH32 0x7673E4939433531841B3EE155CFB41D74036F1741ED20BA7C3ED88D66A289551 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x12B1 SWAP3 SWAP2 SWAP1 PUSH2 0x51B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CF DUP3 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1364 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BC PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x13C6 PUSH1 0x0 PUSH2 0x2155 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1453 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x143F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x1473 PUSH2 0x221B JUMP JUMPDEST PUSH2 0x147B PUSH2 0x2256 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x149C JUMPI PUSH2 0x149B PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1583 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157A SWAP1 PUSH2 0x5225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x158E PUSH2 0x1FE0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15A6 JUMPI PUSH2 0x15A5 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15CA JUMPI PUSH2 0x15C9 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1685 JUMPI PUSH2 0x1645 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH1 0x7 ADD SLOAD CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x162A SWAP2 SWAP1 PUSH2 0x528D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x1684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167B SWAP1 PUSH2 0x52F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST TIMESTAMP PUSH2 0xE10 DUP9 PUSH2 0x1694 SWAP2 SWAP1 PUSH2 0x5314 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x16A2 JUMPI POP TIMESTAMP DUP8 GT ISZERO JUMPDEST PUSH2 0x16E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D8 SWAP1 PUSH2 0x5394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1742 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1739 SWAP1 PUSH2 0x5400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xBCD57119BF9B3F112B39ECFB926B57BABF8EA759EF8FB8F953EC0103B2A187F3 CALLER DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1777 SWAP3 SWAP2 SWAP1 PUSH2 0x5450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 PUSH1 0x1 ADD SLOAD DUP8 DUP15 DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x179E SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184C DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x183E DUP5 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x22C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1899 SWAP1 PUSH2 0x5533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD CALLVALUE EQ PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DF SWAP1 PUSH2 0x559F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x4 ADD SLOAD EQ DUP1 PUSH2 0x1902 JUMPI POP DUP2 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x6 ADD SLOAD LT JUMPDEST PUSH2 0x1941 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1938 SWAP1 PUSH2 0x560B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1979 JUMPI PUSH2 0x1978 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x198A JUMPI POP PUSH1 0x0 DUP3 PUSH1 0x5 ADD SLOAD EQ JUMPDEST DUP1 PUSH2 0x1A1D JUMPI POP DUP2 PUSH1 0x5 ADD SLOAD PUSH1 0x13 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A0C JUMPI PUSH2 0x1A0B PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT JUMPDEST PUSH2 0x1A5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A53 SWAP1 PUSH2 0x569D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A91 CALLVALUE PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x1A9B DUP3 CALLER PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x1AA7 CALLER DUP14 DUP14 DUP14 PUSH2 0x2598 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH32 0x99F38CF3FEAAD38E0A2E22EF51BDD4FABA32B432520A951248D77057596A425A DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1AFF SWAP2 SWAP1 PUSH2 0x56BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1B24 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B50 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B72 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BB9 PUSH2 0x1BB2 PUSH2 0x1F3F JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2603 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1BDB DUP5 DUP5 DUP5 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x1BEF PUSH2 0x1BE6 PUSH2 0x1F3F JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2772 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C00 DUP3 PUSH2 0x2923 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 PUSH2 0x2A36 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D03 PUSH2 0x1F59 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6C SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D7E DUP2 PUSH2 0x2155 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DD7 JUMPI PUSH2 0x1DD6 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1E73 JUMPI POP PUSH2 0x1E72 DUP3 PUSH2 0x2AED JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E86 DUP4 PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EF9 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF0 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F54 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2B8B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F61 PUSH2 0x1F3F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F7F PUSH2 0x1509 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FDE JUMPI PUSH2 0x1FA2 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD5 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x200C JUMPI PUSH2 0x200B PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x12 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2020 JUMPI PUSH2 0x201F PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2051 JUMPI PUSH2 0x2050 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2084 JUMPI POP PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x206E JUMPI PUSH2 0x206D PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x20B5 JUMPI POP PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x209F JUMPI PUSH2 0x209E PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST ISZERO PUSH2 0x20E8 JUMPI DUP1 PUSH1 0x12 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x20CF JUMPI PUSH2 0x20CE PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD SWAP4 POP SWAP4 POP POP POP PUSH2 0x2131 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1FEB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2128 SWAP1 PUSH2 0x5724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2142 DUP5 DUP5 DUP5 PUSH2 0x2D50 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2251 PUSH1 0xE PUSH32 0x0 PUSH2 0x2E6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x228C PUSH1 0xF PUSH32 0x0 PUSH2 0x2E6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x229E DUP6 DUP5 PUSH2 0x2F1D JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BB PUSH2 0x22B5 PUSH2 0x2A36 JUMP JUMPDEST DUP4 PUSH2 0x2F6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x22D2 DUP7 DUP7 PUSH2 0x2FAE JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x22E2 DUP3 DUP3 PUSH2 0x300A JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x2327 SWAP2 SWAP1 PUSH2 0x4EEC JUMP JUMPDEST PUSH2 0x2331 SWAP2 SWAP1 PUSH2 0x4F5D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x240C JUMPI PUSH1 0x0 PUSH1 0x16 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2384 SWAP1 PUSH2 0x576A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x240A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2401 SWAP1 PUSH2 0x57CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x241A SWAP2 SWAP1 PUSH2 0x57EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x24DA JUMPI PUSH1 0x0 PUSH2 0x242F PUSH2 0x1509 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2452 SWAP1 PUSH2 0x576A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x248F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2494 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x24D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24CF SWAP1 PUSH2 0x586B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x24F4 SWAP1 PUSH2 0x588B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x13 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x255E JUMPI PUSH2 0x255D PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2570 JUMPI PUSH2 0x256F PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x258F SWAP1 PUSH2 0x588B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x25A2 DUP5 DUP5 PUSH2 0x316E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP GT ISZERO PUSH2 0x25FD JUMPI PUSH2 0x25FC DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x318C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2674 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266B SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2765 SWAP2 SWAP1 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x291C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5928 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x280D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x280A SWAP2 SWAP1 PUSH2 0x5989 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2891 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x283D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2889 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2880 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x291A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2911 SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x292E DUP3 PUSH2 0x1E7A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x294F SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x297B SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x299D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x29D9 PUSH2 0x31E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x29EE JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2A23 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A0B SWAP3 SWAP2 SWAP1 PUSH2 0x59F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x2A2C DUP5 PUSH2 0x31FF JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2AB2 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x2ADF JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0x3268 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2B47 JUMPI POP PUSH2 0x2B46 DUP3 PUSH2 0x32FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2BC4 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2CF8 JUMPI PUSH1 0x0 PUSH2 0x2BD4 DUP5 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2C3F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2C52 JUMPI POP PUSH2 0x2C50 DUP2 DUP5 PUSH2 0x1C32 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2C94 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C8B SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2CF6 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D5E DUP6 DUP6 DUP6 PUSH2 0x3378 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DA2 JUMPI PUSH2 0x2D9D DUP5 PUSH2 0x3592 JUMP JUMPDEST PUSH2 0x2DE1 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DE0 JUMPI PUSH2 0x2DDF DUP2 DUP6 PUSH2 0x35DB JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E23 JUMPI PUSH2 0x2E1E DUP5 PUSH2 0x36C6 JUMP JUMPDEST PUSH2 0x2E62 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E61 JUMPI PUSH2 0x2E60 DUP6 DUP6 PUSH2 0x3797 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x2E8A JUMPI PUSH2 0x2E83 DUP4 PUSH2 0x3822 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F17 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x2E96 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EC2 SWAP1 PUSH2 0x4E26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F0F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EE4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F0F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EF2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2F62 JUMPI PUSH2 0x2F53 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2F46 JUMPI PUSH2 0x2F45 PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3896 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2F26 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2FF3 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2FE5 DUP9 DUP3 DUP6 DUP6 PUSH2 0x38C1 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x3003 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x301E JUMPI PUSH2 0x301D PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3031 JUMPI PUSH2 0x3030 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x316A JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x304B JUMPI PUSH2 0x304A PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x305E JUMPI PUSH2 0x305D PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3095 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30A9 JUMPI PUSH2 0x30A8 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30BC JUMPI PUSH2 0x30BB PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3101 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F8 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x3114 JUMPI PUSH2 0x3113 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3127 JUMPI PUSH2 0x3126 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3169 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3160 SWAP2 SWAP1 PUSH2 0x4D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3188 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x39B5 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x31AC SWAP2 SWAP1 PUSH2 0x5BC2 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x31DC SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x320A DUP3 PUSH2 0x1E7A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3215 PUSH2 0x31E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3235 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3260 JUMP JUMPDEST DUP1 PUSH2 0x323F DUP5 PUSH2 0x39D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3250 SWAP3 SWAP2 SWAP1 PUSH2 0x59F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x32E3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5C94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3371 JUMPI POP PUSH2 0x3370 DUP3 PUSH2 0x3AA7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3384 DUP5 PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33C6 JUMPI PUSH2 0x33C5 DUP2 DUP5 DUP7 PUSH2 0x3B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3457 JUMPI PUSH2 0x3408 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2B8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x34DA JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E6 DUP4 PUSH2 0x12FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP3 EQ PUSH2 0x3692 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x36DA SWAP2 SWAP1 PUSH2 0x57EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x370A JUMPI PUSH2 0x3709 PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x372C JUMPI PUSH2 0x372B PUSH2 0x4E57 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x377B JUMPI PUSH2 0x377A PUSH2 0x5CE7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x37A4 DUP5 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x37AE SWAP2 SWAP1 PUSH2 0x57EB JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x382F DUP4 PUSH2 0x3C4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x384E JUMPI PUSH2 0x384D PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3880 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x38AE JUMPI PUSH2 0x38A9 DUP3 DUP5 PUSH2 0x3C9D JUMP JUMPDEST PUSH2 0x38B9 JUMP JUMPDEST PUSH2 0x38B8 DUP4 DUP4 PUSH2 0x3C9D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3901 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x39AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3926 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5D32 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3948 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x399C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x39AB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39BF DUP4 DUP4 PUSH2 0x3CB4 JUMP JUMPDEST PUSH2 0x39D4 PUSH2 0x39CA PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2772 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x39E8 DUP5 PUSH2 0x3DAD JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A07 JUMPI PUSH2 0x3A06 PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A39 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3A9C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x3A90 JUMPI PUSH2 0x3A8F PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3A47 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3B72 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3B82 JUMPI POP PUSH2 0x3B81 DUP3 PUSH2 0x3F00 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B94 DUP4 DUP4 DUP4 PUSH2 0x3F6A JUMP JUMPDEST PUSH2 0x3C48 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C09 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C00 SWAP2 SWAP1 PUSH2 0x4399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3F SWAP3 SWAP2 SWAP1 PUSH2 0x45B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x3C94 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D26 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D1D SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D34 DUP4 DUP4 PUSH1 0x0 PUSH2 0x2135 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3DA8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D9F SWAP2 SWAP1 PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3E0B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3E01 JUMPI PUSH2 0x3E00 PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3E48 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x3E3E JUMPI PUSH2 0x3E3D PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3E77 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x3E6D JUMPI PUSH2 0x3E6C PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3EA0 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3E96 JUMPI PUSH2 0x3E95 PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3EC5 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3EBB JUMPI PUSH2 0x3EBA PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3EE8 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x3EDE JUMPI PUSH2 0x3EDD PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3EF7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4022 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3FE3 JUMPI POP PUSH2 0x3FE2 DUP5 DUP5 PUSH2 0x1C32 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x4021 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4009 DUP4 PUSH2 0x1F02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x404B JUMPI PUSH2 0x404A PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40CE DUP2 PUSH2 0x4099 JUMP JUMPDEST DUP2 EQ PUSH2 0x40D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40EB DUP2 PUSH2 0x40C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4107 JUMPI PUSH2 0x4106 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4115 DUP5 DUP3 DUP6 ADD PUSH2 0x40DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4133 DUP2 PUSH2 0x411E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x414E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x412A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x418E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4173 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B6 DUP3 PUSH2 0x4154 JUMP JUMPDEST PUSH2 0x41C0 DUP2 DUP6 PUSH2 0x415F JUMP JUMPDEST SWAP4 POP PUSH2 0x41D0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4170 JUMP JUMPDEST PUSH2 0x41D9 DUP2 PUSH2 0x419A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41FE DUP2 DUP5 PUSH2 0x41AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4219 DUP2 PUSH2 0x4206 JUMP JUMPDEST DUP2 EQ PUSH2 0x4224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4236 DUP2 PUSH2 0x4210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4252 JUMPI PUSH2 0x4251 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4260 DUP5 DUP3 DUP6 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4294 DUP3 PUSH2 0x4269 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A4 DUP2 PUSH2 0x4289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x42BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x429B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42CE DUP2 PUSH2 0x4289 JUMP JUMPDEST DUP2 EQ PUSH2 0x42D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42EB DUP2 PUSH2 0x42C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4308 JUMPI PUSH2 0x4307 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4316 DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4327 DUP6 DUP3 DUP7 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x433A DUP2 PUSH2 0x411E JUMP JUMPDEST DUP2 EQ PUSH2 0x4345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4357 DUP2 PUSH2 0x4331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4373 JUMPI PUSH2 0x4372 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4381 DUP5 DUP3 DUP6 ADD PUSH2 0x4348 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4393 DUP2 PUSH2 0x4206 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x43AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x438A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x43F4 JUMPI PUSH2 0x43F3 PUSH2 0x43B4 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4405 DUP3 PUSH2 0x43E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4415 DUP3 PUSH2 0x43F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4425 DUP2 PUSH2 0x440A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4434 DUP2 PUSH2 0x4206 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x444D DUP2 PUSH2 0x443A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x446A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x441C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x447D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4490 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x44A3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x44B6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x44C9 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x44DC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x442B JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x44EF PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x4444 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x450B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4518 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4453 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4538 JUMPI PUSH2 0x4537 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4546 DUP7 DUP3 DUP8 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4557 DUP7 DUP3 DUP8 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4568 DUP7 DUP3 DUP8 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4589 JUMPI PUSH2 0x4588 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4597 DUP6 DUP3 DUP7 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x45A8 DUP6 DUP3 DUP7 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x45C7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x45D4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x438A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x45E4 DUP2 PUSH2 0x440A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x45F3 DUP2 PUSH2 0x443A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x460F PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x45DB JUMP JUMPDEST PUSH2 0x461C PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4629 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4636 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4643 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4650 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x465D PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x466A PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x45EA JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x4684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4696 DUP2 PUSH2 0x4677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46A5 DUP2 PUSH2 0x443A JUMP JUMPDEST DUP2 EQ PUSH2 0x46B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46C2 DUP2 PUSH2 0x469C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x46E7 JUMPI PUSH2 0x46E6 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46F5 DUP11 DUP3 DUP12 ADD PUSH2 0x4687 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x4706 DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x4717 DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x4728 DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4739 DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x474A DUP11 DUP3 DUP12 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x475B DUP11 DUP3 DUP12 ADD PUSH2 0x46B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4780 JUMPI PUSH2 0x477F PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x478E DUP5 DUP3 DUP6 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47CF DUP4 DUP4 PUSH2 0x442B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F3 DUP3 PUSH2 0x4797 JUMP JUMPDEST PUSH2 0x47FD DUP2 DUP6 PUSH2 0x47A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x4808 DUP4 PUSH2 0x47B3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4839 JUMPI DUP2 MLOAD PUSH2 0x4820 DUP9 DUP3 PUSH2 0x47C3 JUMP JUMPDEST SWAP8 POP PUSH2 0x482B DUP4 PUSH2 0x47DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x480C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4860 DUP2 DUP5 PUSH2 0x47E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x489D DUP2 PUSH2 0x4868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x48B8 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x4894 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x48CA DUP2 DUP10 PUSH2 0x41AB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x48DE DUP2 DUP9 PUSH2 0x41AB JUMP JUMPDEST SWAP1 POP PUSH2 0x48ED PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x48FA PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x4907 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x45EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4919 DUP2 DUP5 PUSH2 0x47E8 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x494C JUMPI PUSH2 0x494B PUSH2 0x4927 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4969 JUMPI PUSH2 0x4968 PUSH2 0x492C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4985 JUMPI PUSH2 0x4984 PUSH2 0x4931 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x49A2 JUMPI PUSH2 0x49A1 PUSH2 0x4927 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49BF JUMPI PUSH2 0x49BE PUSH2 0x492C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x49DB JUMPI PUSH2 0x49DA PUSH2 0x4931 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x49F8 JUMPI PUSH2 0x49F7 PUSH2 0x4927 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A15 JUMPI PUSH2 0x4A14 PUSH2 0x492C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4A31 JUMPI PUSH2 0x4A30 PUSH2 0x4931 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4A5A JUMPI PUSH2 0x4A59 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A68 DUP13 DUP3 DUP14 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A89 JUMPI PUSH2 0x4A88 PUSH2 0x4094 JUMP JUMPDEST JUMPDEST PUSH2 0x4A95 DUP13 DUP3 DUP14 ADD PUSH2 0x4936 JUMP JUMPDEST SWAP9 POP SWAP9 POP POP PUSH1 0x40 PUSH2 0x4AA8 DUP13 DUP3 DUP14 ADD PUSH2 0x46B3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x4AB9 DUP13 DUP3 DUP14 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4ADA JUMPI PUSH2 0x4AD9 PUSH2 0x4094 JUMP JUMPDEST JUMPDEST PUSH2 0x4AE6 DUP13 DUP3 DUP14 ADD PUSH2 0x498C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B09 JUMPI PUSH2 0x4B08 PUSH2 0x4094 JUMP JUMPDEST JUMPDEST PUSH2 0x4B15 DUP13 DUP3 DUP14 ADD PUSH2 0x49E2 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B3E JUMPI PUSH2 0x4B3D PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B4C DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4B5D DUP6 DUP3 DUP7 ADD PUSH2 0x4348 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4BA4 DUP3 PUSH2 0x419A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4BC3 JUMPI PUSH2 0x4BC2 PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD6 PUSH2 0x4085 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BE2 DUP3 DUP3 PUSH2 0x4B9B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C02 JUMPI PUSH2 0x4C01 PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH2 0x4C0B DUP3 PUSH2 0x419A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C3A PUSH2 0x4C35 DUP5 PUSH2 0x4BE7 JUMP JUMPDEST PUSH2 0x4BCC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4C56 JUMPI PUSH2 0x4C55 PUSH2 0x4B67 JUMP JUMPDEST JUMPDEST PUSH2 0x4C61 DUP5 DUP3 DUP6 PUSH2 0x4C18 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4C7E JUMPI PUSH2 0x4C7D PUSH2 0x4927 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4C8E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4C27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4CB1 JUMPI PUSH2 0x4CB0 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CBF DUP8 DUP3 DUP9 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4CD0 DUP8 DUP3 DUP9 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4CE1 DUP8 DUP3 DUP9 ADD PUSH2 0x4227 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D02 JUMPI PUSH2 0x4D01 PUSH2 0x4094 JUMP JUMPDEST JUMPDEST PUSH2 0x4D0E DUP8 DUP3 DUP9 ADD PUSH2 0x4C69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D3B DUP2 PUSH2 0x4D1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D56 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D73 JUMPI PUSH2 0x4D72 PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D81 DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4D92 DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4DB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4DCE JUMPI PUSH2 0x4DCD PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4DDC DUP6 DUP3 DUP7 ADD PUSH2 0x42DC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4DED DUP6 DUP3 DUP7 ADD PUSH2 0x4687 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4E3E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4E51 JUMPI PUSH2 0x4E50 PUSH2 0x4DF7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4E9B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x4EA8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x4EB5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x429B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EF7 DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F02 DUP4 PUSH2 0x4206 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4F10 DUP2 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4F27 JUMPI PUSH2 0x4F26 PUSH2 0x4EBD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4F68 DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F73 DUP4 PUSH2 0x4206 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4F83 JUMPI PUSH2 0x4F82 PUSH2 0x4F2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642074696D652072616E67650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC4 PUSH1 0x12 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x4FCF DUP3 PUSH2 0x4F8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FF3 DUP2 PUSH2 0x4FB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D6178207065722077616C6C657420666F72206E6F6E2D70 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x75626C6963207068617365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5056 PUSH1 0x2B DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5061 DUP3 PUSH2 0x4FFA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5085 DUP2 PUSH2 0x5049 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D65726B6C6520726F6F7420726571756972656420666F722077686974656C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374207068617365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E8 PUSH1 0x28 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x50F3 DUP3 PUSH2 0x508C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5117 DUP2 PUSH2 0x50DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50686173652074696D65206F7665726C6170732077697468206578697374696E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6720706861736500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517A PUSH1 0x27 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5185 DUP3 PUSH2 0x511E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51A9 DUP2 PUSH2 0x516D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x51C5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x45DB JUMP JUMPDEST PUSH2 0x51D2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x438A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x520F PUSH1 0x12 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x521A DUP3 PUSH2 0x51D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x523E DUP2 PUSH2 0x5202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525D DUP3 PUSH2 0x5245 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x526F DUP3 PUSH2 0x5252 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5287 PUSH2 0x5282 DUP3 PUSH2 0x4289 JUMP JUMPDEST PUSH2 0x5264 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5299 DUP3 DUP5 PUSH2 0x5276 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C697374656420666F7220746869732070686173650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52DE PUSH1 0x1E DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x52E9 DUP3 PUSH2 0x52A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x530D DUP2 PUSH2 0x52D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531F DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH2 0x532A DUP4 PUSH2 0x4206 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x5342 JUMPI PUSH2 0x5341 PUSH2 0x4EBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5369676E61747572652065787069726564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x537E PUSH1 0x11 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5389 DUP3 PUSH2 0x5348 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53AD DUP2 PUSH2 0x5371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5369676E617475726520616C7265616479207573656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53EA PUSH1 0x16 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x53F5 DUP3 PUSH2 0x53B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5419 DUP2 PUSH2 0x53DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5437 DUP4 DUP6 PUSH2 0x5420 JUMP JUMPDEST SWAP4 POP PUSH2 0x5444 DUP4 DUP6 DUP5 PUSH2 0x4C18 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545D DUP3 DUP5 DUP7 PUSH2 0x542B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x547F PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x548C PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x5499 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x54A6 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x54B3 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x54C0 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x54CD PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x54DA PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x438A JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x551D PUSH1 0x11 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5528 DUP3 PUSH2 0x54E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x554C DUP2 PUSH2 0x5510 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5589 PUSH1 0x18 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5594 DUP3 PUSH2 0x5553 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55B8 DUP2 PUSH2 0x557C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506861736520737570706C79206C696D69742072656163686564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55F5 PUSH1 0x1A DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5600 DUP3 PUSH2 0x55BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5624 DUP2 PUSH2 0x55E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57616C6C6574206C696D6974207265616368656420666F722074686973207068 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6173650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5687 PUSH1 0x23 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5692 DUP3 PUSH2 0x562B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56B6 DUP2 PUSH2 0x567A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x56D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206163746976652070686173650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570E PUSH1 0xF DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5719 DUP3 PUSH2 0x56D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x573D DUP2 PUSH2 0x5701 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5754 PUSH1 0x0 DUP4 PUSH2 0x5420 JUMP JUMPDEST SWAP2 POP PUSH2 0x575F DUP3 PUSH2 0x5744 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5775 DUP3 PUSH2 0x5747 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6174666F726D20666565207472616E73666572206661696C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57B5 PUSH1 0x1C DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x57C0 DUP3 PUSH2 0x577F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57E4 DUP2 PUSH2 0x57A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F6 DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH2 0x5801 DUP4 PUSH2 0x4206 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5819 JUMPI PUSH2 0x5818 PUSH2 0x4EBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E657220666565207472616E73666572206661696C656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5855 PUSH1 0x19 DUP4 PUSH2 0x415F JUMP JUMPDEST SWAP2 POP PUSH2 0x5860 DUP3 PUSH2 0x581F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5884 DUP2 PUSH2 0x5848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5896 DUP3 PUSH2 0x4206 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x58C8 JUMPI PUSH2 0x58C7 PUSH2 0x4EBD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58FA DUP3 PUSH2 0x58D3 JUMP JUMPDEST PUSH2 0x5904 DUP2 DUP6 PUSH2 0x58DE JUMP JUMPDEST SWAP4 POP PUSH2 0x5914 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4170 JUMP JUMPDEST PUSH2 0x591D DUP2 PUSH2 0x419A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x593D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x594A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x429B JUMP JUMPDEST PUSH2 0x5957 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5969 DUP2 DUP5 PUSH2 0x58EF JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5983 DUP2 PUSH2 0x40C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x599F JUMPI PUSH2 0x599E PUSH2 0x408F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59AD DUP5 DUP3 DUP6 ADD PUSH2 0x5974 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59CC DUP3 PUSH2 0x4154 JUMP JUMPDEST PUSH2 0x59D6 DUP2 DUP6 PUSH2 0x59B6 JUMP JUMPDEST SWAP4 POP PUSH2 0x59E6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4170 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59FE DUP3 DUP6 PUSH2 0x59C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A0A DUP3 DUP5 PUSH2 0x59C1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5A78 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5A3B JUMP JUMPDEST PUSH2 0x5A82 DUP7 DUP4 PUSH2 0x5A3B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ABF PUSH2 0x5ABA PUSH2 0x5AB5 DUP5 PUSH2 0x4206 JUMP JUMPDEST PUSH2 0x5A9A JUMP JUMPDEST PUSH2 0x4206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AD9 DUP4 PUSH2 0x5AA4 JUMP JUMPDEST PUSH2 0x5AED PUSH2 0x5AE5 DUP3 PUSH2 0x5AC6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5A48 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5B02 PUSH2 0x5AF5 JUMP JUMPDEST PUSH2 0x5B0D DUP2 DUP5 DUP5 PUSH2 0x5AD0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5B31 JUMPI PUSH2 0x5B26 PUSH1 0x0 DUP3 PUSH2 0x5AFA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5B13 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5B76 JUMPI PUSH2 0x5B47 DUP2 PUSH2 0x5A16 JUMP JUMPDEST PUSH2 0x5B50 DUP5 PUSH2 0x5A2B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5B5F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5B73 PUSH2 0x5B6B DUP6 PUSH2 0x5A2B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5B12 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B99 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5B7B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB2 DUP4 DUP4 PUSH2 0x5B88 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BCB DUP3 PUSH2 0x4154 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BE4 JUMPI PUSH2 0x5BE3 PUSH2 0x4B6C JUMP JUMPDEST JUMPDEST PUSH2 0x5BEE DUP3 SLOAD PUSH2 0x4E26 JUMP JUMPDEST PUSH2 0x5BF9 DUP3 DUP3 DUP6 PUSH2 0x5B35 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5C2C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5C1A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5C24 DUP6 DUP3 PUSH2 0x5BA6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5C8C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5C3A DUP7 PUSH2 0x5A16 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C62 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5C3D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5C7F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5C7B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5B88 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5CA9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5CB6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5CC3 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5CD0 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x438A JUMP JUMPDEST PUSH2 0x5CDD PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x429B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D2C DUP2 PUSH2 0x5D16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5D47 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5D54 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x5D23 JUMP JUMPDEST PUSH2 0x5D61 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x45EA JUMP JUMPDEST PUSH2 0x5D6E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x45EA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 DUP5 PUSH25 0x20716EF69489F4CF093ADCE8503C3ED7CA76E1B16561EBC758 PUSH14 0xEE6BA664736F6C634300081B0033 ","sourceMap":"622:9274:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7712:216;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9524:370:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3421:85:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2062:102:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9124:138:31;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4142:578:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2379:657:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1462:21:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1736:255:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4786:132:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2236:226:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6402:1282:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1079:38:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1702:114:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3510:1918:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2517:93:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1576:20:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4984:233:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7932:155:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1869:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9432:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1908:35:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8470:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9266:162:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7712:216;7866:4;7887:36;7911:11;7887:23;:36::i;:::-;7880:43;;7712:216;;;:::o;2364:89:7:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;9524:370:31:-;9577:4;9589:17;9609:15;9589:35;;9636:9;9631:240;9655:6;:13;;;;9651:1;:17;9631:240;;;9719:21;9696:44;;;;;;;;:::i;:::-;;:6;9703:1;9696:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;;;;;;;;;;:44;;;;;;;;:::i;:::-;;;;:88;;;;;9765:6;9772:1;9765:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;9752:9;:32;;9696:88;:130;;;;;9809:6;9816:1;9809:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;9796:9;:30;;9696:130;9683:182;;;9852:4;9845:11;;;;;;9683:182;9670:3;;;;;;;9631:240;;;;9884:5;9877:12;;;9524:370;;:::o;3496:154:7:-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;3421:85:31:-;1531:13:0;:11;:13::i;:::-;3492:9:31::1;3481:8;;:20;;;;;;;;;;;;;;;;;;3421:85:::0;:::o;2062:102:10:-;2114:7;2140:10;:17;;;;2133:24;;2062:102;:::o;9124:138:31:-;9185:18;9205;;:::i;:::-;9240:17;:15;:17::i;:::-;9233:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9124:138;;:::o;4142:578:7:-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;2379:657:15:-;2487:16;2505:14;2531:32;2566:17;:26;2584:7;2566:26;;;;;;;;;;;2531:61;;2602:23;2628:12;:21;;;;;;;;;;;;2602:47;;2659:22;2684:12;:28;;;;;;;;;;;;2659:53;;2754:1;2727:29;;:15;:29;;;2723:173;;2790:19;:28;;;;;;;;;;;;2772:46;;2850:19;:35;;;;;;;;;;;;2832:53;;2723:173;2906:21;2962:17;:15;:17::i;:::-;2930:49;;2943:15;2931:27;;:9;:27;;;;:::i;:::-;2930:49;;;;:::i;:::-;2906:73;;2998:15;3015:13;2990:39;;;;;;;;2379:657;;;;;:::o;1462:21:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1736:255:10:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1918:5;1925;1895:36;;;;;;;;;;;;:::i;:::-;;;;;;;;1843:99;1958:12;:19;1971:5;1958:19;;;;;;;;;;;;;;;:26;1978:5;1958:26;;;;;;;;;;;;1951:33;;1736:255;;;;:::o;4786:132:7:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2236:226:10:-;2302:7;2334:13;:11;:13::i;:::-;2325:5;:22;2321:101;;2401:1;2405:5;2370:41;;;;;;;;;;;;:::i;:::-;;;;;;;;2321:101;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;;2431:24;;2236:226;;;:::o;6402:1282:31:-;1531:13:0;:11;:13::i;:::-;6638:8:31::1;6625:10;:21;6617:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;6694:16;6680:30;;;;;;;;:::i;:::-;;:10;:30;;;;;;;;:::i;:::-;;;6676:234;;6744:1;6728:13;:17;6720:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;6841:1;6833:10:::0;::::1;6818:11;:25:::0;6801:102:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6676:234;6957:9;6952:339;6976:6;:13;;;;6972:1;:17;6952:339;;;7004:26;7033:6;7040:1;7033:9;;;;;;;;:::i;:::-;;;;;;;;;;;;7004:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;7081:21;7054:48;;;;;;;;:::i;:::-;;:13;:23;;;:48;;;;;;;;:::i;:::-;;::::0;7050:62:::1;;7104:8;;;7050:62;7154:13;:21;;;7140:10;:35;;:84;;;;;7201:13;:23;;;7189:8;:35;;7140:84;7138:87;7121:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;6996:295;6952:339;6991:3;;;;;;;6952:339;;;;7297:21;7321:236;;;;;;;;7346:10;7321:236;;;;;;;;:::i;:::-;;;;;;7371:6;7321:236;;;;7396:10;7321:236;;;;7423:8;7321:236;;;;7450:10;7321:236;;;;7482:13;7321:236;;;;7518:1;7321:236;;;;7539:11;7321:236;;::::0;7297:260:::1;;7564:18;7585:6;:13;;;;7564:34;;7604:6;7616:8;7604:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7648:10;7637:42;7660:10;7672:6;7637:42;;;;;;;:::i;:::-;;;;;;;;6611:1073;;6402:1282:::0;;;;;;;:::o;2184:118:7:-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;1079:38:31:-;;;:::o;1919:208:7:-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1702:114:31:-;1761:16;1792:12;:19;1805:5;1792:19;;;;;;;;;;;;;;;1785:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1702:114;;;:::o;5144:557:22:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3510:1918:31:-;3374:8;;;;;;;;;;;3373:9;3365:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;3723:18:::1;3743:26:::0;3773:17:::1;:15;:17::i;:::-;3722:68;;;;3827:19;3801:45;;;;;;;;:::i;:::-;;:12;:22;;;;;;;;;;;;:45;;;;;;;;:::i;:::-;;::::0;3797:270:::1;;3873:137;3903:11;;3873:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3926:12;:23;;;3988:10;3971:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;3961:39;;;;;;3873:18;:137::i;:::-;3856:204;;;;;;;;;;;;:::i;:::-;;;;;;;;;3797:270;4170:15;4159:7;4147:9;:19;;;;:::i;:::-;:38;;:70;;;;;4202:15;4189:9;:28;;4147:70;4132:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;4266:13;:23;4280:8;4266:23;;;;;;;;;;;;;;;;;;;;;4265:24;4257:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4347:18;1166:147;4428:10;4448:7;4481:3;;4465:21;;;;;;;:::i;:::-;;;;;;;;4496:12;:18;;;4524:10;4544:8;4562:9;4385:194;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4368:217;;;;;;4347:238;;4658:13;4607:64;;:47;4644:9;;4607:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:28;4624:10;4607:16;:28::i;:::-;:36;;:47;;;;:::i;:::-;:64;;;4592:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;4732:12;:18;;;4719:9;:31;4711:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4827:1;4801:12;:22;;;:27;:90;;;;4869:12;:22;;;4840:12;:26;;;:51;4801:90;4786:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;4982:16;4956:42;;;;;;;;:::i;:::-;;:12;:22;;;;;;;;;;;;:42;;;;;;;;:::i;:::-;;;:84;;;;;5039:1;5010:12;:25;;;:30;4956:84;4955:192;;;;5122:12;:25;;;5053:22;:34;5076:10;5053:34;;;;;;;;;;;;;;;:58;5088:12;:22;;;;;;;;;;;;5053:58;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:94;4955:192;4940:258;;;;;;;;;;;;:::i;:::-;;;;;;;;;5230:4;5204:13;:23;5218:8;5204:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;5241:23;5254:9;5241:12;:23::i;:::-;5270:43;5288:12;5302:10;5270:17;:43::i;:::-;5319:36;5330:10;5342:7;5351:3;;5319:10;:36::i;:::-;5388:10;5367:56;;5379:7;5367:56;5400:12;:22;;;;;;;;;;;;5367:56;;;;;;:::i;:::-;;;;;;;;3716:1712;;;3510:1918:::0;;;;;;;;;:::o;2517:93:7:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;1576:20:31:-;;;;;;;;;;;;;:::o;4984:233:7:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;7932:155:31:-;8031:13;8059:23;8074:7;8059:14;:23::i;:::-;8052:30;;7932:155;;;:::o;1869:35::-;;;;;;;;;;;;;:::o;9432:88::-;9480:7;9502:6;:13;;;;9495:20;;9432:88;:::o;3927:153:7:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;1908:35:31:-;;;;;;;;;;;;;:::o;8470:100::-;8523:7;8545:20;:18;:20::i;:::-;8538:27;;8470:100;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;9266:162:31:-;9362:7;9384:22;:28;9407:4;9384:28;;;;;;;;;;;;;;;:39;9413:9;9384:39;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;9377:46;;9266:162;;;;:::o;2116:213:15:-;2218:4;2256:26;2241:41;;;:11;:41;;;;:81;;;;2286:36;2310:11;2286:23;:36::i;:::-;2241:81;2234:88;;2116:213;;;:::o;16212:241:7:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:16:-;709:7;735:10;728:17;;656:96;:::o;14492:120:7:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;8681:439:31:-;8743:18;8763:19;8792:17;8812:15;8792:35;;8839:9;8834:250;8858:6;:13;;;;8854:1;:17;8834:250;;;8922:21;8899:44;;;;;;;;:::i;:::-;;:6;8906:1;8899:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;;;;;;;;;;:44;;;;;;;;:::i;:::-;;;;:88;;;;;8968:6;8975:1;8968:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;8955:9;:32;;8899:88;:130;;;;;9012:6;9019:1;9012:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;8999:9;:30;;8899:130;8886:192;;;9056:1;9059:6;9066:1;9059:9;;;;;;;;:::i;:::-;;;;;;;;;;;;9048:21;;;;;;;;8886:192;8873:3;;;;;;;8834:250;;;;9090:25;;;;;;;;;;:::i;:::-;;;;;;;;8681:439;;;:::o;8091:188::-;8220:7;8242:32;8256:2;8260:7;8269:4;8242:13;:32::i;:::-;8235:39;;8091:188;;;;;:::o;3311:95:15:-;3369:6;3394:5;3387:12;;3311:95;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6021:126:22:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;1902:154:24:-;1993:4;2045;2016:25;2029:5;2036:4;2016:12;:25::i;:::-;:33;2009:40;;1902:154;;;;;:::o;4917:176:22:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;3714:255:21:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;5494:535:31:-;5547:25;5610:5;5585:21;;;;;;;;;;;5576:30;;:6;:30;;;;:::i;:::-;5575:40;;;;:::i;:::-;5547:68;;5645:1;5625:17;:21;5621:188;;;5657:12;5675:20;;;;;;;;;;;:25;;5708:17;5675:71;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5656:90;;;5762:7;5754:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;5648:161;5621:188;5815:23;5850:17;5841:6;:26;;;;:::i;:::-;5815:52;;5895:1;5877:15;:19;5873:152;;;5907:12;5925:7;:5;:7::i;:::-;:12;;5945:15;5925:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5906:59;;;5981:7;5973:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;5898:127;5873:152;5541:488;;5494:535;:::o;6033:160::-;6112:5;:19;;;:21;;;;;;;;;:::i;:::-;;;;;;6139:22;:30;6162:6;6139:30;;;;;;;;;;;;;;;:47;6170:5;:15;;;;;;;;;;;;6139:47;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:49;;;;;;;;;:::i;:::-;;;;;;6033:160;;:::o;6197:201::-;6298:22;6308:2;6312:7;6298:9;:22::i;:::-;6350:1;6336:3;;6330:17;;:21;6326:68;;;6361:26;6374:7;6383:3;;6361:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:26::i;:::-;6326:68;6197:201;;;;:::o;15665:312:7:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:14:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;1211:593:11:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;;1342:23;1368:10;:19;1379:7;1368:19;;;;;;;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;:8;:10::i;:::-;1397:31;;1523:1;1507:4;1501:18;:23;1497:70;;1547:9;1540:16;;;;;;1497:70;1692:1;1672:9;1666:23;:27;1662:95;;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;;;1662:95;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;;;;1211:593;;;;:::o;3845:262:22:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;938:207:11:-;1040:4;761:10;754:18;;1063:35;;;:11;:35;;;;:75;;;;1102:36;1126:11;1102:23;:36::i;:::-;1063:75;1056:82;;938:207;;;:::o;5732:115:7:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;2518:625:10:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;;2728:1;2703:27;;:13;:27;;;2699:210;;2746:40;2778:7;2746:31;:40::i;:::-;2699:210;;;2824:2;2807:19;;:13;:19;;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;2803:106;2699:210;2936:1;2922:16;;:2;:16;;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;3020:19;;:13;:19;;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3016:90;2918:188;3123:13;3116:20;;;2518:625;;;;;:::o;3358:267:18:-;3452:13;1390:66;3510:17;;3500:5;3481:46;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:267;;;;;:::o;2457:308:24:-;2540:7;2559:20;2582:4;2559:27;;2601:9;2596:134;2620:5;:12;2616:1;:16;2596:134;;;2668:51;2696:12;2710:5;2716:1;2710:8;;;;;;;;:::i;:::-;;;;;;;;2668:27;:51::i;:::-;2653:66;;2634:3;;;;;;;2596:134;;;;2746:12;2739:19;;;2457:308;;;;:::o;3326:374:25:-;3419:14;3501:4;3495:11;3531:10;3526:3;3519:23;3578:15;3571:4;3566:3;3562:14;3555:39;3630:10;3623:4;3618:3;3614:14;3607:34;3679:4;3674:3;3664:20;3654:30;;3470:224;3326:374;;;;:::o;2129:778:21:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;10656:100:7:-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;:::-;10656:100;;:::o;1923:167:11:-;2036:9;2014:10;:19;2025:7;2014:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2060:23;2075:7;2060:23;;;;;;:::i;:::-;;;;;;;;1923:167;;:::o;3173:92:7:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;4113:179:22:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;1435:222:10:-;1537:4;1575:35;1560:50;;;:11;:50;;;;:90;;;;1614:36;1638:11;1614:23;:36::i;:::-;1560:90;1553:97;;1435:222;;;:::o;8861:795:7:-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;3846:161:10:-;3949:10;:17;;;;3922:15;:24;3938:7;3922:24;;;;;;;;;;;:44;;;;3976:10;3992:7;3976:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:161;:::o;4624:1055::-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4886:40;;4936:18;4957:17;:26;4975:7;4957:26;;;;;;;;;;;;4936:47;;4994:61;5058:12;:18;5071:4;5058:18;;;;;;;;;;;;;;;4994:82;;5194:14;5180:10;:28;5176:325;;5224:19;5246;:35;5266:14;5246:35;;;;;;;;;;;;5224:57;;5330:11;5296:19;:31;5316:10;5296:31;;;;;;;;;;;:45;;;;5446:10;5413:17;:30;5431:11;5413:30;;;;;;;;;;;:43;;;;5210:291;5176:325;5594:17;:26;5612:7;5594:26;;;;;;;;;;;5587:33;;;5637:19;:35;5657:14;5637:35;;;;;;;;;;;5630:42;;;4705:974;;;4624:1055;;:::o;5967:1061::-;6216:22;6261:1;6241:10;:17;;;;:21;;;;:::i;:::-;6216:46;;6272:18;6293:15;:24;6309:7;6293:24;;;;;;;;;;;;6272:45;;6639:19;6661:10;6672:14;6661:26;;;;;;;;:::i;:::-;;;;;;;;;;6639:48;;6723:11;6698:10;6709;6698:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6833:10;6802:15;:28;6818:11;6802:28;;;;;;;;;;;:41;;;;6971:15;:24;6987:7;6971:24;;;;;;;;;;;6964:31;;;7005:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6038:990;;;5967:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;3521:34;;3592:7;3565:12;:16;3578:2;3565:16;;;;;;;;;;;;;;;:24;3582:6;3565:24;;;;;;;;;;;:34;;;;3638:6;3609:17;:26;3627:7;3609:26;;;;;;;;;;;:35;;;;3511:140;3437:214;;:::o;2078:378:18:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;504:169:23:-;579:7;609:1;605;:5;:61;;641:25;661:1;664;641:19;:25::i;:::-;605:61;;;613:25;633:1;636;613:19;:25::i;:::-;605:61;598:68;;504:169;;;;:::o;5203:1551:21:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;10977:207:7:-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;11133:12;:10;:12::i;:::-;11155:1;11159:2;11163:7;11172:4;11099:33;:78::i;:::-;10977:207;;;:::o;637:632:20:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;944:6;940:2;936:15;928:6;924:28;917:35;;979:247;986:4;979:247;;;1010:5;;;;;;;;1114:10;1109:2;1102:5;1098:14;1093:32;1088:3;1080:46;1170:2;1161:11;;;;;;:::i;:::-;;;;;1203:1;1194:5;:10;979:247;1190:21;979:247;1246:6;1239:13;;;;;637:632;;;:::o;1560:300:7:-;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;2528:245:18:-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;793:239:23:-;866:13;943:1;937:4;930:15;971:1;965:4;958:15;1011:4;1005;995:21;986:30;;793:239;;;;:::o;9978:327:7:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;25316:916:28:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;763:146:26:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;6401:272:7:-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:32:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:116::-;4962:21;4977:5;4962:21;:::i;:::-;4955:5;4952:32;4942:60;;4998:1;4995;4988:12;4942:60;4892:116;:::o;5014:133::-;5057:5;5095:6;5082:20;5073:29;;5111:30;5135:5;5111:30;:::i;:::-;5014:133;;;;:::o;5153:323::-;5209:6;5258:2;5246:9;5237:7;5233:23;5229:32;5226:119;;;5264:79;;:::i;:::-;5226:119;5384:1;5409:50;5451:7;5442:6;5431:9;5427:22;5409:50;:::i;:::-;5399:60;;5355:114;5153:323;;;;:::o;5482:118::-;5569:24;5587:5;5569:24;:::i;:::-;5564:3;5557:37;5482:118;;:::o;5606:222::-;5699:4;5737:2;5726:9;5722:18;5714:26;;5750:71;5818:1;5807:9;5803:17;5794:6;5750:71;:::i;:::-;5606:222;;;;:::o;5834:180::-;5882:77;5879:1;5872:88;5979:4;5976:1;5969:15;6003:4;6000:1;5993:15;6020:119;6107:1;6100:5;6097:12;6087:46;;6113:18;;:::i;:::-;6087:46;6020:119;:::o;6145:139::-;6196:7;6225:5;6214:16;;6231:47;6272:5;6231:47;:::i;:::-;6145:139;;;:::o;6290:::-;6352:9;6385:38;6417:5;6385:38;:::i;:::-;6372:51;;6290:139;;;:::o;6435:145::-;6524:49;6567:5;6524:49;:::i;:::-;6519:3;6512:62;6435:145;;:::o;6586:108::-;6663:24;6681:5;6663:24;:::i;:::-;6658:3;6651:37;6586:108;;:::o;6700:77::-;6737:7;6766:5;6755:16;;6700:77;;;:::o;6783:108::-;6860:24;6878:5;6860:24;:::i;:::-;6855:3;6848:37;6783:108;;:::o;6957:1603::-;7100:6;7095:3;7091:16;7194:4;7187:5;7183:16;7177:23;7213:75;7282:4;7277:3;7273:14;7259:12;7213:75;:::i;:::-;7117:181;7381:4;7374:5;7370:16;7364:23;7400:63;7457:4;7452:3;7448:14;7434:12;7400:63;:::i;:::-;7308:165;7560:4;7553:5;7549:16;7543:23;7579:63;7636:4;7631:3;7627:14;7613:12;7579:63;:::i;:::-;7483:169;7737:4;7730:5;7726:16;7720:23;7756:63;7813:4;7808:3;7804:14;7790:12;7756:63;:::i;:::-;7662:167;7916:4;7909:5;7905:16;7899:23;7935:63;7992:4;7987:3;7983:14;7969:12;7935:63;:::i;:::-;7839:169;8098:4;8091:5;8087:16;8081:23;8117:63;8174:4;8169:3;8165:14;8151:12;8117:63;:::i;:::-;8018:172;8281:4;8274:5;8270:16;8264:23;8300:63;8357:4;8352:3;8348:14;8334:12;8300:63;:::i;:::-;8200:173;8461:4;8454:5;8450:16;8444:23;8480:63;8537:4;8532:3;8528:14;8514:12;8480:63;:::i;:::-;8383:170;7069:1491;6957:1603;;:::o;8566:425::-;8733:4;8771:3;8760:9;8756:19;8748:27;;8785:71;8853:1;8842:9;8838:17;8829:6;8785:71;:::i;:::-;8866:118;8980:2;8969:9;8965:18;8956:6;8866:118;:::i;:::-;8566:425;;;;;:::o;8997:619::-;9074:6;9082;9090;9139:2;9127:9;9118:7;9114:23;9110:32;9107:119;;;9145:79;;:::i;:::-;9107:119;9265:1;9290:53;9335:7;9326:6;9315:9;9311:22;9290:53;:::i;:::-;9280:63;;9236:117;9392:2;9418:53;9463:7;9454:6;9443:9;9439:22;9418:53;:::i;:::-;9408:63;;9363:118;9520:2;9546:53;9591:7;9582:6;9571:9;9567:22;9546:53;:::i;:::-;9536:63;;9491:118;8997:619;;;;;:::o;9622:474::-;9690:6;9698;9747:2;9735:9;9726:7;9722:23;9718:32;9715:119;;;9753:79;;:::i;:::-;9715:119;9873:1;9898:53;9943:7;9934:6;9923:9;9919:22;9898:53;:::i;:::-;9888:63;;9844:117;10000:2;10026:53;10071:7;10062:6;10051:9;10047:22;10026:53;:::i;:::-;10016:63;;9971:118;9622:474;;;;;:::o;10102:332::-;10223:4;10261:2;10250:9;10246:18;10238:26;;10274:71;10342:1;10331:9;10327:17;10318:6;10274:71;:::i;:::-;10355:72;10423:2;10412:9;10408:18;10399:6;10355:72;:::i;:::-;10102:332;;;;;:::o;10440:155::-;10539:49;10582:5;10539:49;:::i;:::-;10534:3;10527:62;10440:155;;:::o;10601:118::-;10688:24;10706:5;10688:24;:::i;:::-;10683:3;10676:37;10601:118;;:::o;10725:1021::-;11026:4;11064:3;11053:9;11049:19;11041:27;;11078:83;11158:1;11147:9;11143:17;11134:6;11078:83;:::i;:::-;11171:72;11239:2;11228:9;11224:18;11215:6;11171:72;:::i;:::-;11253;11321:2;11310:9;11306:18;11297:6;11253:72;:::i;:::-;11335;11403:2;11392:9;11388:18;11379:6;11335:72;:::i;:::-;11417:73;11485:3;11474:9;11470:19;11461:6;11417:73;:::i;:::-;11500;11568:3;11557:9;11553:19;11544:6;11500:73;:::i;:::-;11583;11651:3;11640:9;11636:19;11627:6;11583:73;:::i;:::-;11666;11734:3;11723:9;11719:19;11710:6;11666:73;:::i;:::-;10725:1021;;;;;;;;;;;:::o;11752:113::-;11839:1;11832:5;11829:12;11819:40;;11855:1;11852;11845:12;11819:40;11752:113;:::o;11871:167::-;11931:5;11969:6;11956:20;11947:29;;11985:47;12026:5;11985:47;:::i;:::-;11871:167;;;;:::o;12044:122::-;12117:24;12135:5;12117:24;:::i;:::-;12110:5;12107:35;12097:63;;12156:1;12153;12146:12;12097:63;12044:122;:::o;12172:139::-;12218:5;12256:6;12243:20;12234:29;;12272:33;12299:5;12272:33;:::i;:::-;12172:139;;;;:::o;12317:1231::-;12444:6;12452;12460;12468;12476;12484;12492;12541:3;12529:9;12520:7;12516:23;12512:33;12509:120;;;12548:79;;:::i;:::-;12509:120;12668:1;12693:67;12752:7;12743:6;12732:9;12728:22;12693:67;:::i;:::-;12683:77;;12639:131;12809:2;12835:53;12880:7;12871:6;12860:9;12856:22;12835:53;:::i;:::-;12825:63;;12780:118;12937:2;12963:53;13008:7;12999:6;12988:9;12984:22;12963:53;:::i;:::-;12953:63;;12908:118;13065:2;13091:53;13136:7;13127:6;13116:9;13112:22;13091:53;:::i;:::-;13081:63;;13036:118;13193:3;13220:53;13265:7;13256:6;13245:9;13241:22;13220:53;:::i;:::-;13210:63;;13164:119;13322:3;13349:53;13394:7;13385:6;13374:9;13370:22;13349:53;:::i;:::-;13339:63;;13293:119;13451:3;13478:53;13523:7;13514:6;13503:9;13499:22;13478:53;:::i;:::-;13468:63;;13422:119;12317:1231;;;;;;;;;;:::o;13554:329::-;13613:6;13662:2;13650:9;13641:7;13637:23;13633:32;13630:119;;;13668:79;;:::i;:::-;13630:119;13788:1;13813:53;13858:7;13849:6;13838:9;13834:22;13813:53;:::i;:::-;13803:63;;13759:117;13554:329;;;;:::o;13889:114::-;13956:6;13990:5;13984:12;13974:22;;13889:114;;;:::o;14009:184::-;14108:11;14142:6;14137:3;14130:19;14182:4;14177:3;14173:14;14158:29;;14009:184;;;;:::o;14199:132::-;14266:4;14289:3;14281:11;;14319:4;14314:3;14310:14;14302:22;;14199:132;;;:::o;14337:179::-;14406:10;14427:46;14469:3;14461:6;14427:46;:::i;:::-;14505:4;14500:3;14496:14;14482:28;;14337:179;;;;:::o;14522:113::-;14592:4;14624;14619:3;14615:14;14607:22;;14522:113;;;:::o;14671:732::-;14790:3;14819:54;14867:5;14819:54;:::i;:::-;14889:86;14968:6;14963:3;14889:86;:::i;:::-;14882:93;;14999:56;15049:5;14999:56;:::i;:::-;15078:7;15109:1;15094:284;15119:6;15116:1;15113:13;15094:284;;;15195:6;15189:13;15222:63;15281:3;15266:13;15222:63;:::i;:::-;15215:70;;15308:60;15361:6;15308:60;:::i;:::-;15298:70;;15154:224;15141:1;15138;15134:9;15129:14;;15094:284;;;15098:14;15394:3;15387:10;;14795:608;;;14671:732;;;;:::o;15409:373::-;15552:4;15590:2;15579:9;15575:18;15567:26;;15639:9;15633:4;15629:20;15625:1;15614:9;15610:17;15603:47;15667:108;15770:4;15761:6;15667:108;:::i;:::-;15659:116;;15409:373;;;;:::o;15788:149::-;15824:7;15864:66;15857:5;15853:78;15842:89;;15788:149;;;:::o;15943:115::-;16028:23;16045:5;16028:23;:::i;:::-;16023:3;16016:36;15943:115;;:::o;16064:1215::-;16413:4;16451:3;16440:9;16436:19;16428:27;;16465:69;16531:1;16520:9;16516:17;16507:6;16465:69;:::i;:::-;16581:9;16575:4;16571:20;16566:2;16555:9;16551:18;16544:48;16609:78;16682:4;16673:6;16609:78;:::i;:::-;16601:86;;16734:9;16728:4;16724:20;16719:2;16708:9;16704:18;16697:48;16762:78;16835:4;16826:6;16762:78;:::i;:::-;16754:86;;16850:72;16918:2;16907:9;16903:18;16894:6;16850:72;:::i;:::-;16932:73;17000:3;16989:9;16985:19;16976:6;16932:73;:::i;:::-;17015;17083:3;17072:9;17068:19;17059:6;17015:73;:::i;:::-;17136:9;17130:4;17126:20;17120:3;17109:9;17105:19;17098:49;17164:108;17267:4;17258:6;17164:108;:::i;:::-;17156:116;;16064:1215;;;;;;;;;;:::o;17285:117::-;17394:1;17391;17384:12;17408:117;17517:1;17514;17507:12;17531:117;17640:1;17637;17630:12;17668:553;17726:8;17736:6;17786:3;17779:4;17771:6;17767:17;17763:27;17753:122;;17794:79;;:::i;:::-;17753:122;17907:6;17894:20;17884:30;;17937:18;17929:6;17926:30;17923:117;;;17959:79;;:::i;:::-;17923:117;18073:4;18065:6;18061:17;18049:29;;18127:3;18119:4;18111:6;18107:17;18097:8;18093:32;18090:41;18087:128;;;18134:79;;:::i;:::-;18087:128;17668:553;;;;;:::o;18240:552::-;18297:8;18307:6;18357:3;18350:4;18342:6;18338:17;18334:27;18324:122;;18365:79;;:::i;:::-;18324:122;18478:6;18465:20;18455:30;;18508:18;18500:6;18497:30;18494:117;;;18530:79;;:::i;:::-;18494:117;18644:4;18636:6;18632:17;18620:29;;18698:3;18690:4;18682:6;18678:17;18668:8;18664:32;18661:41;18658:128;;;18705:79;;:::i;:::-;18658:128;18240:552;;;;;:::o;18815:568::-;18888:8;18898:6;18948:3;18941:4;18933:6;18929:17;18925:27;18915:122;;18956:79;;:::i;:::-;18915:122;19069:6;19056:20;19046:30;;19099:18;19091:6;19088:30;19085:117;;;19121:79;;:::i;:::-;19085:117;19235:4;19227:6;19223:17;19211:29;;19289:3;19281:4;19273:6;19269:17;19259:8;19255:32;19252:41;19249:128;;;19296:79;;:::i;:::-;19249:128;18815:568;;;;;:::o;19389:1685::-;19543:6;19551;19559;19567;19575;19583;19591;19599;19607;19656:3;19644:9;19635:7;19631:23;19627:33;19624:120;;;19663:79;;:::i;:::-;19624:120;19783:1;19808:53;19853:7;19844:6;19833:9;19829:22;19808:53;:::i;:::-;19798:63;;19754:117;19938:2;19927:9;19923:18;19910:32;19969:18;19961:6;19958:30;19955:117;;;19991:79;;:::i;:::-;19955:117;20104:65;20161:7;20152:6;20141:9;20137:22;20104:65;:::i;:::-;20086:83;;;;19881:298;20218:2;20244:53;20289:7;20280:6;20269:9;20265:22;20244:53;:::i;:::-;20234:63;;20189:118;20346:2;20372:53;20417:7;20408:6;20397:9;20393:22;20372:53;:::i;:::-;20362:63;;20317:118;20502:3;20491:9;20487:19;20474:33;20534:18;20526:6;20523:30;20520:117;;;20556:79;;:::i;:::-;20520:117;20669:64;20725:7;20716:6;20705:9;20701:22;20669:64;:::i;:::-;20651:82;;;;20445:298;20810:3;20799:9;20795:19;20782:33;20842:18;20834:6;20831:30;20828:117;;;20864:79;;:::i;:::-;20828:117;20977:80;21049:7;21040:6;21029:9;21025:22;20977:80;:::i;:::-;20959:98;;;;20753:314;19389:1685;;;;;;;;;;;:::o;21080:468::-;21145:6;21153;21202:2;21190:9;21181:7;21177:23;21173:32;21170:119;;;21208:79;;:::i;:::-;21170:119;21328:1;21353:53;21398:7;21389:6;21378:9;21374:22;21353:53;:::i;:::-;21343:63;;21299:117;21455:2;21481:50;21523:7;21514:6;21503:9;21499:22;21481:50;:::i;:::-;21471:60;;21426:115;21080:468;;;;;:::o;21554:117::-;21663:1;21660;21653:12;21677:180;21725:77;21722:1;21715:88;21822:4;21819:1;21812:15;21846:4;21843:1;21836:15;21863:281;21946:27;21968:4;21946:27;:::i;:::-;21938:6;21934:40;22076:6;22064:10;22061:22;22040:18;22028:10;22025:34;22022:62;22019:88;;;22087:18;;:::i;:::-;22019:88;22127:10;22123:2;22116:22;21906:238;21863:281;;:::o;22150:129::-;22184:6;22211:20;;:::i;:::-;22201:30;;22240:33;22268:4;22260:6;22240:33;:::i;:::-;22150:129;;;:::o;22285:307::-;22346:4;22436:18;22428:6;22425:30;22422:56;;;22458:18;;:::i;:::-;22422:56;22496:29;22518:6;22496:29;:::i;:::-;22488:37;;22580:4;22574;22570:15;22562:23;;22285:307;;;:::o;22598:148::-;22696:6;22691:3;22686;22673:30;22737:1;22728:6;22723:3;22719:16;22712:27;22598:148;;;:::o;22752:423::-;22829:5;22854:65;22870:48;22911:6;22870:48;:::i;:::-;22854:65;:::i;:::-;22845:74;;22942:6;22935:5;22928:21;22980:4;22973:5;22969:16;23018:3;23009:6;23004:3;23000:16;22997:25;22994:112;;;23025:79;;:::i;:::-;22994:112;23115:54;23162:6;23157:3;23152;23115:54;:::i;:::-;22835:340;22752:423;;;;;:::o;23194:338::-;23249:5;23298:3;23291:4;23283:6;23279:17;23275:27;23265:122;;23306:79;;:::i;:::-;23265:122;23423:6;23410:20;23448:78;23522:3;23514:6;23507:4;23499:6;23495:17;23448:78;:::i;:::-;23439:87;;23255:277;23194:338;;;;:::o;23538:943::-;23633:6;23641;23649;23657;23706:3;23694:9;23685:7;23681:23;23677:33;23674:120;;;23713:79;;:::i;:::-;23674:120;23833:1;23858:53;23903:7;23894:6;23883:9;23879:22;23858:53;:::i;:::-;23848:63;;23804:117;23960:2;23986:53;24031:7;24022:6;24011:9;24007:22;23986:53;:::i;:::-;23976:63;;23931:118;24088:2;24114:53;24159:7;24150:6;24139:9;24135:22;24114:53;:::i;:::-;24104:63;;24059:118;24244:2;24233:9;24229:18;24216:32;24275:18;24267:6;24264:30;24261:117;;;24297:79;;:::i;:::-;24261:117;24402:62;24456:7;24447:6;24436:9;24432:22;24402:62;:::i;:::-;24392:72;;24187:287;23538:943;;;;;;;:::o;24487:109::-;24523:7;24563:26;24556:5;24552:38;24541:49;;24487:109;;;:::o;24602:115::-;24687:23;24704:5;24687:23;:::i;:::-;24682:3;24675:36;24602:115;;:::o;24723:218::-;24814:4;24852:2;24841:9;24837:18;24829:26;;24865:69;24931:1;24920:9;24916:17;24907:6;24865:69;:::i;:::-;24723:218;;;;:::o;24947:474::-;25015:6;25023;25072:2;25060:9;25051:7;25047:23;25043:32;25040:119;;;25078:79;;:::i;:::-;25040:119;25198:1;25223:53;25268:7;25259:6;25248:9;25244:22;25223:53;:::i;:::-;25213:63;;25169:117;25325:2;25351:53;25396:7;25387:6;25376:9;25372:22;25351:53;:::i;:::-;25341:63;;25296:118;24947:474;;;;;:::o;25427:222::-;25520:4;25558:2;25547:9;25543:18;25535:26;;25571:71;25639:1;25628:9;25624:17;25615:6;25571:71;:::i;:::-;25427:222;;;;:::o;25655:502::-;25737:6;25745;25794:2;25782:9;25773:7;25769:23;25765:32;25762:119;;;25800:79;;:::i;:::-;25762:119;25920:1;25945:53;25990:7;25981:6;25970:9;25966:22;25945:53;:::i;:::-;25935:63;;25891:117;26047:2;26073:67;26132:7;26123:6;26112:9;26108:22;26073:67;:::i;:::-;26063:77;;26018:132;25655:502;;;;;:::o;26163:180::-;26211:77;26208:1;26201:88;26308:4;26305:1;26298:15;26332:4;26329:1;26322:15;26349:320;26393:6;26430:1;26424:4;26420:12;26410:22;;26477:1;26471:4;26467:12;26498:18;26488:81;;26554:4;26546:6;26542:17;26532:27;;26488:81;26616:2;26608:6;26605:14;26585:18;26582:38;26579:84;;26635:18;;:::i;:::-;26579:84;26400:269;26349:320;;;:::o;26675:180::-;26723:77;26720:1;26713:88;26820:4;26817:1;26810:15;26844:4;26841:1;26834:15;26861:442;27010:4;27048:2;27037:9;27033:18;27025:26;;27061:71;27129:1;27118:9;27114:17;27105:6;27061:71;:::i;:::-;27142:72;27210:2;27199:9;27195:18;27186:6;27142:72;:::i;:::-;27224;27292:2;27281:9;27277:18;27268:6;27224:72;:::i;:::-;26861:442;;;;;;:::o;27309:180::-;27357:77;27354:1;27347:88;27454:4;27451:1;27444:15;27478:4;27475:1;27468:15;27495:410;27535:7;27558:20;27576:1;27558:20;:::i;:::-;27553:25;;27592:20;27610:1;27592:20;:::i;:::-;27587:25;;27647:1;27644;27640:9;27669:30;27687:11;27669:30;:::i;:::-;27658:41;;27848:1;27839:7;27835:15;27832:1;27829:22;27809:1;27802:9;27782:83;27759:139;;27878:18;;:::i;:::-;27759:139;27543:362;27495:410;;;;:::o;27911:180::-;27959:77;27956:1;27949:88;28056:4;28053:1;28046:15;28080:4;28077:1;28070:15;28097:185;28137:1;28154:20;28172:1;28154:20;:::i;:::-;28149:25;;28188:20;28206:1;28188:20;:::i;:::-;28183:25;;28227:1;28217:35;;28232:18;;:::i;:::-;28217:35;28274:1;28271;28267:9;28262:14;;28097:185;;;;:::o;28288:168::-;28428:20;28424:1;28416:6;28412:14;28405:44;28288:168;:::o;28462:366::-;28604:3;28625:67;28689:2;28684:3;28625:67;:::i;:::-;28618:74;;28701:93;28790:3;28701:93;:::i;:::-;28819:2;28814:3;28810:12;28803:19;;28462:366;;;:::o;28834:419::-;29000:4;29038:2;29027:9;29023:18;29015:26;;29087:9;29081:4;29077:20;29073:1;29062:9;29058:17;29051:47;29115:131;29241:4;29115:131;:::i;:::-;29107:139;;28834:419;;;:::o;29259:230::-;29399:34;29395:1;29387:6;29383:14;29376:58;29468:13;29463:2;29455:6;29451:15;29444:38;29259:230;:::o;29495:366::-;29637:3;29658:67;29722:2;29717:3;29658:67;:::i;:::-;29651:74;;29734:93;29823:3;29734:93;:::i;:::-;29852:2;29847:3;29843:12;29836:19;;29495:366;;;:::o;29867:419::-;30033:4;30071:2;30060:9;30056:18;30048:26;;30120:9;30114:4;30110:20;30106:1;30095:9;30091:17;30084:47;30148:131;30274:4;30148:131;:::i;:::-;30140:139;;29867:419;;;:::o;30292:227::-;30432:34;30428:1;30420:6;30416:14;30409:58;30501:10;30496:2;30488:6;30484:15;30477:35;30292:227;:::o;30525:366::-;30667:3;30688:67;30752:2;30747:3;30688:67;:::i;:::-;30681:74;;30764:93;30853:3;30764:93;:::i;:::-;30882:2;30877:3;30873:12;30866:19;;30525:366;;;:::o;30897:419::-;31063:4;31101:2;31090:9;31086:18;31078:26;;31150:9;31144:4;31140:20;31136:1;31125:9;31121:17;31114:47;31178:131;31304:4;31178:131;:::i;:::-;31170:139;;30897:419;;;:::o;31322:226::-;31462:34;31458:1;31450:6;31446:14;31439:58;31531:9;31526:2;31518:6;31514:15;31507:34;31322:226;:::o;31554:366::-;31696:3;31717:67;31781:2;31776:3;31717:67;:::i;:::-;31710:74;;31793:93;31882:3;31793:93;:::i;:::-;31911:2;31906:3;31902:12;31895:19;;31554:366;;;:::o;31926:419::-;32092:4;32130:2;32119:9;32115:18;32107:26;;32179:9;32173:4;32169:20;32165:1;32154:9;32150:17;32143:47;32207:131;32333:4;32207:131;:::i;:::-;32199:139;;31926:419;;;:::o;32351:356::-;32484:4;32522:2;32511:9;32507:18;32499:26;;32535:83;32615:1;32604:9;32600:17;32591:6;32535:83;:::i;:::-;32628:72;32696:2;32685:9;32681:18;32672:6;32628:72;:::i;:::-;32351:356;;;;;:::o;32713:168::-;32853:20;32849:1;32841:6;32837:14;32830:44;32713:168;:::o;32887:366::-;33029:3;33050:67;33114:2;33109:3;33050:67;:::i;:::-;33043:74;;33126:93;33215:3;33126:93;:::i;:::-;33244:2;33239:3;33235:12;33228:19;;32887:366;;;:::o;33259:419::-;33425:4;33463:2;33452:9;33448:18;33440:26;;33512:9;33506:4;33502:20;33498:1;33487:9;33483:17;33476:47;33540:131;33666:4;33540:131;:::i;:::-;33532:139;;33259:419;;;:::o;33684:94::-;33717:8;33765:5;33761:2;33757:14;33736:35;;33684:94;;;:::o;33784:::-;33823:7;33852:20;33866:5;33852:20;:::i;:::-;33841:31;;33784:94;;;:::o;33884:100::-;33923:7;33952:26;33972:5;33952:26;:::i;:::-;33941:37;;33884:100;;;:::o;33990:157::-;34095:45;34115:24;34133:5;34115:24;:::i;:::-;34095:45;:::i;:::-;34090:3;34083:58;33990:157;;:::o;34153:256::-;34265:3;34280:75;34351:3;34342:6;34280:75;:::i;:::-;34380:2;34375:3;34371:12;34364:19;;34400:3;34393:10;;34153:256;;;;:::o;34415:180::-;34555:32;34551:1;34543:6;34539:14;34532:56;34415:180;:::o;34601:366::-;34743:3;34764:67;34828:2;34823:3;34764:67;:::i;:::-;34757:74;;34840:93;34929:3;34840:93;:::i;:::-;34958:2;34953:3;34949:12;34942:19;;34601:366;;;:::o;34973:419::-;35139:4;35177:2;35166:9;35162:18;35154:26;;35226:9;35220:4;35216:20;35212:1;35201:9;35197:17;35190:47;35254:131;35380:4;35254:131;:::i;:::-;35246:139;;34973:419;;;:::o;35398:191::-;35438:3;35457:20;35475:1;35457:20;:::i;:::-;35452:25;;35491:20;35509:1;35491:20;:::i;:::-;35486:25;;35534:1;35531;35527:9;35520:16;;35555:3;35552:1;35549:10;35546:36;;;35562:18;;:::i;:::-;35546:36;35398:191;;;;:::o;35595:167::-;35735:19;35731:1;35723:6;35719:14;35712:43;35595:167;:::o;35768:366::-;35910:3;35931:67;35995:2;35990:3;35931:67;:::i;:::-;35924:74;;36007:93;36096:3;36007:93;:::i;:::-;36125:2;36120:3;36116:12;36109:19;;35768:366;;;:::o;36140:419::-;36306:4;36344:2;36333:9;36329:18;36321:26;;36393:9;36387:4;36383:20;36379:1;36368:9;36364:17;36357:47;36421:131;36547:4;36421:131;:::i;:::-;36413:139;;36140:419;;;:::o;36565:172::-;36705:24;36701:1;36693:6;36689:14;36682:48;36565:172;:::o;36743:366::-;36885:3;36906:67;36970:2;36965:3;36906:67;:::i;:::-;36899:74;;36982:93;37071:3;36982:93;:::i;:::-;37100:2;37095:3;37091:12;37084:19;;36743:366;;;:::o;37115:419::-;37281:4;37319:2;37308:9;37304:18;37296:26;;37368:9;37362:4;37358:20;37354:1;37343:9;37339:17;37332:47;37396:131;37522:4;37396:131;:::i;:::-;37388:139;;37115:419;;;:::o;37540:147::-;37641:11;37678:3;37663:18;;37540:147;;;;:::o;37715:327::-;37829:3;37850:88;37931:6;37926:3;37850:88;:::i;:::-;37843:95;;37948:56;37997:6;37992:3;37985:5;37948:56;:::i;:::-;38029:6;38024:3;38020:16;38013:23;;37715:327;;;;;:::o;38048:291::-;38188:3;38210:103;38309:3;38300:6;38292;38210:103;:::i;:::-;38203:110;;38330:3;38323:10;;38048:291;;;;;:::o;38345:997::-;38634:4;38672:3;38661:9;38657:19;38649:27;;38686:71;38754:1;38743:9;38739:17;38730:6;38686:71;:::i;:::-;38767:72;38835:2;38824:9;38820:18;38811:6;38767:72;:::i;:::-;38849;38917:2;38906:9;38902:18;38893:6;38849:72;:::i;:::-;38931;38999:2;38988:9;38984:18;38975:6;38931:72;:::i;:::-;39013:73;39081:3;39070:9;39066:19;39057:6;39013:73;:::i;:::-;39096;39164:3;39153:9;39149:19;39140:6;39096:73;:::i;:::-;39179;39247:3;39236:9;39232:19;39223:6;39179:73;:::i;:::-;39262;39330:3;39319:9;39315:19;39306:6;39262:73;:::i;:::-;38345:997;;;;;;;;;;;:::o;39348:167::-;39488:19;39484:1;39476:6;39472:14;39465:43;39348:167;:::o;39521:366::-;39663:3;39684:67;39748:2;39743:3;39684:67;:::i;:::-;39677:74;;39760:93;39849:3;39760:93;:::i;:::-;39878:2;39873:3;39869:12;39862:19;;39521:366;;;:::o;39893:419::-;40059:4;40097:2;40086:9;40082:18;40074:26;;40146:9;40140:4;40136:20;40132:1;40121:9;40117:17;40110:47;40174:131;40300:4;40174:131;:::i;:::-;40166:139;;39893:419;;;:::o;40318:174::-;40458:26;40454:1;40446:6;40442:14;40435:50;40318:174;:::o;40498:366::-;40640:3;40661:67;40725:2;40720:3;40661:67;:::i;:::-;40654:74;;40737:93;40826:3;40737:93;:::i;:::-;40855:2;40850:3;40846:12;40839:19;;40498:366;;;:::o;40870:419::-;41036:4;41074:2;41063:9;41059:18;41051:26;;41123:9;41117:4;41113:20;41109:1;41098:9;41094:17;41087:47;41151:131;41277:4;41151:131;:::i;:::-;41143:139;;40870:419;;;:::o;41295:176::-;41435:28;41431:1;41423:6;41419:14;41412:52;41295:176;:::o;41477:366::-;41619:3;41640:67;41704:2;41699:3;41640:67;:::i;:::-;41633:74;;41716:93;41805:3;41716:93;:::i;:::-;41834:2;41829:3;41825:12;41818:19;;41477:366;;;:::o;41849:419::-;42015:4;42053:2;42042:9;42038:18;42030:26;;42102:9;42096:4;42092:20;42088:1;42077:9;42073:17;42066:47;42130:131;42256:4;42130:131;:::i;:::-;42122:139;;41849:419;;;:::o;42274:222::-;42414:34;42410:1;42402:6;42398:14;42391:58;42483:5;42478:2;42470:6;42466:15;42459:30;42274:222;:::o;42502:366::-;42644:3;42665:67;42729:2;42724:3;42665:67;:::i;:::-;42658:74;;42741:93;42830:3;42741:93;:::i;:::-;42859:2;42854:3;42850:12;42843:19;;42502:366;;;:::o;42874:419::-;43040:4;43078:2;43067:9;43063:18;43055:26;;43127:9;43121:4;43117:20;43113:1;43102:9;43098:17;43091:47;43155:131;43281:4;43155:131;:::i;:::-;43147:139;;42874:419;;;:::o;43299:246::-;43404:4;43442:2;43431:9;43427:18;43419:26;;43455:83;43535:1;43524:9;43520:17;43511:6;43455:83;:::i;:::-;43299:246;;;;:::o;43551:165::-;43691:17;43687:1;43679:6;43675:14;43668:41;43551:165;:::o;43722:366::-;43864:3;43885:67;43949:2;43944:3;43885:67;:::i;:::-;43878:74;;43961:93;44050:3;43961:93;:::i;:::-;44079:2;44074:3;44070:12;44063:19;;43722:366;;;:::o;44094:419::-;44260:4;44298:2;44287:9;44283:18;44275:26;;44347:9;44341:4;44337:20;44333:1;44322:9;44318:17;44311:47;44375:131;44501:4;44375:131;:::i;:::-;44367:139;;44094:419;;;:::o;44519:114::-;;:::o;44639:398::-;44798:3;44819:83;44900:1;44895:3;44819:83;:::i;:::-;44812:90;;44911:93;45000:3;44911:93;:::i;:::-;45029:1;45024:3;45020:11;45013:18;;44639:398;;;:::o;45043:379::-;45227:3;45249:147;45392:3;45249:147;:::i;:::-;45242:154;;45413:3;45406:10;;45043:379;;;:::o;45428:178::-;45568:30;45564:1;45556:6;45552:14;45545:54;45428:178;:::o;45612:366::-;45754:3;45775:67;45839:2;45834:3;45775:67;:::i;:::-;45768:74;;45851:93;45940:3;45851:93;:::i;:::-;45969:2;45964:3;45960:12;45953:19;;45612:366;;;:::o;45984:419::-;46150:4;46188:2;46177:9;46173:18;46165:26;;46237:9;46231:4;46227:20;46223:1;46212:9;46208:17;46201:47;46265:131;46391:4;46265:131;:::i;:::-;46257:139;;45984:419;;;:::o;46409:194::-;46449:4;46469:20;46487:1;46469:20;:::i;:::-;46464:25;;46503:20;46521:1;46503:20;:::i;:::-;46498:25;;46547:1;46544;46540:9;46532:17;;46571:1;46565:4;46562:11;46559:37;;;46576:18;;:::i;:::-;46559:37;46409:194;;;;:::o;46609:175::-;46749:27;46745:1;46737:6;46733:14;46726:51;46609:175;:::o;46790:366::-;46932:3;46953:67;47017:2;47012:3;46953:67;:::i;:::-;46946:74;;47029:93;47118:3;47029:93;:::i;:::-;47147:2;47142:3;47138:12;47131:19;;46790:366;;;:::o;47162:419::-;47328:4;47366:2;47355:9;47351:18;47343:26;;47415:9;47409:4;47405:20;47401:1;47390:9;47386:17;47379:47;47443:131;47569:4;47443:131;:::i;:::-;47435:139;;47162:419;;;:::o;47587:233::-;47626:3;47649:24;47667:5;47649:24;:::i;:::-;47640:33;;47695:66;47688:5;47685:77;47682:103;;47765:18;;:::i;:::-;47682:103;47812:1;47805:5;47801:13;47794:20;;47587:233;;;:::o;47826:98::-;47877:6;47911:5;47905:12;47895:22;;47826:98;;;:::o;47930:168::-;48013:11;48047:6;48042:3;48035:19;48087:4;48082:3;48078:14;48063:29;;47930:168;;;;:::o;48104:373::-;48190:3;48218:38;48250:5;48218:38;:::i;:::-;48272:70;48335:6;48330:3;48272:70;:::i;:::-;48265:77;;48351:65;48409:6;48404:3;48397:4;48390:5;48386:16;48351:65;:::i;:::-;48441:29;48463:6;48441:29;:::i;:::-;48436:3;48432:39;48425:46;;48194:283;48104:373;;;;:::o;48483:640::-;48678:4;48716:3;48705:9;48701:19;48693:27;;48730:71;48798:1;48787:9;48783:17;48774:6;48730:71;:::i;:::-;48811:72;48879:2;48868:9;48864:18;48855:6;48811:72;:::i;:::-;48893;48961:2;48950:9;48946:18;48937:6;48893:72;:::i;:::-;49012:9;49006:4;49002:20;48997:2;48986:9;48982:18;48975:48;49040:76;49111:4;49102:6;49040:76;:::i;:::-;49032:84;;48483:640;;;;;;;:::o;49129:141::-;49185:5;49216:6;49210:13;49201:22;;49232:32;49258:5;49232:32;:::i;:::-;49129:141;;;;:::o;49276:349::-;49345:6;49394:2;49382:9;49373:7;49369:23;49365:32;49362:119;;;49400:79;;:::i;:::-;49362:119;49520:1;49545:63;49600:7;49591:6;49580:9;49576:22;49545:63;:::i;:::-;49535:73;;49491:127;49276:349;;;;:::o;49631:148::-;49733:11;49770:3;49755:18;;49631:148;;;;:::o;49785:390::-;49891:3;49919:39;49952:5;49919:39;:::i;:::-;49974:89;50056:6;50051:3;49974:89;:::i;:::-;49967:96;;50072:65;50130:6;50125:3;50118:4;50111:5;50107:16;50072:65;:::i;:::-;50162:6;50157:3;50153:16;50146:23;;49895:280;49785:390;;;;:::o;50181:435::-;50361:3;50383:95;50474:3;50465:6;50383:95;:::i;:::-;50376:102;;50495:95;50586:3;50577:6;50495:95;:::i;:::-;50488:102;;50607:3;50600:10;;50181:435;;;;;:::o;50622:141::-;50671:4;50694:3;50686:11;;50717:3;50714:1;50707:14;50751:4;50748:1;50738:18;50730:26;;50622:141;;;:::o;50769:93::-;50806:6;50853:2;50848;50841:5;50837:14;50833:23;50823:33;;50769:93;;;:::o;50868:107::-;50912:8;50962:5;50956:4;50952:16;50931:37;;50868:107;;;;:::o;50981:393::-;51050:6;51100:1;51088:10;51084:18;51123:97;51153:66;51142:9;51123:97;:::i;:::-;51241:39;51271:8;51260:9;51241:39;:::i;:::-;51229:51;;51313:4;51309:9;51302:5;51298:21;51289:30;;51362:4;51352:8;51348:19;51341:5;51338:30;51328:40;;51057:317;;50981:393;;;;;:::o;51380:60::-;51408:3;51429:5;51422:12;;51380:60;;;:::o;51446:142::-;51496:9;51529:53;51547:34;51556:24;51574:5;51556:24;:::i;:::-;51547:34;:::i;:::-;51529:53;:::i;:::-;51516:66;;51446:142;;;:::o;51594:75::-;51637:3;51658:5;51651:12;;51594:75;;;:::o;51675:269::-;51785:39;51816:7;51785:39;:::i;:::-;51846:91;51895:41;51919:16;51895:41;:::i;:::-;51887:6;51880:4;51874:11;51846:91;:::i;:::-;51840:4;51833:105;51751:193;51675:269;;;:::o;51950:73::-;51995:3;51950:73;:::o;52029:189::-;52106:32;;:::i;:::-;52147:65;52205:6;52197;52191:4;52147:65;:::i;:::-;52082:136;52029:189;;:::o;52224:186::-;52284:120;52301:3;52294:5;52291:14;52284:120;;;52355:39;52392:1;52385:5;52355:39;:::i;:::-;52328:1;52321:5;52317:13;52308:22;;52284:120;;;52224:186;;:::o;52416:543::-;52517:2;52512:3;52509:11;52506:446;;;52551:38;52583:5;52551:38;:::i;:::-;52635:29;52653:10;52635:29;:::i;:::-;52625:8;52621:44;52818:2;52806:10;52803:18;52800:49;;;52839:8;52824:23;;52800:49;52862:80;52918:22;52936:3;52918:22;:::i;:::-;52908:8;52904:37;52891:11;52862:80;:::i;:::-;52521:431;;52506:446;52416:543;;;:::o;52965:117::-;53019:8;53069:5;53063:4;53059:16;53038:37;;52965:117;;;;:::o;53088:169::-;53132:6;53165:51;53213:1;53209:6;53201:5;53198:1;53194:13;53165:51;:::i;:::-;53161:56;53246:4;53240;53236:15;53226:25;;53139:118;53088:169;;;;:::o;53262:295::-;53338:4;53484:29;53509:3;53503:4;53484:29;:::i;:::-;53476:37;;53546:3;53543:1;53539:11;53533:4;53530:21;53522:29;;53262:295;;;;:::o;53562:1395::-;53679:37;53712:3;53679:37;:::i;:::-;53781:18;53773:6;53770:30;53767:56;;;53803:18;;:::i;:::-;53767:56;53847:38;53879:4;53873:11;53847:38;:::i;:::-;53932:67;53992:6;53984;53978:4;53932:67;:::i;:::-;54026:1;54050:4;54037:17;;54082:2;54074:6;54071:14;54099:1;54094:618;;;;54756:1;54773:6;54770:77;;;54822:9;54817:3;54813:19;54807:26;54798:35;;54770:77;54873:67;54933:6;54926:5;54873:67;:::i;:::-;54867:4;54860:81;54729:222;54064:887;;54094:618;54146:4;54142:9;54134:6;54130:22;54180:37;54212:4;54180:37;:::i;:::-;54239:1;54253:208;54267:7;54264:1;54261:14;54253:208;;;54346:9;54341:3;54337:19;54331:26;54323:6;54316:42;54397:1;54389:6;54385:14;54375:24;;54444:2;54433:9;54429:18;54416:31;;54290:4;54287:1;54283:12;54278:17;;54253:208;;;54489:6;54480:7;54477:19;54474:179;;;54547:9;54542:3;54538:19;54532:26;54590:48;54632:4;54624:6;54620:17;54609:9;54590:48;:::i;:::-;54582:6;54575:64;54497:156;54474:179;54699:1;54695;54687:6;54683:14;54679:22;54673:4;54666:36;54101:611;;;54064:887;;53654:1303;;;53562:1395;;:::o;54963:664::-;55168:4;55206:3;55195:9;55191:19;55183:27;;55220:71;55288:1;55277:9;55273:17;55264:6;55220:71;:::i;:::-;55301:72;55369:2;55358:9;55354:18;55345:6;55301:72;:::i;:::-;55383;55451:2;55440:9;55436:18;55427:6;55383:72;:::i;:::-;55465;55533:2;55522:9;55518:18;55509:6;55465:72;:::i;:::-;55547:73;55615:3;55604:9;55600:19;55591:6;55547:73;:::i;:::-;54963:664;;;;;;;;:::o;55633:180::-;55681:77;55678:1;55671:88;55778:4;55775:1;55768:15;55802:4;55799:1;55792:15;55819:86;55854:7;55894:4;55887:5;55883:16;55872:27;;55819:86;;;:::o;55911:112::-;55994:22;56010:5;55994:22;:::i;:::-;55989:3;55982:35;55911:112;;:::o;56029:545::-;56202:4;56240:3;56229:9;56225:19;56217:27;;56254:71;56322:1;56311:9;56307:17;56298:6;56254:71;:::i;:::-;56335:68;56399:2;56388:9;56384:18;56375:6;56335:68;:::i;:::-;56413:72;56481:2;56470:9;56466:18;56457:6;56413:72;:::i;:::-;56495;56563:2;56552:9;56548:18;56539:6;56495:72;:::i;:::-;56029:545;;;;;;;:::o"},"methodIdentifiers":{"addPhase(uint8,uint256,uint256,uint256,uint256,uint256,bytes32)":"57036078","approve(address,uint256)":"095ea7b3","backendSigner()":"65d65e86","balanceOf(address)":"70a08231","eip712Domain()":"84b0196e","getActivePhase()":"1ce97fd1","getApproved(uint256)":"081812fc","getDomainSeparator()":"ed24911d","getMintedInPhase(address,uint8)":"f7330c2d","getPhaseCount()":"db5e0063","isActivePhasePresent()":"072a1319","isApprovedForAll(address,address)":"e985e9c5","isPaused()":"b187bd26","mint(uint256,string,bytes32,uint256,bytes,bytes32[])":"8ff75e82","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","phases(uint256)":"2e37eef6","platformFeePercentage()":"cdd78cfc","platformFeeRecipient()":"eb13554f","renounceOwnership()":"715018a6","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setPaused(bool)":"16c38b3c","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","tokensOfOwner(address)":"8462151c","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint96\",\"name\":\"_royaltyFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_platformFee\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backendSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"phaseIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum LaunchNFTV3.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PhaseAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"phaseIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum LaunchNFTV3.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PhaseUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newPercentage\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum LaunchNFTV3.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawCompleted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum LaunchNFTV3.PhaseType\",\"name\":\"_phaseType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"addPhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backendSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivePhase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"phaseIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum LaunchNFTV3.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintedInPhase\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct LaunchNFTV3.Phase\",\"name\":\"phase\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum LaunchNFTV3.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"}],\"name\":\"getMintedInPhase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPhaseCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActivePhasePresent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"uniqueId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"phases\",\"outputs\":[{\"internalType\":\"enum LaunchNFTV3.PhaseType\",\"name\":\"phaseType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintedInPhase\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercentage\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isPaused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/blockchain/evm/contracts/DirectMintNFTV3.sol\":\"LaunchNFTV3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00\",\"dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x01818908219f73eecfbbe8999ac583ee3fcbfe8e39e8e0a823199737d0ed8052\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://674bafb0a373297befe1b5fe4f5a02cc18a305d8f9a4577deddc2030a611433e\",\"dweb:/ipfs/QmPq5sBp1upRbBVdU5kd1VyG4tHAbv9z6V1NSPuPs8vAtd\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/blockchain/evm/contracts/DirectMintNFTV3.sol\":{\"keccak256\":\"0x2ad4643320ae7e6b174a088317a4658ccdce49530934030d2f198a74f55f2b18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1654f94dcfc7c1736e222aa1c13cab96d5391612bbf31e70a9d4f4ab37a24f1\",\"dweb:/ipfs/QmNSG1CWtnBiTfNpUNtBThQtRwS7YYHXKWGsKCZkT2Bidg\"]}},\"version\":1}"}}}}}