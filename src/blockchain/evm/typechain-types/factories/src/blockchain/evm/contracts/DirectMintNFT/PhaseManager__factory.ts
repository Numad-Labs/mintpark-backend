/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  PhaseManager,
  PhaseManagerInterface,
} from "../../../../../../src/blockchain/evm/contracts/DirectMintNFT/PhaseManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "phaseIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IPhaseManager.PhaseType",
        name: "phaseType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PhaseAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "phaseIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IPhaseManager.PhaseType",
        name: "phaseType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PhaseUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum IPhaseManager.PhaseType",
        name: "_phaseType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPerWallet",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "addPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActivePhase",
    outputs: [
      {
        internalType: "uint256",
        name: "phaseIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IPhaseManager.PhaseType",
            name: "phaseType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPerWallet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintedInPhase",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct IPhaseManager.Phase",
        name: "phase",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum IPhaseManager.PhaseType",
        name: "phaseType",
        type: "uint8",
      },
    ],
    name: "getMintedInPhase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPhaseCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActivePhasePresent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "phases",
    outputs: [
      {
        internalType: "enum IPhaseManager.PhaseType",
        name: "phaseType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPerWallet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintedInPhase",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "recordMint",
    outputs: [
      {
        internalType: "enum IPhaseManager.PhaseType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611b2c380380611b2c833981810160405281019061003291906102db565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c9190610317565b60405180910390fd5b6100b4816101b460201b60201c565b506001604051806101000160405280600060038111156100d7576100d6610332565b5b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000801b815250908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000160006101000a81548160ff0219169083600381111561016157610160610332565b5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155505050610361565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a88261027d565b9050919050565b6102b88161029d565b81146102c357600080fd5b50565b6000815190506102d5816102af565b92915050565b6000602082840312156102f1576102f0610278565b5b60006102ff848285016102c6565b91505092915050565b6103118161029d565b82525050565b600060208201905061032c6000830184610308565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6117bc806103706000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461013d578063db5e00631461015b578063f2fde38b14610179578063f7330c2d14610195578063fc19034b146101c55761009e565b8063072a1319146100a35780631ce97fd1146100c15780632e37eef6146100e05780635703607814610117578063715018a614610133575b600080fd5b6100ab6101f5565b6040516100b89190610e63565b60405180910390f35b6100c96102ef565b6040516100d7929190610fd8565b60405180910390f35b6100fa60048036038101906100f59190611033565b610399565b60405161010e98979695949392919061107e565b60405180910390f35b610131600480360381019061012c919061114d565b6103fe565b005b61013b6107a2565b005b6101456107b6565b6040516101529190611230565b60405180910390f35b6101636107df565b604051610170919061124b565b60405180910390f35b610193600480360381019061018e9190611292565b6107ec565b005b6101af60048036038101906101aa91906112bf565b610872565b6040516101bc919061124b565b60405180910390f35b6101df60048036038101906101da9190611292565b6108f1565b6040516101ec91906112ff565b60405180910390f35b60008042905060005b6001805490508110156102e5576000600381111561021f5761021e610e97565b5b600182815481106102335761023261131a565b5b906000526020600020906008020160000160009054906101000a900460ff16600381111561026457610263610e97565b5b141580156102975750600181815481106102815761028061131a565b5b9060005260206000209060080201600201548210155b80156102c85750600181815481106102b2576102b161131a565b5b9060005260206000209060080201600301548211155b156102d8576001925050506102ec565b80806001019150506101fe565b5060009150505b90565b60006102f9610dee565b610301610b46565b80604051806101000160405290816000820160009054906101000a900460ff16600381111561033357610332610e97565b5b600381111561034557610344610e97565b5b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050915091509091565b600181815481106103a957600080fd5b90600052602060002090600802016000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b610406610c9b565b838510610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f906113a6565b60405180910390fd5b6002600381111561045c5761045b610e97565b5b87600381111561046f5761046e610e97565b5b146104fd57600082116104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae90611438565b60405180910390fd5b6000801b81036104fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f3906114ca565b60405180910390fd5b5b60005b60018054905081101561065d576000600182815481106105235761052261131a565b5b9060005260206000209060080201604051806101000160405290816000820160009054906101000a900460ff16600381111561056257610561610e97565b5b600381111561057457610573610e97565b5b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600060038111156105d4576105d3610e97565b5b816000015160038111156105eb576105ea610e97565b5b036105f65750610650565b8060600151871115801561060e575080604001518610155b1561064e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106459061155c565b60405180910390fd5b505b8080600101915050610500565b50600060405180610100016040528089600381111561067f5761067e610e97565b5b81526020018881526020018781526020018681526020018581526020018481526020016000815260200183815250905060006001805490509050600182908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000160006101000a81548160ff021916908360038111156107105761070f610e97565b5b02179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701555050807f7673e4939433531841b3ee155cfb41d74036f1741ed20ba7c3ed88d66a2895518a8a60405161078f92919061157c565b60405180910390a2505050505050505050565b6107aa610c9b565b6107b46000610d22565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600180549050905090565b6107f4610c9b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108665760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161085d9190611230565b60405180910390fd5b61086f81610d22565b50565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360038111156108c8576108c7610e97565b5b60038111156108da576108d9610e97565b5b815260200190815260200160002054905092915050565b60008060006108fe610b46565b9150915060008160040154148061091c575080600401548160060154105b61095b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610952906115f1565b60405180910390fd5b6002600381111561096f5761096e610e97565b5b8160000160009054906101000a900460ff16600381111561099357610992610e97565b5b1480156109a4575060008160050154145b80610a3757508060050154600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360000160009054906101000a900460ff166003811115610a1457610a13610e97565b5b6003811115610a2657610a25610e97565b5b815260200190815260200160002054105b610a76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6d90611683565b60405180910390fd5b806006016000815480929190610a8b906116d2565b9190505550600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008260000160009054906101000a900460ff166003811115610af557610af4610e97565b5b6003811115610b0757610b06610e97565b5b81526020019081526020016000206000815480929190610b26906116d2565b91905055508060000160009054906101000a900460ff1692505050919050565b600080600042905060005b600180549050811015610c5b5760006003811115610b7257610b71610e97565b5b60018281548110610b8657610b8561131a565b5b906000526020600020906008020160000160009054906101000a900460ff166003811115610bb757610bb6610e97565b5b14158015610bea575060018181548110610bd457610bd361131a565b5b9060005260206000209060080201600201548210155b8015610c1b575060018181548110610c0557610c0461131a565b5b9060005260206000209060080201600301548211155b15610c4e578060018281548110610c3557610c3461131a565b5b9060005260206000209060080201935093505050610c97565b8080600101915050610b51565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8e90611766565b60405180910390fd5b9091565b610ca3610de6565b73ffffffffffffffffffffffffffffffffffffffff16610cc16107b6565b73ffffffffffffffffffffffffffffffffffffffff1614610d2057610ce4610de6565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d179190611230565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610100016040528060006003811115610e0e57610e0d610e97565b5b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b60008115159050919050565b610e5d81610e48565b82525050565b6000602082019050610e786000830184610e54565b92915050565b6000819050919050565b610e9181610e7e565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610ed757610ed6610e97565b5b50565b6000819050610ee882610ec6565b919050565b6000610ef882610eda565b9050919050565b610f0881610eed565b82525050565b610f1781610e7e565b82525050565b6000819050919050565b610f3081610f1d565b82525050565b61010082016000820151610f4d6000850182610eff565b506020820151610f606020850182610f0e565b506040820151610f736040850182610f0e565b506060820151610f866060850182610f0e565b506080820151610f996080850182610f0e565b5060a0820151610fac60a0850182610f0e565b5060c0820151610fbf60c0850182610f0e565b5060e0820151610fd260e0850182610f27565b50505050565b600061012082019050610fee6000830185610e88565b610ffb6020830184610f36565b9392505050565b600080fd5b61101081610e7e565b811461101b57600080fd5b50565b60008135905061102d81611007565b92915050565b60006020828403121561104957611048611002565b5b60006110578482850161101e565b91505092915050565b61106981610eed565b82525050565b61107881610f1d565b82525050565b600061010082019050611094600083018b611060565b6110a1602083018a610e88565b6110ae6040830189610e88565b6110bb6060830188610e88565b6110c86080830187610e88565b6110d560a0830186610e88565b6110e260c0830185610e88565b6110ef60e083018461106f565b9998505050505050505050565b6004811061110957600080fd5b50565b60008135905061111b816110fc565b92915050565b61112a81610f1d565b811461113557600080fd5b50565b60008135905061114781611121565b92915050565b600080600080600080600060e0888a03121561116c5761116b611002565b5b600061117a8a828b0161110c565b975050602061118b8a828b0161101e565b965050604061119c8a828b0161101e565b95505060606111ad8a828b0161101e565b94505060806111be8a828b0161101e565b93505060a06111cf8a828b0161101e565b92505060c06111e08a828b01611138565b91505092959891949750929550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061121a826111ef565b9050919050565b61122a8161120f565b82525050565b60006020820190506112456000830184611221565b92915050565b60006020820190506112606000830184610e88565b92915050565b61126f8161120f565b811461127a57600080fd5b50565b60008135905061128c81611266565b92915050565b6000602082840312156112a8576112a7611002565b5b60006112b68482850161127d565b91505092915050565b600080604083850312156112d6576112d5611002565b5b60006112e48582860161127d565b92505060206112f58582860161110c565b9150509250929050565b60006020820190506113146000830184611060565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f496e76616c69642074696d652072616e67650000000000000000000000000000600082015250565b6000611390601283611349565b915061139b8261135a565b602082019050919050565b600060208201905081810360008301526113bf81611383565b9050919050565b7f496e76616c6964206d6178207065722077616c6c657420666f72206e6f6e2d7060008201527f75626c6963207068617365000000000000000000000000000000000000000000602082015250565b6000611422602b83611349565b915061142d826113c6565b604082019050919050565b6000602082019050818103600083015261145181611415565b9050919050565b7f4d65726b6c6520726f6f7420726571756972656420666f722077686974656c6960008201527f7374207068617365000000000000000000000000000000000000000000000000602082015250565b60006114b4602883611349565b91506114bf82611458565b604082019050919050565b600060208201905081810360008301526114e3816114a7565b9050919050565b7f50686173652074696d65206f7665726c6170732077697468206578697374696e60008201527f6720706861736500000000000000000000000000000000000000000000000000602082015250565b6000611546602783611349565b9150611551826114ea565b604082019050919050565b6000602082019050818103600083015261157581611539565b9050919050565b60006040820190506115916000830185611060565b61159e6020830184610e88565b9392505050565b7f506861736520737570706c79206c696d69742072656163686564000000000000600082015250565b60006115db601a83611349565b91506115e6826115a5565b602082019050919050565b6000602082019050818103600083015261160a816115ce565b9050919050565b7f57616c6c6574206c696d6974207265616368656420666f72207468697320706860008201527f6173650000000000000000000000000000000000000000000000000000000000602082015250565b600061166d602383611349565b915061167882611611565b604082019050919050565b6000602082019050818103600083015261169c81611660565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116dd82610e7e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361170f5761170e6116a3565b5b600182019050919050565b7f4e6f206163746976652070686173650000000000000000000000000000000000600082015250565b6000611750600f83611349565b915061175b8261171a565b602082019050919050565b6000602082019050818103600083015261177f81611743565b905091905056fea26469706673582212204c2753da8fa441af2c671aebf306e6b86625b8098fbd77fb636892dc1ff3033f64736f6c634300081b0033";

type PhaseManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhaseManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhaseManager__factory extends ContractFactory {
  constructor(...args: PhaseManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      PhaseManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PhaseManager__factory {
    return super.connect(runner) as PhaseManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhaseManagerInterface {
    return new Interface(_abi) as PhaseManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PhaseManager {
    return new Contract(address, _abi, runner) as unknown as PhaseManager;
  }
}
