/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  WhitelistVerifier,
  WhitelistVerifierInterface,
} from "../../../../../../src/blockchain/evm/contracts/DirectMintNFT/WhitelistVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506103fc8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e328f2f114610030575b600080fd5b61004a6004803603810190610045919061028a565b610060565b6040516100579190610319565b60405180910390f35b60006100d4838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505085876040516020016100b9919061037c565b604051602081830303815290604052805190602001206100de565b9050949350505050565b6000826100eb85846100f5565b1490509392505050565b60008082905060005b845181101561013a5761012b8286838151811061011e5761011d610397565b5b6020026020010151610145565b915080806001019150506100fe565b508091505092915050565b600081831061015d576101588284610170565b610168565b6101678383610170565b5b905092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101bc82610191565b9050919050565b6101cc816101b1565b81146101d757600080fd5b50565b6000813590506101e9816101c3565b92915050565b6000819050919050565b610202816101ef565b811461020d57600080fd5b50565b60008135905061021f816101f9565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261024a57610249610225565b5b8235905067ffffffffffffffff8111156102675761026661022a565b5b6020830191508360208202830111156102835761028261022f565b5b9250929050565b600080600080606085870312156102a4576102a3610187565b5b60006102b2878288016101da565b94505060206102c387828801610210565b935050604085013567ffffffffffffffff8111156102e4576102e361018c565b5b6102f087828801610234565b925092505092959194509250565b60008115159050919050565b610313816102fe565b82525050565b600060208201905061032e600083018461030a565b92915050565b60008160601b9050919050565b600061034c82610334565b9050919050565b600061035e82610341565b9050919050565b610376610371826101b1565b610353565b82525050565b60006103888284610365565b60148201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220cff23568038903b5332fd794507587cf3897b22e22d73e23566c34cea60c741564736f6c634300081b0033";

type WhitelistVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WhitelistVerifier__factory extends ContractFactory {
  constructor(...args: WhitelistVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WhitelistVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WhitelistVerifier__factory {
    return super.connect(runner) as WhitelistVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistVerifierInterface {
    return new Interface(_abi) as WhitelistVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WhitelistVerifier {
    return new Contract(address, _abi, runner) as unknown as WhitelistVerifier;
  }
}
