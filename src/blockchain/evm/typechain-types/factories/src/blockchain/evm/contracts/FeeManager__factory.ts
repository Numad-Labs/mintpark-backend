/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  FeeManager,
  FeeManagerInterface,
} from "../../../../../src/blockchain/evm/contracts/FeeManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_royaltyFee",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "_platformFee",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_platformFeeRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint96",
        name: "newPercentage",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "PlatformFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawCompleted",
    type: "event",
  },
  {
    inputs: [],
    name: "getPlatformFeeInfo",
    outputs: [
      {
        internalType: "uint96",
        name: "percentage",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRoyaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "percentage",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFeePercentage",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "processFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "newPercentage",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "setPlatformFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516111be3803806111be83398181016040528101906100329190610367565b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c91906103dd565b60405180910390fd5b6100b4816101fc60201b60201c565b506103e8836bffffffffffffffffffffffff16111580156100e557506103e8826bffffffffffffffffffffffff1611155b801561011e5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b61015d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015490610455565b60405180910390fd5b826bffffffffffffffffffffffff166080816bffffffffffffffffffffffff168152505081600060146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050610475565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f0826102c5565b9050919050565b610300816102e5565b811461030b57600080fd5b50565b60008151905061031d816102f7565b92915050565b60006bffffffffffffffffffffffff82169050919050565b61034481610323565b811461034f57600080fd5b50565b6000815190506103618161033b565b92915050565b60008060008060808587031215610381576103806102c0565b5b600061038f8782880161030e565b94505060206103a087828801610352565b93505060406103b187828801610352565b92505060606103c28782880161030e565b91505092959194509250565b6103d7816102e5565b82525050565b60006020820190506103f260008301846103ce565b92915050565b600082825260208201905092915050565b7f496e76616c69642066656520636f6e66696775726174696f6e00000000000000600082015250565b600061043f6019836103f8565b915061044a82610409565b602082019050919050565b6000602082019050818103600083015261046e81610432565b9050919050565b608051610d2e61049060003960006103c90152610d2e6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063cdd78cfc11610066578063cdd78cfc146100fb578063d45573f614610119578063decc4a6a14610138578063eb13554f14610154578063f2fde38b1461017257610093565b8063715018a61461009857806389701db5146100a25780638da5cb5b146100be578063a86a28d1146100dc575b600080fd5b6100a061018e565b005b6100bc60048036038101906100b7919061080a565b6101a2565b005b6100c6610393565b6040516100d39190610878565b60405180910390f35b6100e46103bc565b6040516100f29291906108ba565b60405180910390f35b6101036103f0565b60405161011091906108e3565b60405180910390f35b61012161040e565b60405161012f9291906108fe565b60405180910390f35b610152600480360381019061014d919061097f565b610457565b005b61015c6105d0565b6040516101699190610878565b60405180910390f35b61018c600480360381019061018791906109bf565b6105f6565b005b61019661067c565b6101a06000610703565b565b6000612710600060149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16836101db9190610a1b565b6101e59190610a8c565b905060008111156102c0576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161023890610aee565b60006040518083038185875af1925050503d8060008114610275576040519150601f19603f3d011682016040523d82523d6000602084013e61027a565b606091505b50509050806102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590610b60565b60405180910390fd5b505b600081836102ce9190610b80565b9050600081111561038e5760006102e3610393565b73ffffffffffffffffffffffffffffffffffffffff168260405161030690610aee565b60006040518083038185875af1925050503d8060008114610343576040519150601f19603f3d011682016040523d82523d6000602084013e610348565b606091505b505090508061038c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038390610c00565b60405180910390fd5b505b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806103c7610393565b7f0000000000000000000000000000000000000000000000000000000000000000915091509091565b600060149054906101000a90046bffffffffffffffffffffffff1681565b600080600060149054906101000a90046bffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915091509091565b61045f61067c565b6103e8826bffffffffffffffffffffffff1611156104b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a990610c6c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890610cd8565b60405180910390fd5b81600060146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbad9436335ddabdd6fc56ea571323eb7dcfc0e82e9dbaf786bbb2a2ad6de573c82826040516105c49291906108fe565b60405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105fe61067c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106705760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106679190610878565b60405180910390fd5b61067981610703565b50565b6106846107c7565b73ffffffffffffffffffffffffffffffffffffffff166106a2610393565b73ffffffffffffffffffffffffffffffffffffffff1614610701576106c56107c7565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106f89190610878565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b6107e7816107d4565b81146107f257600080fd5b50565b600081359050610804816107de565b92915050565b6000602082840312156108205761081f6107cf565b5b600061082e848285016107f5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086282610837565b9050919050565b61087281610857565b82525050565b600060208201905061088d6000830184610869565b92915050565b60006bffffffffffffffffffffffff82169050919050565b6108b481610893565b82525050565b60006040820190506108cf6000830185610869565b6108dc60208301846108ab565b9392505050565b60006020820190506108f860008301846108ab565b92915050565b600060408201905061091360008301856108ab565b6109206020830184610869565b9392505050565b61093081610893565b811461093b57600080fd5b50565b60008135905061094d81610927565b92915050565b61095c81610857565b811461096757600080fd5b50565b60008135905061097981610953565b92915050565b60008060408385031215610996576109956107cf565b5b60006109a48582860161093e565b92505060206109b58582860161096a565b9150509250929050565b6000602082840312156109d5576109d46107cf565b5b60006109e38482850161096a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a26826107d4565b9150610a31836107d4565b9250828202610a3f816107d4565b91508282048414831517610a5657610a556109ec565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a97826107d4565b9150610aa2836107d4565b925082610ab257610ab1610a5d565b5b828204905092915050565b600081905092915050565b50565b6000610ad8600083610abd565b9150610ae382610ac8565b600082019050919050565b6000610af982610acb565b9150819050919050565b600082825260208201905092915050565b7f506c6174666f726d20666565207472616e73666572206661696c656400000000600082015250565b6000610b4a601c83610b03565b9150610b5582610b14565b602082019050919050565b60006020820190508181036000830152610b7981610b3d565b9050919050565b6000610b8b826107d4565b9150610b96836107d4565b9250828203905081811115610bae57610bad6109ec565b5b92915050565b7f4f776e657220666565207472616e73666572206661696c656400000000000000600082015250565b6000610bea601983610b03565b9150610bf582610bb4565b602082019050919050565b60006020820190508181036000830152610c1981610bdd565b9050919050565b7f4665652070657263656e7461676520746f6f2068696768000000000000000000600082015250565b6000610c56601783610b03565b9150610c6182610c20565b602082019050919050565b60006020820190508181036000830152610c8581610c49565b9050919050565b7f496e76616c69642066656520726563697069656e740000000000000000000000600082015250565b6000610cc2601583610b03565b9150610ccd82610c8c565b602082019050919050565b60006020820190508181036000830152610cf181610cb5565b905091905056fea264697066735822122096386292b9c3f1954e774744dc6136c6dfcc6fa786ba9b17485816c31ac8993164736f6c634300081b0033";

type FeeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeManager__factory extends ContractFactory {
  constructor(...args: FeeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _royaltyFee: BigNumberish,
    _platformFee: BigNumberish,
    _platformFeeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _royaltyFee,
      _platformFee,
      _platformFeeRecipient,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _royaltyFee: BigNumberish,
    _platformFee: BigNumberish,
    _platformFeeRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _royaltyFee,
      _platformFee,
      _platformFeeRecipient,
      overrides || {}
    ) as Promise<
      FeeManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeManager__factory {
    return super.connect(runner) as FeeManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeManagerInterface {
    return new Interface(_abi) as FeeManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FeeManager {
    return new Contract(address, _abi, runner) as unknown as FeeManager;
  }
}
