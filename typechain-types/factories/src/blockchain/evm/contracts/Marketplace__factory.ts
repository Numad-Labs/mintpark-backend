/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../../../../src/blockchain/evm/contracts/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ListingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ListingSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplaceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "purchaseListing",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611c11380380611c118339818101604052810190610032919061026c565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c91906102bb565b60405180910390fd5b6100b48161010f60201b60201c565b50600180819055506103e8811115610101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f890610333565b60405180910390fd5b806003819055505050610353565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610203826101d8565b9050919050565b610213816101f8565b811461021e57600080fd5b50565b6000815190506102308161020a565b92915050565b6000819050919050565b61024981610236565b811461025457600080fd5b50565b60008151905061026681610240565b92915050565b60008060408385031215610283576102826101d3565b5b600061029185828601610221565b92505060206102a285828601610257565b9150509250929050565b6102b5816101f8565b82525050565b60006020820190506102d060008301846102ac565b92915050565b600082825260208201905092915050565b7f46656520746f6f20686967680000000000000000000000000000000000000000600082015250565b600061031d600c836102d6565b9150610328826102e7565b602082019050919050565b6000602082019050818103600083015261034c81610310565b9050919050565b6118af806103626000396000f3fe6080604052600436106100915760003560e01c80636a166964116100595780636a1669641461016c578063715018a6146101975780638da5cb5b146101ae578063de74e57b146101d9578063f2fde38b1461021b57610091565b8063107a274a14610096578063169d5a7d146100d35780631931d35c146100ef57806324780c561461011a578063305a67a814610143575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190611065565b610244565b6040516100ca9190611178565b60405180910390f35b6100ed60048036038101906100e89190611065565b610356565b005b3480156100fb57600080fd5b5061010461069c565b60405161011191906111a2565b60405180910390f35b34801561012657600080fd5b50610141600480360381019061013c91906111e9565b6106a6565b005b34801561014f57600080fd5b5061016a60048036038101906101659190611065565b610b8a565b005b34801561017857600080fd5b50610181610cd2565b60405161018e91906111a2565b60405180910390f35b3480156101a357600080fd5b506101ac610cd8565b005b3480156101ba57600080fd5b506101c3610cec565b6040516101d0919061124b565b60405180910390f35b3480156101e557600080fd5b5061020060048036038101906101fb9190611065565b610d15565b60405161021296959493929190611275565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d91906112d6565b610d9e565b005b61024c610fc6565b600460008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b61035e610e24565b60006004600083815260200190815260200160002090508060050160009054906101000a900460ff166103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90611360565b60405180910390fd5b806004015434101561040d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610404906113cc565b60405180910390fd5b60008160050160006101000a81548160ff02191690831515021790555060006127106003548360040154610441919061141b565b61044b919061148c565b9050600081836004015461045f91906114bd565b90508260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8460030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163386600201546040518463ffffffff1660e01b81526004016104ea939291906114f1565b600060405180830381600087803b15801561050457600080fd5b505af1158015610518573d6000803e3d6000fd5b505050508260030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610586573d6000803e3d6000fd5b5061058f610cec565b73ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156105d4573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff16847f8e378317cc1b9c64766fd136e5849da5f702d26a8f8b750115b7422909b2309f856004015460405161062091906111a2565b60405180910390a3600083600401543461063a91906114bd565b9050600081111561068d573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561068b573d6000803e3d6000fd5b505b50505050610699610e6a565b50565b6000600254905090565b6106ae610e24565b600081116106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e890611574565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610760576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610757906115e0565b60405180910390fd5b60008390503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016107b591906111a2565b602060405180830381865afa1580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190611615565b73ffffffffffffffffffffffffffffffffffffffff161461084c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108439061168e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc856040518263ffffffff1660e01b815260040161089c91906111a2565b602060405180830381865afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190611615565b73ffffffffffffffffffffffffffffffffffffffff16148061097757508073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b81526004016109359291906116ae565b602060405180830381865afa158015610952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109769190611703565b5b6109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ad9061177c565b60405180910390fd5b600260008154809291906109c99061179c565b9190505550600060025490506040518060c001604052808281526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600460008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16827fbfe9724d0a7254cfbb4f315c27418ff3751aebb099764b83fb3a4e2ca00e69d08787604051610b739291906117e4565b60405180910390a45050610b85610e6a565b505050565b60006004600083815260200190815260200160002090508060050160009054906101000a900460ff16610bf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be990611360565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b90611859565b60405180910390fd5b60008160050160006101000a81548160ff021916908315150217905550817f411aee90354c51b1b04cd563fcab2617142a9d50da19232d888547c8a1b7fd8a60405160405180910390a25050565b60035481565b610ce0610e73565b610cea6000610efa565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900460ff16905086565b610da6610e73565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e185760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e0f919061124b565b60405180910390fd5b610e2181610efa565b50565b600260015403610e60576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b610e7b610fbe565b73ffffffffffffffffffffffffffffffffffffffff16610e99610cec565b73ffffffffffffffffffffffffffffffffffffffff1614610ef857610ebc610fbe565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610eef919061124b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600080fd5b6000819050919050565b6110428161102f565b811461104d57600080fd5b50565b60008135905061105f81611039565b92915050565b60006020828403121561107b5761107a61102a565b5b600061108984828501611050565b91505092915050565b61109b8161102f565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110cc826110a1565b9050919050565b6110dc816110c1565b82525050565b60008115159050919050565b6110f7816110e2565b82525050565b60c0820160008201516111136000850182611092565b50602082015161112660208501826110d3565b5060408201516111396040850182611092565b50606082015161114c60608501826110d3565b50608082015161115f6080850182611092565b5060a082015161117260a08501826110ee565b50505050565b600060c08201905061118d60008301846110fd565b92915050565b61119c8161102f565b82525050565b60006020820190506111b76000830184611193565b92915050565b6111c6816110c1565b81146111d157600080fd5b50565b6000813590506111e3816111bd565b92915050565b6000806000606084860312156112025761120161102a565b5b6000611210868287016111d4565b935050602061122186828701611050565b925050604061123286828701611050565b9150509250925092565b611245816110c1565b82525050565b6000602082019050611260600083018461123c565b92915050565b61126f816110e2565b82525050565b600060c08201905061128a6000830189611193565b611297602083018861123c565b6112a46040830187611193565b6112b1606083018661123c565b6112be6080830185611193565b6112cb60a0830184611266565b979650505050505050565b6000602082840312156112ec576112eb61102a565b5b60006112fa848285016111d4565b91505092915050565b600082825260208201905092915050565b7f4c697374696e67206e6f74206163746976650000000000000000000000000000600082015250565b600061134a601283611303565b915061135582611314565b602082019050919050565b600060208201905081810360008301526113798161133d565b9050919050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b60006113b6601483611303565b91506113c182611380565b602082019050919050565b600060208201905081810360008301526113e5816113a9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114268261102f565b91506114318361102f565b925082820261143f8161102f565b91508282048414831517611456576114556113ec565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114978261102f565b91506114a28361102f565b9250826114b2576114b161145d565b5b828204905092915050565b60006114c88261102f565b91506114d38361102f565b92508282039050818111156114eb576114ea6113ec565b5b92915050565b6000606082019050611506600083018661123c565b611513602083018561123c565b6115206040830184611193565b949350505050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f00600082015250565b600061155e601f83611303565b915061156982611528565b602082019050919050565b6000602082019050818103600083015261158d81611551565b9050919050565b7f496e76616c6964204e465420636f6e7472616374206164647265737300000000600082015250565b60006115ca601c83611303565b91506115d582611594565b602082019050919050565b600060208201905081810360008301526115f9816115bd565b9050919050565b60008151905061160f816111bd565b92915050565b60006020828403121561162b5761162a61102a565b5b600061163984828501611600565b91505092915050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b6000611678600f83611303565b915061168382611642565b602082019050919050565b600060208201905081810360008301526116a78161166b565b9050919050565b60006040820190506116c3600083018561123c565b6116d0602083018461123c565b9392505050565b6116e0816110e2565b81146116eb57600080fd5b50565b6000815190506116fd816116d7565b92915050565b6000602082840312156117195761171861102a565b5b6000611727848285016116ee565b91505092915050565b7f4d61726b6574706c616365206e6f7420617070726f7665640000000000000000600082015250565b6000611766601883611303565b915061177182611730565b602082019050919050565b6000602082019050818103600083015261179581611759565b9050919050565b60006117a78261102f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117d9576117d86113ec565b5b600182019050919050565b60006040820190506117f96000830185611193565b6118066020830184611193565b9392505050565b7f4e6f742073656c6c657200000000000000000000000000000000000000000000600082015250565b6000611843600a83611303565b915061184e8261180d565b602082019050919050565b6000602082019050818103600083015261187281611836565b905091905056fea26469706673582212204b9a5155efe91058beed54827a3481b88163547d26b420baa56df85a107f960d64736f6c634300081a0033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    initialFee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      initialFee,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    initialFee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, initialFee, overrides || {}) as Promise<
      Marketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Marketplace__factory {
    return super.connect(runner) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new Interface(_abi) as MarketplaceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Marketplace {
    return new Contract(address, _abi, runner) as unknown as Marketplace;
  }
}
